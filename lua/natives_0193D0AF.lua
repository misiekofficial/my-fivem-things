local msgpack = msgpack
local _i, _f, _v, _r, _ri, _rf, _rl, _s, _rv, _ro, _in, _ii, _fi =
	Citizen.PointerValueInt(), Citizen.PointerValueFloat(), Citizen.PointerValueVector(),
	Citizen.ReturnResultAnyway(), Citizen.ResultAsInteger(), Citizen.ResultAsFloat(), Citizen.ResultAsLong(), Citizen.ResultAsString(), Citizen.ResultAsVector(), Citizen.ResultAsObject2(msgpack.unpack),
	Citizen.InvokeNative, Citizen.PointerValueIntInitialized, Citizen.PointerValueFloatInitialized

local g = _G
local rs = rawset
local _tostring = tostring
local function _ts(num)
	if num == 0 or not num then -- workaround for users calling string parameters with '0', also nil being translated
		return nil
	end
	return _tostring(num)
end
local function _obj(obj)
	local s = msgpack.pack(obj)
	return s, #s
end
local function _ch(hash)
	if g.type(hash) == 'string' then
		return g.GetHashKey(hash)
	end

	return hash
end

local function _mfr(fn)
	return g.Citizen.GetFunctionReference(fn)
end

local Global = setmetatable({}, { __newindex = function(_, n, v)
	g[n] = v

	rs(_, n, v)
end})

_ENV = nil

--- ABSF
function Global.Absf(value)
	return _in(0x73D57CFFDD12C355, value, _rf)
end

--- ABSI
function Global.Absi(value)
	return _in(0xF0D31AD191A74F87, value, _ri)
end

--- ACOS
function Global.Acos(p0)
	return _in(0x1D08B970013C34B6, p0, _rf)
end

--- Below is a list of modes and their respective hashes.
-- | Mode (string)               | Hash               |
-- |-----------------------------|--------------------|
-- | SLOWMO_BIG_SCORE_JUMP       | 0x2B981B0C         |
-- | JSH_EXIT_TUNNEL_SLOWMO      | 0x2562AA6          |
-- | SLOW_MO_METH_HOUSE_RAYFIRE  | 0xDB9E1909         |
-- | SLOWMO_FIB4\_TRUCK_SMASH     | 0x9E144347         |
-- | SLOWMO_PROLOGUE_VAULT       | 0xEA2E68E1         |
-- | SLOWMO_T1\_RAYFIRE_EXPLOSION | 0xD6D358F3         |
-- | SLOWMO_T1\_TRAILER_SMASH     | 0xBE607345         |
-- | BARRY\_01\_SLOWMO             | 0xD59540D4         |
-- | BARRY\_02\_SLOWMO             | 0x12F140B3         |
-- | SLOWMO_EXTREME\_04           | 0xF562EA50         |
-- | NIGEL\_02\_SLOWMO_SETTING     | 0x384689B0         |
-- @param mode A string indicating the audio slow motion mode to use, *see the table*.
function Global.ActivateAudioSlowmoMode(mode)
	return _in(0xD01005D2BA2EB778, _ts(mode))
end
Global.N_0xd01005d2ba2eb778 = Global.ActivateAudioSlowmoMode

--- ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID
function Global.ActivateDamageTrackerOnNetworkId(netID, toggle)
	return _in(0xD45B1FFCCD52FF19, netID, toggle)
end

--- _ACTIVATE_DAMAGE_TRACKER_ON_PLAYER
function Global.ActivateDamageTrackerOnPlayer(player, toggle)
	return _in(0xBEC0816FF5ACBCDA, player, toggle)
end
Global.N_0xbec0816ff5acbcda = Global.ActivateDamageTrackerOnPlayer

--- Does stuff like this:\
-- gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617\
-- Example:\
-- int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");\
-- ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);\
-- BOOL p1 is a toggle to define the game in pause.\
-- int p2 is unknown but -1 always works, not sure why though.\
-- \[30/03/2017] ins1de :\
-- the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.\
-- Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);\
-- Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.
-- Below is a list of all known Frontend Menu Hashes.
-- *   FE_MENU_VERSION_SP_PAUSE
-- *   FE_MENU_VERSION_MP_PAUSE
-- *   FE_MENU_VERSION_CREATOR_PAUSE
-- *   FE_MENU_VERSION_CUTSCENE_PAUSE
-- *   FE_MENU_VERSION_SAVEGAME
-- *   FE_MENU_VERSION_PRE_LOBBY
-- *   FE_MENU_VERSION_LOBBY
-- *   FE_MENU_VERSION_MP_CHARACTER_SELECT
-- *   FE_MENU_VERSION_MP_CHARACTER_CREATION
-- *   FE_MENU_VERSION_EMPTY
-- *   FE_MENU_VERSION_EMPTY_NO_BACKGROUND
-- *   FE_MENU_VERSION_TEXT_SELECTION
-- *   FE_MENU_VERSION_CORONA
-- *   FE_MENU_VERSION_CORONA_LOBBY
-- *   FE_MENU_VERSION_CORONA_JOINED_PLAYERS
-- *   FE_MENU_VERSION_CORONA_INVITE_PLAYERS
-- *   FE_MENU_VERSION_CORONA_INVITE_FRIENDS
-- *   FE_MENU_VERSION_CORONA_INVITE_CREWS
-- *   FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
-- *   FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
-- *   FE_MENU_VERSION_CORONA_RACE
-- *   FE_MENU_VERSION_CORONA_BETTING
-- *   FE_MENU_VERSION_JOINING_SCREEN
-- *   FE_MENU_VERSION_LANDING_MENU
-- *   FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
function Global.ActivateFrontendMenu(menuhash, togglePause, component)
	return _in(0xEF01D36B9C9D0C7B, _ch(menuhash), togglePause, component)
end

--- More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
function Global.ActivateInteriorEntitySet(interior, entitySetName)
	return _in(0x55E86AF2712B36A1, interior, _ts(entitySetName))
end
Global.N_0x55e86af2712b36a1 = Global.ActivateInteriorEntitySet
Global.EnableInteriorProp = Global.ActivateInteriorEntitySet

--- ACTIVATE_PHYSICS
function Global.ActivatePhysics(entity)
	return _in(0x710311ADF0E20730, entity)
end

--- Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
-- ```
-- NativeDB Added Parameter 1: int p0
-- ```
function Global.ActivateRockstarEditor()
	return _in(0x49DA8145672B2725)
end
Global.N_0x49da8145672b2725 = Global.ActivateRockstarEditor

--- Activates built-in timecycle editing tool.
function Global.ActivateTimecycleEditor()
	return _in(0xeeb9b76a)
end

--- Creates and opens a new activity feed post to start filling in.
-- **Note**: This is a PS4 related native, resulting in a nullsub on the PC platform. This native won't do anything when invoked.
-- @param captionString The main text or caption for the activity feed post. This is the primary message displayed in the feed entry.
-- @param condensedCaptionString A shorter or condensed version of the caption, used in cases where space is limited or a brief summary is required.
function Global.ActivityFeedCreate(captionString, condensedCaptionString)
	return _in(0x4DCDF92BF64236CD, _ts(captionString), _ts(condensedCaptionString))
end
Global.N_0x4dcdf92bf64236cd = Global.ActivityFeedCreate

--- ADD_AMMO_TO_PED
function Global.AddAmmoToPed(ped, weaponHash, ammo)
	return _in(0x78F0424C34306220, ped, _ch(weaponHash), ammo)
end

--- _ADD_AMMO_TO_PED_BY_TYPE
function Global.AddAmmoToPedByType(ped, ammoType, ammo)
	return _in(0x2472622CE1F2D45F, ped, _ch(ammoType), ammo)
end
Global.N_0x2472622ce1f2d45f = Global.AddAmmoToPedByType
Global.AddPedAmmo = Global.AddAmmoToPedByType

--- Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
function Global.AddArmourToPed(ped, amount)
	return _in(0x5BA652A0CD14DF2F, ped, amount)
end

--- Adds an output for the specified audio submix.
-- @param submixId The input submix.
-- @param outputSubmixId The output submix. Use `0` for the master game submix.
function Global.AddAudioSubmixOutput(submixId, outputSubmixId)
	return _in(0xac6e290d, submixId, outputSubmixId)
end

--- Adds a rectangular blip for the specified coordinates/area.
-- It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
-- By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.
-- Example image:
-- ![minimap](https://i.imgur.com/qLbXWcQ.png)
-- ![big map](https://i.imgur.com/0j7O7Rh.png)
-- (Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
-- @param x The X coordinate of the center of the blip.
-- @param y The Y coordinate of the center of the blip.
-- @param z The Z coordinate of the center of the blip.
-- @param width The width of the blip.
-- @param height The height of the blip.
-- @return A handle to the blip.
function Global.AddBlipForArea(x, y, z, width, height)
	return _in(0xCE5D0E5E315DB238, x, y, z, width, height, _ri)
end
Global.N_0xce5d0e5e315db238 = Global.AddBlipForArea

--- Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
-- @param x The X coordinate to create the blip on.
-- @param y The Y coordinate.
-- @param z The Z coordinate.
-- @return A blip handle.
function Global.AddBlipForCoord(x, y, z)
	return _in(0x5A039BB0BCA604B6, x, y, z, _ri)
end

--- Create a blip that by default is red (enemy), you can use [SET_BLIP_AS_FRIENDLY](#\_0xC6F43D0E) to make it blue (friend).\
-- Can be used for objects, vehicles and peds.
-- Example of enemy:
-- ![enemy](https://i.imgur.com/fl78svv.png)
-- Example of friend:
-- ![friend](https://i.imgur.com/Q16ho5d.png)
-- @param entity The entity handle to create the blip.
-- @return A blip handle.
function Global.AddBlipForEntity(entity)
	return _in(0x5CDE92C702A8FCE7, entity, _ri)
end

--- ADD_BLIP_FOR_PICKUP
function Global.AddBlipForPickup(pickup)
	return _in(0xBE339365C863BD36, pickup, _ri)
end

--- Create a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use [AddBlipCoords](#\_0xC6F43D0E))
-- Example image:
-- ![example](https://i.imgur.com/9hQl3DB.png)
-- @param posX The x position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param posY The y position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param posZ The z position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param radius The number that defines the radius of the blip circle
-- @return The blip handle that can be manipulated with every `SetBlip` natives
function Global.AddBlipForRadius(posX, posY, posZ, radius)
	return _in(0x46818D79B1F7499A, posX, posY, posZ, radius, _ri)
end

--- I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
-- p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
-- p8 big values ~100 will slow down the camera movement before reaching this node
-- p9 != 0 seems to override the rotation/pitch (bool?)
function Global.AddCamSplineNode(camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)
	return _in(0x8609C75EC438FB3B, camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)
end

--- Takes a camera and uses the information from it as a camera spline node.
-- @param cam Camera to add cam2 as a node to
-- @param cam2 Camera used for reference
-- @param length Duration used for transition, has no effect for the first node.
function Global.AddCamSplineNodeUsingCamera(cam, cam2, length, p3)
	return _in(0x0FB82563989CF4FB, cam, cam2, length, p3)
end
Global.N_0x0fb82563989cf4fb = Global.AddCamSplineNodeUsingCamera

--- ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME
function Global.AddCamSplineNodeUsingCameraFrame(cam, cam2, p2, p3)
	return _in(0x0A9F2A468B328E74, cam, cam2, p2, p3)
end
Global.N_0x0a9f2a468b328e74 = Global.AddCamSplineNodeUsingCameraFrame

--- ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME
function Global.AddCamSplineNodeUsingGameplayFrame(cam, p1, p2)
	return _in(0x609278246A29CA34, cam, p1, p2)
end
Global.N_0x609278246a29ca34 = Global.AddCamSplineNodeUsingGameplayFrame

--- ADD_COVER_BLOCKING_AREA
function Global.AddCoverBlockingArea(playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)
	return _in(0x45C597097DD7CB81, playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)
end

--- ADD_COVER_POINT
function Global.AddCoverPoint(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xD5C12A75C7B9497F, p0, p1, p2, p3, p4, p5, p6, p7, _ri)
end

--- Places a decal into the world
-- ```cs
-- public enum DecalTypes
-- {
-- splatters_blood = 1010,
-- splatters_blood_dir = 1015,
-- splatters_blood_mist = 1017,
-- splatters_mud = 1020,
-- splatters_paint = 1030,
-- splatters_water = 1040,
-- splatters_water_hydrant = 1050,
-- splatters_blood2 = 1110,
-- weapImpact_metal = 4010,
-- weapImpact_concrete = 4020,
-- weapImpact_mattress = 4030,
-- weapImpact_mud = 4032,
-- weapImpact_wood = 4050,
-- weapImpact_sand = 4053,
-- weapImpact_cardboard = 4040,
-- weapImpact_melee_glass = 4100,
-- weapImpact_glass_blood = 4102,
-- weapImpact_glass_blood2 = 4104,
-- weapImpact_shotgun_paper = 4200,
-- weapImpact_shotgun_mattress,
-- weapImpact_shotgun_metal,
-- weapImpact_shotgun_wood,
-- weapImpact_shotgun_dirt,
-- weapImpact_shotgun_tvscreen,
-- weapImpact_shotgun_tvscreen2,
-- weapImpact_shotgun_tvscreen3,
-- weapImpact_melee_concrete = 4310,
-- weapImpact_melee_wood = 4312,
-- weapImpact_melee_metal = 4314,
-- burn1 = 4421,
-- burn2,
-- burn3,
-- burn4,
-- burn5,
-- bang_concrete_bang = 5000,
-- bang_concrete_bang2,
-- bang_bullet_bang,
-- bang_bullet_bang2 = 5004,
-- bang_glass = 5031,
-- bang_glass2,
-- solidPool_water = 9000,
-- solidPool_blood,
-- solidPool_oil,
-- solidPool_petrol,
-- solidPool_mud,
-- porousPool_water,
-- porousPool_blood,
-- porousPool_oil,
-- porousPool_petrol,
-- porousPool_mud,
-- porousPool_water_ped_drip,
-- liquidTrail_water = 9050
-- }
-- ```
-- @param decalType which type of decal to place, based on the ID, see `DecalTypes` enum.
-- @param posX X position coordinate.
-- @param posY Y position coordinate.
-- @param posZ Z position coordinate.
-- @param dirX X Orientation.
-- @param dirY Y Orientation.
-- @param dirZ Z Orientation.
-- @param sideX Usually set to 0.
-- @param sideY Usually set to 1.
-- @param sideZ Usually set to 0.
-- @param width Width of the decal.
-- @param height Height of the decal.
-- @param rCoef Red Color.
-- @param gCoef Green Color.
-- @param bCoef Blue Color.
-- @param opacity Alpha Color.
-- @param timeout The lifetime of the decal.
-- @param isLongRange toggle further LOD draw distance.
-- @param isDynamic toggle dynamics.
-- @param useComplexColn use complex coloring.
-- @return An integer value representing the added decal index, will return `0` if the decal cannot be added.
function Global.AddDecal(decalType, posX, posY, posZ, dirX, dirY, dirZ, sideX, sideY, sideZ, width, height, rCoef, gCoef, bCoef, opacity, timeout, isLongRange, isDynamic, useComplexColn)
	return _in(0xB302244A1839BDAD, decalType, posX, posY, posZ, dirX, dirY, dirZ, sideX, sideY, sideZ, width, height, rCoef, gCoef, bCoef, opacity, timeout, isLongRange, isDynamic, useComplexColn, _ri)
end

--- To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#\_0x264AC28B01B353A5).
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.AddDispatchSpawnBlockingAngledArea(x1, y1, z1, x2, y2, z2, width)
	return _in(0x918C7B2D2FF3928B, x1, y1, z1, x2, y2, z2, width, _ri)
end
Global.N_0x918c7b2d2ff3928b = Global.AddDispatchSpawnBlockingAngledArea

--- _ADD_DISPATCH_SPAWN_BLOCKING_AREA
function Global.AddDispatchSpawnBlockingArea(x1, y1, x2, y2)
	return _in(0x2D4259F1FEB81DA9, x1, y1, x2, y2, _ri)
end
Global.N_0x2d4259f1feb81da9 = Global.AddDispatchSpawnBlockingArea

--- p5 only set to true in single player native scripts. Door hashes normally look like `PROP_[int]_DOOR_[int]` for interior doors and `PROP_BUILDING_[int]_DOOR_[int]` exterior doors but you can just make up your own hash if you want.
-- If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
-- A simple "localized" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53), [DOOR_SYSTEM_SET_OPEN_RATIO](#\_0xB6E6FBA95C7324AC), [DOOR_SYSTEM_SET_HOLD_OPEN](#\_0xD9B71952F78A2640), etc.
-- @param doorHash A (unique) door system identifier
-- @param modelHash Entity model hash
-- @param x The X coordinate of the door object
-- @param y The Y coordinate of the door object
-- @param z The Z coordinate of the door object
-- @param scriptDoor false; relies upon getNetworkGameScriptHandler.
-- @param isLocal On true disables the creation `CRequestDoorEvent's` in [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53).
function Global.AddDoorToSystem(doorHash, modelHash, x, y, z, p5, scriptDoor, isLocal)
	return _in(0x6F8838D03D1DC226, _ch(doorHash), _ch(modelHash), x, y, z, p5, scriptDoor, isLocal)
end

--- Example:
-- GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");
-- I tried this and nothing happened...
function Global.AddEntityIcon(entity, icon)
	return _in(0x9CD43EEE12BF4DD0, entity, _ts(icon), _ri)
end

--- All found occurrences in b678d:
-- pastebin.com/ceu67jz8
function Global.AddEntityToAudioMixGroup(entity, groupName, fadeIn)
	return _in(0x153973AB99FE8980, entity, _ts(groupName), fadeIn)
end
Global.N_0x153973ab99fe8980 = Global.AddEntityToAudioMixGroup
Global.DynamicMixerRelatedFn = Global.AddEntityToAudioMixGroup

--- NativeDB Added Parameter 9: BOOL noDamage
-- ```
-- ```
-- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
-- BOOL noDamage = false: damage || nodamage = true: no damage
-- ```
-- ```cpp
-- enum class eExplosionTag : uint32_t
-- {
-- DONTCARE = 0xFFFFFFFF,
-- GRENADE = 0,
-- GRENADELAUNCHER = 1,
-- STICKYBOMB = 2,
-- MOLOTOV = 3,
-- ROCKET = 4,
-- TANKSHELL = 5,
-- HI_OCTANE = 6,
-- CAR = 7,
-- PLANE = 8,
-- PETROL_PUMP = 9,
-- BIKE = 10,
-- DIR_STEAM = 11,
-- DIR_FLAME = 12,
-- DIR_WATER_HYDRANT = 13,
-- DIR_GAS_CANISTER = 14,
-- BOAT = 15,
-- SHIP_DESTROY = 16,
-- TRUCK = 17,
-- BULLET = 18,
-- SMOKEGRENADELAUNCHER = 19,
-- SMOKEGRENADE = 20,
-- BZGAS = 21,
-- FLARE = 22,
-- GAS_CANISTER = 23,
-- EXTINGUISHER = 24,
-- _0x988620B8 = 25,
-- EXP_TAG_TRAIN = 26,
-- EXP_TAG_BARREL = 27,
-- EXP_TAG_PROPANE = 28,
-- EXP_TAG_BLIMP = 29,
-- EXP_TAG_DIR_FLAME_EXPLODE = 30,
-- EXP_TAG_TANKER = 31,
-- PLANE_ROCKET = 32,
-- EXP_TAG_VEHICLE_BULLET = 33,
-- EXP_TAG_GAS_TANK = 34,
-- EXP_TAG_BIRD_CRAP = 35,
-- EXP_TAG_RAILGUN = 36,
-- EXP_TAG_BLIMP2 = 37,
-- EXP_TAG_FIREWORK = 38,
-- EXP_TAG_SNOWBALL = 39,
-- EXP_TAG_PROXMINE = 40,
-- EXP_TAG_VALKYRIE_CANNON = 41,
-- EXP_TAG_AIR_DEFENCE = 42,
-- EXP_TAG_PIPEBOMB = 43,
-- EXP_TAG_VEHICLEMINE = 44,
-- EXP_TAG_EXPLOSIVEAMMO = 45,
-- EXP_TAG_APCSHELL = 46,
-- EXP_TAG_BOMB_CLUSTER = 47,
-- EXP_TAG_BOMB_GAS = 48,
-- EXP_TAG_BOMB_INCENDIARY = 49,
-- EXP_TAG_BOMB_STANDARD = 50,
-- EXP_TAG_TORPEDO = 51,
-- EXP_TAG_TORPEDO_UNDERWATER = 52,
-- EXP_TAG_BOMBUSHKA_CANNON = 53,
-- EXP_TAG_BOMB_CLUSTER_SECONDARY = 54,
-- EXP_TAG_HUNTER_BARRAGE = 55,
-- EXP_TAG_HUNTER_CANNON = 56,
-- EXP_TAG_ROGUE_CANNON = 57,
-- EXP_TAG_MINE_UNDERWATER = 58,
-- EXP_TAG_ORBITAL_CANNON = 59,
-- EXP_TAG_BOMB_STANDARD_WIDE = 60,
-- EXP_TAG_EXPLOSIVEAMMO_SHOTGUN = 61,
-- EXP_TAG_OPPRESSOR2_CANNON = 62,
-- EXP_TAG_MORTAR_KINETIC = 63,
-- EXP_TAG_VEHICLEMINE_KINETIC = 64,
-- EXP_TAG_VEHICLEMINE_EMP = 65,
-- EXP_TAG_VEHICLEMINE_SPIKE = 66,
-- EXP_TAG_VEHICLEMINE_SLICK = 67,
-- EXP_TAG_VEHICLEMINE_TAR = 68,
-- EXP_TAG_SCRIPT_DRONE = 69,
-- EXP_TAG_RAYGUN = 70,
-- EXP_TAG_BURIEDMINE = 71,
-- EXP_TAG_SCRIPT_MISSILE = 72,
-- EXP_TAG_RCTANK_ROCKET = 73,
-- EXP_TAG_BOMB_WATER = 74,
-- EXP_TAG_BOMB_WATER_SECONDARY = 75,
-- _0xF728C4A9 = 76,
-- _0xBAEC056F = 77,
-- EXP_TAG_FLASHGRENADE = 78,
-- EXP_TAG_STUNGRENADE = 79,
-- _0x763D3B3B = 80,
-- EXP_TAG_SCRIPT_MISSILE_LARGE = 81,
-- EXP_TAG_SUBMARINE_BIG = 82,
-- };
function Global.AddExplosion(x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0xE3AD2BDBAEE269AC, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
end

--- ADD_EXPLOSION_WITH_USER_VFX
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param isAudible If explosion makes a sound.
-- @param isInvisible If the explosion is invisible or not.
function Global.AddExplosionWithUserVfx(x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0x36DD3FE58B5E5212, x, y, z, explosionType, _ch(explosionFx), damageScale, isAudible, isInvisible, cameraShake)
end
Global.AddSpecfxExplosion = Global.AddExplosionWithUserVfx

--- Only 8 current rises can exist. If rises need to be changed, use REMOVE_EXTRA_CALMING_QUAD and then ADD_EXTRA_CALMING_QUAD again.
-- After removing a rise, you will be able to add a rise again.
-- @return If succeeded to add, returns a rise index that can be used on REMOVE_EXTRA_CALMING_QUAD.
-- 		If failed to add, returns -1 (make sure you don't pass -1 to REMOVE_EXTRA_CALMING_QUAD).
function Global.AddExtraCalmingQuad(xLow, yLow, xHigh, yHigh, height)
	return _in(0xFDBF4CDBC07E1706, xLow, yLow, xHigh, yHigh, height, _ri)
end
Global.N_0xfdbf4cdbc07e1706 = Global.AddExtraCalmingQuad
Global.AddCurrentRise = Global.AddExtraCalmingQuad

--- Returns the index of the newly created hospital spawn point.
-- p3 might be radius?
function Global.AddHospitalRestart(x, y, z, p3, p4)
	return _in(0x1F464EF988465A81, x, y, z, p3, p4, _ri)
end

--- cpp
-- enum eAudibility {
-- AUD_AUDIBILITY_NORMAL = 0,
-- AUD_AUDIBILITY_CLEAR = 1,
-- AUD_AUDIBILITY_CRITICAL = 2,
-- AUD_AUDIBILITY_LEAD_IN = 3
-- }
-- @param audibility See eAudibility
function Global.AddLineToConversation(speakerConversationIndex, context, subtitle, listenerNumber, volumeType, isRandom, interruptible, ducksRadio, ducksScore, audibility, headset, dontInterruptForSpecialAbility, isPadSpeakerRoute)
	return _in(0xC5EF963405593646, speakerConversationIndex, _ts(context), _ts(subtitle), listenerNumber, volumeType, isRandom, interruptible, ducksRadio, ducksScore, audibility, headset, dontInterruptForSpecialAbility, isPadSpeakerRoute)
end

--- Loads a minimap overlay from a GFx file in the current resource.
-- If you need to control the depth of overlay use [`ADD_MINIMAP_OVERLAY_WITH_DEPTH`](#\_0xED0935B5).
-- @param name The path to a `.gfx` file in the current resource. It has to be specified as a `file`.
-- @return A minimap overlay ID.
function Global.AddMinimapOverlay(name)
	return _in(0x4afd2499, _ts(name), _ri)
end

--- Loads a minimap overlay from a GFx file in the current resource.
-- @param name The path to a `.gfx` file in the current resource. It has to be specified as a `file`.
-- @param depth The depth of new overlay on the minimap. Pass `-1` for game to figure out the highest depth itself. Should not be greater than `0x7EFFFFFD`.
-- @return A minimap overlay ID.
function Global.AddMinimapOverlayWithDepth(name, depth)
	return _in(0xed0935b5, _ts(name), depth, _ri)
end

--- ADD_MODEL_TO_CREATOR_BUDGET
function Global.AddModelToCreatorBudget(modelHash)
	return _in(0x0BC3144DEB678666, _ch(modelHash), _r)
end
Global.N_0x0bc3144deb678666 = Global.AddModelToCreatorBudget

--- Creates a navmesh blocking object, vehicles will avoid driving through this area.
-- Only 32 blocking objects may exist at a given time and must be manually managed. See [`REMOVE_NAVMESH_BLOCKING_OBJECT`](#\_0x46399A7895957C0E) and [`onResourceStop`](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/)
-- ```
-- enum eBlockingObjectFlags {
-- BLOCKING_OBJECT_DEFAULT = 0,      // Default Flag
-- BLOCKING_OBJECT_WANDERPATH = 1,   // Blocking object will block wander paths
-- BLOCKING_OBJECT_SHORTESTPATH = 2, // Blocking object will block (regular) shortest-paths
-- BLOCKING_OBJECT_FLEEPATH = 4,     // Blocking object will block flee paths
-- BLOCKING_OBJECT_ALLPATHS = 7,     // Blocking object will block all paths
-- }
-- ```
-- @param x The x coordinate to create the block on.
-- @param y The y coordinate.
-- @param z The z coordinate.
-- @param width The width of the block.
-- @param length The length of the block.
-- @param height The height of the block.
-- @param heading The heading of object in degrees.
-- @param bPermanent A boolean indicating if the blocking object is permanent (`true`/`false`).
-- @param flags Flag for the blocking object, refer to `eBlockingObjectFlags`.
function Global.AddNavmeshBlockingObject(x, y, z, width, length, height, heading, bPermanent, flags)
	return _in(0xFCD5C8E06E502F5A, x, y, z, width, length, height, heading, bPermanent, flags, _ri)
end

--- ADD_NAVMESH_REQUIRED_REGION
function Global.AddNavmeshRequiredRegion(x, y, radius)
	return _in(0x387EAD7EE42F6685, x, y, radius)
end

--- ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS
function Global.AddNextMessageToPreviousBriefs(p0)
	return _in(0x60296AF4BA14ABC5, p0)
end

--- NativeDB Introduced: v2699
function Global.AddOilDecal(x, y, z, groundLvl, width, transparency)
	return _in(0x126D7F89FE859A5E, x, y, z, groundLvl, width, transparency, _ri)
end

--- ADD_OWNED_EXPLOSION
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param isAudible If explosion makes a sound.
-- @param isInvisible If the explosion is invisible or not.
function Global.AddOwnedExplosion(ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0x172AA1B624FA1013, ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
end

--- connects/links 2 [route nodes](#\_0x8EDF950167586B7C)\
-- image representing the cyclic example below:\
-- ![image](https://user-images.githubusercontent.com/55803068/188470866-c32c6a9f-a25d-4772-9b18-5be46e2c14a1.png)
-- @param id1 the id representing the first route node
-- @param id2 the id representing the second route node
function Global.AddPatrolRouteLink(id1, id2)
	return _in(0x23083260DEC3A551, id1, id2)
end

--- x2,y2 and z2 are the coordinates to which the ped should look at
-- @param id is an integer that "identifies" the route node for linking to the route with ADD_PATROL_ROUTE_LINK.
-- @param guardScenario can be "WORLD_HUMAN_GUARD_STAND" or "StandGuard"
-- @param x1 destination
-- @param y1 destination
-- @param z1 destination
-- @param x2 coordinates to which the ped should look
-- @param y2 coordinates to which the ped should look
-- @param z2 coordinates to which the ped should look
-- @param waitTime written in ms
function Global.AddPatrolRouteNode(id, guardScenario, x1, y1, z1, x2, y2, z2, waitTime)
	return _in(0x8EDF950167586B7C, id, _ts(guardScenario), x1, y1, z1, x2, y2, z2, waitTime)
end

--- Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
-- collection - PedDecorationCollection filename hash
-- overlay - Item name hash
-- Example:
-- Entry inside "mpbeach_overlays.xml" -
-- <Item>
-- <uvPos x="0.500000" y="0.500000" />
-- <scale x="0.600000" y="0.500000" />
-- <rotation value="0.000000" />
-- <nameHash>FM_Hair_Fuzz</nameHash>
-- <txdHash>mp_hair_fuzz</txdHash>
-- <txtHash>mp_hair_fuzz</txtHash>
-- <zone>ZONE_HEAD</zone>
-- <type>TYPE_TATTOO</type>
-- <faction>FM</faction>
-- <garment>All</garment>
-- <gender>GENDER_DONTCARE</gender>
-- <award />
-- <awardLevel />
-- </Item>
-- Code:
-- PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
function Global.AddPedDecorationFromHashes(ped, collection, overlay)
	return _in(0x5F5D1665E352A839, ped, _ch(collection), _ch(overlay))
end
Global.ApplyPedOverlay = Global.AddPedDecorationFromHashes
Global.SetPedDecoration = Global.AddPedDecorationFromHashes

--- ADD_PED_DECORATION_FROM_HASHES_IN_CORONA
function Global.AddPedDecorationFromHashesInCorona(ped, collection, overlay)
	return _in(0x5619BFA07CFD7833, ped, _ch(collection), _ch(overlay))
end
Global.N_0x5619bfa07cfd7833 = Global.AddPedDecorationFromHashesInCorona
Global.SetPedFacialDecoration = Global.AddPedDecorationFromHashesInCorona

--- ADD_PED_TO_CONVERSATION
function Global.AddPedToConversation(speakerConversationIndex, ped, voiceName)
	return _in(0x95D9F4BC443956E7, speakerConversationIndex, ped, _ts(voiceName))
end

--- ADD_PETROL_DECAL
function Global.AddPetrolDecal(x, y, z, groundLvl, width, transparency)
	return _in(0x4F5212C7AD880DF8, x, y, z, groundLvl, width, transparency, _ri)
end

--- ADD_PETROL_TRAIL_DECAL_INFO
function Global.AddPetrolTrailDecalInfo(x, y, z, p3)
	return _in(0x967278682CB6967A, x, y, z, p3)
end
Global.N_0x967278682cb6967a = Global.AddPetrolTrailDecalInfo

--- ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME
function Global.AddPickupToInteriorRoomByName(pickup, roomName)
	return _in(0x3F6167F351168730, pickup, _ts(roomName))
end

--- ADD_POINT_TO_GPS_CUSTOM_ROUTE
function Global.AddPointToGpsCustomRoute(x, y, z)
	return _in(0x311438A071DD9B1A, x, y, z)
end
Global.N_0x311438a071dd9b1a = Global.AddPointToGpsCustomRoute

--- ADD_POINT_TO_GPS_MULTI_ROUTE
function Global.AddPointToGpsMultiRoute(x, y, z)
	return _in(0xA905192A6781C41B, x, y, z)
end
Global.N_0xa905192a6781c41b = Global.AddPointToGpsMultiRoute

--- ADD_POLICE_RESTART
function Global.AddPoliceRestart(p0, p1, p2, p3, p4)
	return _in(0x452736765B31FC4B, p0, p1, p2, p3, p4, _ri)
end

--- NativeDB Added Parameter 10: BOOL p9
function Global.AddPopMultiplierArea(x1, y1, z1, x2, y2, z2, p6, p7, p8)
	return _in(0x67F6413D3220E18D, x1, y1, z1, x2, y2, z2, p6, p7, p8, _ri)
end
Global.N_0x67f6413d3220e18d = Global.AddPopMultiplierArea

--- This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
function Global.AddPopMultiplierSphere(x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7)
	return _in(0x32C7A7E8C43A1F80, x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7, _ri)
end
Global.N_0x32c7a7e8c43a1f80 = Global.AddPopMultiplierSphere

--- Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
function Global.AddRelationshipGroup(name, groupHash)
	return _in(0xF372BC22FCB88606, _ts(name), _ii(groupHash) --[[ may be optional ]], _ri)
end

--- Experimental natives, please do not use in a live environment.
function Global.AddReplaceTexture(origTxd, origTxn, newTxd, newTxn)
	return _in(0xa66f8f75, _ts(origTxd), _ts(origTxn), _ts(newTxd), _ts(newTxn))
end

--- ADD_REPLAY_STAT_VALUE
function Global.AddReplayStatValue(value)
	return _in(0x69FE6DC87BD2A5E9, value)
end
Global.N_0x69fe6dc87bd2a5e9 = Global.AddReplayStatValue

--- ADD_ROAD_NODE_SPEED_ZONE
function Global.AddRoadNodeSpeedZone(x, y, z, radius, speed, p5)
	return _in(0x2CE544C68FB812A0, x, y, z, radius, speed, p5, _ri)
end
Global.N_0x2ce544c68fb812a0 = Global.AddRoadNodeSpeedZone
Global.AddSpeedZoneForCoord = Global.AddRoadNodeSpeedZone

--- Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
-- __
-- Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
-- Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param rotX Rotation X component.
-- @param rotY Rotation Y component.
-- @param rotZ Rotation Z component.
-- @param maxLength The maximum length the rope can droop.
-- @param ropeType 1 to 4 are thick ropes. 5 and up are thin ropes. Ropes types defined in ropedata.xml. An invalid rope type such as 0 will crash the game.
-- @param initLength The initial length of the rope.
-- @param minLength The minimum length the rope can be.
-- @param lengthChangeRate The speed in which the rope will wind if winding is started.
-- @param collisionOn Whether the rope should have collision. In original scripts this is followed by a LoadRopeData call when set.
-- @param lockFromFront If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
-- @param timeMultiplier The speed as which physics should run at. 1.0f is normal, 2.0f is twice as fast, -1.0f is time going backwards. This can affect gravity, etc.
-- @param breakable Whether shooting the rope will break it.
-- @param unkPtr Unknown pointer, always 0 in original scrips.
-- @return A script handle for the rope
function Global.AddRope(x, y, z, rotX, rotY, rotZ, maxLength, ropeType, initLength, minLength, lengthChangeRate, onlyPPU, collisionOn, lockFromFront, timeMultiplier, breakable, unkPtr)
	return _in(0xE832D760399EB220, x, y, z, rotX, rotY, rotZ, maxLength, ropeType, initLength, minLength, lengthChangeRate, onlyPPU, collisionOn, lockFromFront, timeMultiplier, breakable, _ii(unkPtr) --[[ may be optional ]], _ri)
end

--- Sets an area where scenarios are blocked
-- @param posMinX Min X Coordinate.
-- @param posMinY Min Y Coordinate.
-- @param posMinZ Min Z Coordinate.
-- @param posMaxX Max X Coordinate.
-- @param posMaxY Max Y Coordinate.
-- @param posMaxZ Max Z Coordinate.
-- @param network Optionally networked to all other players
-- @param cancelActive Should this cause peds already in active scenario points in the area specified to leave
-- @param blockPeds if this area effects scenarios with peds
-- @param blockVehicles if this area effects scenarios with vehicles
function Global.AddScenarioBlockingArea(posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, network, cancelActive, blockPeds, blockVehicles)
	return _in(0x1B5C85C612E5256E, posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, network, cancelActive, blockPeds, blockVehicles, _ri)
end

--- BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);
-- - Nacorpio
-- -----
-- Hardcoded to not work in Multiplayer.
function Global.AddScriptToRandomPed(name, model, p2, p3)
	return _in(0x4EE5367468A65CCC, _ts(name), _ch(model), p2, p3)
end

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function Global.AddShockingEventAtPosition(eventType, x, y, z, duration)
	return _in(0xD9F8455409B525E9, eventType, x, y, z, duration, _ri)
end

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function Global.AddShockingEventForEntity(eventType, entity, duration)
	return _in(0x7FD8F3BE76F89422, eventType, entity, duration, _ri)
end

--- Adds a handler for changes to a state bag.
-- The function called expects to match the following signature:
-- ```ts
-- function StateBagChangeHandler(bagName: string, key: string, value: any, reserved: number, replicated: boolean);
-- ```
-- *   **bagName**: The internal bag ID for the state bag which changed. This is usually `player:Source`, `entity:NetID`
-- or `localEntity:Handle`.
-- *   **key**: The changed key.
-- *   **value**: The new value stored at key. The old value is still stored in the state bag at the time this callback executes.
-- *   **reserved**: Currently unused.
-- *   **replicated**: Whether the set is meant to be replicated.
-- At this time, the change handler can't opt to reject changes.
-- If bagName refers to an entity, use [GET_ENTITY_FROM_STATE_BAG_NAME](?\_0x4BDF1868) to get the entity handle
-- If bagName refers to a player, use [GET_PLAYER_FROM_STATE_BAG_NAME](?\_0xA56135E0) to get the player handle
-- @param keyFilter The key to check for, or null for no filter.
-- @param bagFilter The bag ID to check for such as `entity:65535`, or null for no filter.
-- @param handler The handler function.
-- @return A cookie to remove the change handler.
function Global.AddStateBagChangeHandler(keyFilter, bagFilter, handler)
	return _in(0x5ba35aaf, _ts(keyFilter), _ts(bagFilter), _mfr(handler), _ri)
end

--- See description of [`ADD_STUNT_JUMP_ANGLED`](#\_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
-- @param x1 Jump entry left far bottom corner coordinate X.
-- @param y1 Jump entry left far bottom corner coordinate Y.
-- @param z1 Jump entry left far bottom corner coordinate Z.
-- @param x2 Jump entry right near top corner coordinate X.
-- @param y2 Jump entry right near top corner coordinate Y.
-- @param z2 Jump entry right near top corner coordinate Z.
-- @param x3 Landing zone end coordinate X.
-- @param y3 Landing zone end coordinate Y.
-- @param z3 Landing zone end coordinate Z.
-- @param x4 Landing zone start coordinate X.
-- @param y4 Landing zone start coordinate Y.
-- @param z4 Landing zone start coordinate Z.
-- @param camX Stuntcam (cinematic) coordinate x.
-- @param camY Stuntcam (cinematic) coordinate y.
-- @param camZ Stuntcam (cinematic) coordinate z.
-- @param unk1 Unknown, always 150.
-- @param unk2 Unknown, always 0.
-- @param unk3 Unknown, always 0.
-- @return The ID of the stunt jump that was added.
function Global.AddStuntJump(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3)
	return _in(0x1A992DA297A4630C, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3, _ri)
end

--- Creates a new stunt jump.
-- The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP\_**ANGLED**.
-- Info about the specific 'parameter sections':
-- **x1, y1, z1, x2, y2, z2 and radius1:**
-- First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
-- **x3, y3, z3, x4, y4, z4 and radius2:**
-- Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
-- **camX, camY and camZ:**
-- The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
-- **unk1, unk2 and unk3:**
-- Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
-- Visualized example in-game:
-- ![](https://d.fivem.dev/2019-03-15\_18-24\_c7802\_846.png)
-- Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
-- @param x1 Entry zone bottom left corner x.
-- @param y1 Entry zone bottom left corner y.
-- @param z1 Entry zone bottom left corner z.
-- @param x2 Entry zone top right corner x.
-- @param y2 Entry zone top right corner y.
-- @param z2 Entry zone top right corner z.
-- @param radius1 Probably a "feather" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.
-- @param x3 Landing zone start corner coordinate x.
-- @param y3 Landing zone start corner coordinate y.
-- @param z3 Landing zone start corner coordinate z.
-- @param x4 Landing zone end corner coordinate x.
-- @param y4 Landing zone end corner coordinate y.
-- @param z4 Landing zone end corner coordinate z.
-- @param radius2 Probably a "feather" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.
-- @param camX Stunt (cinematic) camera x position.
-- @param camY Stunt (cinematic) camera y position.
-- @param camZ Stunt (cinematic) camera z position.
-- @param unk1 always 150
-- @param unk2 always 0
-- @param unk3 always 0
-- @return The ID of the stuntjump that was created.
function Global.AddStuntJumpAngled(x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3)
	return _in(0xBBE5D803A5360CBF, x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3, _ri)
end

--- Adds a point related to CTacticalAnalysis
function Global.AddTacticalAnalysisPoint(x, y, z)
	return _in(0xB8721407EE9C3FF6, x, y, z)
end
Global.N_0xb8721407ee9c3ff6 = Global.AddTacticalAnalysisPoint

--- ADD_TCMODIFIER_OVERRIDE
function Global.AddTcmodifierOverride(modifierName1, modifierName2)
	return _in(0x1A8E2C8B9CF4549C, _ts(modifierName1), _ts(modifierName2))
end
Global.N_0x1a8e2c8b9cf4549c = Global.AddTcmodifierOverride

--- Adds a float to a text component placeholder, replacing `~1~` in the current text command's text label.
-- ![Example output](https://i.imgur.com/jvuQ0II.png)
-- @param value The number to substitute in the label.
-- @param decimalPlaces How many decimal places to add
function Global.AddTextComponentFloat(value, decimalPlaces)
	return _in(0xE7DCB5B874BCD96E, value, decimalPlaces)
end

--- ADD_TEXT_COMPONENT_FORMATTED_INTEGER
-- @param value The integer to add to the string
-- @param commaSeparated Whether or not to add comma seperators. So if true 1000 would become 1,000.
function Global.AddTextComponentFormattedInteger(value, commaSeparated)
	return _in(0x0E4C749FF9DE9CC4, value, commaSeparated)
end
Global.N_0x0e4c749ff9de9cc4 = Global.AddTextComponentFormattedInteger

--- ADD_TEXT_COMPONENT_INTEGER
function Global.AddTextComponentInteger(value)
	return _in(0x03B504CF259931BC, value)
end

--- ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME
function Global.AddTextComponentSubstringBlipName(blip)
	return _in(0x80EAD8E2E1D5D52E, blip)
end
Global.N_0x80ead8e2e1d5d52e = Global.AddTextComponentSubstringBlipName

--- ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY
function Global.AddTextComponentSubstringKeyboardDisplay(string)
	return _in(0x5F68520888E69014, _ts(string))
end
Global.AddTextComponentString3 = Global.AddTextComponentSubstringKeyboardDisplay
Global.AddTextComponentScaleform = Global.AddTextComponentSubstringKeyboardDisplay

--- p1 was always -1
function Global.AddTextComponentSubstringPhoneNumber(p0, p1)
	return _in(0x761B77454205A61D, _ts(p0), p1)
end
Global.N_0x761b77454205a61d = Global.AddTextComponentSubstringPhoneNumber
Global.AddTextComponentAppTitle = Global.AddTextComponentSubstringPhoneNumber

--- Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
-- See the documentation on text formatting for more information.
-- @param text A string to add of up to 99 characters. This can contain additional `~` formatting directives.
function Global.AddTextComponentSubstringPlayerName(text)
	return _in(0x6C188BE134E074AA, _ts(text))
end
Global.AddTextComponentString = Global.AddTextComponentSubstringPlayerName

--- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL
function Global.AddTextComponentSubstringTextLabel(labelName)
	return _in(0xC63CD5D2920ACBE7, _ts(labelName))
end
Global.AddTextComponentItemString = Global.AddTextComponentSubstringTextLabel

--- It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
function Global.AddTextComponentSubstringTextLabelHashKey(gxtEntryHash)
	return _in(0x17299B63C7683A2B, _ch(gxtEntryHash))
end
Global.N_0x17299b63c7683a2b = Global.AddTextComponentSubstringTextLabelHashKey

--- Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
function Global.AddTextComponentSubstringTime(timestamp, flags)
	return _in(0x1115F16B8AB9E8BF, timestamp, flags)
end

--- This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
function Global.AddTextComponentSubstringWebsite(website)
	return _in(0x94CF4AC034C9C986, _ts(website))
end
Global.AddTextComponentString2 = Global.AddTextComponentSubstringWebsite

--- ADD_TEXT_ENTRY
function Global.AddTextEntry(entryKey, entryText)
	return _in(0x32ca01c3, _ts(entryKey), _ts(entryText))
end

--- ADD_TEXT_ENTRY_BY_HASH
function Global.AddTextEntryByHash(entryKey, entryText)
	return _in(0x289da860, _ch(entryKey), _ts(entryText))
end

--- ADD_TO_CLOCK_TIME
function Global.AddToClockTime(hours, minutes, seconds)
	return _in(0xD716F30D8C8980E2, hours, minutes, seconds)
end

--- ADD_TO_ITEMSET
function Global.AddToItemset(p0, p1)
	return _in(0xE3945201F14637DD, p0, p1, _r)
end

--- ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA
function Global.AddVehicleCombatAngledAvoidanceArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x54B0F614960F4A5F, p0, p1, p2, p3, p4, p5, p6, _ri)
end
Global.N_0x54b0f614960f4a5f = Global.AddVehicleCombatAngledAvoidanceArea
Global.AddVehicleCombatAvoidanceArea = Global.AddVehicleCombatAngledAvoidanceArea

--- boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
function Global.AddVehicleCrewEmblem(vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha)
	return _in(0x428BDCB9DA58DA53, vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha, _r)
end
Global.AddClanDecalToVehicle = Global.AddVehicleCrewEmblem

--- ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE
function Global.AddVehiclePhoneExplosiveDevice(vehicle)
	return _in(0x99AD4CCCB128CBC9, vehicle)
end
Global.N_0x99ad4cccb128cbc9 = Global.AddVehiclePhoneExplosiveDevice

--- ADD_VEHICLE_STUCK_CHECK_WITH_WARP
function Global.AddVehicleStuckCheckWithWarp(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2FA9923062DD396C, p0, p1, p2, p3, p4, p5, p6)
end

--- x, y, z: offset in world coords from some entity.
function Global.AddVehicleSubtaskAttackCoord(ped, x, y, z)
	return _in(0x5CF0D8F9BBA0DD75, ped, x, y, z)
end

--- ADD_VEHICLE_SUBTASK_ATTACK_PED
function Global.AddVehicleSubtaskAttackPed(ped, ped2)
	return _in(0x85F462BADC7DA47F, ped, ped2)
end

--- ADD_VEHICLE_UPSIDEDOWN_CHECK
function Global.AddVehicleUpsidedownCheck(vehicle)
	return _in(0xB72E26D81006005B, vehicle)
end

--- ADVANCE_CLOCK_TIME_TO
function Global.AdvanceClockTimeTo(hour, minute, second)
	return _in(0xC8CA9670B9D83B3B, hour, minute, second)
end

--- This native it's a debug native. Won't do anything.
function Global.AllowAmbientVehiclesToAvoidAdverseConditions(vehicle)
	return _in(0xB264C4D2F2B0A78B, vehicle)
end
Global.N_0xb264c4d2f2b0a78b = Global.AllowAmbientVehiclesToAvoidAdverseConditions

--- ALLOW_MISSION_CREATOR_WARP
function Global.AllowMissionCreatorWarp(toggle)
	return _in(0xDEA36202FC3382DF, toggle)
end
Global.N_0xdea36202fc3382df = Global.AllowMissionCreatorWarp

--- Allows opening the pause menu this frame, when the player is dead.
function Global.AllowPauseMenuWhenDeadThisFrame()
	return _in(0xCC3FDDED67BCFC63)
end
Global.N_0xcc3fdded67bcfc63 = Global.AllowPauseMenuWhenDeadThisFrame

--- ALLOW_PLAYER_SWITCH_ASCENT
function Global.AllowPlayerSwitchAscent()
	return _in(0x8E2A065ABDAE6994)
end
Global.N_0x8e2a065abdae6994 = Global.AllowPlayerSwitchAscent

--- ALLOW_PLAYER_SWITCH_DESCENT
function Global.AllowPlayerSwitchDescent()
	return _in(0xAD5FDF34B81BFE79)
end
Global.N_0xad5fdf34b81bfe79 = Global.AllowPlayerSwitchDescent

--- ALLOW_PLAYER_SWITCH_OUTRO
function Global.AllowPlayerSwitchOutro()
	return _in(0x74DE2E8739086740)
end
Global.N_0x74de2e8739086740 = Global.AllowPlayerSwitchOutro

--- ALLOW_PLAYER_SWITCH_PAN
function Global.AllowPlayerSwitchPan()
	return _in(0x43D1680C6D19A8E9)
end
Global.N_0x43d1680c6d19a8e9 = Global.AllowPlayerSwitchPan

--- ALLOW_SONAR_BLIPS
function Global.AllowSonarBlips(toggle)
	return _in(0x60734CC207C9833C, toggle)
end
Global.N_0x60734cc207c9833c = Global.AllowSonarBlips

--- Seems to animate the gameplay camera zoom.
-- Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);
-- will animate the camera zooming in from 1000 meters away.
-- Game scripts use it like this:
-- // Setting this to 1 prevents V key from changing zoom
-- PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);
-- // These restrict how far you can move cam up/down left/right
-- CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);
-- CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);
-- CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);
function Global.AnimateGameplayCamZoom(p0, distance)
	return _in(0xDF2E1F7742402E81, p0, distance)
end

--- Example from michael2 script.
-- CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);
function Global.AnimatedShakeCam(cam, p1, p2, p3, amplitude)
	return _in(0xA2746EEAE3E577CD, cam, _ts(p1), _ts(p2), _ts(p3), amplitude)
end

--- CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);
function Global.AnimatedShakeScriptGlobal(p0, p1, p2, p3)
	return _in(0xC2EAE3FB8CDBED31, _ts(p0), _ts(p1), _ts(p2), p3)
end
Global.N_0xc2eae3fb8cdbed31 = Global.AnimatedShakeScriptGlobal

--- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724)
function Global.AnimpostfxGetUnk(effectName)
	return _in(0xE35B38A27E8E7179, _ts(effectName), _rf)
end
Global.N_0xe35b38a27e8e7179 = Global.AnimpostfxGetUnk

--- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
-- @return Whether the specified effect is active
function Global.AnimpostfxIsRunning(effectName)
	return _in(0x36AD3E690DA5ACEB, _ts(effectName), _r)
end
Global.GetScreenEffectIsActive = Global.AnimpostfxIsRunning

--- duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
-- if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
function Global.AnimpostfxPlay(effectName, duration, looped)
	return _in(0x2206BF9A37B7F724, _ts(effectName), duration, looped)
end
Global.StartScreenEffect = Global.AnimpostfxPlay

--- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
function Global.AnimpostfxStop(effectName)
	return _in(0x068E835A1D0DC0E3, _ts(effectName))
end
Global.StopScreenEffect = Global.AnimpostfxStop

--- ANIMPOSTFX_STOP_ALL
function Global.AnimpostfxStopAll()
	return _in(0xB4EDDC19532BFB85)
end
Global.StopAllScreenEffects = Global.AnimpostfxStopAll

--- Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
function Global.AnimpostfxStopAndDoUnk(effectName)
	return _in(0xD2209BE128B5418C, _ts(effectName))
end
Global.N_0xd2209be128b5418c = Global.AnimpostfxStopAndDoUnk

--- APP_CLEAR_BLOCK
function Global.AppClearBlock()
	return _in(0x5FE1DF3342DB7DBA)
end

--- APP_CLOSE_APP
function Global.AppCloseApp()
	return _in(0xE41C65E07A5F05FC)
end

--- APP_CLOSE_BLOCK
function Global.AppCloseBlock()
	return _in(0xE8E3FCF72EAC0EF8)
end

--- APP_DATA_VALID
function Global.AppDataValid()
	return _in(0x846AA8E7D55EE5B6, _r)
end

--- APP_DELETE_APP_DATA
function Global.AppDeleteAppData(appName)
	return _in(0x44151AEA95C8A003, _ts(appName), _r)
end

--- APP_GET_DELETED_FILE_STATUS
function Global.AppGetDeletedFileStatus()
	return _in(0xC9853A2BE3DED1A6, _ri)
end

--- APP_GET_FLOAT
function Global.AppGetFloat(property)
	return _in(0x1514FB24C02C2322, _ts(property), _rf)
end

--- APP_GET_INT
function Global.AppGetInt(property)
	return _in(0xD3A58A12C77D9D4B, _ts(property), _ri)
end

--- APP_GET_STRING
function Global.AppGetString(property)
	return _in(0x749B023950D2311C, _ts(property), _s)
end

--- APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT
function Global.AppHasLinkedSocialClubAccount()
	return _in(0x71EEE69745088DA0, _r)
end

--- APP_HAS_SYNCED_DATA
function Global.AppHasSyncedData(appName)
	return _in(0xCA52279A7271517F, _ts(appName), _r)
end

--- APP_SAVE_DATA
function Global.AppSaveData()
	return _in(0x95C5D356CDA6E85F)
end

--- Called in the gamescripts like:
-- APP::APP_SET_APP("car");
-- APP::APP_SET_APP("dog");
function Global.AppSetApp(appName)
	return _in(0xCFD0406ADAF90D2B, _ts(appName))
end

--- APP_SET_BLOCK
function Global.AppSetBlock(blockName)
	return _in(0x262AB456A3D21F93, _ts(blockName))
end

--- APP_SET_FLOAT
function Global.AppSetFloat(property, value)
	return _in(0x25D7687C68E0DAA4, _ts(property), value)
end

--- APP_SET_INT
function Global.AppSetInt(property, value)
	return _in(0x607E8E3D3E4F9611, _ts(property), value)
end

--- APP_SET_STRING
function Global.AppSetString(property, value)
	return _in(0x3FF2FCEC4B7721B4, _ts(property), _ts(value))
end

--- damages a ped with the given amount
-- ----
-- armorFirst means it will damage/lower the armor first before damaging the player.
-- setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.ApplyDamageToPed(ped, damageAmount, armorFirst)
	return _in(0x697157CED63F18D4, ped, damageAmount, armorFirst)
end

--- Applies a force to the specified entity.
-- **List of force types (p1)**:
-- ```
-- public enum ForceType
-- {
-- MinForce = 0,
-- MaxForceRot = 1,
-- MinForce2 = 2,
-- MaxForceRot2 = 3,
-- ForceNoRot = 4,
-- ForceRotPlusForce = 5
-- }
-- ```
-- Research/documentation on the gtaforums can be found [here](https://gtaforums.com/topic/885669-precisely-define-object-physics/) and [here](https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/).
-- @param entity The entity you want to apply a force on
-- @param forceType See native description above for a list of commonly used values
-- @param x Force amount (X)
-- @param y Force amount (Y)
-- @param z Force amount (Z)
-- @param offX Rotation/offset force (X)
-- @param offY Rotation/offset force (Y)
-- @param offZ Rotation/offset force (Z)
-- @param boneIndex (Often 0) Entity bone index
-- @param isDirectionRel (Usually false) Vector defined in local (body-fixed) coordinate frame
-- @param ignoreUpVec (Usually true)
-- @param isForceRel (Usually true) When true, force gets multiplied with the objects mass and different objects will have the same acceleration
-- @param p12 (Usually false)
-- @param p13 (Usually true)
function Global.ApplyForceToEntity(entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
	return _in(0xC5F68BE9613E2D18, entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
end

--- Applies a force to the specified entity.
-- **List of force types (p1)**:
-- public enum ForceType
-- {
-- MinForce = 0,
-- MaxForceRot = 1,
-- MinForce2 = 2,
-- MaxForceRot2 = 3,
-- ForceNoRot = 4,
-- ForceRotPlusForce = 5
-- }
-- Research/documentation on the gtaforums can be found here https://gtaforums.com/topic/885669-precisely-define-object-physics/) and here https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/.
-- p6/relative - makes the xyz force not relative to world coords, but to something else
-- p7/highForce - setting false will make the force really low
function Global.ApplyForceToEntityCenterOfMass(entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
	return _in(0x18FF00FC7EFF559E, entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
end

--- APPLY_IMPULSE_TO_CLOTH
function Global.ApplyImpulseToCloth(posX, posY, posZ, vecX, vecY, vecZ, impulse)
	return _in(0xE37F721824571784, posX, posY, posZ, vecX, vecY, vecZ, impulse)
end

--- Found one occurence in re_crashrescue.c4
-- PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");
function Global.ApplyPedBlood(ped, boneIndex, xRot, yRot, zRot, woundType)
	return _in(0x83F7E01C7B769A26, ped, boneIndex, xRot, yRot, zRot, _ts(woundType))
end

--- APPLY_PED_BLOOD_BY_ZONE
function Global.ApplyPedBloodByZone(ped, p1, p2, p3, p4)
	return _in(0x3311E47B91EDCBBC, ped, p1, p2, p3, _ii(p4) --[[ may be optional ]])
end
Global.N_0x3311e47b91edcbbc = Global.ApplyPedBloodByZone

--- APPLY_PED_BLOOD_DAMAGE_BY_ZONE
function Global.ApplyPedBloodDamageByZone(ped, p1, p2, p3, p4)
	return _in(0x816F6981C60BF53B, ped, p1, p2, p3, p4)
end
Global.N_0x816f6981c60bf53b = Global.ApplyPedBloodDamageByZone

--- Applies blood damage to a ped with specific parameters for zone, UV offsets, rotation, scale, and initial aging.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param ped The Ped to which blood damage is applied.
-- @param component Specific component or body part.
-- @param u UV texture coordinates for placing the decal in the specified zone.
-- @param v UV texture coordinates for placing the decal in the specified zone.
-- @param rotation Angle in degrees for the rotation of the blood decal.
-- @param scale Scale factor for the damage, ranging from 0.0 to 1.0.
-- @param forcedFrame Allows a specific frame of damage to be chosen (-1 for random selection).
-- @param preAge Number of seconds to pre-age the damage for an "old wound" effect (0.0 for fresh wound).
-- @param bloodName Name of the blood type, matching an entry in peddamage.xml.
function Global.ApplyPedBloodSpecific(ped, component, u, v, rotation, scale, forcedFrame, preAge, bloodName)
	return _in(0xEF0D582CBF2D9B0F, ped, component, u, v, rotation, scale, forcedFrame, preAge, _ts(bloodName))
end
Global.N_0xef0d582cbf2d9b0f = Global.ApplyPedBloodSpecific

--- enum eDamageZone
-- {
-- DZ_Torso = 0,
-- DZ_Head,
-- DZ_LeftArm,
-- DZ_RightArm,
-- DZ_LeftLeg,
-- DZ_RightLeg,
-- };
-- Decal Names:
-- scar
-- blushing
-- cs_flush_anger
-- cs_flush_anger_face
-- bruise
-- bruise_large
-- herpes
-- ArmorBullet
-- basic_dirt_cloth
-- basic_dirt_skin
-- cs_trev1_dirt
-- APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
function Global.ApplyPedDamageDecal(ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName)
	return _in(0x397C38AA7B4A5F83, ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, _ts(decalName))
end

--- Damage Packs:
-- "SCR_TrevorTreeBang"
-- "HOSPITAL_0"
-- "HOSPITAL_1"
-- "HOSPITAL_2"
-- "HOSPITAL_3"
-- "HOSPITAL_4"
-- "HOSPITAL_5"
-- "HOSPITAL_6"
-- "HOSPITAL_7"
-- "HOSPITAL_8"
-- "HOSPITAL_9"
-- "SCR_Dumpster"
-- "BigHitByVehicle"
-- "SCR_Finale_Michael_Face"
-- "SCR_Franklin_finb"
-- "SCR_Finale_Michael"
-- "SCR_Franklin_finb2"
-- "Explosion_Med"
-- "SCR_Torture"
-- "SCR_TracySplash"
-- "Skin_Melee_0"
-- Additional damage packs:
-- gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
function Global.ApplyPedDamagePack(ped, damagePack, damage, mult)
	return _in(0x46DF918788CB093F, ped, _ts(damagePack), damage, mult)
end

--- ARE_ALL_NAVMESH_REGIONS_LOADED
function Global.AreAllNavmeshRegionsLoaded()
	return _in(0x8415D95B194A3AEA, _r)
end

--- Appears to return false if any window is broken.
function Global.AreAllVehicleWindowsIntact(vehicle)
	return _in(0x11D862A3E977A9EF, vehicle, _r)
end
Global.AreAllVehicleWindowsIntact = Global.AreAllVehicleWindowsIntact

--- Returns false if every seat is occupied.
function Global.AreAnyVehicleSeatsFree(vehicle)
	return _in(0x2D34FC3BC4ADB780, vehicle, _r)
end
Global.IsAnyVehicleSeatEmpty = Global.AreAnyVehicleSeatsFree

--- Returns true when the bomb bay doors of this plane are open. False if they're closed.
-- @param aircraft The vehicle to check the bomb bay doors on.
-- @return A bool indicating the state of the doors (true = open, false = closed).
function Global.AreBombBayDoorsOpen(aircraft)
	return _in(0xD0917A423314BBA8, aircraft, _r)
end
Global.N_0xd0917a423314bba8 = Global.AreBombBayDoorsOpen
Global.GetAreBombBayDoorsOpen = Global.AreBombBayDoorsOpen

--- ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE
function Global.AreEntitiesEntirelyInsideGarage(garageHash, p1, p2, p3, p4)
	return _in(0x85B6C850546FDDE2, _ch(garageHash), p1, p2, p3, p4, _r)
end
Global.N_0x85b6c850546fdde2 = Global.AreEntitiesEntirelyInsideGarage

--- Only used with the "akula" in the decompiled native scripts.
-- ```
-- NativeDB Introduced: v1290
-- ```
function Global.AreHeliStubWingsDeployed(vehicle)
	return _in(0xAEF12960FA943792, vehicle, _r)
end
Global.N_0xaef12960fa943792 = Global.AreHeliStubWingsDeployed

--- ARE_NODES_LOADED_FOR_AREA
function Global.AreNodesLoadedForArea(x1, y1, x2, y2)
	return _in(0xF7B79A50B905A30D, x1, y1, x2, y2, _r)
end
Global.N_0xf7b79a50b905a30d = Global.AreNodesLoadedForArea
Global.ArePathNodesLoadedInArea = Global.AreNodesLoadedForArea

--- Returns whether the outrigger legs are deployed for the vehicle.
-- The Chernobog is one of the few vehicles with outrigger legs.
-- ```
-- NativeDB Introduced: v1290
-- ```
-- @return The deployment state of the vehicle's outrigger legs
function Global.AreOutriggerLegsDeployed(vehicle)
	return _in(0x3A9128352EAC9E85, vehicle, _r)
end
Global.N_0x3a9128352eac9e85 = Global.AreOutriggerLegsDeployed

--- Queries whether the control panels of a plane are intact. This native is used to determine the operational status of a plane's cockpit controls, which can affect the plane's flyability.
-- @param vehicle The vehicle to check. This should be a plane.
-- @param checkForZeroHealth If set to `true`, the native also checks if the plane's health is zero, indicating it is completely destroyed. If `false`, only the state of the control panels is considered.
-- @return Returns `true` if the plane's control panels are intact, and, depending on the `checkForZeroHealth` parameter, the plane is not completely destroyed. Returns `false` if the control panels are damaged or the plane is destroyed (when `checkForZeroHealth` is `true`).
function Global.ArePlaneControlPanelsIntact(vehicle, checkForZeroHealth)
	return _in(0xF78F94D60248C737, vehicle, checkForZeroHealth, _r)
end
Global.N_0xf78f94d60248c737 = Global.ArePlaneControlPanelsIntact

--- ARE_PLANE_PROPELLERS_INTACT
function Global.ArePlanePropellersIntact(plane)
	return _in(0x755D6D5267CBBD7E, plane, _r)
end
Global.N_0x755d6d5267cbbd7e = Global.ArePlanePropellersIntact
Global.ArePropellersUndamaged = Global.ArePlanePropellersIntact

--- _ARE_PLANE_WINGS_INTACT
function Global.ArePlaneWingsIntact(plane)
	return _in(0x5991A01434CE9677, plane, _r)
end
Global.N_0x5991a01434ce9677 = Global.ArePlaneWingsIntact
Global.AddAMarkerOverVehicle = Global.ArePlaneWingsIntact
Global.AreVehicleWingsIntact = Global.ArePlaneWingsIntact

--- ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP
function Global.ArePlayerFlashingStarsAboutToDrop(player)
	return _in(0xAFAF86043E5874E9, player, _r)
end

--- ARE_PLAYER_STARS_GREYED_OUT
function Global.ArePlayerStarsGreyedOut(player)
	return _in(0x0A6EB355EE14A2DB, player, _r)
end

--- ARE_PROFILE_SETTINGS_VALID
function Global.AreProfileSettingsValid()
	return _in(0x5AA3BEFA29F03AD4, _r)
end
Global.N_0x5aa3befa29f03ad4 = Global.AreProfileSettingsValid

--- ARE_STRINGS_EQUAL
function Global.AreStringsEqual(string1, string2)
	return _in(0x0C515FAB3FF9EA92, _ts(string1), _ts(string2), _r)
end

--- ASIN
function Global.Asin(p0)
	return _in(0xC843060B5765DCE7, p0, _rf)
end

--- ASSISTED_MOVEMENT_CLOSE_ROUTE
function Global.AssistedMovementCloseRoute()
	return _in(0xAEBF081FFC0A0E5E)
end

--- ASSISTED_MOVEMENT_FLUSH_ROUTE
function Global.AssistedMovementFlushRoute()
	return _in(0x8621390F0CDCFE1F)
end

--- ASSISTED_MOVEMENT_IS_ROUTE_LOADED
function Global.AssistedMovementIsRouteLoaded(route)
	return _in(0x60F9A4393A21F741, _ts(route), _r)
end

--- ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME
function Global.AssistedMovementOverrideLoadDistanceThisFrame(dist)
	return _in(0x13945951E16EF912, dist)
end

--- ASSISTED_MOVEMENT_REMOVE_ROUTE
function Global.AssistedMovementRemoveRoute(route)
	return _in(0x3548536485DD792B, _ts(route))
end

--- Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
function Global.AssistedMovementRequestRoute(route)
	return _in(0x817268968605947A, _ts(route))
end

--- ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES
function Global.AssistedMovementSetRouteProperties(route, props)
	return _in(0xD5002D78B7162E1B, _ts(route), props)
end

--- ATAN
function Global.Atan(p0)
	return _in(0xA9D1795CD5043663, p0, _rf)
end

--- ATAN2
function Global.Atan2(p0, p1)
	return _in(0x8927CBF9D22261A4, p0, p1, _rf)
end

--- Last param determines if its relative to the Entity
-- @param cam The camera handle.
-- @param entity The entity handle.
-- @param xOffset X-axis offset
-- @param yOffset Y-axis offset
-- @param zOffset Z-axis offset
-- @param isRelative Whether or not the camera will be relative to the entity
function Global.AttachCamToEntity(cam, entity, xOffset, yOffset, zOffset, isRelative)
	return _in(0xFEDB7D269E8C60E3, cam, entity, xOffset, yOffset, zOffset, isRelative)
end

--- This native works with peds only.
-- @param cam The camera handle.
-- @param ped The ped handle.
-- @param boneIndex This is different to boneID, use ['GET_PED_BONE_INDEX'](#\_0x3F428D08BE5AAE31) to get the index from the ID. use the index for attaching to specific bones. `cam` will be attached to the center of `ped` if bone index given doesn't correspond to bone indexes for that entity type.
-- @param xOffset X-axis offset
-- @param yOffset Y-axis offset
-- @param zOffset Z-axis offset
-- @param isRelative Whether or not the camera will be relative to the bone
function Global.AttachCamToPedBone(cam, ped, boneIndex, xOffset, yOffset, zOffset, isRelative)
	return _in(0x61A3DBA14AB7F411, cam, ped, boneIndex, xOffset, yOffset, zOffset, isRelative)
end

--- NativeDB Introduced: v1180
function Global.AttachCamToPedBone_2(cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x149916F50C34A40D, cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
end

--- This native works with vehicles only.
-- Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA).
-- @param cam The camera handle.
-- @param vehicle The vehicle handle.
-- @param relativeRotation Whether or not the camera rotation will relative the vehicle rotation.
-- @param rotX The X rotation.
-- @param rotY The Y rotation.
-- @param rotZ The Z rotation.
-- @param offX The X offset direction.
-- @param offY The Y offset direction.
-- @param offZ The Z offset direction.
-- @param fixedDirection Whether or not the camera direction will relative to the vehicle direction.
function Global.AttachCamToVehicleBone(cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)
	return _in(0x8DB3F12A02CAEF72, cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)
end
Global.N_0x8db3f12a02caef72 = Global.AttachCamToVehicleBone

--- _ATTACH_CONTAINER_TO_HANDLER_FRAME
function Global.AttachContainerToHandlerFrame(handler, container)
	return _in(0x6A98C2ECF57FA5D4, handler, container)
end

--- Attaches entity 1 to entity 2.
function Global.AttachEntitiesToRope(ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, boneName1, boneName2)
	return _in(0x3D95EC8B6D940AC3, ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, _ts(boneName1), _ts(boneName2))
end

--- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE
function Global.AttachEntityBoneToEntityBone(entity1, entity2, entityBone, entityBone2, p4, p5)
	return _in(0x5C48B75732C8456C, entity1, entity2, entityBone, entityBone2, p4, p5)
end
Global.N_0x5c48b75732c8456c = Global.AttachEntityBoneToEntityBone

--- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE_PHYSICALLY
function Global.AttachEntityBoneToEntityBonePhysically(entity1, entity2, entityBone, entityBone2, p4, p5)
	return _in(0xFD1695C5D3B05439, entity1, entity2, entityBone, entityBone2, p4, p5)
end
Global.N_0xfd1695c5d3b05439 = Global.AttachEntityBoneToEntityBonePhysically

--- ATTACH_ENTITY_TO_CARGOBOB
function Global.AttachEntityToCargobob(vehicle, entity, p2, x, y, z)
	return _in(0xA1DD82F3CCF9A01E, vehicle, entity, p2, x, y, z)
end
Global.N_0xa1dd82f3ccf9a01e = Global.AttachEntityToCargobob
Global.AttachEntityToCargobob = Global.AttachEntityToCargobob

--- Attach an entity to the specified entity.
-- @param entity1 Entity to attach.
-- @param entity2 Entity to attach `entity1` with.
-- @param boneIndex This is different to boneID, use ['GET_PED_BONE_INDEX'](#\_0x3F428D08BE5AAE31) to get the index from the ID. use the index for attaching to specific bones. `entity1` will be attached to the center of `entity2` if bone index given doesn't correspond to bone indexes for that entity type.
-- @param xPos X-axis offset from the center of `entity2`.
-- @param yPos Y-axis offset from the center of `entity2`.
-- @param zPos Z-axis offset from the center of `entity2`.
-- @param xRot X-axis rotation.
-- @param yRot Y-axis rotation.
-- @param zRot Z-axis rotation.
-- @param p9 Unknown. Does not seem to have any effect.
-- @param useSoftPinning If set to false attached entity will not detach when fixed.
-- @param collision Controls collision between the two entities (FALSE disables collision).
-- @param isPed Pitch doesnt work when false and roll will only work on negative numbers (only peds)
-- @param rotationOrder The order in which the rotation is applied. See [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- @param syncRot If false it ignores entity rotation.
function Global.AttachEntityToEntity(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, rotationOrder, syncRot)
	return _in(0x6B9BBD38AB0796DF, entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, rotationOrder, syncRot)
end

--- breakForce is the amount of force required to break the bond.
-- p14 - is always 1 in scripts
-- p15 - is 1 or 0 in scripts - unknown what it does
-- p16 - controls collision between the two entities (FALSE disables collision).
-- p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
-- p18 - is always 2 in scripts.
function Global.AttachEntityToEntityPhysically(entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)
	return _in(0xC3675780C92F90F9, entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)
end

--- ATTACH_PORTABLE_PICKUP_TO_PED
function Global.AttachPortablePickupToPed(pickupObject, ped)
	return _in(0x8DC39368BDD57755, pickupObject, ped)
end

--- The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
function Global.AttachRopeToEntity(ropeId, entity, x, y, z, p5)
	return _in(0x4B490A6832559A65, ropeId, entity, x, y, z, p5)
end

--- ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY
function Global.AttachSynchronizedSceneToEntity(sceneID, entity, boneIndex)
	return _in(0x272E4723B56A3B96, sceneID, entity, boneIndex)
end

--- Might be more appropriate in AUDIO?
function Global.AttachTvAudioToEntity(entity)
	return _in(0x845BAD77CC770633, entity)
end

--- ATTACH_VEHICLE_ON_TO_TRAILER
-- @param vehicle The vehicle to attach to the trailer
-- @param trailer The trailer to attach the vehicle to
-- @param offsetX The x offset of the vehicle
-- @param offsetY The y offset of the vehicle
-- @param offsetZ The z offset of the vehicle
-- @param coordsX The x coords of where you want the vehicle placed (must be an offset from the trailer itself)
-- @param coordsY The y coords of where you want the vehicle placed (must be an offset from the trailer itself)
-- @param coordsZ The z coords of where you want the vehicle placed (must be an offset from the trailer itself)
-- @param rotationX The x rotation of where you want the vehicle placed
-- @param rotationY The y rotation of where you want the vehicle placed
-- @param rotationZ The z rotation of where you want the vehicle placed
-- @param disableColls Should actually be a boolean, this will disable the collision between the vehicle you're attaching and the trailer
function Global.AttachVehicleOnToTrailer(vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableColls)
	return _in(0x16B5E274BDE402F8, vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableColls)
end
Global.N_0x16b5e274bde402f8 = Global.AttachVehicleOnToTrailer

--- ATTACH_VEHICLE_TO_CARGOBOB
-- @param cargobob The cargobob
-- @param vehicle The vehicle that will be attached
-- @param vehicleBoneIndex A Vehicle bone the hook/magnet should attach to or -1 for none/default [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA)
-- @param x x hook/magnet Offset
-- @param y y hook/magnet Offset
-- @param z z hook/magnet Offset
function Global.AttachVehicleToCargobob(cargobob, vehicle, vehicleBoneIndex, x, y, z)
	return _in(0x4127F1D84E347769, cargobob, vehicle, vehicleBoneIndex, x, y, z)
end

--- HookOffset defines where the hook is attached. leave at 0 for default attachment.
function Global.AttachVehicleToTowTruck(towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
	return _in(0x29A16F8D621C4508, towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
end

--- ATTACH_VEHICLE_TO_TRAILER
function Global.AttachVehicleToTrailer(vehicle, trailer, radius)
	return _in(0x3C7D42D58F770B54, vehicle, trailer, radius)
end

--- AUDIO_IS_SCRIPTED_MUSIC_PLAYING
function Global.AudioIsScriptedMusicPlaying()
	return _in(0x845FFC3A4FEEFA3E, _r)
end
Global.N_0x3d120012440e6683 = Global.AudioIsScriptedMusicPlaying

--- BAD_SPORT_PLAYER_LEFT_DETECTED
function Global.BadSportPlayerLeftDetected(event, amountReceived)
	return _in(0xEC5E3AF5289DCA81, _i, event, amountReceived, _r)
end
Global.N_0xec5e3af5289dca81 = Global.BadSportPlayerLeftDetected

--- BEGIN_REPLAY_STATS
function Global.BeginReplayStats(p0, p1)
	return _in(0xE0E500246FF73D66, p0, p1)
end

--- Push a function from the Scaleform onto the stack
function Global.BeginScaleformMovieMethod(scaleform, methodName)
	return _in(0xF6E48914C7A8694E, scaleform, _ts(methodName), _r)
end
Global.PushScaleformMovieFunction = Global.BeginScaleformMovieMethod

--- Starts frontend (pause menu) scaleform movie methods.
-- This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
-- Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
-- @param functionName The function name of the scaleform to call.
function Global.BeginScaleformMovieMethodOnFrontend(functionName)
	return _in(0xAB58C27C2E6123C6, _ts(functionName), _r)
end
Global.N_0xab58c27c2e6123c6 = Global.BeginScaleformMovieMethodOnFrontend
Global.PushScaleformMovieFunctionN = Global.BeginScaleformMovieMethodOnFrontend
Global.BeginScaleformMovieMethodN = Global.BeginScaleformMovieMethodOnFrontend

--- Starts frontend (pause menu) scaleform movie methods for header options.
-- Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
-- @param functionName Scaleform function name.
function Global.BeginScaleformMovieMethodOnFrontendHeader(functionName)
	return _in(0xB9449845F73F5E9C, _ts(functionName), _r)
end
Global.N_0xb9449845f73f5e9c = Global.BeginScaleformMovieMethodOnFrontendHeader
Global.BeginScaleformMovieMethodV = Global.BeginScaleformMovieMethodOnFrontendHeader

--- Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
-- Known components:
-- 19 - MP_RANK_BAR
-- 20 - HUD_DIRECTOR_MODE
-- This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
function Global.BeginScaleformScriptHudMovieMethod(hudComponent, methodName)
	return _in(0x98C494FD5BDFBFD5, hudComponent, _ts(methodName), _r)
end
Global.PushScaleformMovieFunctionFromHudComponent = Global.BeginScaleformScriptHudMovieMethod
Global.BeginScaleformMovieMethodHudComponent = Global.BeginScaleformScriptHudMovieMethod

--- BEGIN_SRL
function Global.BeginSrl()
	return _in(0x9BADDC94EF83B823)
end

--- BEGIN_TAKE_HIGH_QUALITY_PHOTO
function Global.BeginTakeHighQualityPhoto()
	return _in(0xA67C35C56EB1BD9D, _r)
end
Global.N_0xa67c35c56eb1bd9d = Global.BeginTakeHighQualityPhoto

--- BEGIN_TAKE_MISSION_CREATOR_PHOTO
function Global.BeginTakeMissionCreatorPhoto()
	return _in(0x1DD2139A9A20DCE8, _r)
end
Global.N_0x1dd2139a9a20dce8 = Global.BeginTakeMissionCreatorPhoto

--- Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
-- BEGIN_TEXT_COMMAND_PRINT
-- e.g
-- void StartLoadingMessage(char *text, int spinnerType = 3)
-- {
-- _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SHOW_LOADING_PROMPT(spinnerType);
-- }
-- /*OR*/
-- void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
-- {
-- _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SHOW_LOADING_PROMPT(spinnerType);
-- WAIT(timeMs);
-- _REMOVE_LOADING_PROMPT();
-- }
-- These are some localized strings used in the loading spinner.
-- "PM_WAIT"                   = Please Wait
-- "CELEB_WPLYRS"              = Waiting For Players.
-- "CELL_SPINNER2"             = Scanning storage.
-- "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
-- "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
-- "FM_COR_AUTOD"                        = Just spinner no text
-- "FM_IHELP_WAT2"                        = Waiting for other players
-- "FM_JIP_WAITO"                            = Game options are being set
-- "FMMC_DOWNLOAD"                    = Downloading
-- "FMMC_PLYLOAD"                         = Loading
-- "FMMC_STARTTRAN"                    = Launching session
-- "HUD_QUITTING"                           =  Quiting session
-- "KILL_STRIP_IDM"                         = Waiting for to accept
-- "MP_SPINLOADING"                      = Loading
function Global.BeginTextCommandBusyspinnerOn(string)
	return _in(0xABA17D7CE615ADBF, _ts(string))
end
Global.N_0xaba17d7ce615adbf = Global.BeginTextCommandBusyspinnerOn
Global.SetLoadingPromptTextEntry = Global.BeginTextCommandBusyspinnerOn
Global.BeginTextCommandBusyString = Global.BeginTextCommandBusyspinnerOn

--- clears a print text command with this text
function Global.BeginTextCommandClearPrint(text)
	return _in(0xE124FA80A759019C, _ts(text))
end
Global.N_0xe124fa80a759019c = Global.BeginTextCommandClearPrint

--- Used to be known as _SET_TEXT_COMPONENT_FORMAT
function Global.BeginTextCommandDisplayHelp(inputType)
	return _in(0x8509B634FBE7DA11, _ts(inputType))
end
Global.SetTextComponentFormat = Global.BeginTextCommandDisplayHelp

--- The following were found in the decompiled script files:
-- STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
-- ESDOLLA
-- ESMINDOLLA - cash (negative)
-- Used to be known as _SET_TEXT_ENTRY
function Global.BeginTextCommandDisplayText(text)
	return _in(0x25FBB336DF1804CB, _ts(text))
end
Global.SetTextEntry = Global.BeginTextCommandDisplayText

--- BEGIN_TEXT_COMMAND_*
-- Example:
-- _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
-- ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
-- float width = _END_TEXT_COMMAND_GET_WIDTH(1);
function Global.BeginTextCommandGetWidth(text)
	return _in(0x54CE8AC98E120CAB, _ts(text))
end
Global.SetTextEntryForWidth = Global.BeginTextCommandGetWidth
Global.BeginTextCommandWidth = Global.BeginTextCommandGetWidth

--- nothin doin.
-- BOOL Message(char* text)
-- {
-- BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
-- }
function Global.BeginTextCommandIsMessageDisplayed(text)
	return _in(0x853648FD1063A213, _ts(text))
end
Global.N_0x853648fd1063a213 = Global.BeginTextCommandIsMessageDisplayed

--- BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED
-- @param labelName Text entry name. This can be created using [`AddTextEntry`](#\_0x32CA01C3).
function Global.BeginTextCommandIsThisHelpMessageBeingDisplayed(labelName)
	return _in(0x0A24DA3A41B718F5, _ts(labelName))
end
Global.N_0x0a24da3a41b718f5 = Global.BeginTextCommandIsThisHelpMessageBeingDisplayed

--- get's line count
-- int GetLineCount(char *text, float x, float y)
-- {
-- _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
-- }
function Global.BeginTextCommandLineCount(entry)
	return _in(0x521FB041D93DD0E4, _ts(entry))
end
Global.SetTextGxtEntry = Global.BeginTextCommandLineCount

--- _BEGIN_TEXT_COMMAND_OBJECTIVE
function Global.BeginTextCommandObjective(p0)
	return _in(0x23D69E0465570028, _ts(p0))
end
Global.N_0x23d69e0465570028 = Global.BeginTextCommandObjective

--- BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT
function Global.BeginTextCommandOverrideButtonText(gxtEntry)
	return _in(0x8F9EE5687F8EECCD, _ts(gxtEntry))
end
Global.N_0x8f9ee5687f8eeccd = Global.BeginTextCommandOverrideButtonText
Global.BeginTextCommandTimer = Global.BeginTextCommandOverrideButtonText

--- Used to be known as _SET_TEXT_ENTRY_2
-- void ShowSubtitle(char *text)
-- {
-- BEGIN_TEXT_COMMAND_PRINT("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- END_TEXT_COMMAND_PRINT(2000, 1);
-- }
function Global.BeginTextCommandPrint(GxtEntry)
	return _in(0xB87A37EEB7FAA67D, _ts(GxtEntry))
end
Global.SetTextEntry_2 = Global.BeginTextCommandPrint

--- Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
-- Examples:
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
-- HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
-- HUD::_ADD_TEXT_COMPONENT_STRING(a_2);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
-- HUD::_0x17299B63C7683A2B(v_3);
-- HUD::_0x17299B63C7683A2B(v_4);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
-- HUD::_0x17299B63C7683A2B(v_3);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- @param textLabel a GXT text label
function Global.BeginTextCommandScaleformString(textLabel)
	return _in(0x80338406F3475E55, _ts(textLabel))
end
Global.BeginTextComponent = Global.BeginTextCommandScaleformString

--- Starts a text command to change the name of a blip displayed in the pause menu.
-- This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xBC38B49BCB83BC9B), once adding all required text components.
-- @param textLabel The text label to set.
function Global.BeginTextCommandSetBlipName(textLabel)
	return _in(0xF9113A30DE5C6670, _ts(textLabel))
end

--- Declares the entry type of a notification, for example "STRING".
-- int ShowNotification(char \*text)
-- {
-- BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return \_DRAW_NOTIFICATION(1, 1);
-- }
-- @param text The text label to use.
function Global.BeginTextCommandThefeedPost(text)
	return _in(0x202709F4C58A0424, _ts(text))
end
Global.SetNotificationTextEntry = Global.BeginTextCommandThefeedPost

--- Deletes the given context from the background scripts context map.
-- NativeDB Introduced: v323
function Global.BgEndContext(contextName)
	return _in(0xDC2BACD920D0A0DD, _ts(contextName))
end

--- Hashed version of 0xDC2BACD920D0A0DD.
-- NativeDB Introduced: v323
function Global.BgEndContextHash(contextHash)
	return _in(0x107E5CC7CA942BC1, _ch(contextHash))
end

--- Inserts the given context into the background scripts context map.
-- NativeDB Introduced: v323
function Global.BgStartContext(contextName)
	return _in(0x9D5A25BADB742ACD, _ts(contextName))
end

--- Hashed version of 0x9D5A25BADB742ACD.
-- NativeDB Introduced: v323
function Global.BgStartContextHash(contextHash)
	return _in(0x75B18E49607874C7, _ch(contextHash))
end

--- Plays a siren blip from the vehicle when you double press the horn key.
-- This only works on vehicles with sirens.
function Global.BlipSiren(vehicle)
	return _in(0x1B9025BDA76822B6, vehicle)
end

--- Blocks *all* speech playing on the given ped, including speech triggered by natives such as [PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE](#\_0x3523634255FC3318)
-- The flag itself is not synced, it must be called on each machine that wishes to suppress the speech.
-- The `SuppressOutgoingNetworkSpeech` flag can be set to `false` if you want speech triggered locally through `PLAY_PED_AMBIENT_SPEECH_*` related native calls to still be audible on remote machines, even though it was blocked on the local one.
-- @param suppressOutgoingNetworkSpeech Defaults to `true`.
function Global.BlockAllSpeechFromPed(ped, shouldBlock, suppressOutgoingNetworkSpeech)
	return _in(0xF8AD2EED7C47E8FE, ped, shouldBlock, suppressOutgoingNetworkSpeech)
end
Global.N_0xf8ad2eed7c47e8fe = Global.BlockAllSpeechFromPed

--- BLOCK_DEATH_JINGLE
-- @param blocked Sets if the death jingle can play when a player dies or not
function Global.BlockDeathJingle(blocked)
	return _in(0xF154B8D1775B2DEC, blocked)
end
Global.N_0xf154b8d1775b2dec = Global.BlockDeathJingle

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
-- This is limited to 4 blocked events at a time.
function Global.BlockDecisionMakerEvent(name, eventType)
	return _in(0xE42FCDFD0E4196F7, _ch(name), eventType)
end

--- BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION
function Global.BlockDispatchServiceResourceCreation(dispatchService, toggle)
	return _in(0x9B2BD3773123EA2F, dispatchService, toggle)
end
Global.N_0x9b2bd3773123ea2f = Global.BlockDispatchServiceResourceCreation

--- _BLOCK_PED_DEAD_BODY_SHOCKING_EVENTS
function Global.BlockPedDeadBodyShockingEvents(ped, toggle)
	return _in(0xE43A13C9E4CCCBCF, ped, toggle)
end
Global.N_0xe43a13c9e4cccbcf = Global.BlockPedDeadBodyShockingEvents

--- ```cpp
-- enum eAudContextBlockTarget {
-- AUD_CONTEXT_BLOCK_PLAYER = 0,
-- AUD_CONTEXT_BLOCK_NPCS = 1,
-- AUD_CONTEXT_BLOCK_BUDDYS = 2,
-- AUD_CONTEXT_BLOCK_EVERYONE = 3,
-- AUD_CONTEXT_BLOCK_TARGETS_TOTAL
-- }
-- ```
-- Stop a certain group of peds from using a certain group of speech contexts.
-- Note that the block will be automatically removed when the calling script finishes
-- @param groupName the name of the context group to be blocked
-- @param contextBlockTarget the group of peds that should be used (refer to eAudContextBlockTarget)
function Global.BlockSpeechContextGroup(groupName, contextBlockTarget)
	return _in(0xA8A7D434AFB4B97B, _ts(groupName), contextBlockTarget)
end
Global.N_0xa8a7d434afb4b97b = Global.BlockSpeechContextGroup

--- BREAK_ENTITY_GLASS
function Global.BreakEntityGlass(entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0x2E648D16F6E308F3, entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- BREAK_OBJECT_FRAGMENT_CHILD
function Global.BreakObjectFragmentChild(p0, p1, p2)
	return _in(0xE7E4C198B0185900, p0, p1, p2)
end
Global.N_0xe7e4c198b0185900 = Global.BreakObjectFragmentChild

--- Break off vehicle wheel by index. The `leaveDebrisTrail` flag requires `putOnFire` to be true.
-- @param vehicle The vehicle handle.
-- @param wheelIndex The wheel index.
-- @param leaveDebrisTrail Start "veh_debris_trail" ptfx.
-- @param deleteWheel True to delete wheel, otherwise detach.
-- @param unknownFlag Unknown flag.
-- @param putOnFire Set wheel on fire once detached.
function Global.BreakOffVehicleWheel(vehicle, wheelIndex, leaveDebrisTrail, deleteWheel, unknownFlag, putOnFire)
	return _in(0xa274cadb, vehicle, wheelIndex, leaveDebrisTrail, deleteWheel, unknownFlag, putOnFire)
end

--- This native makes the vehicle stop immediately, as it happens when we enter a multiplayer garage.
-- @param vehicle The vehicle to stop.
-- @param distance The distance from the initial coords at which the vehicle should come to rest.
-- @param duration The length of time in seconds to hold the car at rest after stopping.
-- @param bControlVerticalVelocity `false` by default which allows gravity to act normally in the z direction. Enable this option to halt the vehicle's vertical velocity as well.
function Global.BringVehicleToHalt(vehicle, distance, duration, bControlVerticalVelocity)
	return _in(0x260BE8F09E326A20, vehicle, distance, duration, bControlVerticalVelocity)
end
Global.N_0x260be8f09e326a20 = Global.BringVehicleToHalt
Global.SetVehicleHalt = Global.BringVehicleToHalt

--- BUSYSPINNER_IS_DISPLAYING
function Global.BusyspinnerIsDisplaying()
	return _in(0xB2A592B04648A9CB, _r)
end
Global.N_0xb2a592b04648a9cb = Global.BusyspinnerIsDisplaying

--- BUSYSPINNER_IS_ON
function Global.BusyspinnerIsOn()
	return _in(0xD422FCC5F239A915, _r)
end
Global.N_0xd422fcc5f239a915 = Global.BusyspinnerIsOn
Global.IsLoadingPromptBeingDisplayed = Global.BusyspinnerIsOn

--- Removes the loading prompt at the bottom right of the screen.
function Global.BusyspinnerOff()
	return _in(0x10D373323E5B9C0D)
end
Global.N_0x10d373323e5b9c0d = Global.BusyspinnerOff
Global.RemoveLoadingPrompt = Global.BusyspinnerOff

--- Calculates the travel distance between a set of points.
-- Doesn't seem to correlate with distance on gps sometimes.
-- This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
function Global.CalculateTravelDistanceBetweenPoints(x1, y1, z1, x2, y2, z2)
	return _in(0xADD95C7005C4A197, x1, y1, z1, x2, y2, z2, _rf)
end

--- This is similar to the PushScaleformMovieFunction natives, except it calls in the `TIMELINE` of a minimap overlay.
-- @param miniMap The minimap overlay ID.
-- @param fnName A function in the overlay's TIMELINE.
function Global.CallMinimapScaleformFunction(miniMap, fnName)
	return _in(0x4c89c0ed, miniMap, _ts(fnName), _r)
end

--- Calls the Scaleform function.
function Global.CallScaleformMovieMethod(scaleform, method)
	return _in(0xFBD96D87AC96D533, scaleform, _ts(method))
end
Global.CallScaleformMovieFunctionVoid = Global.CallScaleformMovieMethod

--- Calls the Scaleform function and passes the parameters as floats.
-- The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
function Global.CallScaleformMovieMethodWithNumber(scaleform, methodName, param1, param2, param3, param4, param5)
	return _in(0xD0837058AE2E4BEE, scaleform, _ts(methodName), param1, param2, param3, param4, param5)
end
Global.CallScaleformMovieFunctionFloatParams = Global.CallScaleformMovieMethodWithNumber

--- Calls the Scaleform function and passes both float and string parameters (in their respective order).
-- The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
-- NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
-- Examples:
-- // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
-- GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);
-- // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
-- GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);
function Global.CallScaleformMovieMethodWithNumberAndString(scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5)
	return _in(0xEF662D8D57E290B1, scaleform, _ts(methodName), floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, _ts(stringParam1), _ts(stringParam2), _ts(stringParam3), _ts(stringParam4), _ts(stringParam5))
end
Global.CallScaleformMovieFunctionMixedParams = Global.CallScaleformMovieMethodWithNumberAndString

--- Calls the Scaleform function and passes the parameters as strings.
-- The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
function Global.CallScaleformMovieMethodWithString(scaleform, methodName, param1, param2, param3, param4, param5)
	return _in(0x51BC1ED3CC44E8F7, scaleform, _ts(methodName), _ts(param1), _ts(param2), _ts(param3), _ts(param4), _ts(param5))
end
Global.CallScaleformMovieFunctionStringParams = Global.CallScaleformMovieMethodWithString

--- CAN_ANCHOR_BOAT_HERE
function Global.CanAnchorBoatHere(vehicle)
	return _in(0x26C10ECBDA5D043B, vehicle, _r)
end
Global.N_0x2467a2d807d37ca3 = Global.CanAnchorBoatHere
Global.GetBoatAnchor = Global.CanAnchorBoatHere
Global.CanBoatBeAnchored = Global.CanAnchorBoatHere

--- Differs from 0x26C10ECBDA5D043B in that 0x140EFCC10 (1604 retail) is called with a2 = true.
-- NativeDB Introduced: v678
function Global.CanAnchorBoatHere_2(vehicle)
	return _in(0x24F4121D07579880, vehicle, _r)
end
Global.CanBoatBeAnchored_2 = Global.CanAnchorBoatHere_2

--- Determines whether the specified Cargobob can pick up a given entity.
-- @param cargobob The Cargobob helicopter to be checked.
-- @param entity The entity to be checked for pick-up.
-- @return Returns `true` if the Cargobob can pick up the specified entity, `false` otherwise.
function Global.CanCargobobPickUpEntity(cargobob, entity)
	return _in(0x2C1D8B3B19E517CC, cargobob, entity, _r)
end
Global.N_0x2c1d8b3b19e517cc = Global.CanCargobobPickUpEntity

--- CAN_CREATE_RANDOM_BIKE_RIDER
function Global.CanCreateRandomBikeRider()
	return _in(0xEACEEDA81751915C, _r)
end

--- CAN_CREATE_RANDOM_COPS
function Global.CanCreateRandomCops()
	return _in(0x5EE2CAFF7F17770D, _r)
end

--- CAN_CREATE_RANDOM_DRIVER
function Global.CanCreateRandomDriver()
	return _in(0xB8EB95E5B4E56978, _r)
end

--- CAN_CREATE_RANDOM_PED
function Global.CanCreateRandomPed(unk)
	return _in(0x3E8349C08E4B82E4, unk, _r)
end

--- CAN_KNOCK_PED_OFF_VEHICLE
function Global.CanKnockPedOffVehicle(ped)
	return _in(0x51AC07A44D4F5B8A, ped, _r)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int amount
-- NativeDB Added Parameter 4: int* p3
function Global.CanPayGoon()
	return _in(0x9777734DAD16992F, _r)
end
Global.N_0x9777734dad16992f = Global.CanPayGoon

--- CAN_PED_HEAR_PLAYER
function Global.CanPedHearPlayer(player, ped)
	return _in(0xF297383AA91DCA29, player, ped, _r)
end

--- CAN_PED_IN_COMBAT_SEE_TARGET
function Global.CanPedInCombatSeeTarget(ped, target)
	return _in(0xEAD42DE3610D0721, ped, target, _r)
end

--- Prevents the ped from going limp.
-- [Example: Can prevent peds from falling when standing on moving vehicles.]
function Global.CanPedRagdoll(ped)
	return _in(0x128F79EDCECE4FD5, ped, _r)
end

--- CAN_PED_SEE_HATED_PED
function Global.CanPedSeeHatedPed(ped1, ped2)
	return _in(0x6CD5A433374D4CFB, ped1, ped2, _r)
end
Global.N_0x6cd5a433374d4cfb = Global.CanPedSeeHatedPed
Global.CanPedSeePed = Global.CanPedSeeHatedPed

--- This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
-- I can confirm the above. This function is hard-coded to always return 1.
function Global.CanPhoneBeSeenOnScreen()
	return _in(0xC4E2813898C97A4B, _r)
end

--- CAN_PLAYER_START_MISSION
function Global.CanPlayerStartMission(player)
	return _in(0xDE7465A27D403C06, player, _r)
end

--- CAN_REGISTER_MISSION_ENTITIES
function Global.CanRegisterMissionEntities(ped_amt, vehicle_amt, object_amt, pickup_amt)
	return _in(0x69778E7564BADE6D, ped_amt, vehicle_amt, object_amt, pickup_amt, _r)
end

--- CAN_REGISTER_MISSION_OBJECTS
function Global.CanRegisterMissionObjects(amount)
	return _in(0x800DD4721A8B008B, amount, _r)
end

--- CAN_REGISTER_MISSION_PEDS
function Global.CanRegisterMissionPeds(amount)
	return _in(0xBCBF4FEF9FA5D781, amount, _r)
end

--- _CAN_REGISTER_MISSION_PICKUPS
function Global.CanRegisterMissionPickups(amount)
	return _in(0x0A49D1CB6E34AF72, amount, _r)
end

--- CAN_REGISTER_MISSION_VEHICLES
function Global.CanRegisterMissionVehicles(amount)
	return _in(0x7277F1F2E085EE74, amount, _r)
end

--- Returns when it is safe to start applying changes to cutscene entities.
-- Should always be used for applying components.
-- See [`SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED`](#\_0x2A56C06EBEF2B0D9) and [`REGISTER_ENTITY_FOR_CUTSCENE`](#\_0xE40C1C56DF95C2E8) for an example.
-- This will be true before the cutscene is considered loaded
-- @return Whether you can request assets for cutscene entities, like components.
function Global.CanRequestAssetsForCutsceneEntity()
	return _in(0xB56BBBCC2955D9CB, _r)
end
Global.N_0xb56bbbcc2955d9cb = Global.CanRequestAssetsForCutsceneEntity

--- modelHash (p1) was always 0 in R* scripts
function Global.CanSetEnterStateForRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0x645D0B458D8E17B5, _ts(cutsceneEntName), _ch(modelHash), _r)
end

--- Whether or not it is safe to run functions on the camera,
-- as the camera is now no longer being used by the cutscene.
-- @param p0 Mostly false
function Global.CanSetExitStateForCamera(p0)
	return _in(0xB2CBCD0930DFB420, p0, _r)
end

--- Returns if the script can begin interacting with the registered entity. Primarly used for lead-outs of cutscenes.
-- Returns on frame after cutscene ends, so you cannot get is while using IsCutsceneActive()
-- Whether it is safe to start doing scripted actions on the entity, like simulating walking out of a cutscene.
-- @param cutsceneEntName i.e Michael
-- @param modelHash Can be 0
-- @return Whether or not it is safe to begin interacting with the entity
function Global.CanSetExitStateForRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0x4C6A6451C79E4662, _ts(cutsceneEntName), _ch(modelHash), _r)
end

--- CAN_SHUFFLE_SEAT
-- @param vehicle The vehicle to check.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.CanShuffleSeat(vehicle, seatIndex)
	return _in(0x30785D90C956BF35, vehicle, seatIndex, _r)
end

--- this returns if you can use the weapon while using a parachute
function Global.CanUseWeaponOnParachute(weaponHash)
	return _in(0xBC7BE5ABC0879F74, _ch(weaponHash), _r)
end

--- CAN_VEHICLE_RECEIVE_CB_RADIO
-- @return Returns true if the vehicle can currently receive CB radio (ie. it has a capable radio and is in range of a transmitter)
function Global.CanVehicleReceiveCbRadio(vehicle)
	return _in(0x032A116663A4D5AC, vehicle, _r)
end
Global.IsVehicleRadioLoud = Global.CanVehicleReceiveCbRadio

--- CANCEL_ALL_POLICE_REPORTS
function Global.CancelAllPoliceReports()
	return _in(0xB4F90FAF7670B16F)
end
Global.N_0xb4f90faf7670b16f = Global.CancelAllPoliceReports
Global.DisablePoliceReports = Global.CancelAllPoliceReports
Global.CancelCurrentPoliceReport = Global.CancelAllPoliceReports

--- Cancels the currently executing event.
function Global.CancelEvent()
	return _in(0xfa29d35d)
end

--- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
-- @param eventName the name of the event to cancel
-- @return True of the event was cancelled, false otherwise.
function Global.CancelMusicEvent(eventName)
	return _in(0x5B17A90291133DA5, _ts(eventName), _r)
end

--- DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
-- Use _FORCE_CLOSE_TEXT_INPUT_BOX instead.
-- CANCEL_*
function Global.CancelOnscreenKeyboard()
	return _in(0x58A39BE597CE99CD)
end
Global.N_0x58a39be597ce99cd = Global.CancelOnscreenKeyboard

--- CANCEL_STUNT_JUMP
function Global.CancelStuntJump()
	return _in(0xE6B7B0ACD4E4B75E)
end

--- Does something similar to INTERIOR::DISABLE_INTERIOR
function Global.CapInterior(interiorID, toggle)
	return _in(0xD9175F941610DB54, interiorID, toggle)
end

--- _CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE
function Global.CascadeShadowsClearShadowSampleType()
	return _in(0x27CB772218215325)
end
Global.N_0x27cb772218215325 = Global.CascadeShadowsClearShadowSampleType
Global.CascadeshadowsResetType = Global.CascadeShadowsClearShadowSampleType

--- When this is set to ON, shadows only draw as you get nearer.
-- When OFF, they draw from a further distance.
function Global.CascadeShadowsEnableEntityTracker(toggle)
	return _in(0x80ECBC0C856D3B0B, toggle)
end
Global.SetFarShadowsSuppressed = Global.CascadeShadowsEnableEntityTracker

--- CASCADE_SHADOWS_INIT_SESSION
function Global.CascadeShadowsInitSession()
	return _in(0x03FC694AE06C5A20)
end
Global.N_0x03fc694ae06c5a20 = Global.CascadeShadowsInitSession

--- CASCADE_SHADOWS_SET_AIRCRAFT_MODE
function Global.CascadeShadowsSetAircraftMode(p0)
	return _in(0x6DDBF9DFFC4AC080, p0)
end
Global.N_0x6ddbf9dffc4ac080 = Global.CascadeShadowsSetAircraftMode

--- CASCADE_SHADOWS_SET_CASCADE_BOUNDS
function Global.CascadeShadowsSetCascadeBounds(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xD2936CAB8B58FCBD, p0, p1, p2, p3, p4, p5, p6, p7)
end
Global.N_0xd2936cab8b58fcbd = Global.CascadeShadowsSetCascadeBounds

--- CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE
function Global.CascadeShadowsSetCascadeBoundsScale(p0)
	return _in(0x5F0F3F56635809EF, p0)
end
Global.N_0x5f0f3f56635809ef = Global.CascadeShadowsSetCascadeBoundsScale

--- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE
function Global.CascadeShadowsSetDynamicDepthMode(p0)
	return _in(0xD39D13C9FEBF0511, p0)
end
Global.N_0xd39d13c9febf0511 = Global.CascadeShadowsSetDynamicDepthMode

--- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE
function Global.CascadeShadowsSetDynamicDepthValue(p0)
	return _in(0x02AC28F3A01FA04A, p0)
end
Global.N_0x02ac28f3a01fa04a = Global.CascadeShadowsSetDynamicDepthValue

--- CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE
function Global.CascadeShadowsSetEntityTrackerScale(p0)
	return _in(0x5E9DAF5A20F15908, p0)
end
Global.N_0x5e9daf5a20f15908 = Global.CascadeShadowsSetEntityTrackerScale

--- Possible values:
-- "CSM_ST_POINT"
-- "CSM_ST_LINEAR"
-- "CSM_ST_TWOTAP"
-- "CSM_ST_BOX3x3"
-- "CSM_ST_BOX4x4"
-- "CSM_ST_DITHER2_LINEAR"
-- "CSM_ST_CUBIC"
-- "CSM_ST_DITHER4"
-- "CSM_ST_DITHER16"
-- "CSM_ST_SOFT16"
-- "CSM_ST_DITHER16_RPDB"
-- "CSM_ST_POISSON16_RPDB_GNORM"
-- "CSM_ST_HIGHRES_BOX4x4"
-- "CSM_ST_CLOUDS_SIMPLE"
-- "CSM_ST_CLOUDS_LINEAR"
-- "CSM_ST_CLOUDS_TWOTAP"
-- "CSM_ST_CLOUDS_BOX3x3"
-- "CSM_ST_CLOUDS_BOX4x4"
-- "CSM_ST_CLOUDS_DITHER2_LINEAR"
-- "CSM_ST_CLOUDS_SOFT16"
-- "CSM_ST_CLOUDS_DITHER16_RPDB"
-- "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
function Global.CascadeShadowsSetShadowSampleType(type)
	return _in(0xB11D94BC55F41932, _ts(type))
end
Global.N_0xb11d94bc55f41932 = Global.CascadeShadowsSetShadowSampleType
Global.CascadeshadowsSetType = Global.CascadeShadowsSetShadowSampleType

--- I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
function Global.Ceil(value)
	return _in(0x11E019C8F43ACC8A, value, _ri)
end

--- Activates the cellphone camera. Make sure you have a mobile phone created with [`CREATE_MOBILE_PHONE`](#\_0xA4E8E696C532FBC7) or else the camera will not work.
-- @param active Toggle whether the camera should be active.
-- @param bGoFirstPerson Unused parameter.
function Global.CellCamActivate(active, bGoFirstPerson)
	return _in(0xFDE8F069C542D126, active, bGoFirstPerson)
end

--- Toggles the selfie mode on the cellphone camera. Only visible when the cell phone camera is active.
-- @param toggle True to activate and false to deactivate the selfie mode.
function Global.CellCamActivateSelfieMode(toggle)
	return _in(0x015C49A93E3E086E, toggle)
end
Global.N_0x015c49a93e3e086e = Global.CellCamActivateSelfieMode
Global.DisablePhoneThisFrame = Global.CellCamActivateSelfieMode
Global.CellCamDisableThisFrame = Global.CellCamActivateSelfieMode

--- CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK
function Global.CellCamIsCharVisibleNoFaceCheck(entity)
	return _in(0x439E9BC95B7E7FBE, entity, _r)
end

--- For move the finger of player, the value of int goes 1 at 5.
function Global.CellCamMoveFinger(direction)
	return _in(0x95C9E72F3D7DEC9B, direction)
end
Global.MoveFinger = Global.CellCamMoveFinger

--- _CELL_CAM_SET_DISTANCE
-- @param p0 Value from -1.0 to 1.0
function Global.CellCamSetDistance(p0)
	return _in(0x53F4892D18EC90A4, p0)
end
Global.N_0x53f4892d18ec90a4 = Global.CellCamSetDistance

--- _CELL_CAM_SET_HEAD_HEIGHT
-- @param p0 Value from -1.0 to 0.0
function Global.CellCamSetHeadHeight(p0)
	return _in(0x466DA42C89865553, p0)
end
Global.N_0x466da42c89865553 = Global.CellCamSetHeadHeight

--- _CELL_CAM_SET_HEAD_PITCH
-- @param p0 Value from -1.0 to 1.0
function Global.CellCamSetHeadPitch(p0)
	return _in(0xD6ADE981781FCA09, p0)
end
Global.N_0xd6ade981781fca09 = Global.CellCamSetHeadPitch

--- _CELL_CAM_SET_HEAD_ROLL
-- @param p0 Value from -1.0 to 1.0
function Global.CellCamSetHeadRoll(p0)
	return _in(0xF1E22DC13F5EEBAD, p0)
end
Global.N_0xf1e22dc13f5eebad = Global.CellCamSetHeadRoll

--- _CELL_CAM_SET_HORIZONTAL_OFFSET
-- @param p0 Value from -1.0 to 1.0
function Global.CellCamSetHorizontalOffset(p0)
	return _in(0x1B0B4AEED5B9B41C, p0)
end
Global.N_0x1b0b4aeed5b9b41c = Global.CellCamSetHorizontalOffset

--- if the bool "Toggle" is "true" so the phone is lean.
-- if the bool "Toggle" is "false" so the phone is not lean.
function Global.CellCamSetLean(toggle)
	return _in(0x44E44169EF70138E, toggle)
end
Global.SetPhoneLean = Global.CellCamSetLean

--- _CELL_CAM_SET_ROLL
-- @param p0 Value from -1.0 to 1.0
function Global.CellCamSetRoll(p0)
	return _in(0x15E69E2802C24B8D, p0)
end
Global.N_0x15e69e2802c24b8d = Global.CellCamSetRoll

--- _CELL_CAM_SET_VERTICAL_OFFSET
-- @param p0 Value from 0.0 to 2.0
function Global.CellCamSetVerticalOffset(p0)
	return _in(0x3117D84EFA60F77B, p0)
end
Global.N_0x3117d84efa60f77b = Global.CellCamSetVerticalOffset

--- Displays cash change notifications on HUD.
function Global.ChangeFakeMpCash(cash, bank)
	return _in(0x0772DF77852C2E30, cash, bank)
end
Global.SetSingleplayerHudCash = Global.ChangeFakeMpCash
Global.SetPlayerCashChange = Global.ChangeFakeMpCash

--- CHANGE_PLAYER_PED
function Global.ChangePlayerPed(player, ped, b2, resetDamage)
	return _in(0x048189FAC643DEEE, player, ped, b2, resetDamage)
end

--- minimum: Degrees between -90f and 90f.
-- maximum: Degrees between -90f and 90f.
-- Clamps the gameplay camera's current pitch.
-- Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
function Global.ClampGameplayCamPitch(minimum, maximum)
	return _in(0xA516C198B7DCA1E1, minimum, maximum)
end

--- minimum: Degrees between -180f and 180f.
-- maximum: Degrees between -180f and 180f.
-- Clamps the gameplay camera's current yaw.
-- Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
function Global.ClampGameplayCamYaw(minimum, maximum)
	return _in(0x8F993D26E0CA5E8E, minimum, maximum)
end

--- CLEAN_ITEMSET
function Global.CleanItemset(p0)
	return _in(0x41BC0D722FC04221, p0)
end

--- _CLEANUP_ASYNC_INSTALL
function Global.CleanupAsyncInstall()
	return _in(0xC79AE21974B01FB2)
end
Global.N_0xc79ae21974b01fb2 = Global.CleanupAsyncInstall

--- CLEAR_ADDITIONAL_TEXT
function Global.ClearAdditionalText(p0, p1)
	return _in(0x2A179DF17CCF04CD, p0, p1)
end

--- Clears all active blip routes that have been set with [`SetBlipRoute`](#\_0x3E160C90).
function Global.ClearAllBlipRoutes()
	return _in(0xD12882D3FF82BF11)
end
Global.N_0xd12882d3ff82bf11 = Global.ClearAllBlipRoutes

--- CLEAR_ALL_BROKEN_GLASS
function Global.ClearAllBrokenGlass()
	return _in(0xB32209EFFDC04913)
end

--- CLEAR_ALL_HELP_MESSAGES
function Global.ClearAllHelpMessages()
	return _in(0x6178F68A87A4D3A0)
end

--- CLEAR_ALL_PED_PROPS
-- @param ped The ped handle.
function Global.ClearAllPedProps(ped)
	return _in(0xCD8A7537A9B52F06, ped)
end

--- CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE
function Global.ClearAllPedVehicleForcedSeatUsage(ped)
	return _in(0xE6CA85E7259CE16B, ped)
end
Global.N_0xe6ca85e7259ce16b = Global.ClearAllPedVehicleForcedSeatUsage

--- Resets the list of ambients zones enabled/disabled status to its value before it was modified by this script.
-- Default behaviour is that any state change only gets applied once the player leaves the zone.
-- @param zoneListName The zone name to clear
-- @param forceUpdate Whether ot not to force a zone to become disabled even if its currently active
function Global.ClearAmbientZoneListState(zoneListName, forceUpdate)
	return _in(0x120C48C614909FA4, _ts(zoneListName), forceUpdate)
end

--- Resets the ambient zone enabled/disabled status to its value before it was modified by this script
-- Default behaviour is that any state change only gets applied once the player leaves the zone.
-- @param zoneName the zone name to clear
-- @param forceUpdate Whether ot not to force a zone to become disabled even if its currently active
function Global.ClearAmbientZoneState(zoneName, forceUpdate)
	return _in(0x218DD44AAAC964FF, _ts(zoneName), forceUpdate)
end

--- NativeDB Added Parameter 13: Any p12
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.ClearAngledAreaOfVehicles(x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11)
	return _in(0x11DB3500F042A8AA, x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11)
end

--- Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
function Global.ClearArea(X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
	return _in(0xA56F01F3765B93A0, X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
end

--- MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
function Global.ClearAreaLeaveVehicleHealth(x, y, z, radius, p4, p5, p6, p7)
	return _in(0x957838AAF91BD12D, x, y, z, radius, p4, p5, p6, p7)
end
Global.N_0x957838aaf91bd12d = Global.ClearAreaLeaveVehicleHealth
Global.ClearAreaOfEverything = Global.ClearAreaLeaveVehicleHealth

--- Clears an area of cops at the given coordinates and radius.
-- @param x The x coordinate of where to clear cops.
-- @param y The y coordinate of where to clear cops.
-- @param z The z coordinate of where to clear cops.
-- @param radius The area radius to clear cops.
-- @param createNetEvent specifies whether a `CClearAreaEvent` event of should be created for online use.
function Global.ClearAreaOfCops(x, y, z, radius, createNetEvent)
	return _in(0x04F8FC8FCF58F88D, x, y, z, radius, createNetEvent)
end

--- I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
function Global.ClearAreaOfObjects(x, y, z, radius, flags)
	return _in(0xDD9B9B385AAC7F5B, x, y, z, radius, flags)
end

--- Clears an area of peds at the given coordinates and radius.
-- @param x The x coordinate of where to clear peds.
-- @param y The y coordinate of where to clear peds.
-- @param z The z coordinate of where to clear peds.
-- @param radius The area radius to clear peds.
-- @param createNetEvent specifies whether a `CClearAreaEvent` event of should be created for online use.
function Global.ClearAreaOfPeds(x, y, z, radius, createNetEvent)
	return _in(0xBE31FD6CE464AC59, x, y, z, radius, createNetEvent)
end

--- Clears an area of projectiles at the given coordinates and radius.
-- @param x The x coordinate of where to clear projectiles.
-- @param y The y coordinate of where to clear projectiles.
-- @param z The z coordinate of where to clear projectiles.
-- @param radius The area radius to clear projectiles.
-- @param createNetEvent specifies whether a `CClearAreaEvent` event of should be created for online use.
function Global.ClearAreaOfProjectiles(x, y, z, radius, createNetEvent)
	return _in(0x0A1CB9094635D1A6, x, y, z, radius, createNetEvent)
end

--- Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);
-- ```
-- ```
-- NativeDB Added Parameter 10: BOOL p9
function Global.ClearAreaOfVehicles(x, y, z, radius, p4, p5, p6, p7, p8)
	return _in(0x01C7B9B38428AEB6, x, y, z, radius, p4, p5, p6, p7, p8)
end

--- This sets bit [offset] of [address] to off.
-- Example:
-- MISC::CLEAR_BIT(&bitAddress, 1);
-- To check if this bit has been enabled:
-- MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
function Global.ClearBit(offset)
	return _in(0xE80492A9AC099A93, _i, offset)
end

--- CLEAR_BRIEF
function Global.ClearBrief()
	return _in(0x9D292F73ADBD9313)
end

--- _CLEAR_CLOUD_HAT
function Global.ClearCloudHat()
	return _in(0x957E790EA1727B64)
end

--- Clears the previously queued custom track lost for the given radio station.
function Global.ClearCustomRadioTrackList(radioStation)
	return _in(0x1654F24A88A8E3FE, _ts(radioStation))
end
Global.N_0x1654f24a88a8e3fe = Global.ClearCustomRadioTrackList

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function Global.ClearDecisionMakerEventResponse(name, eventType)
	return _in(0x4FC9381A7AEE8968, _ch(name), eventType)
end

--- Resets the screen's draw-origin which was changed by the function [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) back to `x=0, y=0`. See [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) for further information.
function Global.ClearDrawOrigin()
	return _in(0xFF0B610F6BE0D7AF)
end

--- CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
function Global.ClearDrivebyTaskUnderneathDrivingTask(ped)
	return _in(0xC35B5CDB2824CF69, ped)
end

--- CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE
function Global.ClearDynamicPauseMenuErrorMessage()
	return _in(0x7792424AA0EAC32E)
end
Global.N_0x7792424aa0eac32e = Global.ClearDynamicPauseMenuErrorMessage

--- This native **could affect** the arguments of the `CEventNetworkEntityDamage` game event, by clearing the damaging entity before the event is fired.
-- @param entity The entity to clear the last damaging entity from.
function Global.ClearEntityLastDamageEntity(entity)
	return _in(0xA72CD9CA74A5ECBA, entity)
end

--- CLEAR_ENTITY_LAST_WEAPON_DAMAGE
function Global.ClearEntityLastWeaponDamage(entity)
	return _in(0xAC678E40BE7C74D2, entity)
end

--- Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#\_0x5096FD9CCB49056D)
function Global.ClearExtraTimecycleModifier()
	return _in(0x92CCC17A7A2285DA)
end
Global.N_0x92ccc17a7a2285da = Global.ClearExtraTimecycleModifier

--- NativeDB Introduced: v1493
function Global.ClearFacialClipsetOverride(ped)
	return _in(0x637822DC2AFEEBF8, ped)
end
Global.N_0x637822dc2afeebf8 = Global.ClearFacialClipsetOverride

--- CLEAR_FACIAL_IDLE_ANIM_OVERRIDE
function Global.ClearFacialIdleAnimOverride(ped)
	return _in(0x726256CC1EEB182F, ped)
end

--- CLEAR_FLOATING_HELP
function Global.ClearFloatingHelp(hudIndex, p1)
	return _in(0x50085246ABD3FEFA, hudIndex, p1)
end

--- CLEAR_FOCUS
function Global.ClearFocus()
	return _in(0x31B73D1EA9F01DA2)
end

--- _CLEAR_GARAGE_AREA
function Global.ClearGarageArea(garageHash, isNetwork)
	return _in(0xDA05194260CDCDF9, _ch(garageHash), isNetwork)
end
Global.N_0xda05194260cdcdf9 = Global.ClearGarageArea

--- CLEAR_GPS_CUSTOM_ROUTE
function Global.ClearGpsCustomRoute()
	return _in(0xE6DE0561D9232A64)
end
Global.N_0xe6de0561d9232a64 = Global.ClearGpsCustomRoute

--- Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
-- @param index Index of disabled zone.
function Global.ClearGpsDisabledZoneAtIndex(index)
	return _in(0x2801D0012266DF07, index)
end
Global.N_0x2801d0012266df07 = Global.ClearGpsDisabledZoneAtIndex
Global.ClearGpsDisabledZoneAtIndex = Global.ClearGpsDisabledZoneAtIndex

--- Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
-- Doesn't seem like the flags are actually read by the game at all.
function Global.ClearGpsFlags()
	return _in(0x21986729D6A3A830)
end

--- Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](#\_0x3DDA37128DD1ACA8)
function Global.ClearGpsMultiRoute()
	return _in(0x67EEDEA1B9BAFD94)
end
Global.N_0x67eedea1b9bafd94 = Global.ClearGpsMultiRoute

--- CLEAR_GPS_PLAYER_WAYPOINT
function Global.ClearGpsPlayerWaypoint()
	return _in(0xFF4FB7C8CDFA3DA7)
end

--- Does the same as SET_RACE_TRACK_RENDER(false);
function Global.ClearGpsRaceTrack()
	return _in(0x7AA5B4CE533C858B)
end

--- CLEAR_HD_AREA
function Global.ClearHdArea()
	return _in(0xCE58B1CFB9290813)
end

--- CLEAR_HELP
function Global.ClearHelp(toggle)
	return _in(0x8DFCED7A656F8802, toggle)
end

--- Immediately removes entity from an interior. Like sets entity to `limbo` room.
-- ```
-- NativeDB Introduced: v2189
-- ```
function Global.ClearInteriorForEntity(entity)
	return _in(0x85D5422B2039A70D, entity)
end

--- CLEAR_LAST_DRIVEN_VEHICLE
function Global.ClearLastDrivenVehicle()
	return _in(0xE01903C47C7AC89E)
end
Global.N_0xe01903c47c7ac89e = Global.ClearLastDrivenVehicle

--- **This native does absolutely nothing, just a nullsub**
function Global.ClearLaunchParams()
	return _in(0x966DD84FB6A46017)
end
Global.N_0x966dd84fb6a46017 = Global.ClearLaunchParams

--- CLEAR_OBJECTS_INSIDE_GARAGE
function Global.ClearObjectsInsideGarage(garageHash, vehicles, peds, objects, isNetwork)
	return _in(0x190428512B240692, _ch(garageHash), vehicles, peds, objects, isNetwork)
end
Global.N_0x190428512b240692 = Global.ClearObjectsInsideGarage

--- CLEAR_OVERRIDE_WEATHER
function Global.ClearOverrideWeather()
	return _in(0x338D2E3477711050)
end

--- CLEAR_PED_ALTERNATE_MOVEMENT_ANIM
function Global.ClearPedAlternateMovementAnim(ped, stance, p2)
	return _in(0xD8D19675ED5FBDCE, ped, stance, p2)
end

--- CLEAR_PED_ALTERNATE_WALK_ANIM
function Global.ClearPedAlternateWalkAnim(ped, p1)
	return _in(0x8844BBFCE30AA9E9, ped, p1)
end

--- Clears the blood on a ped.
-- @param ped Ped id.
function Global.ClearPedBloodDamage(ped)
	return _in(0x8FE22675A5A45817, ped)
end

--- Somehow related to changing ped's clothes.
function Global.ClearPedBloodDamageByZone(ped, p1)
	return _in(0x56E3B78C5408D9F4, ped, p1)
end
Global.N_0x56e3b78c5408d9f4 = Global.ClearPedBloodDamageByZone

--- CLEAR_PED_*
function Global.ClearPedCoverClipsetOverride(ped)
	return _in(0xC79196DCB36F6121, ped)
end
Global.N_0xc79196dcb36f6121 = Global.ClearPedCoverClipsetOverride

--- p1: from 0 to 5 in the b617d scripts.
-- p2: "blushing" and "ALL" found in the b617d scripts.
function Global.ClearPedDamageDecalByZone(ped, p1, p2)
	return _in(0x523C79AEEFCC4A2A, ped, p1, _ts(p2))
end
Global.N_0x523c79aeefcc4a2a = Global.ClearPedDamageDecalByZone

--- CLEAR_PED_DECORATIONS
function Global.ClearPedDecorations(ped)
	return _in(0x0E5173C163976E38, ped)
end

--- CLEAR_PED_DECORATIONS_LEAVE_SCARS
function Global.ClearPedDecorationsLeaveScars(ped)
	return _in(0xE3B27E70CEAB9F0C, ped)
end
Global.N_0xe3b27e70ceab9f0c = Global.ClearPedDecorationsLeaveScars
Global.ClearPedFacialDecorations = Global.ClearPedDecorationsLeaveScars

--- CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE
function Global.ClearPedDriveByClipsetOverride(ped)
	return _in(0x4AFE3690D7E0B5AC, ped)
end

--- CLEAR_PED_ENV_DIRT
function Global.ClearPedEnvDirt(ped)
	return _in(0x6585D955A68452A5, ped)
end
Global.N_0x6585d955a68452a5 = Global.ClearPedEnvDirt

--- CLEAR_PED_IN_PAUSE_MENU
function Global.ClearPedInPauseMenu()
	return _in(0x5E62BE5DC58E9E06)
end

--- CLEAR_PED_LAST_DAMAGE_BONE
function Global.ClearPedLastDamageBone(ped)
	return _in(0x8EF6B7AC68E2F01B, ped)
end

--- Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
function Global.ClearPedLastWeaponDamage(ped)
	return _in(0x0E98F88A24C5F4B8, ped)
end

--- CLEAR_PED_NON_CREATION_AREA
function Global.ClearPedNonCreationArea()
	return _in(0x2E05208086BA0651)
end

--- CLEAR_PED_PARACHUTE_PACK_VARIATION
function Global.ClearPedParachutePackVariation(ped)
	return _in(0x1280804F7CFD2D6C, ped)
end
Global.N_0x1280804f7cfd2d6c = Global.ClearPedParachutePackVariation

--- CLEAR_PED_PROP
-- @param ped The ped handle.
-- @param propId The prop id you want to clear from the ped. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F).
function Global.ClearPedProp(ped, propId)
	return _in(0x0943E5B8E078E76E, ped, propId)
end

--- Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
-- @param ped The ped to remove the scuba gear from.
function Global.ClearPedScubaGearVariation(ped)
	return _in(0xB50EB4CCB29704AC, ped)
end
Global.N_0xb50eb4ccb29704ac = Global.ClearPedScubaGearVariation
Global.RemovePedScubaGearNow = Global.ClearPedScubaGearVariation

--- CLEAR_PED_SECONDARY_TASK
function Global.ClearPedSecondaryTask(ped)
	return _in(0x176CECF6F920D707, ped)
end

--- CLEAR_PED_STORED_HAT_PROP
function Global.ClearPedStoredHatProp(ped)
	return _in(0x687C0B594907D2E8, ped)
end
Global.N_0x687c0b594907d2e8 = Global.ClearPedStoredHatProp

--- Clear a ped's tasks. Stop animations and other tasks created by scripts.
-- @param ped Ped id. Use PlayerPedId() for your own character.
function Global.ClearPedTasks(ped)
	return _in(0xE1EF3C1216AFF2CD, ped)
end

--- Immediately stops the pedestrian from whatever it's doing. The difference between this and [CLEAR_PED_TASKS](#\_0xE1EF3C1216AFF2CD) is that this one teleports the ped but does not change the position of the ped.
-- @param ped Ped id.
function Global.ClearPedTasksImmediately(ped)
	return _in(0xAAA34F8A7CB32098, ped)
end

--- It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
function Global.ClearPedWetness(ped)
	return _in(0x9C720776DAA43E7E, ped)
end

--- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
function Global.ClearPlayerHasDamagedAtLeastOneNonAnimalPed(player)
	return _in(0x4AACB96203D11A31, player)
end

--- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED
function Global.ClearPlayerHasDamagedAtLeastOnePed(player)
	return _in(0xF0B67A4DE6AB5F98, player)
end

--- CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE
function Global.ClearPlayerParachuteModelOverride(player)
	return _in(0x8753997EB5F6EE3F, player)
end

--- CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE
function Global.ClearPlayerParachutePackModelOverride(player)
	return _in(0x10C54E4389C12B42, player)
end

--- CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE
function Global.ClearPlayerParachuteVariationOverride(player)
	return _in(0x0F4CC924CF8C7B21, player)
end

--- NativeDB Introduced: v2372
function Global.ClearPlayerReserveParachuteModelOverride(player)
	return _in(0x290D248E25815AE8, player)
end

--- This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);
-- PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.
function Global.ClearPlayerWantedLevel(player)
	return _in(0xB302540597885499, player)
end

--- Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
-- Modified example from "am_imp_exp.c4", line 6418:
-- /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
-- etc.
-- */
-- STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);
-- ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);
function Global.ClearPopscheduleOverrideVehicleModel(scheduleId)
	return _in(0x5C0DE367AA0D911C, scheduleId)
end

--- CLEAR_PRINTS
function Global.ClearPrints()
	return _in(0xCC33FA791322B9D9)
end

--- _CLEAR_RACE_GALLERY_BLIPS
function Global.ClearRaceGalleryBlips()
	return _in(0x2708FC083123F9FF)
end
Global.N_0x2708fc083123f9ff = Global.ClearRaceGalleryBlips

--- There seem to be 26 flags
function Global.ClearRagdollBlockingFlags(ped, flags)
	return _in(0xD86D101FCFD00A4B, ped, flags)
end
Global.N_0xd86d101fcfd00a4b = Global.ClearRagdollBlockingFlags
Global.ResetPedRagdollBlockingFlags = Global.ClearRagdollBlockingFlags

--- Clears the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- (Credits: Inco)
-- Example:
-- PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
-- PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
function Global.ClearRelationshipBetweenGroups(relationship, group1, group2)
	return _in(0x5E29243FB56FC6D4, relationship, _ch(group1), _ch(group2))
end

--- **This native does absolutely nothing, just a nullsub**
function Global.ClearReminderMessage()
	return _in(0xB57D8DD645CFA2CF)
end
Global.N_0xb57d8dd645cfa2cf = Global.ClearReminderMessage

--- CLEAR_REPLAY_STATS
function Global.ClearReplayStats()
	return _in(0x1B1AB132A16FDA55)
end

--- _CLEAR_RESTART_CUSTOM_POSITION
function Global.ClearRestartCustomPosition()
	return _in(0xA2716D40842EAF79)
end
Global.N_0xa2716d40842eaf79 = Global.ClearRestartCustomPosition
Global.SetNextRespawnToCustom = Global.ClearRestartCustomPosition

--- CLEAR_ROOM_FOR_ENTITY
function Global.ClearRoomForEntity(entity)
	return _in(0xB365FC0C4E27FFA7, entity)
end

--- CLEAR_ROOM_FOR_GAME_VIEWPORT
function Global.ClearRoomForGameViewport()
	return _in(0x23B59D8912F94246)
end
Global.N_0x23b59d8912f94246 = Global.ClearRoomForGameViewport

--- CLEAR_SEQUENCE_TASK
function Global.ClearSequenceTask(taskSequenceId)
	return _in(0x3841422E9C488D8C, _ii(taskSequenceId) --[[ may be optional ]])
end

--- CLEAR_SMALL_PRINTS
function Global.ClearSmallPrints()
	return _in(0x2CEA2839313C09AC)
end

--- _CLEAR_TACTICAL_ANALYSIS_POINTS
function Global.ClearTacticalAnalysisPoints()
	return _in(0xB3CD58CCA6CDA852)
end
Global.N_0xb3cd58cca6cda852 = Global.ClearTacticalAnalysisPoints

--- p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z
function Global.ClearThisPrint(p0)
	return _in(0xCF708001E1E536DD, _ts(p0))
end

--- CLEAR_TIMECYCLE_MODIFIER
function Global.ClearTimecycleModifier()
	return _in(0x0F07E7745A236711)
end

--- CLEAR_TV_CHANNEL_PLAYLIST
function Global.ClearTvChannelPlaylist(tvChannel)
	return _in(0xBEB3D46BB7F043C0, tvChannel)
end
Global.N_0xbeb3d46bb7f043c0 = Global.ClearTvChannelPlaylist

--- CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR
function Global.ClearVehicleCustomPrimaryColour(vehicle)
	return _in(0x55E1D2758F34E437, vehicle)
end

--- CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR
function Global.ClearVehicleCustomSecondaryColour(vehicle)
	return _in(0x5FFBDEEC3E8E2009, vehicle)
end

--- Removes the cargen area of interest and resumes normal cargen spawning.
-- You can set the area of interest with [`SET_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#\_0x9A75585FB2E54FAD)
function Global.ClearVehicleGeneratorAreaOfInterest()
	return _in(0x0A436B8643716D14)
end
Global.N_0x0a436b8643716d14 = Global.ClearVehicleGeneratorAreaOfInterest

--- _CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE
function Global.ClearVehiclePhoneExplosiveDevice()
	return _in(0xAA3F739ABDDCF21F)
end
Global.N_0xaa3f739abddcf21f = Global.ClearVehiclePhoneExplosiveDevice

--- CLEAR_VEHICLE_ROUTE_HISTORY
function Global.ClearVehicleRouteHistory(vehicle)
	return _in(0x6D6AF961B72728AE, vehicle)
end
Global.N_0x6d6af961b72728ae = Global.ClearVehicleRouteHistory

--- CLEAR_*
-- NativeDB Introduced: v1290
-- @param vehicle The vehicle to have tasks cleared
function Global.ClearVehicleTasks(vehicle)
	return _in(0xDBBC7A2432524127, vehicle)
end
Global.N_0xdbbc7a2432524127 = Global.ClearVehicleTasks

--- Removes vehicle xenon lights custom RGB color.
-- @param vehicle The vehicle handle.
function Global.ClearVehicleXenonLightsCustomColor(vehicle)
	return _in(0x2867ed8c, vehicle)
end

--- Clears the active weather type after a specific amount of time determined by `transitionTimeInMs`.
-- @param transitionTimeInMs Transition time in milliseconds.
function Global.ClearWeatherTypeNowPersistNetwork(transitionTimeInMs)
	return _in(0x0CF97F497FE7D048, transitionTimeInMs)
end
Global.N_0x0cf97f497fe7d048 = Global.ClearWeatherTypeNowPersistNetwork

--- CLEAR_WEATHER_TYPE_PERSIST
function Global.ClearWeatherTypePersist()
	return _in(0xCCC39339BEF76CF5)
end

--- Creates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data.
-- @param ped The input ped.
-- @param isNetwork Whether or not the ped should be registered as a network object.
-- @param bScriptHostPed Script host flag.
-- @param copyHeadBlendFlag If true, head blend data is referenced, not copied.
-- @return A new ped handle representing the ped's copy.
function Global.ClonePed(ped, isNetwork, bScriptHostPed, copyHeadBlendFlag)
	return _in(0xEF29A16337FACADB, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag, _ri)
end

--- Used one time in fmmc_launcher.c instead of CLONE_PED because ?
function Global.ClonePedEx(ped, heading, isNetwork, bScriptHostPed, p4)
	return _in(0x668FD40BCBA5DE48, ped, heading, isNetwork, bScriptHostPed, p4, _ri)
end
Global.N_0x668fd40bcba5de48 = Global.ClonePedEx
Global.ClonePed_2 = Global.ClonePedEx

--- Copies ped's components and props to targetPed.
function Global.ClonePedToTarget(ped, targetPed)
	return _in(0xE952D6431689AD9A, ped, targetPed)
end
Global.AssignPlayerToPed = Global.ClonePedToTarget

--- _CLONE_PED_TO_TARGET_EX
function Global.ClonePedToTargetEx(ped, targetPed, p2)
	return _in(0x148B08C2D2ACB884, ped, targetPed, p2)
end
Global.N_0x148b08c2d2acb884 = Global.ClonePedToTargetEx

--- CLONE_TIMECYCLE_MODIFIER
-- @param sourceModifierName The source timecycle name.
-- @param clonedModifierName The clone timecycle name, must be unique.
-- @return The cloned timecycle modifier index, or -1 if failed.
function Global.CloneTimecycleModifier(sourceModifierName, clonedModifierName)
	return _in(0x54d636b3, _ts(sourceModifierName), _ts(clonedModifierName), _ri)
end

--- CLOSE_BOMB_BAY_DOORS
function Global.CloseBombBayDoors(vehicle)
	return _in(0x3556041742A0DC74, vehicle)
end
Global.N_0x3556041742a0dc74 = Global.CloseBombBayDoors

--- _CLOSE_MULTIPLAYER_CHAT
function Global.CloseMultiplayerChat()
	return _in(0x1AC8F4AD40E22127)
end
Global.AbortTextChat = Global.CloseMultiplayerChat

--- CLOSE_PATROL_ROUTE
function Global.ClosePatrolRoute()
	return _in(0xB043ECA801B8CBC1)
end

--- CLOSE_SEQUENCE_TASK
function Global.CloseSequenceTask(taskSequenceId)
	return _in(0x39E72BC99E6360CB, taskSequenceId)
end

--- CLOSE_SOCIAL_CLUB_MENU
function Global.CloseSocialClubMenu()
	return _in(0xD2B32BE3FC1626C6)
end
Global.N_0xd2b32be3fc1626c6 = Global.CloseSocialClubMenu

--- Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
function Global.CloudCheckAvailability()
	return _in(0x4F18196C8D38768D)
end
Global.N_0x4f18196c8d38768d = Global.CloudCheckAvailability
Global.DownloadCheck = Global.CloudCheckAvailability

--- CLOUD_DELETE_MEMBER_FILE
function Global.CloudDeleteMemberFile(p0)
	return _in(0xC64DED7EF0D2FE37, _ts(p0), _ri)
end
Global.N_0xc64ded7ef0d2fe37 = Global.CloudDeleteMemberFile

--- CLOUD_DID_REQUEST_SUCCEED
function Global.CloudDidRequestSucceed(handle)
	return _in(0x3A3D5568AF297CD5, handle, _r)
end
Global.N_0x3a3d5568af297cd5 = Global.CloudDidRequestSucceed

--- CLOUD_GET_AVAILABILITY_CHECK_RESULT
function Global.CloudGetAvailabilityCheckResult()
	return _in(0x0B0CC10720653F3B, _r)
end
Global.NetworkEnableMotionDrugged = Global.CloudGetAvailabilityCheckResult
Global.N_0x0b0cc10720653f3b = Global.CloudGetAvailabilityCheckResult

--- CLOUD_HAS_REQUEST_COMPLETED
function Global.CloudHasRequestCompleted(handle)
	return _in(0x4C61B39930D045DA, handle, _r)
end
Global.N_0x4c61b39930d045da = Global.CloudHasRequestCompleted

--- CLOUD_IS_CHECKING_AVAILABILITY
function Global.CloudIsCheckingAvailability()
	return _in(0xC7ABAC5DE675EE3B, _r)
end
Global.N_0xc7abac5de675ee3b = Global.CloudIsCheckingAvailability

--- Commits the backing pixels to the specified runtime texture.
-- @param tex The runtime texture handle.
function Global.CommitRuntimeTexture(tex)
	return _in(0x19d81f4e, tex)
end

--- Compares two strings up to a specified number of characters.
-- Parameters:
-- str1 - String to be compared.
-- str2 - String to be compared.
-- matchCase - Comparison will be case-sensitive.
-- maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
-- Returns:
-- A value indicating the relationship between the strings:
-- <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
-- 0 - The contents of both strings are equal.
-- >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
-- Examples:
-- MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
-- MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
-- MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
-- MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
-- MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal
-- When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
-- MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
-- MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
function Global.CompareStrings(str1, str2, matchCase, maxLength)
	return _in(0x1E34710ECD4AB0EB, _ts(str1), _ts(str2), matchCase, maxLength, _ri)
end

--- Works for vehicles with a retractable landing gear
-- landing gear states:
-- 0: Deployed
-- 1: Closing
-- 2: Opening
-- 3: Retracted
function Global.ControlLandingGear(vehicle, state)
	return _in(0xCFC8BE9A5E1FE575, vehicle, state)
end
Global.SetVehicleLandingGear = Global.ControlLandingGear

--- Forces the ped to use the mounted weapon.
-- Returns false if task is not possible.
function Global.ControlMountedWeapon(ped)
	return _in(0xDCFE42068FE0135A, ped, _r)
end

--- Takes the specified time and writes it to the structure specified in the second argument.
-- struct date_time
-- {
-- alignas(8) int year;
-- alignas(8) int month;
-- alignas(8) int day;
-- alignas(8) int hour;
-- alignas(8) int minute;
-- alignas(8) int second;
-- };
function Global.ConvertPosixTime(posixTime, timeStructure)
	return _in(0xAC97AF97FA68E5D5, posixTime, _ii(timeStructure) --[[ may be optional ]])
end
Global.GetDateAndTimeFromUnixEpoch = Global.ConvertPosixTime

--- _COPY_MEMORY
function Global.CopyMemory(src, size)
	return _in(0x213AEB2B90CBA7AC, _i, src, size)
end
Global.N_0x213aeb2b90cba7ac = Global.CopyMemory

--- Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
-- @param sourceVehicle The source to copy the vehicle damage.
-- @param targetVehicle The target to paste the vehicle damage.
function Global.CopyVehicleDamages(sourceVehicle, targetVehicle)
	return _in(0xE44A982368A4AF23, sourceVehicle, targetVehicle)
end
Global.N_0xe44a982368a4af23 = Global.CopyVehicleDamages

--- Returns the cosine of the given number.
-- @param value The number of degrees (in degrees, not radians)
-- @return The cosine of the given number
function Global.Cos(value)
	return _in(0xD0FFB162F40A139C, value, _rf)
end

--- _CREATE_AIR_DEFENSE_AREA
function Global.CreateAirDefenseArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, weaponHash)
	return _in(0x9DA58CDBF6BDBC08, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _ch(weaponHash), _ri)
end
Global.N_0x9da58cdbf6bdbc08 = Global.CreateAirDefenseArea

--- Both coordinates are from objects in the decompiled scripts.
-- Native related to [\_0xECDC202B25E5CF48](#\_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
-- @param x X coordinate
-- @param y Y coordinate
-- @param z Z coordinate
-- @param radius Unknown float 150.0 is used in freemode script.
-- @param p4 X coordinate
-- @param p5 Y coordinate
-- @param p6 Z coordinate
-- @param weaponHash weapon_air_defence_gun and 0 are used in the decompiled scripts.
-- @return Seems to be some sort of handle, result is += 1 any time this native is called.
function Global.CreateAirDefenseSphere(x, y, z, radius, p4, p5, p6, weaponHash)
	return _in(0x91EF34584710BE99, x, y, z, radius, p4, p5, p6, _ch(weaponHash), _ri)
end
Global.N_0x91ef34584710be99 = Global.CreateAirDefenseSphere

--- Creates an ambient pickup given the hash. Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
function Global.CreateAmbientPickup(pickupHash, posX, posY, posZ, flags, value, modelHash, returnHandle, p8)
	return _in(0x673966A0C0FD7171, _ch(pickupHash), posX, posY, posZ, flags, value, _ch(modelHash), returnHandle, p8, _ri)
end

--- Creates an audio submix with the specified name, or gets the existing audio submix by that name.
-- @param name The audio submix name.
-- @return A submix ID, or -1 if the submix could not be created.
function Global.CreateAudioSubmix(name)
	return _in(0x658d2bc8, _ts(name), _ri)
end

--- Creates a camera with the specified cam name, You can use `SET_CAM_` natives to manipulate the camera.\
-- Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
-- ### Camera names:
-- *   DEFAULT_SCRIPTED_CAMERA
-- *   DEFAULT_ANIMATED_CAMERA
-- *   DEFAULT_SPLINE_CAMERA
-- *   DEFAULT_SCRIPTED_FLY_CAMERA
-- *   TIMED_SPLINE_CAMERA
-- *   CUSTOM_TIMED_SPLINE_CAMERA
-- *   ROUNDED_SPLINE_CAMERA
-- *   SMOOTHED_SPLINE_CAMERA
-- @param camName A string representing the camera type, the game will convert the string into a joaat hash upon native execution.
-- @param active Set to true if you wish to make this new camera the active camera.
-- @return A camera handle referencing the camera that was created.
function Global.CreateCam(camName, active)
	return _in(0xC3981DCE61D9E13F, _ts(camName), active, _ri)
end

--- Create a camera with the specified cam name/type, You can use `SET_CAM_` natives to manipulate the camera.
-- Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.
-- @param camName A string representing the camera type, the game will convert the string into a joaat hash upon native execution.
-- @param posX The x position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param posY The y position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param posZ The z position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param rotX The x rotation of the camera
-- @param rotY The y rotation of the camera
-- @param rotZ The z rotation of the camera
-- @param fov The Field Of View of the camera, is the observable world that is seen
-- @param active Set to true if you wish to make this new camera the active camera.
-- @param rotationOrder The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- @return A camera handle.
function Global.CreateCamWithParams(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder)
	return _in(0xB51194800B257161, _ts(camName), posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder, _ri)
end

--- CREATE_CAMERA
function Global.CreateCamera(camHash, active)
	return _in(0x5E3CF89C6BCCA67D, _ch(camHash), active, _ri)
end

--- CAM::\_GET_GAMEPLAY_CAM_COORDS can be used instead of posX,Y,Z\
-- CAM::\_GET_GAMEPLAY_CAM_ROT can be used instead of rotX,Y,Z\
-- CAM::\_GET_FINAL_RENDERED_CAM_FOV can be used instead of p7 (Possible p7 is FOV parameter. )\
-- rotationOrder is 2 usually
function Global.CreateCameraWithParams(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder)
	return _in(0x6ABFA3E16460F22D, _ch(camHash), posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder, _ri)
end

--- ```
-- Creates a checkpoint. Returns the handle of the checkpoint.
-- 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
-- Parameters:
-- * type - The type of checkpoint to create. See below for a list of checkpoint types.
-- * pos1 - The position of the checkpoint.
-- * pos2 - The position of the next checkpoint to point to.
-- * diameter - The diameter of the checkpoint.
-- * color - The color of the checkpoint.
-- * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
-- Checkpoint types (prior to game build 2189):
-- 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
-- 39----------?
-- 40----------Ring: just a ring
-- 41----------?
-- 42-44-------Cylinder w/ number (uses 'reserved' parameter)
-- 45-47-------Cylinder no arrow or number
-- If using type 42-44, reserved sets number / number and shape to display
-- 0-99------------Just numbers (0-99)
-- 100-109-----------------Arrow (0-9)
-- 110-119------------Two arrows (0-9)
-- 120-129----------Three arrows (0-9)
-- 130-139----------------Circle (0-9)
-- 140-149------------CycleArrow (0-9)
-- 150-159----------------Circle (0-9)
-- 160-169----Circle  w/ pointer (0-9)
-- 170-179-------Perforated ring (0-9)
-- 180-189----------------Sphere (0-9)
-- ```
-- [Checkpoint Types](https://docs.fivem.net/docs/game-references/checkpoints/) as of game build 2189
function Global.CreateCheckpoint(type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved)
	return _in(0x0134F0835AB6BFCB, type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved, _ri)
end

--- CREATE_CINEMATIC_SHOT
function Global.CreateCinematicShot(p0, p1, p2, entity)
	return _in(0x741B0129D4560F31, p0, p1, p2, entity)
end

--- Creates a volume where water effects do not apply.
-- Useful for preventing water collisions from flooding areas underneath them.
-- This has no effect on waterquads, only water created from drawables and collisions.
-- Don't create volumes when your local ped is swimming (e.g. use IS_PED_SWIMMING in your scripts before you call this)
-- @param xMin The min X component of the AABB volume where water does not affect the player.
-- @param yMin The min Y component for the AABB volume.
-- @param zMin The min Z component for the AABB volume.
-- @param xMax The max X component for the AABB volume.
-- @param yMax The max Y component for the AABB volume.
-- @param zMax The max Z component for the AABB volume.
function Global.CreateDryVolume(xMin, yMin, zMin, xMax, yMax, zMax)
	return _in(0xeb1c6dd, xMin, yMin, zMin, xMax, yMax, zMax, _ri)
end

--- Creates a DUI browser. This can be used to draw on a runtime texture using CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
-- @param url The initial URL to load in the browser.
-- @param width The width of the backing surface.
-- @param height The height of the backing surface.
-- @return A DUI object.
function Global.CreateDui(url, width, height)
	return _in(0x23eaf899, _ts(url), width, height, _rl)
end

--- As per the name, this native creates a "fake" gamer tag that is attached to a specific ped.
-- Unlike "real" gamer tags, you cannot set the crew colour of these gamer tags.
-- To create gamer tags for actual players and for more gamer tag information, see [CREATE_MP_GAMER_TAG_WITH_CREW_COLOR](#\_0x6DD05E9D83EFA4C9).
-- @param ped The ped that the fake gamer tag will be attached to.
-- @param username The name displayed on the gamer tag.
-- @param crewIsPrivate If the crew is private. Public crews have a pointed end cap, private crews do not.
-- @param crewIsRockstar If the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.
-- @param crewName The name of the crew.
-- @param crewRank The rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.
-- @return The ID of the new gamer tag.
function Global.CreateFakeMpGamerTag(ped, username, crewIsPrivate, crewIsRockstar, crewName, crewRank)
	return _in(0xBFEFE3321A3F5015, ped, _ts(username), crewIsPrivate, crewIsRockstar, _ts(crewName), crewRank, _ri)
end
Global.N_0xbfefe3321a3f5015 = Global.CreateFakeMpGamerTag
Global.CreateMpGamerTag = Global.CreateFakeMpGamerTag

--- CREATE_FORCED_OBJECT
function Global.CreateForcedObject(x, y, z, p3, modelHash, p5)
	return _in(0x150E808B375A385A, x, y, z, p3, _ch(modelHash), p5)
end

--- Creates a new ped group.
-- Groups can contain up to 8 peds.
-- The parameter is unused.
-- Returns a handle to the created group, or 0 if a group couldn't be created.
function Global.CreateGroup(unused)
	return _in(0x90370EBE0FEE1A3D, unused, _ri)
end

--- enum IncidentTypes
-- {
-- FireDepartment = 3,
-- Paramedics = 5,
-- Police = 7,
-- PedsInCavalcades = 11,
-- Merryweather = 14
-- };
-- As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
-- Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
-- Side Note 2: I say it breaks as if you call this proper,
-- if(CREATE_INCIDENT) etc it will return false if you do as I said above.
-- =====================================================
-- ```
-- ```
-- NativeDB Added Parameter 8: Any p7
-- NativeDB Added Parameter 9: Any p8
function Global.CreateIncident(dispatchService, x, y, z, numUnits, radius, outIncidentID)
	return _in(0x3F892CAF67444AE7, dispatchService, x, y, z, numUnits, radius, _ii(outIncidentID) --[[ may be optional ]], _r)
end

--- p0 could be type (valueused in scripts: 14, 7, 5, 3, 11)
-- p1 is a return from get_player_ped() in am_gang_call.c, but player_ped_id() in other (non am) scripts.
-- p3 is usually 0f or 3f
-- =====================================================
-- enum IncidentTypes
-- {
-- FireDepartment = 3,
-- Paramedics = 5,
-- Police = 7,
-- PedsInCavalcades = 11,
-- Merryweather = 14
-- };
-- As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
-- Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
-- Side Note 2: I say it breaks as if you call this proper,
-- if(CREATE_INCIDENT) etc it will return false if you do as I said above.
-- =====================================================
-- ```
-- ```
-- NativeDB Added Parameter 6: Any p5
-- NativeDB Added Parameter 7: Any p6
function Global.CreateIncidentWithEntity(dispatchService, ped, numUnits, radius, outIncidentID)
	return _in(0x05983472F0494E60, dispatchService, ped, numUnits, radius, _ii(outIncidentID) --[[ may be optional ]], _r)
end

--- CREATE_ITEMSET
function Global.CreateItemset(distri)
	return _in(0x35AD299F50D91B24, distri, _ri)
end

--- Train models must be [requested](#\_0x963D27A58DF860AC) before use. See trains.xml (located in `Grand Theft Auto V\update\update.rpf\common\data\levels\gta5\trains.xml`) for freight and metro variations.
-- Model names to request can be found by searching `model_name` in the file.
-- The `Lua` usage example provided down below has been provided in such way so users can test each and every train variation.
-- ### Newly added parameters (seen in 2372 build)
-- ```
-- NativeDB Added Parameter 6: BOOL isNetwork
-- NativeDB Added Parameter 7: BOOL netMissionEntity
-- ```
-- *   **isNetwork**: Whether to create a network object for the train. If false, the train exists only locally.
-- *   **netMissionEntity**: Whether to register the train as pinned to the script host in the R\* network model.
-- ### Train Models:
-- *   freight
-- ### Carriage Models:
-- *   freightcar
-- *   freightcar2 (Added v2372)
-- *   freightcont1
-- *   freightcont2
-- *   freightgrain
-- *   metrotrain
-- *   tankercar
-- ### Some train variations (default from trains.xml as of build 2372)
-- *   17. Very long train and freight variation.
-- *   18. Freight train only.
-- *   26. Double metro train (with both models flipped opposite to each other). This used to be `25` before the 2802 build, it also used to be `24` before the 2372 build.
-- @param variation The variation id, these can range from 0 to 26 as of build 2802 (previously `0-25` in build 2372 and `0-24` before that).
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param direction The direction in which the train will go (true or false)
-- @return A script handle (fwScriptGuid index) for the train, or 0 if the train failed to be created.
function Global.CreateMissionTrain(variation, x, y, z, direction)
	return _in(0x63C6CCA8E68AE8C8, variation, x, y, z, direction, _ri)
end

--- Creates a mobile phone of the specified type.
-- Possible phone types:
-- 0 - Default phone / Michael's phone
-- 1 - Trevor's phone
-- 2 - Franklin's phone
-- 4 - Prologue phone
-- These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.
function Global.CreateMobilePhone(phoneType)
	return _in(0xA4E8E696C532FBC7, phoneType)
end

--- p5 = sets as true in scripts
-- Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
-- Network players do not see changes done with this.
function Global.CreateModelHide(x, y, z, radius, model, p5)
	return _in(0x8A97BCA30A0CE478, x, y, z, radius, _ch(model), p5)
end

--- CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS
function Global.CreateModelHideExcludingScriptObjects(x, y, z, radius, model, p5)
	return _in(0x3A52AE588830BF7F, x, y, z, radius, _ch(model), p5)
end

--- Only works with objects!
-- Network players do not see changes done with this.
function Global.CreateModelSwap(x, y, z, radius, originalModel, newModel, p6)
	return _in(0x92C47782FDA8B2A3, x, y, z, radius, _ch(originalModel), _ch(newModel), p6)
end

--- Spawns one or more money pickups.
-- x: The X-component of the world position to spawn the money pickups at.
-- y: The Y-component of the world position to spawn the money pickups at.
-- z: The Z-component of the world position to spawn the money pickups at.
-- value: The combined value of the pickups (in dollars).
-- amount: The number of pickups to spawn.
-- model: The model to use, or 0 for default money model.
-- Example:
-- CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
-- Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
-- ==============================================
-- Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
function Global.CreateMoneyPickups(x, y, z, value, amount, model)
	return _in(0x0589B5E791CE9B2B, x, y, z, value, amount, _ch(model))
end

--- Creates a gamer tag for the specified local player ID, automatically attached to the player's current ped.
-- The created gamer tag will have the same ID as the player. You can use [IS_MP_GAMER_TAG_ACTIVE](#\_0x4E929E7A5796FD26) to check if a gamer tag already exists for a player.
-- After the gamer tag is created, all components will be set as invisible. Use [SET_MP_GAMER_TAG_VISIBILITY](#\_0x63BB75ABEDC1F6A0) to change the visibility of individual components or [\_SET_MP_GAMER_TAG_VISIBILITY_ALL](#\_0xEE76FF7E6A0166B0) to set all of them at once.
-- To create a gamer tag for a ped that is not a player, see [CREATE_FAKE_MP_GAMER_TAG](#\_0xBFEFE3321A3F5015).
-- @param player The local player ID to assign the gamer tag to.
-- @param username The name displayed on the gamer tag.
-- @param crewIsPrivate If the crew is private. Public crews have a pointed end cap, private crews do not.
-- @param crewIsRockstar If the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.
-- @param crewName The name of the crew.
-- @param crewRank The rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.
-- @param crewR Red component of the crew colour.
-- @param crewG Green component of the crew colour.
-- @param crewB Blue component of the crew colour.
function Global.CreateMpGamerTagWithCrewColor(player, username, crewIsPrivate, crewIsRockstar, crewName, crewRank, crewR, crewG, crewB)
	return _in(0x6DD05E9D83EFA4C9, player, _ts(username), crewIsPrivate, crewIsRockstar, _ts(crewName), crewRank, crewR, crewG, crewB)
end
Global.N_0x6dd05e9d83efa4c9 = Global.CreateMpGamerTagWithCrewColor
Global.CreateMpGamerTagColor = Global.CreateMpGamerTagWithCrewColor
Global.SetMpGamerTagColor = Global.CreateMpGamerTagWithCrewColor
Global.CreateMpGamerTagForNetPlayer = Global.CreateMpGamerTagWithCrewColor

--- CREATE_NEW_SCRIPTED_CONVERSATION
function Global.CreateNewScriptedConversation()
	return _in(0xD2C91A0B572AAE56)
end

--- Creates a new NaturalMotion message.
-- startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
-- messageId: The ID of the NaturalMotion message.
-- If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
function Global.CreateNmMessage(startImmediately, messageId)
	return _in(0x418EF2A1BCE56685, startImmediately, messageId)
end

--- NativeDB Introduced: v2372
function Global.CreateNonNetworkedAmbientPickup(pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8)
	return _in(0x9C93764223E29C50, pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8, _ri)
end
Global.N_0x9c93764223e29c50 = Global.CreateNonNetworkedAmbientPickup

--- CREATE_NON_NETWORKED_PORTABLE_PICKUP
function Global.CreateNonNetworkedPortablePickup(pickupHash, x, y, z, placeOnGround, modelHash)
	return _in(0x125494B98A21AAF7, _ch(pickupHash), x, y, z, placeOnGround, _ch(modelHash), _ri)
end
Global.N_0x125494b98a21aaf7 = Global.CreateNonNetworkedPortablePickup
Global.CreatePortablePickup_2 = Global.CreateNonNetworkedPortablePickup

--- Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
-- This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- @param modelHash The model to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component, 'ground level'.
-- @param isNetwork Whether to create a network object for the object. If false, the object exists only locally.
-- @param netMissionEntity Whether to register the object as pinned to the script host in the R\* network model.
-- @param doorFlag False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
-- @return A script handle (fwScriptGuid index) for the object, or `0` if the object failed to be created.
function Global.CreateObject(modelHash, x, y, z, isNetwork, netMissionEntity, doorFlag)
	return _in(0x509D5878EB39E842, _ch(modelHash), x, y, z, isNetwork, netMissionEntity, doorFlag, _ri)
end

--- Creates an object (prop) with the specified model centered at the specified position.
-- This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- @param modelHash The model to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param isNetwork Whether to create a network object for the object. If false, the object exists only locally.
-- @param netMissionEntity Whether to register the object as pinned to the script host in the R\* network model.
-- @param doorFlag False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
-- @return A script handle (fwScriptGuid index) for the object, or `0` if the object failed to be created.
function Global.CreateObjectNoOffset(modelHash, x, y, z, isNetwork, netMissionEntity, doorFlag)
	return _in(0x9A294B2138ABB884, _ch(modelHash), x, y, z, isNetwork, netMissionEntity, doorFlag, _ri)
end

--- CREATE_PARACHUTE_BAG_OBJECT
function Global.CreateParachuteBagObject(ped, p1, p2)
	return _in(0x8C4F3BF23B6237DB, ped, p1, p2, _ri)
end
Global.N_0x8c4f3bf23b6237db = Global.CreateParachuteBagObject
Global.CreateParachuteObject = Global.CreateParachuteBagObject

--- CREATE_PATROL_ROUTE
function Global.CreatePatrolRoute()
	return _in(0xAF8A443CCC8018DC)
end

--- Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
-- This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
-- (e.g. using REQUEST_MODEL).
-- @param pedType Unused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.
-- @param modelHash The model of ped to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param heading Heading to face towards, in degrees.
-- @param isNetwork Whether to create a network object for the ped. If false, the ped exists only locally.
-- @param bScriptHostPed Whether to register the ped as pinned to the script host in the R\* network model.
-- @return A script handle (fwScriptGuid index) for the ped, or `0` if the ped failed to be created.
function Global.CreatePed(pedType, modelHash, x, y, z, heading, isNetwork, bScriptHostPed)
	return _in(0xD49F9B0955C367DE, pedType, _ch(modelHash), x, y, z, heading, isNetwork, bScriptHostPed, _ri)
end

--- CREATE_PED_INSIDE_VEHICLE
-- @param pedType See [`CREATE_PED`](#\_0xD49F9B0955C367DE)
function Global.CreatePedInsideVehicle(vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed)
	return _in(0x7DD959874C1FD534, vehicle, pedType, _ch(modelHash), seat, isNetwork, bScriptHostPed, _ri)
end

--- Drops the Hook/Magnet on a cargobob
-- state
-- enum eCargobobHook
-- {
-- CARGOBOB_HOOK = 0,
-- CARGOBOB_MAGNET = 1,
-- };
function Global.CreatePickUpRopeForCargobob(cargobob, state)
	return _in(0x7BEB0C7A235F6F3B, cargobob, state)
end
Global.EnableCargobobHook = Global.CreatePickUpRopeForCargobob

--- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
function Global.CreatePickup(pickupHash, posX, posY, posZ, p4, value, p6, modelHash)
	return _in(0xFBA08C503DD5FA58, _ch(pickupHash), posX, posY, posZ, p4, value, p6, _ch(modelHash), _ri)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
-- flags:
-- 8 (1 << 3): place on ground
-- 512 (1 << 9): spin around
function Global.CreatePickupRotate(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash)
	return _in(0x891804727E0A98B7, _ch(pickupHash), posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, _ch(modelHash), _ri)
end

--- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
function Global.CreatePortablePickup(pickupHash, x, y, z, placeOnGround, modelHash)
	return _in(0x2EAF1FDB2FB55698, _ch(pickupHash), x, y, z, placeOnGround, _ch(modelHash), _ri)
end

--- vb.net
-- Dim ped_handle As Integer
-- With Game.Player.Character
-- Dim pos As Vector3 = .Position + .ForwardVector * 3
-- ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
-- End With
-- Creates a Ped at the specified location, returns the Ped Handle.
-- Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
function Global.CreateRandomPed(posX, posY, posZ)
	return _in(0xB4AC7D0CF06BFE8F, posX, posY, posZ, _ri)
end

--- CREATE_RANDOM_PED_AS_DRIVER
function Global.CreateRandomPedAsDriver(vehicle, returnHandle)
	return _in(0x9B62392B474F44A0, vehicle, returnHandle, _ri)
end

--- Creates a blank runtime texture.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param width The width of the new texture.
-- @param height The height of the new texture.
-- @return A runtime texture handle.
function Global.CreateRuntimeTexture(txd, txn, width, height)
	return _in(0xfec3766d, txd, _ts(txn), width, height, _rl)
end

--- Creates a runtime texture from a DUI handle.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param duiHandle The DUI handle returned from GET_DUI_HANDLE.
-- @return The runtime texture handle.
function Global.CreateRuntimeTextureFromDuiHandle(txd, txn, duiHandle)
	return _in(0xb135472b, txd, _ts(txn), _ts(duiHandle), _rl)
end

--- Creates a runtime texture from the specified file in the current resource or a base64 data URL.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param fileName The file name of an image to load or a base64 data URL. This should preferably be a PNG, and has to be specified as a `file` in the resource manifest.
-- @return A runtime texture handle.
function Global.CreateRuntimeTextureFromImage(txd, txn, fileName)
	return _in(0x786d8bc3, txd, _ts(txn), _ts(fileName), _rl)
end

--- Creates a runtime texture dictionary with the specified name.
-- Example:
-- ```lua
-- local txd = CreateRuntimeTxd('meow')
-- ```
-- @param name The name for the runtime TXD.
-- @return A handle to the runtime TXD.
function Global.CreateRuntimeTxd(name)
	return _in(0x1f3ac778, _ts(name), _rl)
end

--- Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
-- Parameters:
-- a/w/s - Generator position
-- heading - Generator heading
-- p4 - Unknown (always 5.0)
-- p5 - Unknown (always 3.0)
-- modelHash - Vehicle model hash
-- p7/8/9/10 - Unknown (always -1)
-- p11 - Unknown (usually TRUE, only one instance of FALSE)
-- p12/13 - Unknown (always FALSE)
-- p14 - Unknown (usally FALSE, only two instances of TRUE)
-- p15 - Unknown (always TRUE)
-- p16 - Unknown (always -1)
-- Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
function Global.CreateScriptVehicleGenerator(x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16)
	return _in(0x9DEF883114668116, x, y, z, heading, p4, p5, _ch(modelHash), p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, _ri)
end

--- p6 always 2 (but it doesnt seem to matter...)
-- roll and pitch 0
-- yaw to Ped.rotation
function Global.CreateSynchronizedScene(x, y, z, roll, pitch, yaw, p6)
	return _in(0x8C18E0F9080ADD73, x, y, z, roll, pitch, yaw, p6, _ri)
end

--- _CREATE_SYNCHRONIZED_SCENE_2
function Global.CreateSynchronizedScene_2(x, y, z, radius, object)
	return _in(0x62EC273D00187DCA, x, y, z, radius, _ch(object), _ri)
end
Global.N_0x62ec273d00187dca = Global.CreateSynchronizedScene_2

--- Create a clean timecycle modifier. See [`SET_TIMECYCLE_MODIFIER_VAR`](#\_0x6E0A422B) to add variables.
-- @param modifierName The new timecycle name, must be unique.
-- @return The created timecycle modifier index, or -1 if failed.
function Global.CreateTimecycleModifier(modifierName)
	return _in(0x70fa2afa, _ts(modifierName), _ri)
end

--- Creates a tracked point: useful for checking the visibility of a 3D point on screen.
-- Tracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See [`DESTROY_TRACKED_POINT`](#\_0xB25DC90BAD56CA42) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/).
-- Only 64 points may be tracked at a given time.
function Global.CreateTrackedPoint()
	return _in(0xE2C9439ED45DEA60, _ri)
end

--- Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
-- script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- ```
-- NativeDB Added Parameter 8: BOOL p7
-- ```
-- @param modelHash The model of vehicle to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param heading Heading to face towards, in degrees.
-- @param isNetwork Whether to create a network object for the vehicle. If false, the vehicle exists only locally.
-- @param netMissionEntity Whether to register the vehicle as pinned to the script host in the R\* network model.
-- @return A script handle (fwScriptGuid index) for the vehicle, or `0` if the vehicle failed to be created.
function Global.CreateVehicle(modelHash, x, y, z, heading, isNetwork, netMissionEntity)
	return _in(0xAF35D0D2583051B0, _ch(modelHash), x, y, z, heading, isNetwork, netMissionEntity, _ri)
end

--- Create a weapon object that cannot be attached to a ped. If you want to create a weapon object that can be attached to a ped, use [`CREATE_OBJECT`](#\_0x509D5878EB39E842) instead.
-- ```
-- NativeDB Added Parameter 9: BOOL bRegisterAsNetworkObject
-- NativeDB Added Parameter 10: BOOL bScriptHostObject
-- ```
-- @param weaponHash The hash of the weapon to create.
-- @param ammoCount The amount of ammo for the weapon.
-- @param x X coordinate for the weapon's position.
-- @param y Y coordinate for the weapon's position.
-- @param z Z coordinate for the weapon's position.
-- @param bCreateDefaultComponents Boolean that indicates whether the default components should be created for that weapon (`true`/`false`).
-- @param scale The size of the object, to increase it, set the scale to a value greater than `1.0`.
-- @param customModelHash The hash of the custom model to use for the weapon object. Set to `0` if you do not intend to use a custom model hash.
function Global.CreateWeaponObject(weaponHash, ammoCount, x, y, z, bCreateDefaultComponents, scale, customModelHash)
	return _in(0x9541D3CF0D398F36, _ch(weaponHash), ammoCount, x, y, z, bCreateDefaultComponents, scale, customModelHash, _ri)
end

--- some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
function Global.CustomMenuCoordinates(p0)
	return _in(0x487A82C650EB7799, p0)
end
Global.N_0x487a82c650eb7799 = Global.CustomMenuCoordinates

--- DATAARRAY_ADD_BOOL
function Global.DataarrayAddBool(value)
	return _in(0xF8B0F5A43E928C76, _i, value)
end
Global.ArrayValueAddBoolean = Global.DataarrayAddBool

--- DATAARRAY_ADD_DICT
function Global.DataarrayAddDict(arrayData)
	return _in(0x6889498B3E19C797, _ii(arrayData) --[[ may be optional ]], _ri)
end
Global.ArrayValueAddObject = Global.DataarrayAddDict

--- DATAARRAY_ADD_FLOAT
function Global.DataarrayAddFloat(value)
	return _in(0x57A995FD75D37F56, _i, value)
end
Global.ArrayValueAddFloat = Global.DataarrayAddFloat

--- DATAARRAY_ADD_INT
function Global.DataarrayAddInt(value)
	return _in(0xCABDB751D86FE93B, _i, value)
end
Global.ArrayValueAddInteger = Global.DataarrayAddInt

--- DATAARRAY_ADD_STRING
function Global.DataarrayAddString(value)
	return _in(0x2F0661C155AEEEAA, _i, _ts(value))
end
Global.ArrayValueAddString = Global.DataarrayAddString

--- DATAARRAY_ADD_VECTOR
function Global.DataarrayAddVector(valueX, valueY, valueZ)
	return _in(0x407F8D034F70F0C2, _i, valueX, valueY, valueZ)
end
Global.ArrayValueAddVector3 = Global.DataarrayAddVector

--- DATAARRAY_GET_BOOL
function Global.DataarrayGetBool(arrayIndex)
	return _in(0x50C1B2874E50C114, _i, arrayIndex, _r)
end
Global.ArrayValueGetBoolean = Global.DataarrayGetBool

--- DATAARRAY_GET_COUNT
function Global.DataarrayGetCount(arrayData)
	return _in(0x065DB281590CEA2D, _ii(arrayData) --[[ may be optional ]], _ri)
end
Global.ArrayValueGetSize = Global.DataarrayGetCount

--- DATAARRAY_GET_DICT
function Global.DataarrayGetDict(arrayIndex)
	return _in(0x8B5FADCC4E3A145F, _i, arrayIndex, _ri)
end
Global.ArrayValueGetObject = Global.DataarrayGetDict

--- DATAARRAY_GET_FLOAT
function Global.DataarrayGetFloat(arrayIndex)
	return _in(0xC0C527B525D7CFB5, _i, arrayIndex, _rf)
end
Global.ArrayValueGetFloat = Global.DataarrayGetFloat

--- DATAARRAY_GET_INT
function Global.DataarrayGetInt(arrayIndex)
	return _in(0x3E5AE19425CD74BE, _i, arrayIndex, _ri)
end
Global.ArrayValueGetInteger = Global.DataarrayGetInt

--- DATAARRAY_GET_STRING
function Global.DataarrayGetString(arrayIndex)
	return _in(0xD3F2FFEB8D836F52, _i, arrayIndex, _s)
end
Global.ArrayValueGetString = Global.DataarrayGetString

--- Types:
-- 1 = Boolean
-- 2 = Integer
-- 3 = Float
-- 4 = String
-- 5 = Vector3
-- 6 = Object
-- 7 = Array
function Global.DataarrayGetType(arrayIndex)
	return _in(0x3A0014ADB172A3C5, _i, arrayIndex, _ri)
end
Global.ArrayValueGetType = Global.DataarrayGetType

--- DATAARRAY_GET_VECTOR
function Global.DataarrayGetVector(arrayIndex)
	return _in(0x8D2064E5B64A628A, _i, arrayIndex, _rv)
end
Global.ArrayValueGetVector3 = Global.DataarrayGetVector

--- DATADICT_CREATE_ARRAY
function Global.DatadictCreateArray(key)
	return _in(0x5B11728527CA6E5F, _i, _ts(key), _ri)
end
Global.ObjectValueAddArray = Global.DatadictCreateArray

--- DATADICT_CREATE_DICT
function Global.DatadictCreateDict(key)
	return _in(0xA358F56F10732EE1, _i, _ts(key), _ri)
end
Global.ObjectValueAddObject = Global.DatadictCreateDict

--- DATADICT_GET_ARRAY
function Global.DatadictGetArray(key)
	return _in(0x7A983AA9DA2659ED, _i, _ts(key), _ri)
end
Global.ObjectValueGetArray = Global.DatadictGetArray

--- DATADICT_GET_BOOL
function Global.DatadictGetBool(key)
	return _in(0x1186940ED72FFEEC, _i, _ts(key), _r)
end
Global.ObjectValueGetBoolean = Global.DatadictGetBool

--- DATADICT_GET_DICT
function Global.DatadictGetDict(key)
	return _in(0xB6B9DDC412FCEEE2, _i, _ts(key), _ri)
end
Global.ObjectValueGetObject = Global.DatadictGetDict

--- DATADICT_GET_FLOAT
function Global.DatadictGetFloat(key)
	return _in(0x06610343E73B9727, _i, _ts(key), _rf)
end
Global.ObjectValueGetFloat = Global.DatadictGetFloat

--- DATADICT_GET_INT
function Global.DatadictGetInt(key)
	return _in(0x78F06F6B1FB5A80C, _i, _ts(key), _ri)
end
Global.ObjectValueGetInteger = Global.DatadictGetInt

--- DATADICT_GET_STRING
function Global.DatadictGetString(key)
	return _in(0x3D2FD9E763B24472, _i, _ts(key), _s)
end
Global.ObjectValueGetString = Global.DatadictGetString

--- Types:
-- 1 = Boolean
-- 2 = Integer
-- 3 = Float
-- 4 = String
-- 5 = Vector3
-- 6 = Object
-- 7 = Array
function Global.DatadictGetType(key)
	return _in(0x031C55ED33227371, _i, _ts(key), _ri)
end
Global.ObjectValueGetType = Global.DatadictGetType

--- DATADICT_GET_VECTOR
function Global.DatadictGetVector(key)
	return _in(0x46CD3CB66E0825CC, _i, _ts(key), _rv)
end
Global.ObjectValueGetVector3 = Global.DatadictGetVector

--- DATADICT_SET_BOOL
function Global.DatadictSetBool(key, value)
	return _in(0x35124302A556A325, _i, _ts(key), value)
end
Global.ObjectValueAddBoolean = Global.DatadictSetBool

--- DATADICT_SET_FLOAT
function Global.DatadictSetFloat(key, value)
	return _in(0xC27E1CC2D795105E, _i, _ts(key), value)
end
Global.ObjectValueAddFloat = Global.DatadictSetFloat

--- DATADICT_SET_INT
function Global.DatadictSetInt(key, value)
	return _in(0xE7E035450A7948D5, _i, _ts(key), value)
end
Global.ObjectValueAddInteger = Global.DatadictSetInt

--- DATADICT_SET_STRING
function Global.DatadictSetString(key, value)
	return _in(0x8FF3847DADD8E30C, _i, _ts(key), _ts(value))
end
Global.ObjectValueAddString = Global.DatadictSetString

--- DATADICT_SET_VECTOR
function Global.DatadictSetVector(key, valueX, valueY, valueZ)
	return _in(0x4CD49B76338C7DEE, _i, _ts(key), valueX, valueY, valueZ)
end
Global.ObjectValueAddVector3 = Global.DatadictSetVector

--- DATAFILE_CLEAR_WATCH_LIST
function Global.DatafileClearWatchList()
	return _in(0x6CC86E78358D5119)
end
Global.N_0x6cc86e78358d5119 = Global.DatafileClearWatchList

--- NativeDB Added Parameter 1: int p0
function Global.DatafileCreate()
	return _in(0xD27058A1CA2B13EE)
end

--- NativeDB Added Parameter 1: int p0
function Global.DatafileDelete()
	return _in(0x9AB9C1CFC8862DFB)
end

--- DATAFILE_DELETE_REQUESTED_FILE
function Global.DatafileDeleteRequestedFile(p0)
	return _in(0x8F5EA1C01D65A100, p0, _r)
end
Global.N_0x8f5ea1c01d65a100 = Global.DatafileDeleteRequestedFile

--- DATAFILE_FLUSH_MISSION_HEADER
function Global.DatafileFlushMissionHeader()
	return _in(0xC55854C7D7274882)
end
Global.N_0xc55854c7d7274882 = Global.DatafileFlushMissionHeader

--- NativeDB Added Parameter 1: int p0
function Global.DatafileGetFileDict()
	return _in(0x906B778CA1DC72B6, _s)
end
Global.N_0x906b778ca1dc72b6 = Global.DatafileGetFileDict

--- DATAFILE_HAS_LOADED_FILE_DATA
function Global.DatafileHasLoadedFileData(p0)
	return _in(0x15FF52B809DB2353, p0, _r)
end
Global.N_0x15ff52b809db2353 = Global.DatafileHasLoadedFileData

--- DATAFILE_HAS_VALID_FILE_DATA
function Global.DatafileHasValidFileData(p0)
	return _in(0xF8CC1EBE0B62E29F, p0, _r)
end
Global.N_0xf8cc1ebe0b62e29f = Global.DatafileHasValidFileData

--- Example:
-- if (!DATAFILE::_BEDB96A7584AA8CF())
-- {
-- if (!g_109E3)
-- {
-- if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
-- {
-- if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())
-- {
-- g_17A8B = 0;
-- }
-- if (!g_D52C)
-- {
-- sub_730();
-- }
-- }
-- }
-- }
function Global.DatafileIsSavePending()
	return _in(0xBEDB96A7584AA8CF, _r)
end
Global.N_0xbedb96a7584aa8cf = Global.DatafileIsSavePending

--- DATAFILE_IS_VALID_REQUEST_ID
function Global.DatafileIsValidRequestId(index)
	return _in(0xFCCAE5B92A830878, index, _r)
end
Global.N_0xfccae5b92a830878 = Global.DatafileIsValidRequestId

--- Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
-- Returns whether or not the file was successfully loaded.
-- Example:
-- DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.DatafileLoadOfflineUgc(filename)
	return _in(0xC5238C011AF405E4, _ts(filename), _r)
end
Global.LoadUgcFile = Global.DatafileLoadOfflineUgc

--- NativeDB Added Parameter 2: Any p1
function Global.DatafileSelectActiveFile(p0)
	return _in(0x22DA66936E0FFF37, p0, _r)
end
Global.N_0x22da66936e0fff37 = Global.DatafileSelectActiveFile

--- NativeDB Added Parameter 2: Any p1
function Global.DatafileSelectCreatorStats(p0)
	return _in(0x01095C95CD46B624, p0, _r)
end
Global.N_0x01095c95cd46b624 = Global.DatafileSelectCreatorStats

--- NativeDB Added Parameter 2: Any p1
function Global.DatafileSelectUgcData(p0)
	return _in(0xA69AC4ADE82B57A4, p0, _r)
end
Global.N_0xa69ac4ade82b57a4 = Global.DatafileSelectUgcData

--- NativeDB Added Parameter 2: Any p1
function Global.DatafileSelectUgcPlayerData(p0)
	return _in(0x52818819057F2B40, p0, _r)
end
Global.N_0x52818819057f2b40 = Global.DatafileSelectUgcPlayerData

--- NativeDB Added Parameter 3: Any p2
function Global.DatafileSelectUgcStats(p0, p1)
	return _in(0x9CB0BFA7A9342C3D, p0, p1, _r)
end
Global.N_0x9cb0bfa7a9342c3d = Global.DatafileSelectUgcStats

--- NativeDB Added Parameter 2: Any p1
function Global.DatafileStartSaveToCloud(filename)
	return _in(0x83BCCE3224735F05, _ts(filename), _r)
end
Global.N_0x83bcce3224735f05 = Global.DatafileStartSaveToCloud

--- NativeDB Added Parameter 1: int p0
function Global.DatafileStoreMissionHeader()
	return _in(0x2ED61456317B8178)
end
Global.N_0x2ed61456317b8178 = Global.DatafileStoreMissionHeader

--- DATAFILE_UPDATE_SAVE_TO_CLOUD
function Global.DatafileUpdateSaveToCloud(p0)
	return _in(0x4DFDD9EB705F8140, _i --[[ actually bool ]], _r)
end
Global.N_0x4dfdd9eb705f8140 = Global.DatafileUpdateSaveToCloud

--- Adds the given request ID to the watch list.
function Global.DatafileWatchRequestId(id)
	return _in(0xAD6875BBC0FC899C, id)
end
Global.N_0xad6875bbc0fc899c = Global.DatafileWatchRequestId

--- Deactivates the named slowmo mode.
-- @param mode name of the mode to deactivate
function Global.DeactivateAudioSlowmoMode(mode)
	return _in(0xDDC635D5B3262C56, _ts(mode))
end
Global.N_0xddc635d5b3262c56 = Global.DeactivateAudioSlowmoMode

--- DEACTIVATE_INTERIOR_ENTITY_SET
function Global.DeactivateInteriorEntitySet(interior, entitySetName)
	return _in(0x420BD37289EEE162, interior, _ts(entitySetName))
end
Global.N_0x420bd37289eee162 = Global.DeactivateInteriorEntitySet
Global.DisableInteriorProp = Global.DeactivateInteriorEntitySet

--- Returns whether or not the specified property is set for the entity.
function Global.DecorExistOn(entity, propertyName)
	return _in(0x05661B80A8C9165F, entity, _ts(propertyName), _r)
end

--- DECOR_GET_BOOL
function Global.DecorGetBool(entity, propertyName)
	return _in(0xDACE671663F2F5DB, entity, _ts(propertyName), _r)
end

--- DECOR_GET_FLOAT
function Global.DecorGetFloat(entity, propertyName)
	return _in(0x6524A2F114706F43, entity, _ts(propertyName), _rf)
end
Global.DecorGetFloat = Global.DecorGetFloat

--- DECOR_GET_INT
function Global.DecorGetInt(entity, propertyName)
	return _in(0xA06C969B02A97298, entity, _ts(propertyName), _ri)
end

--- DECOR_IS_REGISTERED_AS_TYPE
-- @param type See [`DECOR_REGISTER`](#\_0x9FD90732F56403CE).
function Global.DecorIsRegisteredAsType(propertyName, type)
	return _in(0x4F14F9F870D6FBC8, _ts(propertyName), type, _r)
end

--- Decor types:
-- ```
-- enum eDecorType
-- {
-- DECOR_TYPE_FLOAT = 1,
-- DECOR_TYPE_BOOL = 2,
-- DECOR_TYPE_INT = 3,
-- DECOR_TYPE_UNK = 4,
-- DECOR_TYPE_TIME = 5
-- };
-- ```
function Global.DecorRegister(propertyName, type)
	return _in(0x9FD90732F56403CE, _ts(propertyName), type)
end

--- Called after all decorator type initializations.
function Global.DecorRegisterLock()
	return _in(0xA9D14EEA259F9248)
end

--- DECOR_REMOVE
function Global.DecorRemove(entity, propertyName)
	return _in(0x00EE9F297C738720, entity, _ts(propertyName), _r)
end

--- This function sets metadata of type bool to specified entity.
function Global.DecorSetBool(entity, propertyName, value)
	return _in(0x6B1E8E2ED1335B71, entity, _ts(propertyName), value, _r)
end

--- DECOR_SET_FLOAT
function Global.DecorSetFloat(entity, propertyName, value)
	return _in(0x211AB1DD8D0F363A, entity, _ts(propertyName), value, _r)
end
Global.DecorSetFloat = Global.DecorSetFloat

--- Sets property to int.
function Global.DecorSetInt(entity, propertyName, value)
	return _in(0x0CE3AA5E1CA19E10, entity, _ts(propertyName), value, _r)
end

--- DECOR_SET_TIME
function Global.DecorSetTime(entity, propertyName, timestamp)
	return _in(0x95AED7B8E39ECAA4, entity, _ts(propertyName), timestamp, _r)
end

--- DELETE_ALL_TRAINS
function Global.DeleteAllTrains()
	return _in(0x736A718577F39C7D)
end

--- DELETE_CHECKPOINT
function Global.DeleteCheckpoint(checkpoint)
	return _in(0xF5ED37F54CD4D52E, checkpoint)
end

--- DELETE_CHILD_ROPE
function Global.DeleteChildRope(ropeId)
	return _in(0xAA5D6B1888E4DB20, ropeId)
end

--- Delete the specified entity, and invalidate the passed handle (i.e., the in/out argument).
-- You might want to check if the entity exists before with [DOES_ENTITY_EXIST](#\_0x7239B21A38F536BA).
-- @param entity The entity to delete.
function Global.DeleteEntity(entity)
	return _in(0xAE3CBE5BF394C9C9, _ii(entity) --[[ may be optional ]])
end

--- DELETE_FUNCTION_REFERENCE
function Global.DeleteFunctionReference(referenceIdentity)
	return _in(0x1e86f206, _ts(referenceIdentity))
end

--- Delete an incident with a given id.
-- =======================================================
-- Correction, I have change this to int, instead of int*
-- as it doesn't use a pointer to the createdIncident.
-- If you try it you will crash (or) freeze.
-- =======================================================
function Global.DeleteIncident(incidentId)
	return _in(0x556C1AA270D5A207, incidentId)
end

--- Used to delete mission trains created with [`CREATE_MISSION_TRAIN`](#\_0x63C6CCA8E68AE8C8).
function Global.DeleteMissionTrain(train)
	return _in(0x5B76B14AE875C795, _ii(train) --[[ may be optional ]])
end

--- Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
function Global.DeleteObject(object)
	return _in(0x539E0AE3E6634B9F, _ii(object) --[[ may be optional ]])
end

--- From the b617d scripts:
-- TASK::DELETE_PATROL_ROUTE("miss_merc0");
-- TASK::DELETE_PATROL_ROUTE("miss_merc1");
-- TASK::DELETE_PATROL_ROUTE("miss_merc2");
-- TASK::DELETE_PATROL_ROUTE("miss_dock");
function Global.DeletePatrolRoute(patrolRoute)
	return _in(0x7767DD9D65E91319, _ts(patrolRoute))
end

--- Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
function Global.DeletePed(ped)
	return _in(0x9614299DCB53E54B, _ii(ped) --[[ may be optional ]])
end

--- DELETE_RESOURCE_KVP
-- @param key The key to delete
function Global.DeleteResourceKvp(key)
	return _in(0x7389b5df, _ts(key))
end

--- DELETE_ROPE
function Global.DeleteRope(ropeId)
	return _in(0x52B4829281364649, _ii(ropeId) --[[ may be optional ]])
end

--- Removes a scripted vehicle generator.
function Global.DeleteScriptVehicleGenerator(vehicleGenerator)
	return _in(0x22102C9ABFCF125D, vehicleGenerator)
end

--- DELETE_STUNT_JUMP
function Global.DeleteStuntJump(p0)
	return _in(0xDC518000E39DAE1F, p0)
end

--- Deletes a vehicle.
-- The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
-- eg how to use:
-- SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
-- DELETE_VEHICLE(&vehicle);
-- Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
function Global.DeleteVehicle(vehicle)
	return _in(0xEA386986E786A54F, _ii(vehicle) --[[ may be optional ]])
end

--- _DELETE_WAYPOINT
function Global.DeleteWaypoint()
	return _in(0xD8E694757BCEA8E9)
end
Global.N_0xd8e694757bcea8e9 = Global.DeleteWaypoint

--- Does nothing and always returns false.
function Global.DepositVc(amount)
	return _in(0xE260E0BB9CD995AC, amount, _r)
end
Global.N_0xe260e0bb9cd995ac = Global.DepositVc

--- BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
function Global.DestroyAllCams(bScriptHostCam)
	return _in(0x8E5FB15663F79120, bScriptHostCam)
end

--- BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
function Global.DestroyCam(cam, bScriptHostCam)
	return _in(0x865908C81A2C22E9, cam, bScriptHostCam)
end

--- Destroys a DUI browser.
-- @param duiObject The DUI browser handle.
function Global.DestroyDui(duiObject)
	return _in(0xa085cb10, duiObject)
end

--- DESTROY_ITEMSET
function Global.DestroyItemset(p0)
	return _in(0xDE18220B1C183EDA, p0)
end

--- Destroys the currently active mobile phone.
function Global.DestroyMobilePhone()
	return _in(0x3BC861DF703E5097)
end

--- DESTROY_TRACKED_POINT
function Global.DestroyTrackedPoint(point)
	return _in(0xB25DC90BAD56CA42, point)
end

--- DETACH_CAM
function Global.DetachCam(cam)
	return _in(0xA2FABBE87F4BAD82, cam)
end

--- DETACH_CONTAINER_FROM_HANDLER_FRAME
function Global.DetachContainerFromHandlerFrame(vehicle)
	return _in(0x7C0043FDFF6436BC, vehicle)
end
Global.N_0x7c0043fdff6436bc = Global.DetachContainerFromHandlerFrame

--- DETACH_ENTITY
-- @param dynamic Set to `true` to keep velocity after detaching
function Global.DetachEntity(entity, dynamic, collision)
	return _in(0x961AC54BF0613F5D, entity, dynamic, collision)
end

--- Detaches the specified entity currently being carried by a Cargobob.
-- @param vehicle The Cargobob helicopter.
-- @param entity The entity to be detached.
function Global.DetachEntityFromCargobob(vehicle, entity)
	return _in(0xAF03011701811146, vehicle, entity, _ri)
end
Global.N_0xaf03011701811146 = Global.DetachEntityFromCargobob
Global.DetachEntityFromCargobob = Global.DetachEntityFromCargobob

--- DETACH_PORTABLE_PICKUP_FROM_PED
function Global.DetachPortablePickupFromPed(pickupObject)
	return _in(0xCF463D1E9A0AECB1, pickupObject)
end

--- DETACH_ROPE_FROM_ENTITY
function Global.DetachRopeFromEntity(ropeId, entity)
	return _in(0xBCF3026912A8647D, ropeId, entity)
end

--- DETACH_SYNCHRONIZED_SCENE
function Global.DetachSynchronizedScene(sceneID)
	return _in(0x6D38F1F04CBB37EA, sceneID)
end

--- DETACH_VEHICLE_FROM_ANY_CARGOBOB
function Global.DetachVehicleFromAnyCargobob(vehicle)
	return _in(0xADF7BE450512C12F, vehicle, _r)
end

--- DETACH_VEHICLE_FROM_ANY_TOW_TRUCK
function Global.DetachVehicleFromAnyTowTruck(vehicle)
	return _in(0xD0E9CE05A1E68CD8, vehicle, _r)
end

--- DETACH_VEHICLE_FROM_CARGOBOB
function Global.DetachVehicleFromCargobob(cargobob, vehicle)
	return _in(0x0E21D3DF1051399D, cargobob, vehicle)
end

--- First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
function Global.DetachVehicleFromTowTruck(towTruck, vehicle)
	return _in(0xC2DB6B6708350ED8, towTruck, vehicle)
end

--- DETACH_VEHICLE_FROM_TRAILER
function Global.DetachVehicleFromTrailer(vehicle)
	return _in(0x90532EDF0D2BDD86, vehicle)
end

--- DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE
function Global.DetonateVehiclePhoneExplosiveDevice()
	return _in(0xEF49CF0270307CBE)
end
Global.N_0xef49cf0270307cbe = Global.DetonateVehiclePhoneExplosiveDevice
Global.RequestVehiclePhoneExplosion = Global.DetonateVehiclePhoneExplosiveDevice

--- DISABLE_AIM_CAM_THIS_UPDATE
function Global.DisableAimCamThisUpdate()
	return _in(0x1A31FE0049E542F6)
end
Global.N_0x1a31fe0049e542f6 = Global.DisableAimCamThisUpdate

--- DISABLE_ALL_CONTROL_ACTIONS
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.DisableAllControlActions(padIndex)
	return _in(0x5F4B6931816E599B, padIndex)
end

--- _DISABLE_CAM_COLLISION_FOR_ENTITY
function Global.DisableCamCollisionForEntity(entity)
	return _in(0x2AED6301F67007D5, entity)
end
Global.N_0x2aed6301f67007d5 = Global.DisableCamCollisionForEntity

--- DISABLE_CAM_COLLISION_FOR_OBJECT
function Global.DisableCamCollisionForObject(entity)
	return _in(0x49482F9FCD825AAA, entity)
end
Global.N_0x49482f9fcd825aaa = Global.DisableCamCollisionForObject

--- [Control values and meaning](https://docs.fivem.net/docs/game-references/controls/#controls)
-- Example: `CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true)` disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.
-- Control group 1 and 0 gives the same results as 2. Same results for all players.
function Global.DisableControlAction(padIndex, control, disable)
	return _in(0xFE99B66D079CF6BC, padIndex, control, disable)
end

--- Disables the editor runtime mode, changing game behavior to not track entity metadata.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
function Global.DisableEditorRuntime()
	return _in(0xb1622b17)
end

--- Disables first person camera for the current frame.
-- Found in decompiled scripts:
-- GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);
-- CAM::_DE2EF5DA284CC8DF();
function Global.DisableFirstPersonCamThisFrame()
	return _in(0xDE2EF5DA284CC8DF)
end

--- DISABLE_FRONTEND_THIS_FRAME
function Global.DisableFrontendThisFrame()
	return _in(0x6D3465A73092F0E6)
end

--- DISABLE_HEAD_BLEND_PALETTE_COLOR
function Global.DisableHeadBlendPaletteColor(ped)
	return _in(0xA21C118553BBDF02, ped)
end
Global.N_0xa21c118553bbdf02 = Global.DisableHeadBlendPaletteColor

--- The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
function Global.DisableHospitalRestart(hospitalIndex, toggle)
	return _in(0xC8535819C450EBA8, hospitalIndex, toggle)
end

--- Disables the game's afk camera that starts panning around after 30 seconds of inactivity.
-- @param state On/Off
function Global.DisableIdleCamera(state)
	return _in(0x3d5ab7f0, state)
end

--- DISABLE_INDIVIDUAL_PLANE_PROPELLER
function Global.DisableIndividualPlanePropeller(vehicle, propeller)
	return _in(0x500873A45724C863, vehicle, propeller)
end
Global.N_0x500873a45724c863 = Global.DisableIndividualPlanePropeller
Global.DisablePlanePropeller = Global.DisableIndividualPlanePropeller

--- _DISABLE_INPUT_GROUP
function Global.DisableInputGroup(padIndex)
	return _in(0x7F4724035FDCA1DD, padIndex)
end
Global.N_0x7f4724035fdca1dd = Global.DisableInputGroup

--- Example:
-- This removes the interior from the strip club and when trying to walk inside the player just falls:
-- INTERIOR::DISABLE_INTERIOR(118018, true);
function Global.DisableInterior(interiorID, toggle)
	return _in(0x6170941419D7D8EC, interiorID, toggle)
end

--- Removes any custom moon cycle overrides that have been configured with [ENABLE_MOON_CYCLE_OVERRIDE](#\_0x2C328AF17210F009)
function Global.DisableMoonCycleOverride()
	return _in(0x2BF72AD5B41AA739)
end
Global.N_0x2bf72ad5b41aa739 = Global.DisableMoonCycleOverride
Global.ResetExtraTimecycleModifierStrength = Global.DisableMoonCycleOverride

--- If true is passed, the player won't be able to open the multiplayer chat
function Global.DisableMultiplayerChat(disable)
	return _in(0x1DB21A44B09E8BA3, disable)
end
Global.SetTextChatUnk = Global.DisableMultiplayerChat

--- Use this if you want to completely disable a large area of navmesh.
-- For smaller areas, use [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A) instead.
-- @param posMinX X Min Coordinate.
-- @param posMinY Y Min Coordinate.
-- @param posMinZ Z Min Coordinate.
-- @param posMaxX X Max Coordinate.
-- @param posMaxY Y Max Coordinate.
-- @param posMaxZ Z Max Coordinate.
-- @param bDisable Whether to disable the navmesh or not.
function Global.DisableNavmeshInArea(posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, bDisable)
	return _in(0x4C8872D8CDBE1B8B, posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, bDisable)
end

--- DISABLE_OCCLUSION_THIS_FRAME
function Global.DisableOcclusionThisFrame()
	return _in(0x3669F1B198DCAA4F)
end
Global.N_0x3669f1b198dcaa4f = Global.DisableOcclusionThisFrame

--- DISABLE_PED_HEATSCALE_OVERRIDE
function Global.DisablePedHeatscaleOverride(ped)
	return _in(0x600048C60D5C2C51, ped)
end
Global.N_0x600048c60d5c2c51 = Global.DisablePedHeatscaleOverride

--- DISABLE_PED_PAIN_AUDIO
function Global.DisablePedPainAudio(ped, shouldDisable)
	return _in(0xA9A41C1E940FB0E8, ped, shouldDisable)
end

--- DISABLE_PLANE_AILERON
function Global.DisablePlaneAileron(vehicle, p1, p2)
	return _in(0x23428FC53C60919C, vehicle, p1, p2)
end

--- Inhibits the player from using any method of combat including melee and firearms.\
-- NOTE: Only disables the firing for one frame
-- @param player The player for which to disable combat methods.
-- @param toggle Unused, as this native will disable combat regardless of the value of this parameter.
function Global.DisablePlayerFiring(player, toggle)
	return _in(0x5E6CC07646BBEAB8, player, toggle)
end

--- Disables vehicle rewards for the current frame.
-- @param player The player to disable rewards
function Global.DisablePlayerVehicleRewards(player)
	return _in(0xC142BE3BB9CE125F, player)
end

--- Disables the spawn point at the police house on the specified index.
-- policeIndex: The police house index.
-- toggle: true to enable the spawn point, false to disable.
-- - Nacorpio
function Global.DisablePoliceRestart(policeIndex, toggle)
	return _in(0x23285DED6EBD7EA3, policeIndex, toggle)
end

--- This will disable the ability to make camera changes in R\* Editor.
function Global.DisableRockstarEditorCameraChanges()
	return _in(0xAF66DCEE6609B148)
end
Global.N_0xaf66dcee6609b148 = Global.DisableRockstarEditorCameraChanges

--- DISABLE_SCREENBLUR_FADE
function Global.DisableScreenblurFade()
	return _in(0xDE81239437E8C5A8)
end
Global.N_0xde81239437e8c5a8 = Global.DisableScreenblurFade
Global.PausedScreenblurLoaded = Global.DisableScreenblurFade

--- _DISABLE_SCRIPT_AMBIENT_EFFECTS
function Global.DisableScriptAmbientEffects(p0)
	return _in(0xEFD97FF47B745B8D, p0)
end
Global.N_0xefd97ff47b745b8d = Global.DisableScriptAmbientEffects

--- DISABLE_SCRIPT_BRAIN_SET
function Global.DisableScriptBrainSet(brainSet)
	return _in(0x14D8518E9760F08F, brainSet)
end

--- DISABLE_STUNT_JUMP_SET
function Global.DisableStuntJumpSet(p0)
	return _in(0xA5272EBEDD4747F6, p0)
end

--- DISABLE_SWITCH_OUTRO_FX
function Global.DisableSwitchOutroFx()
	return _in(0xBD605B8E0E18B3BB)
end
Global.N_0xbd605b8e0e18b3bb = Global.DisableSwitchOutroFx

--- DISABLE_VEHICLE_DISTANTLIGHTS
function Global.DisableVehicleDistantlights(toggle)
	return _in(0xC9F98AC1884E73A2, toggle)
end

--- _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
function Global.DisableVehicleFirstPersonCamThisFrame()
	return _in(0xADFF1B2A555F5FBA)
end

--- _DISABLE_VEHICLE_NEON_LIGHTS
function Global.DisableVehicleNeonLights(vehicle, toggle)
	return _in(0x83F813570FF519DE, vehicle, toggle)
end
Global.N_0x83f813570ff519de = Global.DisableVehicleNeonLights

--- Disables the game's afk camera that starts panning around after 30 seconds of inactivity(While riding in a car as a passenger)
-- @param state On/Off
function Global.DisableVehiclePassengerIdleCamera(state)
	return _in(0x5c140555, state)
end

--- _DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME
function Global.DisableVehicleTurretMovementThisFrame(vehicle)
	return _in(0x32CAEDF24A583345, vehicle)
end
Global.N_0x32caedf24a583345 = Global.DisableVehicleTurretMovementThisFrame

--- how does this work?
function Global.DisableVehicleWeapon(disabled, weaponHash, vehicle, owner)
	return _in(0xF4FC6A6F67D8D856, disabled, _ch(weaponHash), vehicle, owner)
end

--- Disables collision for this vehicle (maybe it also supports other entities, not sure).
-- Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
-- [Example video](https://streamable.com/6n45d5)
-- Not sure if there is a native (and if so, which one) that resets the collisions.
-- @param vehicle the vehicle to disable world collisions for
function Global.DisableVehicleWorldCollision(vehicle)
	return _in(0x75627043C6AA90AD, vehicle)
end
Global.N_0x75627043c6aa90ad = Global.DisableVehicleWorldCollision

--- Disables the game's world horizon lods rendering (see `farlods.#dd`).
-- Using the island hopper natives might also affect this state.
-- @param state On/Off
function Global.DisableWorldhorizonRendering(state)
	return _in(0xa9c92cdc, state)
end

--- DISPLAY_AMMO_THIS_FRAME
function Global.DisplayAmmoThisFrame(display)
	return _in(0xA5E78BA2B1331C55, display)
end

--- DISPLAY_AREA_NAME
function Global.DisplayAreaName(toggle)
	return _in(0x276B6CE369C33678, toggle)
end

--- "DISPLAY_CASH(true);" makes the cash amount render on the screen when appropriate
-- "DISPLAY_CASH(false);" disables cash amount rendering
function Global.DisplayCash(display)
	return _in(0x96DEC8D5430208B7, display)
end

--- Shows a help message for one frame.
-- Do note that this message doesn't get added to the Pause Menu info section.
-- @param pTextLabel Text label for this message.
-- @param bCurvedWindow Unused parameter.
function Global.DisplayHelpTextThisFrame(pTextLabel, bCurvedWindow)
	return _in(0x960C9FF8F616E41C, _ts(pTextLabel), bCurvedWindow)
end

--- If Hud should be displayed
function Global.DisplayHud(toggle)
	return _in(0xA6294919E56FF02A, toggle)
end

--- Enables drawing some hud components, such as help labels, this frame, when the player is dead.
function Global.DisplayHudWhenDeadThisFrame()
	return _in(0x7669F9E39DC17063)
end
Global.N_0x7669f9e39dc17063 = Global.DisplayHudWhenDeadThisFrame

--- DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME
function Global.DisplayHudWhenPausedThisFrame()
	return _in(0x402F9ED62087E898)
end
Global.N_0x402f9ed62087e898 = Global.DisplayHudWhenPausedThisFrame

--- windowTitle's
-- -----------------
-- CELL_EMAIL_BOD	=	"Enter your Eyefind message"
-- CELL_EMAIL_BODE	=	"Message too long. Try again"
-- CELL_EMAIL_BODF	=	"Forbidden message. Try again"
-- CELL_EMAIL_SOD	=	"Enter your Eyefind subject"
-- CELL_EMAIL_SODE	=	"Subject too long. Try again"
-- CELL_EMAIL_SODF	=	"Forbidden text. Try again"
-- CELL_EMASH_BOD	=	"Enter your Eyefind message"
-- CELL_EMASH_BODE	=	"Message too long. Try again"
-- CELL_EMASH_BODF	=	"Forbidden message. Try again"
-- CELL_EMASH_SOD	=	"Enter your Eyefind subject"
-- CELL_EMASH_SODE	=	"Subject too long. Try again"
-- CELL_EMASH_SODF	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP10	=	"Enter Synopsis"
-- FMMC_KEY_TIP12	=	"Enter Custom Team Name"
-- FMMC_KEY_TIP12F	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP12N	=	"Custom Team Name"
-- FMMC_KEY_TIP8	=	"Enter Message"
-- FMMC_KEY_TIP8F	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP8FS	=	"Invalid Message. Try again"
-- FMMC_KEY_TIP8S	=	"Enter Message"
-- FMMC_KEY_TIP9	=	"Enter Outfit Name"
-- FMMC_KEY_TIP9F	=	"Invalid Outfit Name. Try again"
-- FMMC_KEY_TIP9N	=	"Outfit Name"
-- PM_NAME_CHALL	=	"Enter Challenge Name"
function Global.DisplayOnscreenKeyboard(p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength)
	return _in(0x00DC833F2568DBF6, p0, _ts(windowTitle), _ts(p2), _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), maxInputLength)
end

--- DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING
function Global.DisplayOnscreenKeyboardWithLongerInitialString(p0, windowTitle, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength)
	return _in(0xCA78CFA0366592FE, p0, _ts(windowTitle), _i, _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), _ts(defaultConcat4), _ts(defaultConcat5), _ts(defaultConcat6), _ts(defaultConcat7), maxInputLength)
end
Global.N_0xca78cfa0366592fe = Global.DisplayOnscreenKeyboardWithLongerInitialString
Global.DisplayOnscreenKeyboard_2 = Global.DisplayOnscreenKeyboardWithLongerInitialString

--- Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
-- Doesn't need to be called every frame.
-- Preview: https://i.imgur.com/DfqKWfJ.png
-- Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
-- @param toggle the toggle boolean
function Global.DisplayPlayerNameTagsOnBlips(toggle)
	return _in(0x82CEDC33687E1F50, toggle)
end
Global.N_0x82cedc33687e1f50 = Global.DisplayPlayerNameTagsOnBlips

--- If Minimap / Radar should be displayed.
function Global.DisplayRadar(toggle)
	return _in(0xA0EBB943C300E693, toggle)
end

--- Displays the crosshair for this frame.
function Global.DisplaySniperScopeThisFrame()
	return _in(0x73115226F4814E62)
end

--- Purpose of the BOOL currently unknown.
-- Both, true and false, work
function Global.DisplaySystemSigninUi(unk)
	return _in(0x94DD7888C10A979E, unk)
end

--- Toggles fake distant siren sounds
-- @param shouldPlay True will play distand sounds, false will disable them.
function Global.DistantCopCarSirens(shouldPlay)
	return _in(0x552369F549563AD5, shouldPlay)
end
Global.N_0x552369f549563ad5 = Global.DistantCopCarSirens
Global.ForceAmbientSiren = Global.DistantCopCarSirens

--- DO_AUTO_SAVE
function Global.DoAutoSave()
	return _in(0x50EEAAD86232EE55)
end

--- Fades the screen in.
-- duration: The time the fade should take, in milliseconds.
function Global.DoScreenFadeIn(duration)
	return _in(0xD4E8E24955024033, duration)
end

--- Fades the screen out.
-- duration: The time the fade should take, in milliseconds.
function Global.DoScreenFadeOut(duration)
	return _in(0x891B5B39AC6302AF, duration)
end

--- _DOES_AIR_DEFENSE_ZONE_EXIST
function Global.DoesAirDefenseZoneExist(zoneId)
	return _in(0xCD79A550999D7D4F, zoneId, _r)
end
Global.N_0xcd79a550999d7d4f = Global.DoesAirDefenseZoneExist

--- DOES_ANIM_DICT_EXIST
function Global.DoesAnimDictExist(animDict)
	return _in(0x2DA49C3B79856961, _ts(animDict), _r)
end

--- DOES_BLIP_EXIST
function Global.DoesBlipExist(blip)
	return _in(0xA6DB27D19ECBB7DA, blip, _r)
end

--- DOES_BLIP_HAVE_GPS_ROUTE
function Global.DoesBlipHaveGpsRoute(blip)
	return _in(0xDD2238F57B977751, blip, _r)
end
Global.N_0xdd2238f57b977751 = Global.DoesBlipHaveGpsRoute

--- Looks up a camera handle in the current camera pool and returns `true` if the handle is found, otherwise it returns `false`.
-- @param cam The camera handle to look for.
-- @return A boolean value representing whether the camera exists or not.
function Global.DoesCamExist(cam)
	return _in(0xA7A932170592B50E, cam, _r)
end

--- Returns true only when the hook is active, will return false if the magnet is active
function Global.DoesCargobobHavePickUpRope(cargobob)
	return _in(0x1821D91AD4B56108, cargobob, _r)
end
Global.IsCargobobHookActive = Global.DoesCargobobHavePickUpRope

--- Returns true only when the magnet is active, will return false if the hook is active
function Global.DoesCargobobHavePickupMagnet(cargobob)
	return _in(0x6E08BF5B3722BAC9, cargobob, _r)
end
Global.IsCargobobMagnetActive = Global.DoesCargobobHavePickupMagnet
Global.DoesCargobobHavePickupMagnet = Global.DoesCargobobHavePickupMagnet

--- Checks if the context exists for the ped, searching through the voices in its PedVoiceGroup.
-- The final argument can be set to true to allow searching in backup PVGs
-- @return True of the PedVoiceGroup exists, false otherwise.
function Global.DoesContextExistForThisPed(ped, speechName, allowBackupPVGs)
	return _in(0x49B99BF3FDA89A7A, ped, _ts(speechName), allowBackupPVGs, _r)
end
Global.N_0x49b99bf3fda89a7a = Global.DoesContextExistForThisPed
Global.CanPedSpeak = Global.DoesContextExistForThisPed

--- DOES_CUTSCENE_ENTITY_EXIST
function Global.DoesCutsceneEntityExist(cutsceneEntName, modelHash)
	return _in(0x499EF20C5DB25C59, _ts(cutsceneEntName), _ch(modelHash), _r)
end

--- DOES_ENTITY_BELONG_TO_THIS_SCRIPT
function Global.DoesEntityBelongToThisScript(entity, p2)
	return _in(0xDDE6DF5AE89981D2, entity, p2, _r)
end

--- Checks whether an entity exists in the game world.
-- @param entity The entity to check if it exists.
-- @return Whether the entity exists or not.
function Global.DoesEntityExist(entity)
	return _in(0x7239B21A38F536BA, entity, _r)
end

--- NativeDB Introduced: v2699
function Global.DoesEntityHaveAnimDirector(entity)
	return _in(0x2158E81A6AF65EA9, entity, _r)
end

--- DOES_ENTITY_HAVE_DRAWABLE
function Global.DoesEntityHaveDrawable(entity)
	return _in(0x060D6E96F8B8E48D, entity, _r)
end

--- DOES_ENTITY_HAVE_PHYSICS
function Global.DoesEntityHavePhysics(entity)
	return _in(0xDA95EA3317CC5064, entity, _r)
end

--- NativeDB Introduced: v2699
function Global.DoesEntityHaveSkeletonData(entity)
	return _in(0x764EB96874EFFDC1, entity, _r)
end

--- Checks via CVehicleModelInfo
function Global.DoesExtraExist(vehicle, extraId)
	return _in(0x1262D55792428154, vehicle, extraId, _r)
end

--- DOES_GROUP_EXIST
function Global.DoesGroupExist(groupId)
	return _in(0x7C6B0C22F9F40BBE, groupId, _r)
end

--- Used in pi_menu.c. Checks if there is a brief entry for specified value.
-- Values:
-- 0 - Dialogue brief
-- 1 - Help text brief
-- 2 - Mission Objective brief
-- @param briefValue A value indicating brief text.
function Global.DoesLatestBriefStringExist(briefValue)
	return _in(0x5E657EF1099EDD65, briefValue, _r)
end
Global.N_0x5e657ef1099edd65 = Global.DoesLatestBriefStringExist

--- DOES_NAVMESH_BLOCKING_OBJECT_EXIST
function Global.DoesNavmeshBlockingObjectExist(p0)
	return _in(0x0EAEB0DB4B132399, p0, _r)
end
Global.N_0x0eaeb0db4b132399 = Global.DoesNavmeshBlockingObjectExist

--- p5 is usually 0.
function Global.DoesObjectOfTypeExistAtCoords(x, y, z, radius, hash, p5)
	return _in(0xBFA48E2FF417213F, x, y, z, radius, _ch(hash), p5, _r)
end

--- DOES_PARTICLE_FX_LOOPED_EXIST
function Global.DoesParticleFxLoopedExist(ptfxHandle)
	return _in(0x74AFEF0D2E1E409B, ptfxHandle, _r)
end

--- Returns whether the ped's blip is controlled by the game.
-- It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).
function Global.DoesPedHaveAiBlip(ped)
	return _in(0x15B8ECF844EE67ED, ped, _r)
end

--- DOES_PICKUP_EXIST
function Global.DoesPickupExist(pickup)
	return _in(0xAFC1CA75AD4074D1, pickup, _r)
end

--- DOES_PICKUP_OBJECT_EXIST
function Global.DoesPickupObjectExist(pickupObject)
	return _in(0xD9EFB6DBF7DAAEA3, pickupObject, _r)
end

--- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
function Global.DoesPickupOfTypeExistInArea(pickupHash, x, y, z, radius)
	return _in(0xF9C36251F6E48E33, _ch(pickupHash), x, y, z, radius, _r)
end
Global.IsPickupWithinRadius = Global.DoesPickupOfTypeExistInArea

--- DOES_PLAYER_VEH_HAVE_RADIO
function Global.DoesPlayerVehHaveRadio()
	return _in(0x109697E2FFBAC8A1, _r)
end
Global.N_0x109697e2ffbac8a1 = Global.DoesPlayerVehHaveRadio

--- DOES_POP_MULTIPLIER_AREA_EXIST
function Global.DoesPopMultiplierAreaExist(id)
	return _in(0x1327E2FE9746BAEE, id, _r)
end
Global.N_0x1327e2fe9746baee = Global.DoesPopMultiplierAreaExist

--- DOES_POP_MULTIPLIER_SPHERE_EXIST
function Global.DoesPopMultiplierSphereExist(id)
	return _in(0x171BAFB3C60389F4, id, _r)
end
Global.N_0x171bafb3c60389f4 = Global.DoesPopMultiplierSphereExist

--- Returns true if a destructible object with this handle exists, false otherwise.
function Global.DoesRayfireMapObjectExist(object)
	return _in(0x52AF537A0C5B8AAD, object, _r)
end
Global.N_0x52af537a0c5b8aad = Global.DoesRayfireMapObjectExist
Global.DoesDesObjectExist = Global.DoesRayfireMapObjectExist

--- _DOES_RELATIONSHIP_GROUP_EXIST
function Global.DoesRelationshipGroupExist(groupHash)
	return _in(0xCC6E3B6BB69501F1, _ch(groupHash), _r)
end
Global.N_0xcc6e3b6bb69501f1 = Global.DoesRelationshipGroupExist

--- Return if the rope was generated or not by the script where the native is called.
function Global.DoesRopeBelongToThisScript(ropeId)
	return _in(0x271C9D3ACA5D6409, ropeId, _r)
end
Global.N_0x271c9d3aca5d6409 = Global.DoesRopeBelongToThisScript

--- DOES_ROPE_EXIST
function Global.DoesRopeExist(ropeId)
	return _in(0xFD5448BE3111ED96, _ii(ropeId) --[[ may be optional ]], _r)
end

--- _DOES_SCENARIO_BLOCKING_AREA_EXIST
function Global.DoesScenarioBlockingAreaExist(x1, y1, z1, x2, y2, z2)
	return _in(0x8A24B067D175A7BD, x1, y1, z1, x2, y2, z2, _r)
end
Global.N_0x8a24b067d175a7bd = Global.DoesScenarioBlockingAreaExist

--- DOES_SCENARIO_EXIST_IN_AREA
function Global.DoesScenarioExistInArea(x, y, z, radius, b)
	return _in(0x5A59271FFADD33C1, x, y, z, radius, b, _r)
end

--- Occurrences in the b617d scripts:
-- "ARMY_GUARD",
-- "ARMY_HELI",
-- "Cinema_Downtown",
-- "Cinema_Morningwood",
-- "Cinema_Textile",
-- "City_Banks",
-- "Countryside_Banks",
-- "DEALERSHIP",
-- "GRAPESEED_PLANES",
-- "KORTZ_SECURITY",
-- "LOST_BIKERS",
-- "LSA_Planes",
-- "LSA_Planes",
-- "MP_POLICE",
-- "Observatory_Bikers",
-- "POLICE_POUND1",
-- "POLICE_POUND2",
-- "POLICE_POUND3",
-- "POLICE_POUND4",
-- "POLICE_POUND5"
-- "QUARRY",
-- "SANDY_PLANES",
-- "SCRAP_SECURITY",
-- "SEW_MACHINE",
-- "SOLOMON_GATE",
-- "Triathlon_1_Start",
-- "Triathlon_2_Start",
-- "Triathlon_3_Start"
-- Sometimes used with IS_SCENARIO_GROUP_ENABLED:
-- if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
-- else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
function Global.DoesScenarioGroupExist(scenarioGroup)
	return _in(0xF9034C136C9E00D3, _ts(scenarioGroup), _r)
end

--- DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA
function Global.DoesScenarioOfTypeExistInArea(p0, p1, p2, p3, p4, p5)
	return _in(0x0A9D0C2A3BBC86C1, p0, p1, p2, _ts(p3), p4, p5, _r)
end

--- DOES_SCRIPT_EXIST
function Global.DoesScriptExist(scriptName)
	return _in(0xFC04745FBE67C19A, _ts(scriptName), _r)
end

--- DOES_SCRIPT_VEHICLE_GENERATOR_EXIST
function Global.DoesScriptVehicleGeneratorExist(vehicleGenerator)
	return _in(0xF6086BC836400876, vehicleGenerator, _r)
end

--- DOES_SCRIPT_WITH_NAME_HASH_EXIST
function Global.DoesScriptWithNameHashExist(scriptHash)
	return _in(0xF86AA3C56BA31381, _ch(scriptHash), _r)
end
Global.N_0xf86aa3c56ba31381 = Global.DoesScriptWithNameHashExist
Global.DoesScriptWithNameHashExist = Global.DoesScriptWithNameHashExist

--- Checks if there is a cover point at position
function Global.DoesScriptedCoverPointExistAtCoords(x, y, z)
	return _in(0xA98B8E3C088E5A31, x, y, z, _r)
end

--- DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG
function Global.DoesShopPedApparelHaveRestrictionTag(componentHash, restrictionTagHash, componentId)
	return _in(0x341DE7ED1D2A1BFD, _ch(componentHash), _ch(restrictionTagHash), componentId, _r)
end
Global.N_0x341de7ed1d2a1bfd = Global.DoesShopPedApparelHaveRestrictionTag

--- DOES_TEXT_BLOCK_EXIST
function Global.DoesTextBlockExist(gxt)
	return _in(0x1C7302E725259789, _ts(gxt), _r)
end

--- Checks if the passed gxt name exists in the game files.
function Global.DoesTextLabelExist(gxt)
	return _in(0xAC09CA973C564252, _ts(gxt), _r)
end

--- DOES_TIMECYCLE_MODIFIER_HAS_VAR
-- @param modifierName The name of timecycle modifier.
-- @param varName The name of timecycle variable.
-- @return Whether or not variable by name was found on the specified timecycle modifier.
function Global.DoesTimecycleModifierHasVar(modifierName, varName)
	return _in(0xc53bb6d3, _ts(modifierName), _ts(varName), _r)
end

--- Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
function Global.DoesVehicleAllowRappel(vehicle)
	return _in(0x4E417C547182C84D, vehicle, _r)
end
Global.N_0x4e417c547182c84d = Global.DoesVehicleAllowRappel

--- DOES_VEHICLE_EXIST_WITH_DECORATOR
function Global.DoesVehicleExistWithDecorator(decorator)
	return _in(0x956B409B984D9BF7, _ts(decorator), _r)
end

--- DOES_VEHICLE_HAVE_CREW_EMBLEM
function Global.DoesVehicleHaveCrewEmblem(vehicle, p1)
	return _in(0x060D935D3981A275, vehicle, p1, _r)
end
Global.HasVehicleGotDecal = Global.DoesVehicleHaveCrewEmblem
Global.DoesVehicleHaveDecal = Global.DoesVehicleHaveCrewEmblem

--- NativeDB Introduced: v1180
function Global.DoesVehicleHaveLandingGear(vehicle)
	return _in(0xE43701C36CAFF1A4, vehicle, _r)
end
Global.N_0xe43701c36caff1a4 = Global.DoesVehicleHaveLandingGear
Global.GetVehicleHasLandingGear = Global.DoesVehicleHaveLandingGear

--- DOES_VEHICLE_HAVE_ROOF
function Global.DoesVehicleHaveRoof(vehicle)
	return _in(0x8AC862B0B32C5B80, vehicle, _r)
end

--- Determines whether the specified vehicle is equipped with a searchlight.
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param vehicle The vehicle to check for the presence of a searchlight.
-- @return Returns `true` if the vehicle has a searchlight, `false` otherwise.
function Global.DoesVehicleHaveSearchlight(vehicle)
	return _in(0x99015ED7DBEA5113, vehicle, _r)
end
Global.DoesVehicleHaveSearchlight = Global.DoesVehicleHaveSearchlight

--- Maximum amount of vehicles with vehicle stuck check appears to be 16.
function Global.DoesVehicleHaveStuckVehicleCheck(vehicle)
	return _in(0x57E4C39DE5EE8470, vehicle, _r)
end

--- DOES_VEHICLE_HAVE_WEAPONS
function Global.DoesVehicleHaveWeapons(vehicle)
	return _in(0x25ECB9F8017D98E0, vehicle, _r)
end

--- Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
-- ```
-- ```
-- NativeDB Introduced: v1493
function Global.DoesVehicleTyreExist(vehicle, tyreIndex)
	return _in(0x534E36D4DB9ECC5D, vehicle, tyreIndex, _r)
end
Global.N_0x534e36d4db9ecc5d = Global.DoesVehicleTyreExist

--- Checks whether the vehicle consumes fuel. The check is done based on petrol tank volume and vehicle type. Bicycles and vehicles with petrol tank volume equal to zero (only bicycles by default) do not use fuel. All other vehicles do.
-- You can customize petrol tank volume using [`SET_HANDLING_FLOAT`](#\_0x90DD01C)/[`SET_VEHICLE_HANDLING_FLOAT`](#\_0x488C86D2) natives with `fieldName` equal to `fPetrolTankVolume`.
-- @param vehicle The vehicle handle.
-- @return True if the vehicle uses fuel to move. False otherwise.
function Global.DoesVehicleUseFuel(vehicle)
	return _in(0xef30a696, vehicle, _r)
end

--- DOES_WEAPON_TAKE_WEAPON_COMPONENT
function Global.DoesWeaponTakeWeaponComponent(weaponHash, componentHash)
	return _in(0x5CEE3DF569CECAB0, _ch(weaponHash), _ch(componentHash), _r)
end

--- DONT_RENDER_IN_GAME_UI
function Global.DontRenderInGameUi(p0)
	return _in(0x22A249A53034450A, p0)
end
Global.N_0x22a249a53034450a = Global.DontRenderInGameUi

--- When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
function Global.DontTiltMinimapThisFrame()
	return _in(0x6D14BFDC33B34F55)
end
Global.CenterPlayerOnRadarThisFrame = Global.DontTiltMinimapThisFrame

--- Hardcoded not to work in multiplayer environments.
-- Native name between `SET_LOCAL_PLAYER_VISIBLE_LOCALLY` & `SET_MAX_WANTED_LEVEL`.
-- ```
-- OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked
-- OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked
-- ```
-- @param locked tells the game whether or not the door is locked
-- @param xRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- @param yRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- @param zRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
function Global.DoorControl(modelHash, x, y, z, locked, xRotMult, yRotMult, zRotMult)
	return _in(0x9B12F9A24FABEDB0, _ch(modelHash), x, y, z, locked, xRotMult, yRotMult, zRotMult)
end

--- Search radius: 0.5
-- @param x The X coordinate of the door object
-- @param y The Y coordinate of the door object
-- @param z The Z coordinate of the door object
-- @param modelHash Entity model hash
function Global.DoorSystemFindExistingDoor(x, y, z, modelHash, doorOutPointer)
	return _in(0x589F80B325CC82C5, x, y, z, _ch(modelHash), _ii(doorOutPointer) --[[ may be optional ]], _r)
end
Global.N_0x589f80b325cc82c5 = Global.DoorSystemFindExistingDoor

--- Returns a list of door system entries: a door system hash (see [ADD_DOOR_TO_SYSTEM](#\_0x6F8838D03D1DC226)) and its object handle.
-- The data returned adheres to the following layout:
-- ```
-- [{doorHash1, doorHandle1}, ..., {doorHashN, doorHandleN}]
-- ```
-- @return An object containing a list of door system entries.
function Global.DoorSystemGetActive()
	return _in(0xf65bba4b, _ro)
end

--- NativeDB Introduced: v1868
function Global.DoorSystemGetAutomaticDistance(doorHash)
	return _in(0xE851471AEFC3374F, _ch(doorHash), _rf)
end

--- DOOR_SYSTEM_GET_DOOR_PENDING_STATE
function Global.DoorSystemGetDoorPendingState(doorHash)
	return _in(0x4BC2854478F3A749, _ch(doorHash), _ri)
end
Global.N_0x4bc2854478f3a749 = Global.DoorSystemGetDoorPendingState

--- DOOR_SYSTEM_GET_DOOR_STATE
function Global.DoorSystemGetDoorState(doorHash)
	return _in(0x160AA1B32F6139B8, _ch(doorHash), _ri)
end
Global.N_0x160aa1b32f6139b8 = Global.DoorSystemGetDoorState

--- DOOR_SYSTEM_GET_IS_PHYSICS_LOADED
function Global.DoorSystemGetIsPhysicsLoaded(doorHash)
	return _in(0xDF97CDD4FC08FD34, _ch(doorHash), _r)
end
Global.N_0xdf97cdd4fc08fd34 = Global.DoorSystemGetIsPhysicsLoaded

--- DOOR_SYSTEM_GET_OPEN_RATIO
function Global.DoorSystemGetOpenRatio(doorHash)
	return _in(0x65499865FCA6E5EC, _ch(doorHash), _rf)
end
Global.N_0x65499865fca6e5ec = Global.DoorSystemGetOpenRatio

--- DOOR_SYSTEM_GET_SIZE
-- @return The number of doors registered in the system
function Global.DoorSystemGetSize()
	return _in(0x237613b3, _ri)
end

--- DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function Global.DoorSystemSetAutomaticDistance(doorHash, distance, requestDoor, forceUpdate)
	return _in(0x9BA001CB45CBF627, _ch(doorHash), distance, requestDoor, forceUpdate)
end
Global.N_0x9ba001cb45cbf627 = Global.DoorSystemSetAutomaticDistance

--- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function Global.DoorSystemSetAutomaticRate(doorHash, rate, requestDoor, forceUpdate)
	return _in(0x03C27E13B42A0E82, _ch(doorHash), rate, requestDoor, forceUpdate)
end
Global.N_0x03c27e13b42a0e82 = Global.DoorSystemSetAutomaticRate

--- Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.
-- ### Door lock states: (v323)
-- *   **0**: UNLOCKED
-- *   **1**: LOCKED
-- *   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
-- *   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
-- *   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
-- *   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
-- *   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
-- @param requestDoor On true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
-- @param forceUpdate On true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
function Global.DoorSystemSetDoorState(doorHash, state, requestDoor, forceUpdate)
	return _in(0x6BAB9442830C7F53, _ch(doorHash), state, requestDoor, forceUpdate)
end
Global.N_0x6bab9442830c7f53 = Global.DoorSystemSetDoorState
Global.SetDoorAccelerationLimit = Global.DoorSystemSetDoorState

--- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Door system identifier
function Global.DoorSystemSetHoldOpen(doorHash, toggle)
	return _in(0xD9B71952F78A2640, _ch(doorHash), toggle)
end
Global.N_0xd9b71952f78a2640 = Global.DoorSystemSetHoldOpen

--- Sets the ajar angle of a door.
-- Ranges from -1.0 to 1.0, and 0.0 is closed / default.
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function Global.DoorSystemSetOpenRatio(doorHash, ajar, requestDoor, forceUpdate)
	return _in(0xB6E6FBA95C7324AC, _ch(doorHash), ajar, requestDoor, forceUpdate)
end
Global.N_0xb6e6fba95c7324ac = Global.DoorSystemSetOpenRatio
Global.SetDoorAjarAngle = Global.DoorSystemSetOpenRatio

--- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function Global.DoorSystemSetSpringRemoved(doorHash, removed, requestDoor, forceUpdate)
	return _in(0xC485E07E4F0B7958, _ch(doorHash), removed, requestDoor, forceUpdate)
end
Global.N_0xc485e07e4f0b7958 = Global.DoorSystemSetSpringRemoved

--- Must be called each frame, will play at specified position on screen when called with [`_PLAY_BINK_MOVIE`](#\_0x70D2CC8A542A973C)
-- @param binkMovie The movie to be drawn (from [`_SET_BINK_MOVIE`](#\_0x338D9F609FD632DB)).
-- @param posX The centered x position of the movie (0.0 - 1.0).
-- @param posY The centered y position of the movie (0.0 - 1.0).
-- @param scaleX The x scale of the movie (0.0 - 1.0).
-- @param scaleY The y scale of the movie (0.0 - 1.0).
-- @param rotation The rotation of the movie (0.0 - 360.0).
-- @param r The red value of the movie (0 - 255).
-- @param g The green value of the movie (0 - 255).
-- @param b The blue value of the movie (0 - 255).
-- @param a The alpha value of the movie (0 - 255).
function Global.DrawBinkMovie(binkMovie, posX, posY, scaleX, scaleY, rotation, r, g, b, a)
	return _in(0x7118E83EEB9F7238, binkMovie, posX, posY, scaleX, scaleY, rotation, r, g, b, a)
end

--- x,y,z = start pos
-- x2,y2,z2 = end pos
-- Draw's a 3D Box between the two x,y,z coords.
-- --------------
-- Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawBox(Vector3 a, Vector3 b, Color col)
-- {
-- Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
-- }
function Global.DrawBox(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
	return _in(0xD3A9971CADAC7252, x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugBox(x1, y1, z1, x2, y2, z2, r, g, b, a)
	return _in(0x083A2CA4F2E573BD, x1, y1, z1, x2, y2, z2, r, g, b, a)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugCross(x, y, z, size, red, green, blue, alpha)
	return _in(0x73B1189623049839, x, y, z, size, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugLine(x1, y1, z1, x2, y2, z2, r, g, b, a)
	return _in(0x7FDFADE676AA3CB0, x1, y1, z1, x2, y2, z2, r, g, b, a)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugLineWithTwoColours(x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
	return _in(0xD8B9A8AC5608FF94, x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugSphere(x, y, z, radius, red, green, blue, alpha)
	return _in(0xAAD68E1AB39DA632, x, y, z, radius, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugText(text, x, y, z, red, green, blue, alpha)
	return _in(0x3903E216620488E8, _ts(text), x, y, z, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugText_2d(text, x, y, z, red, green, blue, alpha)
	return _in(0xA3BB2E9555C05A8F, _ts(text), x, y, z, red, green, blue, alpha)
end

--- Draws a gizmo. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
-- Matrix layout is as follows:
-- *   Element \[0], \[1] and \[2] should represent the right vector.
-- *   Element \[4], \[5] and \[6] should represent the forward vector.
-- *   Element \[8], \[9] and \[10] should represent the up vector.
-- *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
-- *   All other elements should be \[0, 0, 0, 1].
-- @param matrixPtr A mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.
-- @param id A unique identifier of what the gizmo is affecting.
-- @return Whether or not the matrix was modified.
function Global.DrawGizmo(matrixPtr, id)
	return _in(0xeb2edca2, matrixPtr, _ts(id), _r)
end

--- Draw a glow sphere this frame. Up to 256 per single frame.
-- @param posX Position X.
-- @param posY Position Y.
-- @param posZ Position Z.
-- @param radius Sphere radius.
-- @param colorR Red.
-- @param colorG Green.
-- @param colorB Blue.
-- @param intensity Intensity.
-- @param invert Invert rendering.
-- @param marker Draw as a marker, otherwise as an overlay.
function Global.DrawGlowSphere(posX, posY, posZ, radius, colorR, colorG, colorB, intensity, invert, marker)
	return _in(0xbd25ec89, posX, posY, posZ, radius, colorR, colorG, colorB, intensity, invert, marker)
end

--- Similar to [\_DRAW_SPRITE](#\_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
-- These seem to be the only dicts ever requested by this native:
-- ```
-- prop_screen_biker_laptop
-- Prop_Screen_GR_Disruption
-- Prop_Screen_TaleOfUs
-- prop_screen_nightclub
-- Prop_Screen_IE_Adhawk
-- prop_screen_sm_free_trade_shipping
-- prop_screen_hacker_truck
-- MPDesktop
-- Prop_Screen_Nightclub
-- And a few others
-- ```
-- @param textureDict Name of texture dictionary to load texture from
-- @param textureName Name of texture to load from texture dictionary
-- @param screenX Screen X
-- @param screenY Screen Y
-- @param width Scale X
-- @param height Scale Y
-- @param heading Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- @param red Color
-- @param green Color
-- @param blue Color
-- @param alpha Opacity level
function Global.DrawInteractiveSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)
	return _in(0x2BC54A8188768488, _ts(textureDict), _ts(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha)
end
Global.N_0x2bc54a8188768488 = Global.DrawInteractiveSprite

--- DRAW_LIGHT_WITH_RANGE
function Global.DrawLightWithRange(posX, posY, posZ, colorR, colorG, colorB, range, intensity)
	return _in(0xF2A1B2771A01DBD4, posX, posY, posZ, colorR, colorG, colorB, range, intensity)
end

--- _DRAW_LIGHT_WITH_RANGE_AND_SHADOW
function Global.DrawLightWithRangeAndShadow(x, y, z, r, g, b, range, intensity, shadow)
	return _in(0xF49E9A9716A04595, x, y, z, r, g, b, range, intensity, shadow)
end
Global.DrawLightWithRangeWithShadow = Global.DrawLightWithRangeAndShadow

--- Draws a depth-tested line from one point to another.
-- ----------------
-- x1, y1, z1 : Coordinates for the first point
-- x2, y2, z2 : Coordinates for the second point
-- r, g, b, alpha : Color with RGBA-Values
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawLine(Vector3 from, Vector3 to, Color col)
-- {
-- Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
-- }
function Global.DrawLine(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
	return _in(0x6B7256074AE34680, x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
end

--- Like DRAW_RECT, but it's a line.
-- @param x1 First x.
-- @param y1 First y.
-- @param x2 Second x.
-- @param y2 Second y.
-- @param width Width of line.
-- @param r Red.
-- @param g Green.
-- @param b Blue.
-- @param a Alpha.
function Global.DrawLine_2d(x1, y1, x2, y2, width, r, g, b, a)
	return _in(0xb856a90, x1, y1, x2, y2, width, r, g, b, a)
end

--- DRAW_LOW_QUALITY_PHOTO_TO_PHONE
function Global.DrawLowQualityPhotoToPhone(p0, p1)
	return _in(0x1072F115DAB0717E, p0, p1)
end
Global.N_0x1072f115dab0717e = Global.DrawLowQualityPhotoToPhone

--- Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.
-- There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
-- @param type The marker type to draw.
-- @param posX The X coordinate to draw the marker at.
-- @param posY The Y coordinate to draw the marker at.
-- @param posZ The Z coordinate to draw the marker at.
-- @param dirX The X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirY The Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirZ The Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param rotX The X rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotY The Y rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotZ The Z rotation for the marker. Only used if the direction vector is 0.0.
-- @param scaleX The scale for the marker on the X axis.
-- @param scaleY The scale for the marker on the Y axis.
-- @param scaleZ The scale for the marker on the Z axis.
-- @param red The red component of the marker color, on a scale from 0-255.
-- @param green The green component of the marker color, on a scale from 0-255.
-- @param blue The blue component of the marker color, on a scale from 0-255.
-- @param alpha The alpha component of the marker color, on a scale from 0-255.
-- @param bobUpAndDown Whether or not the marker should slowly animate up/down.
-- @param faceCamera Whether the marker should be a 'billboard', as in, should constantly face the camera.
-- @param p19 Typically set to `2`. Does not seem to matter directly.
-- @param rotate Rotations only apply to the heading.
-- @param textureDict A texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'
-- @param textureName A texture name in `textureDict` to draw the marker with, or NULL. Example: 'PuttingMarker'
-- @param drawOnEnts Whether or not the marker should draw on intersecting entities.
function Global.DrawMarker(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts)
	return _in(0x28477EC23D892089, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts)
end

--- NativeDB Added Parameter 26: BOOL p25
function Global.DrawMarker_2(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24)
	return _in(0xE82728F0DE75D13A, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts, p24)
end
Global.N_0xe82728f0de75d13a = Global.DrawMarker_2

--- x/y/z - Location of a vertex (in world coords), presumably.
-- ----------------
-- x1, y1, z1     : Coordinates for the first point
-- x2, y2, z2     : Coordinates for the second point
-- x3, y3, z3     : Coordinates for the third point
-- r, g, b, alpha : Color with RGBA-Values
-- Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
-- But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
-- {
-- Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
-- }
-- BTW: Intersecting triangles are not supported: They overlap in the order they were called.
function Global.DrawPoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
	return _in(0xAC26716048436851, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
end

--- Draws a rectangle on the screen.
-- -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
-- -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
-- -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
-- -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
-- -R: Red part of the color. (0-255)
-- -G: Green part of the color. (0-255)
-- -B: Blue part of the color. (0-255)
-- -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
-- The total number of rectangles to be drawn in one frame is apparently limited to 399.
-- ```
-- ```
-- NativeDB Added Parameter 9: BOOL p8
function Global.DrawRect(x, y, width, height, r, g, b, a)
	return _in(0x3A618A217E5154F0, x, y, width, height, r, g, b, a)
end

--- DRAW_RECT, but with a rotation. Seems to be broken.
function Global.DrawRectRotated(x, y, width, height, rotation, r, g, b, a)
	return _in(0xec37c168, x, y, width, height, rotation, r, g, b, a)
end

--- DRAW_SCALEFORM_MOVIE
function Global.DrawScaleformMovie(scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)
	return _in(0x54972ADAF0294A93, scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)
end

--- unk is not used so no need
function Global.DrawScaleformMovieFullscreen(scaleform, red, green, blue, alpha, unk)
	return _in(0x0DF606929C105BE1, scaleform, red, green, blue, alpha, unk)
end

--- DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED
function Global.DrawScaleformMovieFullscreenMasked(scaleform1, scaleform2, red, green, blue, alpha)
	return _in(0xCF537FDE4FBD4CE5, scaleform1, scaleform2, red, green, blue, alpha)
end

--- DRAW_SCALEFORM_MOVIE_3D
function Global.DrawScaleformMovie_3d(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)
	return _in(0x87D51D72255D4E78, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)
end
Global.N_0x87d51d72255d4e78 = Global.DrawScaleformMovie_3d

--- DRAW_SCALEFORM_MOVIE_3D_SOLID
function Global.DrawScaleformMovie_3dSolid(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)
	return _in(0x1CE592FDC749D6F5, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)
end
Global.N_0x1ce592fdc749d6f5 = Global.DrawScaleformMovie_3dSolid
Global.DrawScaleformMovie_3dNonAdditive = Global.DrawScaleformMovie_3dSolid

--- It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
-- p0 was always "CELEBRATION_WINNER"
function Global.DrawShowroom(p0, ped, p2, posX, posY, posZ)
	return _in(0x98C4FE6EC34154CA, _ts(p0), ped, p2, posX, posY, posZ, _r)
end
Global.N_0x98c4fe6ec34154ca = Global.DrawShowroom

--- Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
-- Example [image](https://imgur.com/nCbtS4H):
-- ```lua
-- DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
-- ```
-- @param x X coordinate of the sphere
-- @param y Y coordinate of the sphere
-- @param z Z coordinate of the sphere
-- @param radius Size of the sphere, `1.0` = 1 meter
-- @param r Color red `0`-`255`
-- @param g Color green `0`-`255`
-- @param b Color blue `0`-`255`
-- @param opacity Opacity from `0.0`-`1.0`
function Global.DrawSphere(x, y, z, radius, r, g, b, opacity)
	return _in(0x799017F9E3B10112, x, y, z, radius, r, g, b, opacity)
end
Global.N_0x799017f9e3b10112 = Global.DrawSphere

--- Parameters:
-- * pos - coordinate where the spotlight is located
-- * dir - the direction vector the spotlight should aim at from its current position
-- * r,g,b - color of the spotlight
-- * distance - the maximum distance the light can reach
-- * brightness - the brightness of the light
-- * roundness - "smoothness" of the circle edge
-- * radius - the radius size of the spotlight
-- * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
-- Example in C# (spotlight aims at the closest vehicle):
-- Vector3 myPos = Game.Player.Character.Position;
-- Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
-- Vector3 destinationCoords = nearest.Position;
-- Vector3 dirVector = destinationCoords - myPos;
-- dirVector.Normalize();
-- Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
function Global.DrawSpotLight(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
	return _in(0xD0F64B265C8C8B33, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
end

--- _DRAW_SPOT_LIGHT_WITH_SHADOW
function Global.DrawSpotLightWithShadow(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
	return _in(0x5BCA583A583194DB, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
end

--- Draws a 2D sprite on the screen.
-- Parameters:
-- textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
-- textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
-- screenX/Y - Screen offset (0.5 = center)
-- scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
-- heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- red,green,blue - Sprite color (default = 255/255/255)
-- alpha - opacity level
-- ```
-- ```
-- NativeDB Added Parameter 12: BOOL p11
function Global.DrawSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)
	return _in(0xE7FFAE5EBF23D890, _ts(textureDict), _ts(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha)
end

--- Used for drawling Deadline trailing lights, see deadline.ytd
-- For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
function Global.DrawSpritePoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)
	return _in(0x29280002282F1928, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, _ts(textureDict), _ts(textureName), u1, v1, w1, u2, v2, w2, u3, v3, w3)
end
Global.N_0x29280002282f1928 = Global.DrawSpritePoly

--- Used for drawling Deadline trailing lights, see deadline.ytd
-- Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
-- For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
function Global.DrawSpritePoly_2(x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)
	return _in(0x736D7AA1B750856B, x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, _ts(textureDict), _ts(textureName), u1, v1, w1, u2, v2, w2, u3, v3, w3)
end
Global.N_0x736d7aa1b750856b = Global.DrawSpritePoly_2

--- Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
-- u1, v1 - texture coordinates for the top-left corner
-- u2, v2 - texture coordinates for the bottom-right corner
-- ```
-- NativeDB Introduced: v1868
-- ```
function Global.DrawSpriteUv(textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha)
	return _in(0x95812F9B26074726, _ts(textureDict), _ts(textureName), x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha)
end

--- All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
-- "act_cinema.ysc", line 1483:
-- HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
-- HUD::SET_TEXT_RENDER_ID(l_AE);
-- GRAPHICS::_0x61BB1D9B3A95D802(4);
-- GRAPHICS::_0xC6372ECD45D73BCD(1);
-- if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
-- } else {
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
-- }
-- "am_mp_property_int.ysc", line 102545:
-- if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
-- if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
-- HUD::SET_TEXT_RENDER_ID(a_2._f1);
-- GRAPHICS::_0x61BB1D9B3A95D802(4);
-- GRAPHICS::_0xC6372ECD45D73BCD(1);
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
-- if (GRAPHICS::GET_TV_CHANNEL() == -1) {
-- sub_a8fa5(a_2, 1);
-- } else {
-- sub_a8fa5(a_2, 1);
-- GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
-- }
-- HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
-- }
-- }
function Global.DrawTvChannel(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
	return _in(0xFDDC2B4ED3C69DF0, xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
end

--- DROP_AMBIENT_PROP
function Global.DropAmbientProp(ped)
	return _in(0xAFF4710E2A0A6C12, ped)
end
Global.N_0xaff4710e2a0a6c12 = Global.DropAmbientProp

--- DUPLICATE_FUNCTION_REFERENCE
function Global.DuplicateFunctionReference(referenceIdentity)
	return _in(0xf4e2079d, _ts(referenceIdentity), _s)
end

--- _EJECT_JB700_ROOF
function Global.EjectJb700Roof(vehicle, x, y, z)
	return _in(0xE38CB9D7D39FDBCC, vehicle, x, y, z)
end
Global.N_0xe38cb9d7d39fdbcc = Global.EjectJb700Roof

--- Will disable a plane or a helicopter's need to swerve around object in its heightmap when using TASK_PLANE_MISSION or other AI / Pilot behavior.  Will ensure plane flys directly to it's destination or die trying! This native does NOT need to be called every frame, but instead, just called once on the vehicle (NOT THE PED) you're trying to disable avoidance for!
-- @param vehicle The vehicle handle to toggle obstacle avoidance for.
-- @param avoidObstacles `true` / `false` to enable/disable heightmap obstacle avoidance respectively!
function Global.EnableAircraftObstacleAvoidance(vehicle, avoidObstacles)
	return _in(0x8AA9180DE2FEDD45, vehicle, avoidObstacles)
end
Global.N_0x8aa9180de2fedd45 = Global.EnableAircraftObstacleAvoidance

--- Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
-- This native does not seem to work, however by using the [ANIMPOSTFX_PLAY](#\_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
function Global.EnableAlienBloodVfx(toggle)
	return _in(0x9DCE1F0F78260875, toggle)
end
Global.N_0x9dce1f0f78260875 = Global.EnableAlienBloodVfx

--- padIndex:
-- 0 - PLAYER_CONTROL
-- 1 - Unknown
-- 2 - FRONTEND_CONTROL
-- @param padIndex The control system instance to use.
function Global.EnableAllControlActions(padIndex)
	return _in(0xA5FFE9B05F199DE7, padIndex)
end

--- If true, this native will create purple explosions upon projectile impact, add comic-like PTFX when firing a weapon, create a sound on bullet impact and have its own "blood effect".
-- If the PTFX asset "scr_rcbarry2" is not requested using ([`RequestNamedPtfxAsset`](#\_0xD821490579791273)) then this native **will not work as intended**.
-- Excerpt from fm_content_drug_lab_work.c:
-- ```
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_rcbarry2");
-- if (STREAMING::HAS_NAMED_PTFX_ASSET_LOADED("scr_rcbarry2"))
-- {
-- GRAPHICS::ENABLE_CLOWN_BLOOD_VFX(true);
-- AUDIO::START_AUDIO_SCENE("DLC_CM2022_DRUG_TRIP_SPRINKLERS_SCENE");
-- func_720(26);
-- }
-- ```
-- @param toggle Whether to toggle the clown VFX on or off.
function Global.EnableClownBloodVfx(toggle)
	return _in(0xD821490579791273, toggle)
end
Global.SetCameraEndtime = Global.EnableClownBloodVfx

--- control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Control.cs
-- and
-- https://docs.fivem.net/game-references/controls/
-- 0, 1 and 2 used in the scripts.
-- Control values from the decompiled scripts:
-- 0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,
-- 37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100
-- ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19
-- 0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2
-- 20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,
-- 261,262,263,264,286,287,288,289,337,338,339,340,341,342,343
-- INPUTGROUP_MOVE
-- INPUTGROUP_LOOK
-- INPUTGROUP_WHEEL
-- INPUTGROUP_CELLPHONE_NAVIGATE
-- INPUTGROUP_CELLPHONE_NAVIGATE_UD
-- INPUTGROUP_CELLPHONE_NAVIGATE_LR
-- INPUTGROUP_FRONTEND_DPAD_ALL
-- INPUTGROUP_FRONTEND_DPAD_UD
-- INPUTGROUP_FRONTEND_DPAD_LR
-- INPUTGROUP_FRONTEND_LSTICK_ALL
-- INPUTGROUP_FRONTEND_RSTICK_ALL
-- INPUTGROUP_FRONTEND_GENERIC_UD
-- INPUTGROUP_FRONTEND_GENERIC_LR
-- INPUTGROUP_FRONTEND_GENERIC_ALL
-- INPUTGROUP_FRONTEND_BUMPERS
-- INPUTGROUP_FRONTEND_TRIGGERS
-- INPUTGROUP_FRONTEND_STICKS
-- INPUTGROUP_SCRIPT_DPAD_ALL
-- INPUTGROUP_SCRIPT_DPAD_UD
-- INPUTGROUP_SCRIPT_DPAD_LR
-- INPUTGROUP_SCRIPT_LSTICK_ALL
-- INPUTGROUP_SCRIPT_RSTICK_ALL
-- INPUTGROUP_SCRIPT_BUMPERS
-- INPUTGROUP_SCRIPT_TRIGGERS
-- INPUTGROUP_WEAPON_WHEEL_CYCLE
-- INPUTGROUP_FLY
-- INPUTGROUP_SUB
-- INPUTGROUP_VEH_MOVE_ALL
-- INPUTGROUP_CURSOR
-- INPUTGROUP_CURSOR_SCROLL
-- INPUTGROUP_SNIPER_ZOOM_SECONDARY
-- INPUTGROUP_VEH_HYDRAULICS_CONTROL
-- Took those in IDA Pro.Not sure in which order they go
function Global.EnableControlAction(padIndex, control, enable)
	return _in(0x351220255D64C155, padIndex, control, enable)
end

--- Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
function Global.EnableCrosshairThisFrame()
	return _in(0xEA7F0AD7E9BA676F)
end

--- Enables or disables the specified 'dispatch service' type. 'Dispatch services' are used for spawning AI response peds/vehicles for events such as a fire in the street (type 3 - DT_FireDepartment), or gunfire in a gang area (type 11 - DT_Gangs).
-- List of dispatch services:
-- ```cpp
-- enum DispatchType
-- {
-- DT_Invalid = 0,
-- DT_PoliceAutomobile,
-- DT_PoliceHelicopter,
-- DT_FireDepartment,
-- DT_SwatAutomobile,
-- DT_AmbulanceDepartment,
-- DT_PoliceRiders,
-- DT_PoliceVehicleRequest,
-- DT_PoliceRoadBlock,
-- DT_PoliceAutomobileWaitPulledOver,
-- DT_PoliceAutomobileWaitCruising,
-- DT_Gangs,
-- DT_SwatHelicopter,
-- DT_PoliceBoat,
-- DT_ArmyVehicle,
-- DT_BikerBackup = 15
-- };
-- ```
-- Note that 'dispatch service' has nothing to do with the police scanner (audio), to toggle that, use [SET_AUDIO_FLAG](#\_0xB9EFD5C25018725A) with `'PoliceScannerDisabled'`.
-- @param dispatchService The ID of the dispatch service to toggle.
-- @param toggle True to enable the dispatch service, false to disable the dispatch service.
function Global.EnableDispatchService(dispatchService, toggle)
	return _in(0xDC0F817884CDD856, dispatchService, toggle)
end
Global.N_0xdc0f817884cdd856 = Global.EnableDispatchService

--- Enables the editor runtime mode, changing game behavior to track entity metadata.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
function Global.EnableEditorRuntime()
	return _in(0xc383871d)
end

--- ENABLE_*
function Global.EnableEntityUnk(entity)
	return _in(0x6CE177D014502E8A, entity)
end
Global.N_0x6ce177d014502e8a = Global.EnableEntityUnk

--- This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
function Global.EnableExteriorCullModelThisFrame(mapObjectHash)
	return _in(0xA97F257D0151A6AB, _ch(mapObjectHash))
end
Global.N_0xa97f257d0151a6ab = Global.EnableExteriorCullModelThisFrame
Global.HideMapObjectThisFrame = Global.EnableExteriorCullModelThisFrame

--- Enables laser sight on any weapon.
-- It doesn't work. Neither on tick nor OnKeyDown
function Global.EnableLaserSightRendering(toggle)
	return _in(0xC8B46D7727D864AA, toggle)
end

--- Enable a custom moon cycle, allowing control of which lunar phase the moon is in.
-- Valid values are from `0.0` to `1.0`, with `0.5` representing a full moon.
-- | Value |   Lunar Phase   |
-- | :---: | :-------------: |
-- | `0.1` | Waxing Crescent |
-- | `0.2` |  First Quarter  |
-- | `0.3` | Waxing Gibbous  |
-- | `0.5` |    Full Moon    |
-- | `0.7` | Waning Gibbous  |
-- | `0.8` |  Third Quarter  |
-- | `0.9` | Waning Crescent |
-- The moon phase can be disabled with [DISABLE_MOON_CYCLE_OVERRIDE](#\_0x2BF72AD5B41AA739)
-- @param phase A value indicating the moon cycle.
function Global.EnableMoonCycleOverride(phase)
	return _in(0x2C328AF17210F009, phase)
end
Global.N_0x2c328af17210f009 = Global.EnableMoonCycleOverride
Global.SetExtraTimecycleModifierStrength = Global.EnableMoonCycleOverride

--- ENABLE_MOVIE_KEYFRAME_WAIT
function Global.EnableMovieKeyframeWait(toggle)
	return _in(0x74C180030FDE4B69, toggle)
end
Global.N_0x74c180030fde4b69 = Global.EnableMovieKeyframeWait

--- ENABLE_MOVIE_SUBTITLES
function Global.EnableMovieSubtitles(toggle)
	return _in(0x873FA65C778AD970, toggle)
end

--- ENABLE_SAVING_IN_GARAGE
function Global.EnableSavingInGarage(garageHash, toggle)
	return _in(0xF2E1A7133DD356A6, _ch(garageHash), toggle)
end
Global.N_0xf2e1a7133dd356a6 = Global.EnableSavingInGarage

--- ENABLE_SCRIPT_BRAIN_SET
function Global.EnableScriptBrainSet(brainSet)
	return _in(0x67AA4D73F0CFA86B, brainSet)
end

--- _ENABLE_SCRIPT_CULL_MODEL_THIS_FRAME
function Global.EnableScriptCullModelThisFrame(mapObjectHash)
	return _in(0x50C375537449F369, _ch(mapObjectHash))
end
Global.N_0x50c375537449f369 = Global.EnableScriptCullModelThisFrame

--- NativeDB Added Parameter 3: Any p2
function Global.EnableSpecialAbility(player, toggle)
	return _in(0x181EC197DAEFE121, player, toggle)
end

--- Enable or disable the plane stall warning sounds
function Global.EnableStallWarningSounds(vehicle, enable)
	return _in(0xC15907D667F7CFB2, vehicle, enable)
end
Global.N_0xc15907d667f7cfb2 = Global.EnableStallWarningSounds

--- Enable the stunt jump audio detection code
-- This native is meant to be called per-frame for as long as detection is wanted.
function Global.EnableStuntJumpAudio()
	return _in(0xB81CF134AEB56FFB)
end
Global.N_0xb81cf134aeb56ffb = Global.EnableStuntJumpAudio

--- ENABLE_STUNT_JUMP_SET
function Global.EnableStuntJumpSet(p0)
	return _in(0xE369A5783B866016, p0)
end

--- ENABLE_SWITCH_PAUSE_BEFORE_DESCENT
function Global.EnableSwitchPauseBeforeDescent()
	return _in(0xD4793DFF3AF2ABCD)
end
Global.N_0xd4793dff3af2abcd = Global.EnableSwitchPauseBeforeDescent

--- Makes the ped jump around like they're in a tennis match
function Global.EnableTennisMode(ped, toggle, p2)
	return _in(0x28A04B411933F8A6, ped, toggle, p2)
end

--- Enable or disable exhaust pops on the given vehicle.
-- @param toggle Enables or disables exaust pops.
function Global.EnableVehicleExhaustPops(vehicle, toggle)
	return _in(0x2BE4BC731D039D5A, vehicle, toggle)
end
Global.N_0x2be4bc731d039d5a = Global.EnableVehicleExhaustPops

--- ENABLE_VEHICLE_FANBELT_DAMAGE
-- @param enableFanbeltDamage Enables fanbelt damage
function Global.EnableVehicleFanbeltDamage(vehicle, enableFanbeltDamage)
	return _in(0x1C073274E065C6D2, vehicle, enableFanbeltDamage)
end
Global.N_0x1c073274e065c6d2 = Global.EnableVehicleFanbeltDamage

--- END_FIND_KVP
-- @param handle The KVP find handle returned from [START_FIND_KVP](#\_0xDD379006)
-- @return None.
function Global.EndFindKvp(handle)
	return _in(0xb3210203, handle)
end

--- END_FIND_OBJECT
function Global.EndFindObject(findHandle)
	return _in(0xdeda4e50, findHandle)
end

--- END_FIND_PED
function Global.EndFindPed(findHandle)
	return _in(0x9615c2ad, findHandle)
end

--- END_FIND_PICKUP
function Global.EndFindPickup(findHandle)
	return _in(0x3c407d53, findHandle)
end

--- END_FIND_VEHICLE
function Global.EndFindVehicle(findHandle)
	return _in(0x9227415a, findHandle)
end

--- END_PETROL_TRAIL_DECALS
function Global.EndPetrolTrailDecals()
	return _in(0x0A123435A26C36CD)
end
Global.N_0x0a123435a26c36cd = Global.EndPetrolTrailDecals

--- END_REPLAY_STATS
function Global.EndReplayStats()
	return _in(0xA23E821FBDF8A5F2)
end

--- Pops and calls the Scaleform function on the stack
function Global.EndScaleformMovieMethod()
	return _in(0xC6796A8FFA375E53)
end
Global.PopScaleformMovieFunctionVoid = Global.EndScaleformMovieMethod

--- END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
function Global.EndScaleformMovieMethodReturnValue()
	return _in(0xC50AA39A577AF886, _ri)
end
Global.PopScaleformMovieFunction = Global.EndScaleformMovieMethodReturnValue
Global.EndScaleformMovieMethodReturn = Global.EndScaleformMovieMethodReturnValue

--- Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
function Global.EndSrl()
	return _in(0x0A41540E63C9EE17)
end

--- enum eBusySpinnerType
-- {
-- BUSY_SPINNER_LEFT,
-- BUSY_SPINNER_LEFT_2,
-- BUSY_SPINNER_LEFT_3,
-- BUSY_SPINNER_SAVE,
-- BUSY_SPINNER_RIGHT,
-- };
function Global.EndTextCommandBusyspinnerOn(busySpinnerType)
	return _in(0xBD12F8228410D9B4, busySpinnerType)
end
Global.N_0xbd12f8228410d9b4 = Global.EndTextCommandBusyspinnerOn
Global.ShowLoadingPrompt = Global.EndTextCommandBusyspinnerOn
Global.EndTextCommandBusyString = Global.EndTextCommandBusyspinnerOn

--- END_TEXT_COMMAND_CLEAR_PRINT
function Global.EndTextCommandClearPrint()
	return _in(0xFCC75460ABA29378)
end
Global.N_0xfcc75460aba29378 = Global.EndTextCommandClearPrint

--- END_TEXT_COMMAND_DISPLAY_HELP
-- @param shape 0 for a normal rectangle shape, 1 and 2 has rounded edges, and can be used for floating help text hud component `FLOATING_HELP_TEXT_1` and `FLOATING_HELP_TEXT_2`. Use 1 for `FLOATING_HELP_TEXT_1` and 2 for `FLOATING_HELP_TEXT_2`, otherwise the help text will be reset to a normal help text on the top left corner on your screen.
-- @param loop If this is true, the message will stay forever unless you call [`CLEAR_ALL_HELP_MESSAGES`](#\_0x6178F68A87A4D3A0).
-- @param beep If this is true, the beeping sound will play. Beeping sound name is `INFO` in sound set `HUD_FRONTEND_DEFAULT_SOUNDSET`.
-- @param duration Duration in ms of how long this help message should display for. -1 for default.
function Global.EndTextCommandDisplayHelp(shape, loop, beep, duration)
	return _in(0x238FFE5C7B0498A6, shape, loop, beep, duration)
end
Global.DisplayHelpTextFromStringLabel = Global.EndTextCommandDisplayHelp

--- After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.EndTextCommandDisplayText(x, y)
	return _in(0xCD015E5BB0D96A57, x, y)
end
Global.DrawText = Global.EndTextCommandDisplayText

--- END_TEXT_COMMAND_*
-- In scripts font most of the time is passed as 1.
-- Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
-- param is not font from what i've tested
function Global.EndTextCommandGetWidth(p0)
	return _in(0x85F061DA64ED2F67, p0, _rf)
end
Global.GetTextScreenWidth = Global.EndTextCommandGetWidth

--- END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED
function Global.EndTextCommandIsMessageDisplayed()
	return _in(0x8A9BA1AB3E237613, _r)
end
Global.N_0x8a9ba1ab3e237613 = Global.EndTextCommandIsMessageDisplayed

--- Returns whether a specific help message is being displayed or not.
-- ```cpp
-- enum HudIndexes {
-- HELP_TEXT = 0,
-- FLOATING_HELP_TEXT_1 = 1,
-- FLOATING_HELP_TEXT_2 = 2,
-- }
-- ```
-- @param hudIndex The hud index for help message.
-- @return `true`: Indicates if the specific help message has been displayed.\
-- 		`false`: Indicates that the specific help message is still being displayed.
function Global.EndTextCommandIsThisHelpMessageBeingDisplayed(hudIndex)
	return _in(0x10BDDBFC529428DD, hudIndex, _r)
end
Global.N_0x10bddbfc529428dd = Global.EndTextCommandIsThisHelpMessageBeingDisplayed

--- END_TEXT_COMMAND_*
-- Determines how many lines the text string will use when drawn on screen.
-- Must use 0x521FB041D93DD0E4 for setting up
function Global.EndTextCommandLineCount(x, y)
	return _in(0x9040DFB09BE75706, x, y, _ri)
end
Global.N_0x9040dfb09be75706 = Global.EndTextCommandLineCount
Global.GetTextScreenLineCount = Global.EndTextCommandLineCount
Global.EndTextCommandGetLineCount = Global.EndTextCommandLineCount

--- _END_TEXT_COMMAND_OBJECTIVE
function Global.EndTextCommandObjective(p0)
	return _in(0xCFDBDF5AE59BA0F4, p0)
end
Global.N_0xcfdbdf5ae59ba0f4 = Global.EndTextCommandObjective

--- END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT
-- @param buttonIndex Index of the instructional button
function Global.EndTextCommandOverrideButtonText(buttonIndex)
	return _in(0xA86911979638106F, buttonIndex)
end
Global.N_0xa86911979638106f = Global.EndTextCommandOverrideButtonText
Global.EndTextCommandTimer = Global.EndTextCommandOverrideButtonText

--- Draws the subtitle at middle center of the screen.
-- int duration = time in milliseconds to show text on screen before disappearing
-- drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
-- Used to be known as _DRAW_SUBTITLE_TIMED
function Global.EndTextCommandPrint(duration, drawImmediately)
	return _in(0x9D77056A530643F6, duration, drawImmediately)
end
Global.DrawSubtitleTimed = Global.EndTextCommandPrint

--- END_TEXT_COMMAND_SCALEFORM_STRING
function Global.EndTextCommandScaleformString()
	return _in(0x362E2D3FE93A9959)
end
Global.EndTextComponent = Global.EndTextCommandScaleformString

--- Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
function Global.EndTextCommandScaleformString_2()
	return _in(0xAE4E8157D9ECF087)
end
Global.N_0xae4e8157d9ecf087 = Global.EndTextCommandScaleformString_2

--- Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xF9113A30DE5C6670), setting the name
-- of the specified blip.
-- @param blip The blip to change the name for.
function Global.EndTextCommandSetBlipName(blip)
	return _in(0xBC38B49BCB83BC9B, blip)
end

--- Shows an "award" notification above the minimap, lua example result:
-- ![](https://i.imgur.com/e2DNaKX.png)
-- Old description:
-- ```
-- Example:
-- UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
-- UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
-- ```
-- @param textureDict The texture dictionary name for the icon on the left.
-- @param textureName The texture name for the icon on the left.
-- @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
-- @param colorOverlay Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
-- @param titleLabel The label that will be displayed at the top of the notification (title).
-- @return The notification handle.
function Global.EndTextCommandThefeedPostAward(textureDict, textureName, rpBonus, colorOverlay, titleLabel)
	return _in(0xAA295B6F28BD587D, _ts(textureDict), _ts(textureName), rpBonus, colorOverlay, _ts(titleLabel), _ri)
end
Global.N_0xaa295b6f28bd587d = Global.EndTextCommandThefeedPostAward
Global.DrawNotificationIcon = Global.EndTextCommandThefeedPostAward
Global.DrawNotificationAward = Global.EndTextCommandThefeedPostAward

--- END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP
function Global.EndTextCommandThefeedPostCrewRankup(chTitle, clanTxd, clanTxn, isImportant, showSubtitle)
	return _in(0x8EFCCF6EC66D85E4, _ts(chTitle), _ts(clanTxd), _ts(clanTxn), isImportant, showSubtitle, _ri)
end
Global.N_0x8efccf6ec66d85e4 = Global.EndTextCommandThefeedPostCrewRankup

--- This function and the one below it are for after you receive an invite, not sending it.
-- p0 = 1 or 0
-- nothin doin.
-- int invite(Player player)
-- {
-- int iVar2, iVar3;
-- networkHandleMgr handle;
-- NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
-- networkClanMgr clan;
-- char *playerName = GET_PLAYER_NAME(player);
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- _SET_NOTIFACTION_COLOR_NEXT(0);
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
-- if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
-- {
-- iVar2 = 0;
-- if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
-- {
-- iVar2 = 1;
-- }
-- if (clan.unk21 > 0)
-- {
-- iVar3 = 0;
-- }
-- else
-- {
-- iVar3 = 1;
-- }
-- BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
-- return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
-- }
-- }
function Global.EndTextCommandThefeedPostCrewtag(crewTypeIsPrivate, crewTagContainsRockstar, rank, hasFounderStatus, isImportant, clanHandle, r, g, b)
	return _in(0x97C9E4E7024A8F2C, crewTypeIsPrivate, crewTagContainsRockstar, _i, rank, hasFounderStatus, isImportant, clanHandle, r, g, b, _ri)
end
Global.N_0x97c9e4e7024a8f2c = Global.EndTextCommandThefeedPostCrewtag
Global.NotificationSendApartmentInvite = Global.EndTextCommandThefeedPostCrewtag
Global.DrawNotificationApartmentInvite = Global.EndTextCommandThefeedPostCrewtag

--- p0 = 1 or 0
-- crashes my game...
-- this is for sending invites to network players - jobs/apartment/ect...
-- return notification handle
-- int invite(Player player)
-- {
-- networkHandleMgr netHandle;
-- networkClanMgr clan;
-- char *playerName = GET_PLAYER_NAME(player);
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- _SET_NOTIFACTION_COLOR_NEXT(1);
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
-- NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
-- if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
-- {
-- NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
-- _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
-- }
-- }
function Global.EndTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate, crewTagContainsRockstar, rank, isLeader, isImportant, clanHandle, gamerStr, r, g, b)
	return _in(0x137BC35589E34E1E, crewTypeIsPrivate, crewTagContainsRockstar, _i, rank, isLeader, isImportant, clanHandle, _ts(gamerStr), r, g, b, _ri)
end
Global.N_0x137bc35589e34e1e = Global.EndTextCommandThefeedPostCrewtagWithGameName
Global.NotificationSendClanInvite = Global.EndTextCommandThefeedPostCrewtagWithGameName
Global.DrawNotificationClanInvite = Global.EndTextCommandThefeedPostCrewtagWithGameName

--- Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
-- Texture dictionary and texture name parameters are usually the same exact value.
-- Example result:
-- ![](https://i.imgur.com/LviutDl.png)
-- Old description with list of possible icons and texture names:
-- ```
-- List of picNames: pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- ```
-- @param textureDict The texture dictionary for the icon.
-- @param textureName The texture name for the icon.
-- @param flash Flash, doesn't seem to work no matter what.
-- @param iconType The icon type, see the list in the description below.
-- @param sender The notification title.
-- @param subject The notification subtitle.
-- @return The notification handle.
function Global.EndTextCommandThefeedPostMessagetext(textureDict, textureName, flash, iconType, sender, subject)
	return _in(0x1CCD9A37359072CF, _ts(textureDict), _ts(textureName), flash, iconType, _ts(sender), _ts(subject), _ri)
end
Global.SetNotificationMessage = Global.EndTextCommandThefeedPostMessagetext

--- This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
-- Needs more research.
-- Only one type of usage in the scripts:
-- HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
function Global.EndTextCommandThefeedPostMessagetextGxtEntry(txdName, textureName, flash, iconType, sender, subject)
	return _in(0xC6F580E4C94926AC, _ts(txdName), _ts(textureName), flash, iconType, _ts(sender), _ts(subject), _ri)
end
Global.N_0xc6f580e4c94926ac = Global.EndTextCommandThefeedPostMessagetextGxtEntry
Global.SetNotificationMessage_3 = Global.EndTextCommandThefeedPostMessagetextGxtEntry
Global.EndTextCommandThefeedPostMessagetextEntry = Global.EndTextCommandThefeedPostMessagetextGxtEntry

--- Example, only occurrence in the scripts:
-- ```
-- v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
-- ```
-- Example result:
-- ![](https://i.imgur.com/YrN4Bcm.png)
-- @param iconType The icon type, you can find those here: [`END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT`](#\_0x1CCD9A37359072CF)
-- @param durationMultiplier 1.0 is normal, 2.0 is twice as long, and 0.5 is half its normal display time.
function Global.EndTextCommandThefeedPostMessagetextTu(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, durationMultiplier)
	return _in(0x1E6611149DB3DB6B, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(nameStr), _ts(subtitleStr), durationMultiplier, _ri)
end
Global.N_0x1e6611149db3db6b = Global.EndTextCommandThefeedPostMessagetextTu
Global.SetNotificationMessage_4 = Global.EndTextCommandThefeedPostMessagetextTu

--- List of picNames pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
function Global.EndTextCommandThefeedPostMessagetextWithCrewTag(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, duration, crewPackedStr)
	return _in(0x5CBF7BADE20DB93E, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(nameStr), _ts(subtitleStr), duration, _ts(crewPackedStr), _ri)
end
Global.SetNotificationMessageClanTag = Global.EndTextCommandThefeedPostMessagetextWithCrewTag

--- List of picNames: pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
-- iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
-- int IconNotification(char *text, char *text2, char *Subject)
-- {
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
-- return _DRAW_NOTIFICATION(1, 1);
-- }
function Global.EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd, picTxn, flash, iconType1, nameStr, subtitleStr, duration, crewPackedStr, iconType2, textColor)
	return _in(0x531B84E7DA981FB6, _ts(picTxd), _ts(picTxn), flash, iconType1, _ts(nameStr), _ts(subtitleStr), duration, _ts(crewPackedStr), iconType2, textColor, _ri)
end
Global.SetNotificationMessageClanTag_2 = Global.EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon

--- END_TEXT_COMMAND_THEFEED_POST_MPTICKER
function Global.EndTextCommandThefeedPostMpticker(blink, bHasTokens)
	return _in(0xF020C96915705B3A, blink, bHasTokens, _ri)
end
Global.DrawNotification_4 = Global.EndTextCommandThefeedPostMpticker

--- returns a notification handle, prints out a notification like below:
-- type range: 0
-- if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
-- example:
-- UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
function Global.EndTextCommandThefeedPostReplayIcon(eType, iIcon, sTitle)
	return _in(0xD202B92CBF1D816F, eType, iIcon, _ts(sTitle), _ri)
end
Global.N_0xd202b92cbf1d816f = Global.EndTextCommandThefeedPostReplayIcon
Global.DrawNotificationWithIcon = Global.EndTextCommandThefeedPostReplayIcon

--- returns a notification handle, prints out a notification like below:
-- type range: 0 - 2
-- if you set type to 1, button accepts "~INPUT_SOMETHING~"
-- example:
-- HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
-- - imgur.com/UPy0Ial
-- Examples from the scripts:
-- l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
-- l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
-- l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
-- l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
function Global.EndTextCommandThefeedPostReplayInput(type, button, text)
	return _in(0xDD6CB2CCE7C2735C, type, _ts(button), _ts(text), _ri)
end
Global.N_0xdd6cb2cce7c2735c = Global.EndTextCommandThefeedPostReplayInput
Global.DrawNotificationWithButton = Global.EndTextCommandThefeedPostReplayInput

--- [List of picture names](https://pastebin.com/XdpJVbHz)
-- Example result:
-- ![](https://i.imgur.com/SdEZ22m.png)
-- @return The notification handle.
function Global.EndTextCommandThefeedPostStats(statTitle, iconEnum, stepVal, barValue, isImportant, picTxd, picTxn)
	return _in(0x2B7E9A4EAAA93C89, _ts(statTitle), iconEnum, stepVal, barValue, isImportant, _ts(picTxd), _ts(picTxn), _ri)
end
Global.N_0x2b7e9a4eaaa93c89 = Global.EndTextCommandThefeedPostStats
Global.SetNotificationMessage_2 = Global.EndTextCommandThefeedPostStats

--- Example output preview:
-- ![](https://i.imgur.com/TJvqkYq.png)
-- @param isImportant Makes the notification flash on the screen.
-- @param bHasTokens Makes the notification appear in the "Pause Menu > Info/Brief > Notifications" section.
-- @return The notification handle.
function Global.EndTextCommandThefeedPostTicker(isImportant, bHasTokens)
	return _in(0x2ED7843F8F801023, isImportant, bHasTokens, _ri)
end
Global.DrawNotification = Global.EndTextCommandThefeedPostTicker

--- END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED
function Global.EndTextCommandThefeedPostTickerForced(blink, bHasTokens)
	return _in(0x44FA03975424A0EE, blink, bHasTokens, _ri)
end
Global.DrawNotification_2 = Global.EndTextCommandThefeedPostTickerForced

--- END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS
function Global.EndTextCommandThefeedPostTickerWithTokens(isImportant, bHasTokens)
	return _in(0x378E809BF61EC840, isImportant, bHasTokens, _ri)
end
Global.DrawNotification_3 = Global.EndTextCommandThefeedPostTickerWithTokens

--- END_TEXT_COMMAND_THEFEED_POST_UNLOCK
function Global.EndTextCommandThefeedPostUnlock(chTitle, iconType, chSubtitle)
	return _in(0x33EE12743CCD6343, _ts(chTitle), iconType, _ts(chSubtitle), _ri)
end
Global.N_0x33ee12743ccd6343 = Global.EndTextCommandThefeedPostUnlock

--- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU
function Global.EndTextCommandThefeedPostUnlockTu(chTitle, iconType, chSubtitle, isImportant)
	return _in(0xC8F3AAF93D0600BF, _ts(chTitle), iconType, _ts(chSubtitle), isImportant, _ri)
end
Global.N_0xc8f3aaf93d0600bf = Global.EndTextCommandThefeedPostUnlockTu

--- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR
function Global.EndTextCommandThefeedPostUnlockTuWithColor(chTitle, iconType, chSubtitle, isImportant, titleColor, p5)
	return _in(0x7AE0589093A2E088, _ts(chTitle), iconType, _ts(chSubtitle), isImportant, titleColor, p5, _ri)
end
Global.N_0x7ae0589093a2e088 = Global.EndTextCommandThefeedPostUnlockTuWithColor

--- NativeDB Added Parameter 7: int hudColorIndex1
-- NativeDB Added Parameter 8: int hudColorIndex2
function Global.EndTextCommandThefeedPostVersusTu(ch1TXD, ch1TXN, val1, ch2TXD, ch2TXN, val2)
	return _in(0xB6871B0555B02996, _ts(ch1TXD), _ts(ch1TXN), val1, _ts(ch2TXD), _ts(ch2TXN), val2, _ri)
end
Global.N_0xb6871b0555b02996 = Global.EndTextCommandThefeedPostVersusTu

--- Internal function for ensuring an entity has a state bag.
function Global.EnsureEntityStateBag(entity)
	return _in(0x3bb78f05, entity)
end

--- Enters cursor mode, suppressing mouse movement to the game and displaying a mouse cursor instead. This function supports
-- SDK infrastructure and is not intended to be used directly from your code.
function Global.EnterCursorMode()
	return _in(0x780da86)
end

--- EXECUTE_COMMAND
function Global.ExecuteCommand(commandString)
	return _in(0x561c060b, _ts(commandString))
end

--- This native is not implemented.
function Global.ExperimentalLoadCloneCreate(data, objectId, tree)
	return _in(0xd2cb95a3, _ts(data), objectId, _ts(tree), _ri)
end

--- This native is not implemented.
function Global.ExperimentalLoadCloneSync(entity, data)
	return _in(0x6bc189ac, entity, _ts(data))
end

--- This native is not implemented.
function Global.ExperimentalSaveCloneCreate(entity)
	return _in(0x9d65cad2, entity, _s)
end

--- This native is not implemented.
function Global.ExperimentalSaveCloneSync(entity)
	return _in(0x38d19210, entity, _s)
end

--- Applies lethal damage (FLT_MAX) to the `SKEL_Head` bone of the specified ped using the weapon passed, leading to the
-- ped's untimely demise.
-- The naming of the native is a legacy leftover (formerly EXPLODE_CHAR_HEAD in GTA3) as in the early 3D GTA games, lethal
-- damage to a ped head would 'explode' it.
-- Do note that this native function does not work in multiplayer/network environment.
-- @param ped The ped to lethally injure.
-- @param weaponHash The weapon to attribute the damage to.
function Global.ExplodePedHead(ped, weaponHash)
	return _in(0x2D05CED3A38D0F3A, ped, _ch(weaponHash))
end

--- WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);
function Global.ExplodeProjectiles(ped, weaponHash, p2)
	return _in(0xFC4BD125DE7611E4, ped, _ch(weaponHash), p2)
end

--- Explodes a selected vehicle.
-- Vehicle vehicle = Vehicle you want to explode.
-- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
-- First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
function Global.ExplodeVehicle(vehicle, isAudible, isInvisible)
	return _in(0xBA71116ADF5B514C, vehicle, isAudible, isInvisible)
end

--- EXPLODE_VEHICLE_IN_CUTSCENE
function Global.ExplodeVehicleInCutscene(vehicle, p1)
	return _in(0x786A4EB67B01BF0B, vehicle, p1)
end

--- Appears only 3 times in the scripts, more specifically in michael1.ysc
-- -
-- This can be used to prevent dying if you are "out of the world"
function Global.ExtendWorldBoundaryForPlayer(x, y, z)
	return _in(0x5006D96C995A5827, x, y, z)
end
Global.N_0x5006d96c995a5827 = Global.ExtendWorldBoundaryForPlayer
Global.ExpandWorldLimits = Global.ExtendWorldBoundaryForPlayer

--- _FACEBOOK_DO_UNK_CHECK
function Global.FacebookDoUnkCheck()
	return _in(0xA75E2B6733DA5142, _r)
end
Global.N_0xa75e2b6733da5142 = Global.FacebookDoUnkCheck

--- _FACEBOOK_IS_AVAILABLE
function Global.FacebookIsAvailable()
	return _in(0x43865688AE10F0D7, _r)
end
Global.N_0x43865688ae10f0d7 = Global.FacebookIsAvailable

--- _FACEBOOK_IS_SENDING_DATA
function Global.FacebookIsSendingData()
	return _in(0x62B9FEC9A11F10EF, _r)
end
Global.N_0x62b9fec9a11f10ef = Global.FacebookIsSendingData

--- _FACEBOOK_SET_CREATE_CHARACTER_COMPLETE
function Global.FacebookSetCreateCharacterComplete()
	return _in(0xDC48473142545431, _r)
end
Global.N_0xdc48473142545431 = Global.FacebookSetCreateCharacterComplete

--- _FACEBOOK_SET_HEIST_COMPLETE
function Global.FacebookSetHeistComplete(heistName, cashEarned, xpEarned)
	return _in(0x098AB65B9ED9A9EC, _ts(heistName), cashEarned, xpEarned, _r)
end
Global.N_0x098ab65b9ed9a9ec = Global.FacebookSetHeistComplete

--- milestoneId:
-- 0 = "percentcomplete"
-- 1 = "storycomplete"
-- 2 = "vehicles"
-- 3 = "properties"
-- 4 = "psych"
-- 5 = "mapreveal"
-- 6 = "prologue"
function Global.FacebookSetMilestoneComplete(milestoneId)
	return _in(0x0AE1F1653B554AB9, milestoneId, _r)
end
Global.N_0x0ae1f1653b554ab9 = Global.FacebookSetMilestoneComplete

--- FADE_DECALS_IN_RANGE
-- @param duration A duration in seconds.
function Global.FadeDecalsInRange(x, y, z, radius, duration)
	return _in(0xD77EDADB0420E6E0, x, y, z, radius, duration)
end

--- Hardcoded to not work in SP.
function Global.FadeOutLocalPlayer(p0)
	return _in(0x416DBD4CD6ED8DD2, p0)
end

--- FADE_UP_PED_LIGHT
function Global.FadeUpPedLight(p0)
	return _in(0xC9B18B4619F48F7B, p0)
end
Global.N_0xc9b18b4619f48f7b = Global.FadeUpPedLight

--- FILLOUT_PM_PLAYER_LIST
function Global.FilloutPmPlayerList(p1, p2)
	return _in(0xCBBD7C4991B64809, _i, p1, p2, _r)
end

--- FILLOUT_PM_PLAYER_LIST_WITH_NAMES
function Global.FilloutPmPlayerListWithNames(p2, p3)
	return _in(0x716B6DB9D1886106, _i, _i, p2, p3, _r)
end

--- FINALIZE_HEAD_BLEND
function Global.FinalizeHeadBlend(ped)
	return _in(0x4668D80430D6C299, ped)
end
Global.N_0x4668d80430d6c299 = Global.FinalizeHeadBlend

--- ```
-- In the script "player_scene_t_bbfight.c4":
-- "if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))"
-- -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
-- -- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the "animation" param.
-- -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
-- --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
-- "if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"
-- Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
-- -alphazolam
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.FindAnimEventPhase(animDictionary, animName, p2)
	return _in(0x07F1BE2BCCAA27A7, _ts(animDictionary), _ts(animName), _ts(p2), _i, _i, _r)
end

--- FIND_FIRST_OBJECT
function Global.FindFirstObject(outEntity)
	return _in(0xfaa6cb5d, _ii(outEntity) --[[ may be optional ]], _ri)
end

--- FIND_FIRST_PED
function Global.FindFirstPed(outEntity)
	return _in(0xfb012961, _ii(outEntity) --[[ may be optional ]], _ri)
end

--- FIND_FIRST_PICKUP
function Global.FindFirstPickup(outEntity)
	return _in(0x3ff9d340, _ii(outEntity) --[[ may be optional ]], _ri)
end

--- FIND_FIRST_VEHICLE
function Global.FindFirstVehicle(outEntity)
	return _in(0x15e55694, _ii(outEntity) --[[ may be optional ]], _ri)
end

--- FIND_KVP
-- @param handle The KVP find handle returned from [START_FIND_KVP](#\_0xDD379006)
-- @return None.
function Global.FindKvp(handle)
	return _in(0xbd7bebc5, handle, _s)
end

--- FIND_NEXT_OBJECT
function Global.FindNextObject(findHandle, outEntity)
	return _in(0x4e129dbf, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

--- FIND_NEXT_PED
function Global.FindNextPed(findHandle, outEntity)
	return _in(0xab09b548, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

--- FIND_NEXT_PICKUP
function Global.FindNextPickup(findHandle, outEntity)
	return _in(0x4107ef0f, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

--- FIND_NEXT_VEHICLE
function Global.FindNextVehicle(findHandle, outEntity)
	return _in(0x8839120d, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

--- FIND_RADIO_STATION_INDEX
-- @param stationNameHash the station name hash to search for
-- @return The station index for the specified hash, or 254 if the radio station did not exist.
function Global.FindRadioStationIndex(stationNameHash)
	return _in(0x8D67489793FF428B, stationNameHash, _ri)
end

--- Native is significantly more complicated than simply generating a random vector & length.
-- The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport\_\__IsSphereVisible.
-- ```
-- NativeDB Introduced: v1290
-- ```
function Global.FindRandomPointInSpace(ped)
	return _in(0x8DC9675797123522, ped, _rv)
end
Global.N_0x8dc9675797123522 = Global.FindRandomPointInSpace

--- Finds a position ahead of the player by predicting the players next actions.
-- The positions match path finding node positions.
-- When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
function Global.FindSpawnPointInDirection(posX, posY, posZ, dirX, dirY, dirZ, distance, spawnPoint)
	return _in(0x6874E2190B0C1972, posX, posY, posZ, dirX, dirY, dirZ, distance, _v, _r)
end

--- Finds the vehicle that is carrying this entity with a handler frame.
-- The model of the entity must be prop_contr_03b_ld or the function will return 0.
function Global.FindVehicleCarryingThisEntity(entity)
	return _in(0x375E7FC44F21C8AB, entity, _ri)
end
Global.N_0x375e7fc44f21c8ab = Global.FindVehicleCarryingThisEntity
Global.GetVehicleAttachedToEntity = Global.FindVehicleCarryingThisEntity

--- _FIRE_AIR_DEFENSE_WEAPON
function Global.FireAirDefenseWeapon(zoneId, x, y, z)
	return _in(0x44F1012B69313374, zoneId, x, y, z)
end
Global.N_0x44f1012b69313374 = Global.FireAirDefenseWeapon

--- Resets and brings back all the children of a fragment based object.
-- This should be used when attaching or detaching an object from another entity, especially when the object being detached consists of multiple fragments.
-- Attempting to teleport a fragment-based object using [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B) such as a flag object, will result in it remaining in place and failing to teleport, given the condition mentioned in the preceding statement.
-- The native should be executed after detaching the object from its parent entity and before calling [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B).
-- Example given down below.
-- @param object The object to fix fragments for (a handle should be passed).
function Global.FixObjectFragment(object)
	return _in(0xF9C1681347C8BD15, object)
end
Global.N_0xf9c1681347c8bd15 = Global.FixObjectFragment

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- This function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
function Global.FixVehicleWindow(vehicle, windowIndex)
	return _in(0x772282EBEB95E682, vehicle, windowIndex)
end

--- FLAG_PLAYER_CONTEXT_IN_TOURNAMENT
function Global.FlagPlayerContextInTournament(toggle)
	return _in(0xCEF214315D276FD1, toggle)
end
Global.N_0xcef214315d276fd1 = Global.FlagPlayerContextInTournament
Global.SetIsInTournament = Global.FlagPlayerContextInTournament

--- FLASH_ABILITY_BAR
function Global.FlashAbilityBar(millisecondsToFlash)
	return _in(0x02CFBA0C9E9275CE, millisecondsToFlash)
end

--- adds a short flash to the Radar/Minimap
-- Usage: UI.FLASH_MINIMAP_DISPLAY
function Global.FlashMinimapDisplay()
	return _in(0xF2DD778C22B15BDA)
end

--- FLASH_MINIMAP_DISPLAY_WITH_COLOR
function Global.FlashMinimapDisplayWithColor(hudColorIndex)
	return _in(0x6B1DE27EE78E6A19, hudColorIndex)
end
Global.N_0x6b1de27ee78e6a19 = Global.FlashMinimapDisplayWithColor

--- FLASH_WANTED_DISPLAY
function Global.FlashWantedDisplay(p0)
	return _in(0xA18AFB39081B6A1F, p0)
end

--- FLOOR
function Global.Floor(value)
	return _in(0xF34EE736CF047844, value, _ri)
end

--- FORCE_CINEMATIC_RENDERING_THIS_UPDATE
function Global.ForceCinematicRenderingThisUpdate(p0)
	return _in(0xA41BCD7213805AAC, p0)
end
Global.N_0xa41bcd7213805aac = Global.ForceCinematicRenderingThisUpdate

--- used with 1,2,8,64,128 in the scripts
function Global.ForceCleanup(cleanupFlags)
	return _in(0xBC8983F38F78ED51, cleanupFlags)
end

--- PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation
function Global.ForceCleanupForAllThreadsWithThisName(name, cleanupFlags)
	return _in(0x4C68DDDDF0097317, _ts(name), cleanupFlags)
end

--- FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID
function Global.ForceCleanupForThreadWithThisId(id, cleanupFlags)
	return _in(0xF745B37630DF176B, id, cleanupFlags)
end

--- FORCE_CLOSE_REPORTUGC_MENU
function Global.ForceCloseReportugcMenu()
	return _in(0xEE4C0E6DBC6F2C6F)
end
Global.N_0xee4c0e6dbc6f2c6f = Global.ForceCloseReportugcMenu

--- _FORCE_CLOSE_TEXT_INPUT_BOX
function Global.ForceCloseTextInputBox()
	return _in(0x8817605C2BA76200)
end
Global.N_0x8817605c2ba76200 = Global.ForceCloseTextInputBox

--- Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
function Global.ForceEntityAiAndAnimationUpdate(entity)
	return _in(0x40FDEDB72F8293B2, entity)
end

--- Sets the localplayer playerinfo state back to playing (State 0)
-- States are:
-- -1: "Invalid"
-- 0: "Playing"
-- 1: "Died"
-- 2: "Arrested"
-- 3: "Failed Mission"
-- 4: "Left Game"
-- 5: "Respawn"
-- 6: "In MP Cutscene"
function Global.ForceGameStatePlaying()
	return _in(0xC0AA53F866B3134D)
end
Global.ResetLocalplayerState = Global.ForceGameStatePlaying

--- creates single lightning+thunder at random position
function Global.ForceLightningFlash()
	return _in(0xF6062E089251C898)
end
Global.CreateLightningThunder = Global.ForceLightningFlash

--- Forces the chosen station to paly the given music track list. All other music track lists will be locked.
function Global.ForceMusicTrackList(radioStation, trackListName, timeOffsetMilliseconds)
	return _in(0x4E0AF9114608257C, _ts(radioStation), _ts(trackListName), timeOffsetMilliseconds)
end
Global.N_0x4e0af9114608257c = Global.ForceMusicTrackList
Global.ForceRadioTrackListPosition = Global.ForceMusicTrackList

--- FORCE_PED_AI_AND_ANIMATION_UPDATE
function Global.ForcePedAiAndAnimationUpdate(ped, p1, p2)
	return _in(0x2208438012482A1A, ped, p1, p2)
end
Global.N_0x2208438012482a1a = Global.ForcePedAiAndAnimationUpdate

--- Some motionstate hashes are
-- 0xec17e58 (standing idle), 0xbac0f10b (nothing?), 0x3f67c6af (aiming with pistol 2-h), 0x422d7a25 (stealth), 0xbd8817db, 0x916e828c
-- and those for the strings
-- "motionstate_idle", "motionstate_walk", "motionstate_run", "motionstate_actionmode_idle", and "motionstate_actionmode_walk".
-- Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in the scripts. p4 is very rarely something other than 0.
-- [31/03/2017] ins1de :
-- enum MotionState
-- {
-- StopRunning = -530524,
-- StopWalking = -668482597,
-- Idle = 247561816, // 1, 1, 0
-- Idl2 = -1871534317,
-- SkyDive =-1161760501, // 0, 1, 0
-- Stealth = 1110276645,
-- Sprint = -1115154469,
-- Swim = -1855028596,
-- Unknown1 = 1063765679,
-- Unknown2 = -633298724,
-- }
function Global.ForcePedMotionState(ped, motionStateHash, p2, p3, p4)
	return _in(0xF28965D04F570DCA, ped, _ch(motionStateHash), p2, p3, p4, _r)
end

--- Forces the ambient peds into their panic walla state
function Global.ForcePedPanicWalla()
	return _in(0x062D5EAD4DA2FA6A)
end
Global.N_0x062d5ead4da2fa6a = Global.ForcePedPanicWalla

--- FORCE_PED_TO_OPEN_PARACHUTE
function Global.ForcePedToOpenParachute(ped)
	return _in(0x16E42E800B472221, ped)
end

--- _FORCE_PICKUP_REGENERATE
function Global.ForcePickupRegenerate(p0)
	return _in(0x758A5C1B3B1E1990, p0)
end
Global.N_0x758a5c1b3b1e1990 = Global.ForcePickupRegenerate

--- Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
function Global.ForcePlaybackRecordedVehicleUpdate(vehicle, p1)
	return _in(0x1F2E4E06DEA8992B, vehicle, p1)
end
Global.N_0x1f2e4e06dea8992b = Global.ForcePlaybackRecordedVehicleUpdate

--- FORCE_RENDER_IN_GAME_UI
function Global.ForceRenderInGameUi(toggle)
	return _in(0xDC459CFA0CCE245B, toggle)
end
Global.N_0xdc459cfa0cce245b = Global.ForceRenderInGameUi

--- Forces the particular room in an interior to load incase not teleporting into the portal.
function Global.ForceRoomForEntity(entity, interior, roomHashKey)
	return _in(0x52923C4710DD9907, entity, interior, _ch(roomHashKey))
end

--- FORCE_ROOM_FOR_GAME_VIEWPORT
function Global.ForceRoomForGameViewport(interiorID, roomHashKey)
	return _in(0x920D853F3E17F1DA, interiorID, _ch(roomHashKey))
end
Global.N_0x920d853f3e17f1da = Global.ForceRoomForGameViewport

--- Forces the game snow pass to render.
-- @param enabled Whether or not to force rendering to use a snow pass.
function Global.ForceSnowPass(enabled)
	return _in(0xe6e16170, enabled)
end

--- Doesn't actually return anything.
function Global.ForceSonarBlipsThisFrame()
	return _in(0x1121BFA1A1A522A8, _ri)
end
Global.N_0x1121bfa1a1a522a8 = Global.ForceSonarBlipsThisFrame

--- Forces a submarine to maintain neutral buoyancy for a specified duration, preventing it from rising when unoccupied or without a driver.
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param submarine The submarine vehicle to apply neutral buoyancy to.
-- @param time The duration in milliseconds for which to maintain neutral buoyancy.
function Global.ForceSubmarineNeurtalBuoyancy(submarine, time)
	return _in(0xC67DB108A9ADE3BE, submarine, time)
end
Global.N_0xc67db108a9ade3be = Global.ForceSubmarineNeurtalBuoyancy

--- FORCE_SUBMARINE_SURFACE_MODE
function Global.ForceSubmarineSurfaceMode(vehicle, toggle)
	return _in(0x33506883545AC0DF, vehicle, toggle)
end
Global.N_0x33506883545ac0df = Global.ForceSubmarineSurfaceMode

--- This native sets the audio to the specific vehicle hash's audioNameHash.
function Global.ForceUseAudioGameObject(vehicle, gameObjectName)
	return _in(0x4F0C413926060B38, vehicle, _ts(gameObjectName))
end
Global.N_0x4f0c413926060b38 = Global.ForceUseAudioGameObject
Global.SetVehicleAudio = Global.ForceUseAudioGameObject
Global.ForceVehicleEngineAudio = Global.ForceUseAudioGameObject

--- FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO
function Global.FreeMemoryForHighQualityPhoto()
	return _in(0xD801CC02177FA3F1)
end
Global.N_0xd801cc02177fa3f1 = Global.FreeMemoryForHighQualityPhoto

--- FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
function Global.FreeMemoryForLowQualityPhoto()
	return _in(0x6A12D88881435DCA)
end
Global.N_0x6a12d88881435dca = Global.FreeMemoryForLowQualityPhoto

--- FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO
function Global.FreeMemoryForMissionCreatorPhoto()
	return _in(0x0A46AF8A78DC5E0A)
end
Global.N_0x0a46af8a78dc5e0a = Global.FreeMemoryForMissionCreatorPhoto

--- Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B).
-- @param entity The entity to freeze/unfreeze.
-- @param toggle Freeze or unfreeze entity.
function Global.FreezeEntityPosition(entity, toggle)
	return _in(0x428CA6DBD1094446, entity, toggle)
end

--- Allows script to freeze the microphone for a single frame, mantaining its current transform/settings.
-- This native should be called every frame you want to keep the microphone frozen, when you stop calling it it will automatically unfreeze
function Global.FreezeMicrophone()
	return _in(0xD57AAAE0E2214D11)
end
Global.N_0xd57aaae0e2214d11 = Global.FreezeMicrophone

--- _FREEZE_PED_CAMERA_ROTATION
function Global.FreezePedCameraRotation(ped)
	return _in(0xFF287323B0E2C69A, ped)
end
Global.N_0xff287323b0e2c69a = Global.FreezePedCameraRotation

--- FREEZE_RADIO_STATION
function Global.FreezeRadioStation(radioStation)
	return _in(0x344F393B027E38C3, _ts(radioStation))
end

--- p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
-- distToNxJunction seems to be the distance in metres * 10.0f
-- direction:
-- 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
-- 1 = Route is being calculated or the player is going in the wrong direction
-- 2 = Please Proceed the Highlighted Route
-- 3 = In (distToNxJunction) Turn Left
-- 4 = In (distToNxJunction) Turn Right
-- 5 = In (distToNxJunction) Keep Straight
-- 6 = In (distToNxJunction) Turn Sharply To The Left
-- 7 = In (distToNxJunction) Turn Sharply To The Right
-- 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
-- return value set to 0 always
function Global.GenerateDirectionsToCoord(x, y, z, p3)
	return _in(0xF90125F1F79ECDF8, x, y, z, p3, _i, _f, _f, _ri)
end

--- For Steam.
-- Always returns 0 in retail version of the game.
-- @return Returns the progression of an achievement; 0 if the achievement cannot be progressed.
function Global.GetAchievementProgress(achievement)
	return _in(0x1C186837D0619335, achievement, _ri)
end
Global.N_0x1c186837d0619335 = Global.GetAchievementProgress
Global.GetAchievementProgression = Global.GetAchievementProgress

--- Returns all player indices for 'active' physical players known to the client.
-- The data returned adheres to the following layout:
-- ```
-- [127, 42, 13, 37]
-- ```
-- @return An object containing a list of player indices.
function Global.GetActivePlayers()
	return _in(0xcf143fb9, _ro)
end

--- Returns current screen resolution.
function Global.GetActiveScreenResolution()
	return _in(0x873C9F3104101DD3, _i, _i)
end
Global.GetScreenActiveResolution = Global.GetActiveScreenResolution

--- https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
function Global.GetActiveVehicleMissionType(vehicle)
	return _in(0x534AEBA6E5ED4CAB, vehicle, _ri)
end

--- Returns the current AI BLIP for the specified ped
function Global.GetAiBlip(ped)
	return _in(0x56176892826A4FE8, ped, _ri)
end
Global.N_0x56176892826a4fe8 = Global.GetAiBlip

--- _GET_AI_BLIP_2
function Global.GetAiBlip_2(ped)
	return _in(0x7CD934010E115C2C, ped, _ri)
end
Global.N_0x7cd934010e115c2c = Global.GetAiBlip_2

--- Returns all rope handles. The data returned adheres to the following layout:
-- ```
-- [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
-- ```
-- @return An object containing a list of all rope handles.
function Global.GetAllRopes()
	return _in(0x760a2d67, _ro)
end

--- Returns all registered vehicle model names, including non-dlc vehicles and custom vehicles in no particular order.
-- **Example output**
-- ```
-- ["dubsta", "dubsta2", "dubsta3", "myverycoolcar", "sultan", "sultanrs", ...]
-- ```
-- This native will not return vehicles that are unregistered (i.e from a resource being stopped) during runtime.
function Global.GetAllVehicleModels()
	return _in(0xd7531645, _ro)
end

--- _GET_ALL_VEHICLES
function Global.GetAllVehicles(vehArray)
	return _in(0x9B8E1BF04B51F2E8, _ii(vehArray) --[[ may be optional ]], _ri)
end

--- GET_ALLOCATED_STACK_SIZE
function Global.GetAllocatedStackSize()
	return _in(0x8B3CA62B1EF19B62, _ri)
end

--- Returns profile setting 17.
function Global.GetAllowMovementWhileZoomed()
	return _in(0xFC859E2374407556, _r)
end
Global.N_0xfc859e2374407556 = Global.GetAllowMovementWhileZoomed

--- A getter for [SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME](#\_0x0B919E1FB47CC4E0).
-- @return Returns ambient ped range multiplier value.
function Global.GetAmbientPedRangeMultiplier()
	return _in(0xb550232d, _rf)
end

--- A getter for [SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME](#\_0x90B6DA738A9A25DA).
-- @return Returns ambient vehicle range multiplier value.
function Global.GetAmbientVehicleRangeMultiplier()
	return _in(0x667ec929, _rf)
end

--- GET_AMBIENT_VOICE_NAME_HASH
-- @return The hash of the voice name in use by the ped.
function Global.GetAmbientVoiceNameHash(ped)
	return _in(0x5E203DA2BA15D436, ped, _ri)
end
Global.N_0x5e203da2ba15d436 = Global.GetAmbientVoiceNameHash
Global.GetAmbientVoiceNameHash = Global.GetAmbientVoiceNameHash

--- GET_AMMO_IN_CLIP
function Global.GetAmmoInClip(ped, weaponHash, ammo)
	return _in(0x2E1202248937775C, ped, _ch(weaponHash), _ii(ammo) --[[ may be optional ]], _r)
end

--- WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)
-- From decompiled scripts
-- Returns total ammo in weapon
-- GTALua Example :
-- natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
function Global.GetAmmoInPedWeapon(ped, weaponhash)
	return _in(0x015A522136D7F951, ped, _ch(weaponhash), _ri)
end

--- GET_ANGLE_BETWEEN_2D_VECTORS
function Global.GetAngleBetween_2dVectors(x1, y1, x2, y2)
	return _in(0x186FC4BE848E1C92, x1, y1, x2, y2, _rf)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetAnimDuration(animDict, animName)
	return _in(0xFEDDF04D62B8D790, _ts(animDict), _ts(animName), _rf)
end
Global.GetAnimDuration = Global.GetAnimDuration

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetAnimInitialOffsetPosition(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
	return _in(0xBE22B26DD764C040, _ts(animDict), _ts(animName), x, y, z, xRot, yRot, zRot, p8, p9, _rv)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetAnimInitialOffsetRotation(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
	return _in(0x4B805E6046EE9E47, _ts(animDict), _ts(animName), x, y, z, xRot, yRot, zRot, p8, p9, _rv)
end

--- _GET_ASPECT_RATIO
function Global.GetAspectRatio(b)
	return _in(0xF1307EF624A80D87, b, _rf)
end
Global.GetScreenAspectRatio = Global.GetAspectRatio

--- GET_AUDIBLE_MUSIC_TRACK_TEXT_ID
function Global.GetAudibleMusicTrackTextId()
	return _in(0x50B196FC9ED6545B, _ri)
end

--- _GET_BASE_ELEMENT_METADATA
function Global.GetBaseElementMetadata(p3, p4)
	return _in(0xB335F761606DB47C, _i, _i, p3, p4, _r)
end
Global.N_0xb335f761606db47c = Global.GetBaseElementMetadata

--- Returns value of the '-benchmarkIterations' command line option.
function Global.GetBenchmarkIterationsFromCommandLine()
	return _in(0x4750FC27570311EC, _ri)
end
Global.N_0x4750fc27570311ec = Global.GetBenchmarkIterationsFromCommandLine

--- Returns value of the '-benchmarkPass' command line option.
function Global.GetBenchmarkPassFromCommandLine()
	return _in(0x1B2366C3F2A5C8DF, _ri)
end
Global.N_0x1b2366c3f2a5c8df = Global.GetBenchmarkPassFromCommandLine

--- _GET_BENCHMARK_TIME
function Global.GetBenchmarkTime()
	return _in(0xE599A503B3837E1B, _rf)
end
Global.N_0xe599a503b3837e1b = Global.GetBenchmarkTime

--- p1 is always 0 in the scripts.
function Global.GetBestPedWeapon(ped, p1)
	return _in(0x8483E98E8B888AE2, ped, p1, _ri)
end

--- In percentage: 0.0 - 100.0
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.GetBinkMovieTime(binkMovie)
	return _in(0x8E17DDD6B9D5BF29, binkMovie, _rf)
end

--- GET_BITS_IN_RANGE
function Global.GetBitsInRange(var, rangeStart, rangeEnd)
	return _in(0x53158863FCC0893A, var, rangeStart, rangeEnd, _ri)
end

--- GET_BLIP_ALPHA
function Global.GetBlipAlpha(blip)
	return _in(0x970F608F0EE6C885, blip, _ri)
end

--- GET_BLIP_COLOUR
function Global.GetBlipColour(blip)
	return _in(0xDF729E8D20CF7327, blip, _ri)
end

--- GET_BLIP_COORDS
function Global.GetBlipCoords(blip)
	return _in(0x586AFE3FF72D996E, blip, _rv)
end

--- Returns the Blip handle of given Entity.
function Global.GetBlipFromEntity(entity)
	return _in(0xBC8DBDCA2436F7E8, entity, _ri)
end

--- GET_BLIP_HUD_COLOUR
function Global.GetBlipHudColour(blip)
	return _in(0x729B5F1EFBC0AAEE, blip, _ri)
end

--- GET_BLIP_INFO_ID_COORD
function Global.GetBlipInfoIdCoord(blip)
	return _in(0xFA7C7F0AADF25D09, blip, _rv)
end

--- GET_BLIP_INFO_ID_DISPLAY
function Global.GetBlipInfoIdDisplay(blip)
	return _in(0x1E314167F701DC3B, blip, _ri)
end

--- GET_BLIP_INFO_ID_ENTITY_INDEX
function Global.GetBlipInfoIdEntityIndex(blip)
	return _in(0x4BA4E2553AFEDC2C, blip, _ri)
end

--- This function is hard-coded to always return 0.
function Global.GetBlipInfoIdPickupIndex(blip)
	return _in(0x9B6786E4C03DD382, blip, _ri)
end

--- Returns a value based on what the blip is attached to
-- 1 - Vehicle
-- 2 - Ped
-- 3 - Object
-- 4 - Coord
-- 5 - unk
-- 6 - Pickup
-- 7 - Radius
function Global.GetBlipInfoIdType(blip)
	return _in(0xBE9B0959FFD0779B, blip, _ri)
end

--- NativeDB Introduced: v2060
function Global.GetBlipRotation(blip)
	return _in(0x003E92BA477F9D7F, blip, _ri)
end
Global.N_0x003e92ba477f9d7f = Global.GetBlipRotation

--- Gets the sprite id of the specified blip. Blip sprite ids and images can be found [here](https://docs.fivem.net/docs/game-references/blips/).
-- @param blip The blip handle.
function Global.GetBlipSprite(blip)
	return _in(0x1FC877464A04FC4F, blip, _ri)
end

--- GET_BOAT_BOOM_POSITION_RATIO
function Global.GetBoatBoomPositionRatio(vehicle)
	return _in(0x6636C535F6CC2725, vehicle, _rf)
end
Global.N_0x6636c535f6cc2725 = Global.GetBoatBoomPositionRatio

--- Same call as VEHICLE::_0x0F3B4D4E43177236
function Global.GetBoatBoomPositionRatio_2(vehicle, p1)
	return _in(0xC1F981A6F74F0C23, vehicle, p1)
end
Global.N_0xc1f981a6f74f0c23 = Global.GetBoatBoomPositionRatio_2

--- _GET_BOAT_BOOM_POSITION_RATIO_3
function Global.GetBoatBoomPositionRatio_3(vehicle, p1)
	return _in(0x0F3B4D4E43177236, vehicle, p1)
end
Global.N_0x0f3b4d4e43177236 = Global.GetBoatBoomPositionRatio_3

--- Retrieves the agility for a specific boat model, including any vehicle mods. Unlike other vehicles where Rockstar Games typically assess performance based on traction, boats use agility as a measure. This static value is distinct from the traction metrics used for other vehicle types.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param modelHash The model hash of the boat.
-- @return Returns the agility value of the specified boat as a float number.
function Global.GetBoatVehicleModelAgility(modelHash)
	return _in(0x5AA3F878A178C4FC, _ch(modelHash), _rf)
end
Global.N_0x5aa3f878a178c4fc = Global.GetBoatVehicleModelAgility
Global.GetVehicleModelMoveResistance = Global.GetBoatVehicleModelAgility

--- This native returns the index of a calming quad if the given point is inside its bounds.
-- @param x The X coordinate
-- @param y The Y coordinate
-- @return The calming quad index at the given position. Returns -1 if there isn't any there.
function Global.GetCalmingQuadAtCoords(x, y)
	return _in(0x870e8b40, x, y, _ri)
end

--- GET_CALMING_QUAD_BOUNDS
-- @param waterQuad The calming quad index
-- @param minX The minX coordinate
-- @param minY The minY coordinate
-- @param maxX The maxX coordinate
-- @param maxY The maxY coordinate
-- @return Returns true on success. Bounds are undefined on failure
function Global.GetCalmingQuadBounds(waterQuad)
	return _in(0xff60e63, waterQuad, _i, _i, _i, _i, _r)
end

--- GET_CALMING_QUAD_COUNT
-- @return Returns the amount of calming quads loaded.
function Global.GetCalmingQuadCount()
	return _in(0xcebfc42, _ri)
end

--- GET_CALMING_QUAD_DAMPENING
-- @param waterQuad The calming quad index
-- @return Returns true on success. Dampening value is undefined on failure
function Global.GetCalmingQuadDampening(waterQuad, calmingQuadDampening)
	return _in(0xb0e3a058, waterQuad, _fi(calmingQuadDampening) --[[ may be optional ]], _r)
end

--- Enumerated type defined in camControlHelperMetadataViewModes:
-- ```cpp
-- enum Context {
-- ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
-- IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
-- ON_BIKE = 2,
-- IN_BOAT = 3,
-- IN_AIRCRAFT = 4,
-- IN_SUBMARINE = 5,
-- IN_HELI = 6,
-- IN_TURRET = 7,
-- }
-- ```
-- @return The active view mode context.
function Global.GetCamActiveViewModeContext()
	return _in(0x19CAFA3C87F7C2FF, _ri)
end
Global.N_0x19cafa3c87f7c2ff = Global.GetCamActiveViewModeContext

--- GET_CAM_ANIM_CURRENT_PHASE
function Global.GetCamAnimCurrentPhase(cam)
	return _in(0xA10B2DB49E92A6B0, cam, _rf)
end

--- GET_CAM_COORD
function Global.GetCamCoord(cam)
	return _in(0xBAC038F7459AE5AE, cam, _rv)
end

--- NativeDB Introduced: v2699
function Global.GetCamDofStrength(cam)
	return _in(0x06D153C0B99B6128, cam, _rf)
end

--- GET_CAM_FAR_CLIP
function Global.GetCamFarClip(cam)
	return _in(0xB60A9CFEB21CA6AA, cam, _rf)
end

--- GET_CAM_FAR_DOF
function Global.GetCamFarDof(cam)
	return _in(0x255F8DAFD540D397, cam, _rf)
end

--- GET_CAM_FOV
function Global.GetCamFov(cam)
	return _in(0xC3330A45CCCDB26A, cam, _rf)
end

--- Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inverse.
function Global.GetCamMatrix(camera)
	return _in(0x8f57a89d, camera, _v, _v, _v, _v)
end

--- GET_CAM_NEAR_CLIP
function Global.GetCamNearClip(cam)
	return _in(0xC520A34DAFBF24B1, cam, _rf)
end

--- NativeDB Introduced: v2699
function Global.GetCamNearDof(cam)
	return _in(0xC2612D223D915A1C, cam, _rf)
end

--- Gets a camera's rotation by handle (`cam`) lookup, outputs a `Vector3` in degrees.
-- @param cam The camera handle.
-- @param rotationOrder The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- @return A `Vector3` representing the camera rotation in degrees.
function Global.GetCamRot(cam, rotationOrder)
	return _in(0x7D304C1C955E3E12, cam, rotationOrder, _rv)
end

--- GET_CAM_SPLINE_NODE_INDEX
function Global.GetCamSplineNodeIndex(cam)
	return _in(0xB22B17DF858716A6, cam, _ri)
end

--- I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
function Global.GetCamSplineNodePhase(cam)
	return _in(0xD9D0E694C8282C96, cam, _rf)
end

--- Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
-- (returns 1.0f when no nodes has been added, reached end of non existing spline)
function Global.GetCamSplinePhase(cam)
	return _in(0xB5349E36C546509A, cam, _rf)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the view mode enum.
-- @param context See [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
function Global.GetCamViewModeForContext(context)
	return _in(0xEE778F8C7E1142E2, context, _ri)
end
Global.N_0xee778f8c7e1142e2 = Global.GetCamViewModeForContext

--- Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
function Global.GetCanVehicleJump(vehicle)
	return _in(0x9078C0C5EF8C19E9, vehicle, _r)
end
Global.HasVehicleJumpingAbility = Global.GetCanVehicleJump
Global.DoesVehicleHaveJumpingAbility = Global.GetCanVehicleJump

--- Gets the position of the cargobob hook, in world coords.
function Global.GetCargobobHookPosition(cargobob)
	return _in(0xCBDB9B923CACC92D, cargobob, _rv)
end
Global.N_0xcbdb9b923cacc92d = Global.GetCargobobHookPosition

--- GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP
function Global.GetCauseOfMostRecentForceCleanup()
	return _in(0x9A41CF4674A12272, _ri)
end

--- GET_CGOFFSET
function Global.GetCgoffset(entity)
	return _in(0x8214A4B5A7A33612, entity, _rv)
end

--- GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK
function Global.GetClipSetForScriptedGunTask(p0)
	return _in(0x3A8CADC7D37AACC5, p0, _s)
end

--- GET_CLOCK_DAY_OF_MONTH
function Global.GetClockDayOfMonth()
	return _in(0x3D10BC92A4DB1D35, _ri)
end

--- Gets the current day of the week.
-- 0: Sunday
-- 1: Monday
-- 2: Tuesday
-- 3: Wednesday
-- 4: Thursday
-- 5: Friday
-- 6: Saturday
function Global.GetClockDayOfWeek()
	return _in(0xD972E4BD7AEB235F, _ri)
end

--- Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
function Global.GetClockHours()
	return _in(0x25223CA6B4D20B7F, _ri)
end

--- Gets the current ingame clock minute.
function Global.GetClockMinutes()
	return _in(0x13D2B8ADD79640F2, _ri)
end

--- GET_CLOCK_MONTH
function Global.GetClockMonth()
	return _in(0xBBC72712E80257A1, _ri)
end

--- Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
function Global.GetClockSeconds()
	return _in(0x494E97C2EF27C470, _ri)
end

--- GET_CLOCK_YEAR
function Global.GetClockYear()
	return _in(0x961777E64BDAF717, _ri)
end

--- NativeDB Introduced: v1180
function Global.GetClosestBlipOfType(blipSprite)
	return _in(0xD484BF71050CA1EE, blipSprite, _ri)
end
Global.N_0xd484bf71050ca1ee = Global.GetClosestBlipOfType

--- Returns TRUE if it found something. FALSE if not.
function Global.GetClosestFirePos(x, y, z)
	return _in(0x352A9F6BCF90081F, _v, x, y, z, _r)
end

--- Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0
function Global.GetClosestMajorVehicleNode(x, y, z, unknown1, unknown2)
	return _in(0x2EABE3B06F58C1BE, x, y, z, _v, unknown1, unknown2, _r)
end

--- Has 8 params in the latest patches.
-- isMission - if true doesn't return mission objects
function Global.GetClosestObjectOfType(x, y, z, radius, modelHash, isMission, p6, p7)
	return _in(0xE143FA2249364369, x, y, z, radius, _ch(modelHash), isMission, p6, p7, _ri)
end

--- Gets the closest ped in a radius.
-- Ped Types:
-- Any ped = -1
-- Player = 1
-- Male = 4
-- Female = 5
-- Cop = 6
-- Human = 26
-- SWAT = 27
-- Animal = 28
-- Army = 29
-- ------------------
-- P4 P5 P7 P8
-- 1  0  x  x  = return nearest walking Ped
-- 1  x  0  x  = return nearest walking Ped
-- x  1  1  x  = return Ped you are using
-- 0  0  x  x  = no effect
-- 0  x  0  x  = no effect
-- x = can be 1 or 0. Does not have any obvious changes.
-- This function does not return ped who is:
-- 1. Standing still
-- 2. Driving
-- 3. Fleeing
-- 4. Attacking
-- This function only work if the ped is:
-- 1. walking normally.
-- 2. waiting to cross a road.
-- Note: PED::GET_PED_NEARBY_PEDS works for more peds.
function Global.GetClosestPed(x, y, z, radius, p4, p5, p7, p8, pedType)
	return _in(0xC33AB876A77F8164, x, y, z, radius, p4, p5, _i, p7, p8, pedType, _r)
end

--- p1 seems to be always 1.0f in the scripts
function Global.GetClosestRoad(x, y, z, p3, p4, p10)
	return _in(0x132F52BBA570FE92, x, y, z, p3, p4, _v, _v, _i, _i, _f, p10, _ri)
end

--- Example usage
-- VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)
-- x, y, z: Position to get closest vehicle to.
-- radius: Max radius to get a vehicle.
-- modelHash: Limit to vehicles with this model. 0 for any.
-- flags: The bitwise flags altering the function's behaviour.
-- Does not return police cars or helicopters.
-- It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
-- Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
-- These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
-- Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
-- Conversion of found flags to binary: pastebin.com/kghNFkRi
-- At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
-- It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT
-- -------------------------------------------------------------------------
-- Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
-- Use flag 127 to return police cars
function Global.GetClosestVehicle(x, y, z, radius, modelHash, flags)
	return _in(0xF73EB622C4F1689B, x, y, z, radius, _ch(modelHash), flags, _ri)
end

--- FYI: When falling through the map (or however you got under it) you will respawn when your player ped's height is <= -200.0 meters (I think you all know this) and when in a vehicle you will actually respawn at the closest vehicle node.
-- ----------
-- Vector3 nodePos;
-- GET_CLOSEST_VEHICLE_NODE(x,y,z,&nodePos,...)
-- p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (asphalt) road.
-- p5, p6 are always the same:
-- 0x40400000 (3.0), 0
-- p5 can also be 100.0 and p6 can be 2.5:
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, &v_5, v_9, 100.0, 2.5)
-- Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
-- The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
-- Starting at 2, every fourth node is under the map, always same coords.
-- Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
-- gtaforums.com/topic/843561-pathfind-node-types
function Global.GetClosestVehicleNode(x, y, z, nodeType, p5, p6)
	return _in(0x240A18690AE96513, x, y, z, _v, nodeType, p5, p6, _r)
end

--- p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
-- p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (asphalt) road.
-- p6 is always 3.0
-- p7 is always 0.
-- Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
-- The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
-- Starting at 2, every fourth node is under the map, always same coords.
-- Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
-- gtaforums.com/topic/843561-pathfind-node-types
-- Example of usage, moving vehicle to closest path/road:
-- Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);
-- Vector3 closestVehicleNodeCoords;
-- float roadHeading;
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);
-- ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);
-- ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);
-- VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);
-- ------------------------------------------------------------------
-- C# Example (ins1de) : pastebin.com/fxtMWAHD
function Global.GetClosestVehicleNodeWithHeading(x, y, z, nodeType, p6, p7)
	return _in(0xFF071FB798B803B0, x, y, z, _v, _f, nodeType, p6, p7, _r)
end

--- _GET_CLOUD_HAT_OPACITY
function Global.GetCloudHatOpacity()
	return _in(0x20AC25E781AE4A84, _rf)
end
Global.N_0x20ac25e781ae4a84 = Global.GetCloudHatOpacity

--- Returns POSIX timestamp.
-- Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#\_0xDA488F299A5B164E))
-- @return An int representing the cloud time.
function Global.GetCloudTimeAsInt()
	return _in(0x9A73240B49945C76, _ri)
end
Global.N_0x9a73240b49945c76 = Global.GetCloudTimeAsInt

--- Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
function Global.GetCloudTimeAsString()
	return _in(0xF12E6CD06C73D69E, _s)
end
Global.N_0xf12e6cd06c73d69e = Global.GetCloudTimeAsString

--- GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY
function Global.GetCollisionNormalOfLastHitForEntity(entity)
	return _in(0xE465D4AB7CA6AE72, entity, _rv)
end

--- p0: Ped Handle
-- p1: int i | 0 <= i <= 27
-- p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
-- <BlindFireChance value="0.1"/>
-- <WeaponShootRateModifier value="1.0"/>
-- <TimeBetweenBurstsInCover value="1.25"/>
-- <BurstDurationInCover value="2.0"/>
-- <TimeBetweenPeeks value="10.0"/>
-- <WeaponAccuracy value="0.18"/>
-- <FightProficiency value="0.8"/>
-- <StrafeWhenMovingChance value="1.0"/>
-- <WalkWhenStrafingChance value="0.0"/>
-- <AttackWindowDistanceForCover value="55.0"/>
-- <TimeToInvalidateInjuredTarget value="9.0"/>
-- <TriggerChargeTime_Near value="4.0"/>
-- <TriggerChargeTime_Far value="10.0"/>
-- -------------Confirmed by editing combatbehavior.meta:
-- p1:
-- 0=BlindFireChance
-- 1=BurstDurationInCover
-- 3=TimeBetweenBurstsInCover
-- 4=TimeBetweenPeeks
-- 5=StrafeWhenMovingChance
-- 8=WalkWhenStrafingChance
-- 11=AttackWindowDistanceForCover
-- 12=TimeToInvalidateInjuredTarget
-- 16=OptimalCoverDistance
function Global.GetCombatFloat(ped, p1)
	return _in(0x52DFF8A10508090A, ped, p1, _rf)
end

--- index2 is unused
function Global.GetCommerceItemCat(index, index2)
	return _in(0x6F44CBF56D79FAC0, index, index2, _s)
end
Global.N_0x6f44cbf56d79fac0 = Global.GetCommerceItemCat

--- GET_COMMERCE_ITEM_ID
function Global.GetCommerceItemId(index)
	return _in(0x662635855957C411, index, _s)
end
Global.N_0x662635855957c411 = Global.GetCommerceItemId

--- GET_COMMERCE_ITEM_NAME
function Global.GetCommerceItemName(index)
	return _in(0xB4271092CA7EDF48, index, _s)
end
Global.N_0xb4271092ca7edf48 = Global.GetCommerceItemName

--- GET_COMMERCE_ITEM_NUM_CATS
function Global.GetCommerceItemNumCats(index)
	return _in(0x2A7776C709904AB0, index, _ri)
end
Global.N_0x2a7776c709904ab0 = Global.GetCommerceItemNumCats

--- NativeDB Added Parameter 3: int p2
function Global.GetCommerceItemTexturename(index)
	return _in(0x722F5D28B61C5EA8, index, _s)
end
Global.N_0x722f5d28b61c5ea8 = Global.GetCommerceItemTexturename

--- GET_COMMERCE_PRODUCT_PRICE
function Global.GetCommerceProductPrice(index)
	return _in(0xCA94551B50B4932C, index, _s)
end
Global.N_0xca94551b50b4932c = Global.GetCommerceProductPrice

--- GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTON
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.GetControlGroupInstructionalButton(padIndex, controlGroup, p2)
	return _in(0x80C2FD58D720C801, padIndex, controlGroup, p2, _s)
end
Global.N_0x80c2fd58d720c801 = Global.GetControlGroupInstructionalButton

--- formerly called _GET_CONTROL_ACTION_NAME incorrectly
-- p2 appears to always be true.
-- p2 is unused variable in function.
-- EG:
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/
-- gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetControlInstructionalButton(padIndex, control, p2)
	return _in(0x0499D7B09FC9B407, padIndex, control, p2, _s)
end
Global.N_0x0499d7b09fc9b407 = Global.GetControlInstructionalButton

--- GET_CONTROL_NORMAL
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return Returns the value of [`GET_CONTROL_VALUE`](#\_0xD95E79E8686D2C27) normalized, i.e. a real number value between -1.0 and 1.0
function Global.GetControlNormal(padIndex, control)
	return _in(0xEC3C9B8D5327B563, padIndex, control, _rf)
end

--- Seems to return values between -1 and 1 for controls like gas and steering.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.GetControlUnboundNormal(padIndex, control)
	return _in(0x5B84D09CEC5209C5, padIndex, control, _rf)
end
Global.N_0x5b84d09cec5209c5 = Global.GetControlUnboundNormal

--- GET_CONTROL_VALUE
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.GetControlValue(padIndex, control)
	return _in(0xD95E79E8686D2C27, padIndex, control, _ri)
end

--- Can be used to get a console variable of type `char*`, for example a string.
-- @param varName The console variable to look up.
-- @param default_ The default value to set if none is found.
-- @return Returns the convar value if it can be found, otherwise it returns the assigned `default`.
function Global.GetConvar(varName, default_)
	return _in(0x6ccd2564, _ts(varName), _ts(default_), _s)
end

--- Can be used to get a console variable casted back to `int` (an integer value).
-- @param varName The console variable to look up.
-- @param default_ The default value to set if none is found (variable not set using [SET_CONVAR](#\_0x341B16D2), or not accessible).
-- @return Returns the convar value if it can be found, otherwise it returns the assigned `default`.
function Global.GetConvarInt(varName, default_)
	return _in(0x935c0ab2, _ts(varName), default_, _ri)
end

--- Returns the convertible state of the specified vehicle.
-- ```cpp
-- enum RoofState
-- {
-- ROOFSTATE_UP = 0,
-- ROOFSTATE_LOWERING = 1,
-- ROOFSTATE_DOWN = 2,
-- ROOFSTATE_RAISING = 3
-- };
-- ```
-- @param vehicle Vehicle to get the state of
-- @return *   0 when closed/up, the vehicle is not a convertible or the vehicle is null/not provided
-- 		*   1 when closing
-- 		*   2 when open/down
-- 		*   3 when opening
-- 		*   6 unknown/unverified -- possibly stopped but not full open
function Global.GetConvertibleRoofState(vehicle)
	return _in(0xF8C397922FC03F41, vehicle, _ri)
end

--- GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE
function Global.GetCoordsAndRotationOfClosestObjectOfType(x, y, z, radius, modelHash, rotationOrder)
	return _in(0x163F8B586BC95F2A, x, y, z, radius, _ch(modelHash), _v, _v, rotationOrder, _ri)
end
Global.N_0x163f8b586bc95f2a = Global.GetCoordsAndRotationOfClosestObjectOfType

--- GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA
function Global.GetCoordsOfProjectileTypeInArea(x1, y1, z1, x2, y2, z2, projectileHash, ownedByPlayer)
	return _in(0x8D7A43EC6A5FEA45, x1, y1, z1, x2, y2, z2, _ch(projectileHash), _v, ownedByPlayer, _r)
end
Global.N_0x8d7a43ec6a5fea45 = Global.GetCoordsOfProjectileTypeInArea
Global.GetIsProjectileTypeInArea = Global.GetCoordsOfProjectileTypeInArea

--- GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
function Global.GetCoordsOfProjectileTypeWithinDistance(ped, weaponHash, distance, ownedByPlayer)
	return _in(0xDFB4138EEFED7B81, ped, _ch(weaponHash), distance, _v, ownedByPlayer, _r)
end
Global.N_0xdfb4138eefed7b81 = Global.GetCoordsOfProjectileTypeWithinDistance
Global.GetProjectileNearPedCoords = Global.GetCoordsOfProjectileTypeWithinDistance

--- if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
function Global.GetCurrentFrontendMenuVersion()
	return _in(0x2309595AD6145265, _ri)
end
Global.N_0x2309595ad6145265 = Global.GetCurrentFrontendMenuVersion
Global.GetCurrentFrontendMenu = Global.GetCurrentFrontendMenuVersion

--- This native returns the currently used game's name.
-- @return The game name as a string, one of the following values: gta4, gta5, rdr3
function Global.GetCurrentGameName()
	return _in(0xaca18ecd, _s)
end

--- 0 = american (en-US)
-- 1 = french (fr-FR)
-- 2 = german (de-DE)
-- 3 = italian (it-IT)
-- 4 = spanish (es-ES)
-- 5 = brazilian (pt-BR)
-- 6 = polish (pl-PL)
-- 7 = russian (ru-RU)
-- 8 = korean (ko-KR)
-- 9 = chinesetrad (zh-TW)
-- 10 = japanese (ja-JP)
-- 11 = mexican (es-MX)
-- 12 = chinesesimp (zh-CN)
function Global.GetCurrentLanguage()
	return _in(0x2BDD44CC428A7EAE, _ri)
end
Global.GetUiLanguageId = Global.GetCurrentLanguage
Global.GetCurrentLanguageId = Global.GetCurrentLanguage

--- GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS
function Global.GetCurrentNumberOfCloudPhotos()
	return _in(0x473151EBC762C6DA, _ri)
end
Global.N_0x473151ebc762c6da = Global.GetCurrentNumberOfCloudPhotos
Global.GetNumberOfPhotos = Global.GetCurrentNumberOfCloudPhotos
Global.GetCurrentNumberOfPhotos = Global.GetCurrentNumberOfCloudPhotos

--- GET_CURRENT_PED_VEHICLE_WEAPON
function Global.GetCurrentPedVehicleWeapon(ped, weaponHash)
	return _in(0x1017582BCD3832DC, ped, _ii(weaponHash) --[[ may be optional ]], _r)
end

--- The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
-- p2 seems to be 1 most of the time; and is not implemented.
function Global.GetCurrentPedWeapon(ped, p2)
	return _in(0x3A87E44BB9A01D54, ped, _i, p2, _r)
end

--- NativeDB Added Parameter 2: Any p1
function Global.GetCurrentPedWeaponEntityIndex(ped)
	return _in(0x3B390A939AF0B5FC, ped, _ri)
end

--- GET_CURRENT_PLAYBACK_FOR_VEHICLE
function Global.GetCurrentPlaybackForVehicle(vehicle)
	return _in(0x42BC05C27A946054, vehicle, _ri)
end

--- Return the playback time (in milliseconds) of the radio stations current track.
-- NativeDB Introduced: v1493
function Global.GetCurrentRadioTrackPlaybackTime(radioStationName)
	return _in(0x3E65CDE5215832C1, _ts(radioStationName), _ri)
end
Global.N_0x3e65cde5215832c1 = Global.GetCurrentRadioTrackPlaybackTime
Global.GetCurrentRadioStationHash = Global.GetCurrentRadioTrackPlaybackTime

--- Returns the name of the currently executing resource.
-- @return The name of the resource.
function Global.GetCurrentResourceName()
	return _in(0xe5e9ebbb, _s)
end

--- GET_CURRENT_SCRIPTED_CONVERSATION_LINE
function Global.GetCurrentScriptedConversationLine()
	return _in(0x480357EE890C295A, _ri)
end

--- Returns the peer address of the remote game server that the user is currently connected to.
-- @return The peer address of the game server (e.g. `127.0.0.1:30120`), or NULL if not available.
function Global.GetCurrentServerEndpoint()
	return _in(0xea11bfba, _s)
end

--- GET_CURRENT_TRACK_SOUND_NAME
-- @return The current sound name as a hash for the currently playing track on the given station.
function Global.GetCurrentTrackSoundName(radioStationName)
	return _in(0x34D66BC058019CE0, _ts(radioStationName), _ri)
end
Global.N_0x34d66bc058019ce0 = Global.GetCurrentTrackSoundName
Global.GetCurrentRadioTrackName = Global.GetCurrentTrackSoundName

--- GET_CURRENT_WEBPAGE_ID
function Global.GetCurrentWebpageId()
	return _in(0x01A358D9128B7A86, _ri)
end
Global.N_0x01a358d9128b7a86 = Global.GetCurrentWebpageId
Global.GetActiveWebsiteId = Global.GetCurrentWebpageId

--- GET_CURRENT_WEBSITE_ID
function Global.GetCurrentWebsiteId()
	return _in(0x97D47996FC48CBAD, _ri)
end

--- _GET_CUT_FILE_NUM_SECTIONS
function Global.GetCutFileNumSections(cutsceneName)
	return _in(0x0ABC54DE641DC0FC, _ts(cutsceneName), _ri)
end
Global.N_0x0abc54de641dc0fc = Global.GetCutFileNumSections

--- Returns the time of the cutscene's end accounting for [`REQUEST_CUTSCENE_WITH_PLAYBACK_LIST`](#\_0xC23DE0E91C30B58C)
-- If a cutscene is laid out with 10 second sections, and section 0 and 1 are enabled then it would be 20000ms.
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.GetCutsceneEndTime()
	return _in(0x011883f41211432a, _ri)
end
Global.N_0x971d7b15bcdbef99 = Global.GetCutsceneEndTime

--- GET_CUTSCENE_SECTION_PLAYING
function Global.GetCutsceneSectionPlaying()
	return _in(0x49010A6A396553D8, _ri)
end

--- Gets the elapsed time of the current cutscene in
-- @return Elapsed time in milliseconds
function Global.GetCutsceneTime()
	return _in(0xE625BEABBAFFDAB9, _ri)
end

--- Gets the total length of the cutscene irrespective of playback list in milliseconds
-- To account for sections, see [`_GET_CUTSCENE_END_TIME`](#\_0x971D7B15BCDBEF99)
-- @return Cutscene total length in milliseconds
function Global.GetCutsceneTotalDuration()
	return _in(0xEE53B14A19E480D4, _ri)
end

--- GET_DEAD_PED_PICKUP_COORDS
function Global.GetDeadPedPickupCoords(ped, p1, p2)
	return _in(0xCD5003B097200F36, ped, p1, p2, _rv)
end

--- NativeDB Introduced: v2372
function Global.GetDebugCamera()
	return _in(0x77C3CEC46BE286F6, _ri)
end
Global.N_0x77c3cec46be286f6 = Global.GetDebugCamera

--- GET_DECAL_WASH_LEVEL
function Global.GetDecalWashLevel(decal)
	return _in(0x323F647679A09103, decal, _rf)
end

--- Gets the aggressiveness factor of the ocean waves.
function Global.GetDeepOceanScaler()
	return _in(0x2B2A2CC86778B619, _rf)
end
Global.N_0x2b2a2cc86778b619 = Global.GetDeepOceanScaler
Global.GetWavesIntensity = Global.GetDeepOceanScaler
Global.GetCurrentIntensity = Global.GetDeepOceanScaler

--- This function is hard-coded to always return 1.
function Global.GetDefaultScriptRendertargetRenderId()
	return _in(0x52F0982D7FD156B6, _ri)
end

--- GET_DISABLED_CONTROL_NORMAL
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.GetDisabledControlNormal(padIndex, control)
	return _in(0x11E65974A982637C, padIndex, control, _rf)
end

--- GET_DISABLED_CONTROL_UNBOUND_NORMAL
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.GetDisabledControlUnboundNormal(padIndex, control)
	return _in(0x4F8A26A890FD62FB, padIndex, control, _rf)
end
Global.N_0x4f8a26a890fd62fb = Global.GetDisabledControlUnboundNormal

--- Returns the display name/text label (`gameName` in `vehicles.meta`) for the specified vehicle model.
-- @param modelHash A vehicle model to check.
-- @return The display name for the vehicle, or `'CARNOTFOUND'` if invalid.
function Global.GetDisplayNameFromVehicleModel(modelHash)
	return _in(0xB215AAC32D25D019, _ch(modelHash), _s)
end

--- Returns the distance between two three-dimensional points, optionally ignoring the Z values.
-- If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
-- Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
-- @param x1 The X coordinate of the first point.
-- @param y1 The Y coordinate of the first point.
-- @param z1 The Z coordinate of the first point.
-- @param x2 The X coordinate of the second point.
-- @param y2 The Y coordinate of the second point.
-- @param z2 The Z coordinate of the second point.
-- @param useZ Whether or not to use the Z coordinate.
-- @return The distance between the passed points in units.
function Global.GetDistanceBetweenCoords(x1, y1, z1, x2, y2, z2, useZ)
	return _in(0xF1B760881820C952, x1, y1, z1, x2, y2, z2, useZ, _rf)
end

--- The Second item in the struct `*(Hash *)(outData + 1)` is the vehicle hash.
-- @param dlcVehicleIndex takes a number from 0 to `GET_NUM_DLC_VEHICLES()` - 1.
-- @param outData a struct of 3 8-byte items.
-- @return A boolean value return if find or not the dlcVehicleIndex.
function Global.GetDlcVehicleData(dlcVehicleIndex, outData)
	return _in(0x33468EDC08E371F6, dlcVehicleIndex, _ii(outData) --[[ may be optional ]], _r)
end

--- GET_DLC_VEHICLE_FLAGS
function Global.GetDlcVehicleFlags(dlcVehicleIndex)
	return _in(0x5549EE11FA22FCF2, dlcVehicleIndex, _ri)
end

--- GET_DLC_VEHICLE_MOD_LOCK_HASH
function Global.GetDlcVehicleModLockHash(hash)
	return _in(0xC098810437312FFF, _ch(hash), _ri)
end
Global.N_0xc098810437312fff = Global.GetDlcVehicleModLockHash

--- dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()
function Global.GetDlcVehicleModel(dlcVehicleIndex)
	return _in(0xECC01B7C5763333C, dlcVehicleIndex, _ri)
end

--- p0 seems to be the weapon index
-- p1 seems to be the weapon component index
-- struct DlcComponentData{
-- int attachBone;
-- int padding1;
-- int bActiveByDefault;
-- int padding2;
-- int unk;
-- int padding3;
-- int componentHash;
-- int padding4;
-- int unk2;
-- int padding5;
-- int componentCost;
-- int padding6;
-- char nameLabel[64];
-- char descLabel[64];
-- };
function Global.GetDlcWeaponComponentData(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
	return _in(0x6CF598A2957C2BF8, dlcWeaponIndex, dlcWeapCompIndex, _ii(ComponentDataPtr) --[[ may be optional ]], _r)
end

--- Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.GetDlcWeaponComponentDataSp(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
	return _in(0x31D5E073B6F93CDC, dlcWeaponIndex, dlcWeapCompIndex, _ii(ComponentDataPtr) --[[ may be optional ]], _r)
end

--- dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
-- struct DlcWeaponData
-- {
-- int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this
-- int padding1;
-- int weaponHash;
-- int padding2;
-- int unk;
-- int padding3;
-- int weaponCost;
-- int padding4;
-- int ammoCost;
-- int padding5;
-- int ammoType;
-- int padding6;
-- int defaultClipSize;
-- int padding7;
-- char nameLabel[64];
-- char descLabel[64];
-- char desc2Label[64]; // usually "the" + name
-- char upperCaseNameLabel[64];
-- };
function Global.GetDlcWeaponData(dlcWeaponIndex, outData)
	return _in(0x79923CD21BECE14E, dlcWeaponIndex, _ii(outData) --[[ may be optional ]], _r)
end

--- Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.GetDlcWeaponDataSp(dlcWeaponIndex, outData)
	return _in(0x310836EE7129BA33, dlcWeaponIndex, _ii(outData) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1604
function Global.GetDoesVehicleHaveTombstone(vehicle)
	return _in(0x71AFB258CCED3A27, vehicle, _r)
end

--- NativeDB Introduced: v2372
function Global.GetDriftTyresEnabled(vehicle)
	return _in(0x2F5A72430E78C8D3, vehicle, _r)
end

--- Returns the NUI window handle for a specified DUI browser object.
-- @param duiObject The DUI browser handle.
-- @return The NUI window handle, for use in e.g. CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
function Global.GetDuiHandle(duiObject)
	return _in(0x1655d41d, duiObject, _s)
end

--- GET_ENTITY_ALPHA
function Global.GetEntityAlpha(entity)
	return _in(0x5A47B3B5E63E94C6, entity, _ri)
end

--- ```
-- Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
-- Example:
-- 0.000000 - mark the starting of animation.
-- 0.500000 - mark the midpoint of the animation.
-- 1.000000 - mark the end of animation.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetEntityAnimCurrentTime(entity, animDict, animName)
	return _in(0x346D81500D088F42, entity, _ts(animDict), _ts(animName), _rf)
end

--- ```
-- Returns a float value representing animation's total playtime in milliseconds.
-- Example:
-- GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
-- return 20800.000000
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetEntityAnimTotalTime(entity, animDict, animName)
	return _in(0x50BD2730B191E360, entity, _ts(animDict), _ts(animName), _rf)
end

--- Returns entity's archetype name, if available.
-- @param entity An entity handle.
-- @return Entity's archetype name
function Global.GetEntityArchetypeName(entity)
	return _in(0x47b870f5, entity, _s)
end

--- GET_ENTITY_ATTACHED_TO
function Global.GetEntityAttachedTo(entity)
	return _in(0x48C2BED9180FE123, entity, _ri)
end

--- _GET_ENTITY_ATTACHED_TO_CARGOBOB
function Global.GetEntityAttachedToCargobob(vehicle)
	return _in(0x99093F60746708CA, vehicle, _ri)
end
Global.N_0x99093f60746708ca = Global.GetEntityAttachedToCargobob

--- GET_ENTITY_ATTACHED_TO_TOW_TRUCK
function Global.GetEntityAttachedToTowTruck(towTruck)
	return _in(0xEFEA18DCF10F8F75, towTruck, _ri)
end

--- _GET_ENTITY_BONE_COUNT
function Global.GetEntityBoneCount(entity)
	return _in(0xB328DCC3A3AA401B, entity, _ri)
end
Global.N_0xb328dcc3a3aa401b = Global.GetEntityBoneCount

--- Returns the index of the bone. If the bone was not found, -1 will be returned.
-- list:
-- pastebin.com/D7JMnX1g
-- BoneNames:
-- chassis,
-- windscreen,
-- seat_pside_r,
-- seat_dside_r,
-- bodyshell,
-- suspension_lm,
-- suspension_lr,
-- platelight,
-- attach_female,
-- attach_male,
-- bonnet,
-- boot,
-- chassis_dummy,	//Center of the dummy
-- chassis_Control,	//Not found yet
-- door_dside_f,	//Door left, front
-- door_dside_r,	//Door left, back
-- door_pside_f,	//Door right, front
-- door_pside_r,	//Door right, back
-- Gun_GripR,
-- windscreen_f,
-- platelight,	//Position where the light above the numberplate is located
-- VFX_Emitter,
-- window_lf,	//Window left, front
-- window_lr,	//Window left, back
-- window_rf,	//Window right, front
-- window_rr,	//Window right, back
-- engine,	//Position of the engine
-- gun_ammo,
-- ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".
-- wheel_lf,	//Wheel left, front
-- wheel_lr,	//Wheel left, back
-- wheel_rf,	//Wheel right, front
-- wheel_rr,	//Wheel right, back
-- exhaust,	//Exhaust. shows only the position of the stock-exhaust
-- overheat,	//A position on the engine(not exactly sure, how to name it)
-- misc_e,	//Not a car-bone.
-- seat_dside_f,	//Driver-seat
-- seat_pside_f,	//Seat next to driver
-- Gun_Nuzzle,
-- seat_r
-- I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
function Global.GetEntityBoneIndexByName(entity, boneName)
	return _in(0xFB71170B7E76ACBA, entity, _ts(boneName), _ri)
end

--- Gets the world rotation of the specified bone of the specified entity.
-- This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
function Global.GetEntityBonePosition_2(entity, boneIndex)
	return _in(0x46F8696933A63C9B, entity, boneIndex, _rv)
end
Global.N_0x46f8696933a63c9b = Global.GetEntityBonePosition_2
Global.GetWorldPositionOfEntityBone_2 = Global.GetEntityBonePosition_2

--- Gets the world rotation of the specified bone of the specified entity.
function Global.GetEntityBoneRotation(entity, boneIndex)
	return _in(0xCE6294A232D03786, entity, boneIndex, _rv)
end
Global.N_0xce6294a232d03786 = Global.GetEntityBoneRotation
Global.GetWorldRotationOfEntityBone = Global.GetEntityBoneRotation

--- Gets the local rotation of the specified bone of the specified entity.
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.GetEntityBoneRotationLocal(entity, boneIndex)
	return _in(0xBD8D32550E5CEBFE, entity, boneIndex, _rv)
end

--- GET_ENTITY_CAN_BE_DAMAGED
function Global.GetEntityCanBeDamaged(entity)
	return _in(0xD95CC5D2AB15A09F, entity, _r)
end
Global.N_0xd95cc5d2ab15a09f = Global.GetEntityCanBeDamaged

--- GET_ENTITY_COLLISION_DISABLED
function Global.GetEntityCollisionDisabled(entity)
	return _in(0xCCF1E97BEFDAE480, entity, _r)
end
Global.N_0xccf1e97befdae480 = Global.GetEntityCollisionDisabled
Global.GetEntityCollisonDisabled = Global.GetEntityCollisionDisabled

--- Gets the current coordinates (world position) for a specified entity.
-- @param entity The entity to get the coordinates from.
-- @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @return The current entity coordinates.
function Global.GetEntityCoords(entity, alive)
	return _in(0x3FEF770D40960D5A, entity, alive, _rv)
end

--- Gets the entity's forward vector.
-- @param entity The entity to get the forward vector for.
-- @return The forward vector.
function Global.GetEntityForwardVector(entity)
	return _in(0x0A794A5A57F8DF91, entity, _rv)
end

--- Gets the X-component of the entity's forward vector.
function Global.GetEntityForwardX(entity)
	return _in(0x8BB4EF4214E0E6D5, entity, _rf)
end

--- Gets the Y-component of the entity's forward vector.
function Global.GetEntityForwardY(entity)
	return _in(0x866A4A5FAE349510, entity, _rf)
end

--- Returns the entity handle for the specified state bag name. For use with [ADD_STATE_BAG_CHANGE_HANDLER](?\_0x5BA35AAF).
-- @param bagName An internal state bag ID from the argument to a state bag change handler.
-- @return The entity handle or 0 if the state bag name did not refer to an entity, or the entity does not exist.
function Global.GetEntityFromStateBagName(bagName)
	return _in(0x4bdf1867, _ts(bagName), _ri)
end

--- Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
-- @param entity The entity to get the heading from.
-- @return The current entity heading.
function Global.GetEntityHeading(entity)
	return _in(0xE83D4F9BA2A38914, entity, _rf)
end

--- Returns an integer value of entity's current health.
-- Example of range for ped:
-- - Player [0 to 200]
-- - Ped [100 to 200]
-- - Vehicle [0 to 1000]
-- - Object [0 to 1000]
-- Health is actually a float value but this native casts it to int.
-- In order to get the actual value, do:
-- float health = *(float *)(entityAddress + 0x280);
-- @param entity The entity to get the health from.
-- @return The current entity health.
function Global.GetEntityHealth(entity)
	return _in(0xEEF059FAD016D209, entity, _ri)
end

--- GET_ENTITY_HEIGHT
function Global.GetEntityHeight(entity, X, Y, Z, atTop, inWorldCoords)
	return _in(0x5A504562485944DD, entity, X, Y, Z, atTop, inWorldCoords, _rf)
end

--- Return height (z-dimension) above ground.
-- Example: The pilot in a titan plane is 1.844176 above ground.
-- How can i convert it to meters?
-- Everything seems to be in meters, probably this too.
function Global.GetEntityHeightAboveGround(entity)
	return _in(0x1DD55701034110E5, entity, _rf)
end

--- Returns the transient entity index for a specified mapdata/entity pair.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapdata The input map data index from GET_MAPDATA_FROM_HASH_KEY.
-- @param entity The input entity handle from GET_ENTITY_MAPDATA_OWNER.
-- @return A transient (non-persistable) index to the requested entity, or -1.
function Global.GetEntityIndexFromMapdata(mapdata, entity)
	return _in(0xee43540d, mapdata, entity, _ri)
end

--- Returns the handle of a cutscene entity, can be ped
-- @param cutsceneEntName I.E MP\_1, MP\_4, Michael, Trevor
-- @param modelHash Not strictly neccasary, can get 0
-- @return Returns entity handle
function Global.GetEntityIndexOfCutsceneEntity(cutsceneEntName, modelHash)
	return _in(0x0A2E9FDB9A8C62F6, _ts(cutsceneEntName), _ch(modelHash), _ri)
end

--- GET_ENTITY_INDEX_OF_REGISTERED_ENTITY
function Global.GetEntityIndexOfRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0xC0741A26499654CD, _ts(cutsceneEntName), _ch(modelHash), _ri)
end

--- Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
function Global.GetEntityInsideExplosionArea(explosionType, x1, y1, z1, x2, y2, z2, radius)
	return _in(0x14BA4BA137AF6CEC, explosionType, x1, y1, z1, x2, y2, z2, radius, _ri)
end
Global.GetPedInsideExplosionArea = Global.GetEntityInsideExplosionArea

--- NativeDB Introduced: v1290
function Global.GetEntityInsideExplosionSphere(explosionType, x, y, z, radius)
	return _in(0xB3CD51E3DB86F176, explosionType, x, y, z, radius, _ri)
end

--- Returns the LOD distance of an entity.
function Global.GetEntityLodDist(entity)
	return _in(0x4159C2762B5791D6, entity, _ri)
end

--- Retrieves the map data and entity handles from a specific entity.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param entity An entity owned by map data.
-- @param mapdataHandle The output map data handle.
-- @param entityHandle The output entity handle.
-- @return True if successful, false if not.
function Global.GetEntityMapdataOwner(entity)
	return _in(0xf6b815c5, entity, _i, _i, _r)
end

--- GET_ENTITY_MATRIX
function Global.GetEntityMatrix(entity)
	return _in(0xECB2FC7235A7D137, entity, _v, _v, _v, _v)
end

--- Return an integer value of entity's maximum health.
-- Example:
-- - Player = 200
function Global.GetEntityMaxHealth(entity)
	return _in(0x15D757606D170C3C, entity, _ri)
end

--- Returns the model hash from an entity.
-- @param entity The entity to get the model for.
-- @return The model hash of the entity.
function Global.GetEntityModel(entity)
	return _in(0x9F47B058362C84B5, entity, _ri)
end

--- Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
-- NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
function Global.GetEntityPhysicsHeading(entity)
	return _in(0x846BF6291198A71E, entity, _rf)
end
Global.N_0x846bf6291198a71e = Global.GetEntityPhysicsHeading

--- GET_ENTITY_*
-- Seems to return the handle of the entity's portable pickup.
-- NativeDB Introduced: v1180
function Global.GetEntityPickup(entity, modelHash)
	return _in(0x1F922734E259BD26, entity, _ch(modelHash), _ri)
end

--- GET_ENTITY_PITCH
function Global.GetEntityPitch(entity)
	return _in(0xD45DC2893621E1FE, entity, _rf)
end

--- Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
-- Returns false if no entity found.
function Global.GetEntityPlayerIsFreeAimingAt(player, entity)
	return _in(0x2975C866E6713290, player, _ii(entity) --[[ may be optional ]], _r)
end

--- A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
-- @param entity The entity to obtain the population type from.
-- @return A population type, from the enumeration above.
function Global.GetEntityPopulationType(entity)
	return _in(0xF6F5161F4534EDFF, entity, _ri)
end

--- NativeDB Introduced: v1604
function Global.GetEntityProofs(entity)
	return _in(0xBE8CD9BE829BBEBF, entity, _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- w is the correct parameter name!
function Global.GetEntityQuaternion(entity)
	return _in(0x7B3703D2D32DFA18, entity, _f, _f, _f, _f)
end

--- Displays the current ROLL axis of the entity [-180.0000/180.0000+]
-- (Sideways Roll) such as a vehicle tipped on its side
function Global.GetEntityRoll(entity)
	return _in(0x831E0242595560DF, entity, _rf)
end

--- ```
-- rotationOrder refers to the order yaw pitch roll is applied; value ranges from 0 to 5 and is usually *2* in scripts.
-- What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
-- What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll:
-- www.allstar.fiu.edu/aero/images/pic5-1.gif
-- ```
-- ### Rotation Orders
-- *   **0**: ZYX - Rotate around the z-axis, then the y-axis and finally the x-axis.
-- *   **1**: YZX - Rotate around the y-axis, then the z-axis and finally the x-axis.
-- *   **2**: ZXY - Rotate around the z-axis, then the x-axis and finally the y-axis.
-- *   **3**: XZY - Rotate around the x-axis, then the z-axis and finally the y-axis.
-- *   **4**: YXZ - Rotate around the y-axis, then the x-axis and finally the z-axis.
-- *   **5**: XYZ - Rotate around the x-axis, then the y-axis and finally the z-axis.
-- @param entity The entity to get the rotation for.
-- @param rotationOrder The order yaw, pitch and roll is applied. Usually 2.
-- @return A vector where the Z coordinate is the yaw.
function Global.GetEntityRotation(entity, rotationOrder)
	return _in(0xAFBD61CC738D9EB9, entity, rotationOrder, _rv)
end

--- GET_ENTITY_ROTATION_VELOCITY
function Global.GetEntityRotationVelocity(entity)
	return _in(0x213B91045D09B983, entity, _rv)
end

--- All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.
function Global.GetEntityScript(entity, script)
	return _in(0xA6E9C38DB51D7748, entity, _ii(script) --[[ may be optional ]], _s)
end

--- Get the speed of a entity.
-- @param entity Entity id you want to test for speed.
-- @return Speed of a entity in m/s. You can convert to km/h using the value you get and multiply by 3.6, and miles/h by 2.236936. Also, the float returned is the length of [GET_ENTITY_SPEED_VECTOR](?\_0x9A8D700A51CB7B0D)
function Global.GetEntitySpeed(entity)
	return _in(0xD5037BA82E12416F, entity, _rf)
end

--- Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
function Global.GetEntitySpeedVector(entity, relative)
	return _in(0x9A8D700A51CB7B0D, entity, relative, _rv)
end

--- Get how much of the entity is submerged.  1.0f is whole entity.
function Global.GetEntitySubmergedLevel(entity)
	return _in(0xE81AFC1BC4CC41CE, entity, _rf)
end

--- Returns:
-- 0 = no entity
-- 1 = ped
-- 2 = vehicle
-- 3 = object
function Global.GetEntityType(entity)
	return _in(0x8ACD366038D14505, entity, _ri)
end

--- GET_ENTITY_UPRIGHT_VALUE
function Global.GetEntityUprightValue(entity)
	return _in(0x95EED5A694951F9F, entity, _rf)
end

--- GET_ENTITY_VELOCITY
function Global.GetEntityVelocity(entity)
	return _in(0x4805D2B1D8CF94A9, entity, _rv)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.GetEntryPositionOfDoor(vehicle, doorIndex)
	return _in(0xC0572928C0ABFDA3, vehicle, doorIndex, _rv)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
function Global.GetEventAtIndex(eventGroup, eventIndex)
	return _in(0xD8F66A3A60C62153, eventGroup, eventIndex, _ri)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
-- Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
function Global.GetEventData(eventGroup, eventIndex, eventDataSize)
	return _in(0x2902843FCD2B2D79, eventGroup, eventIndex, _i, eventDataSize, _r)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
function Global.GetEventExists(eventGroup, eventIndex)
	return _in(0x936E6168A9BCEDB5, eventGroup, eventIndex, _r)
end

--- A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938), but for a specified resource.
-- @param resource The resource to fetch from.
-- @param key The key to fetch
-- @return A float that contains the value stored in the Kvp or nil/null if none.
function Global.GetExternalKvpFloat(resource, key)
	return _in(0x3cc98b25, _ts(resource), _ts(key), _rf)
end

--- A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8), but for a specified resource.
-- @param resource The resource to fetch from.
-- @param key The key to fetch
-- @return A int that contains the value stored in the Kvp or nil/null if none.
function Global.GetExternalKvpInt(resource, key)
	return _in(0x12b8d689, _ts(resource), _ts(key), _ri)
end

--- A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B), but for a specified resource.
-- @param resource The resource to fetch from.
-- @param key The key to fetch
-- @return A string that contains the value stored in the Kvp or nil/null if none.
function Global.GetExternalKvpString(resource, key)
	return _in(0x9080363a, _ts(resource), _ts(key), _s)
end

--- _GET_EXTRA_CONTENT_PACK_HAS_BEEN_INSTALLED
function Global.GetExtraContentPackHasBeenInstalled()
	return _in(0x8D30F648014A92B5, _r)
end
Global.N_0x8d30f648014a92b5 = Global.GetExtraContentPackHasBeenInstalled

--- See [`GET_TIMECYCLE_MODIFIER_INDEX`](#\_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
-- @return An integer representing the Timecycle modifier
function Global.GetExtraTimecycleModifierIndex()
	return _in(0xBB0527EC6341496D, _ri)
end
Global.N_0xbb0527ec6341496d = Global.GetExtraTimecycleModifierIndex

--- GET_FAKE_WANTED_LEVEL
function Global.GetFakeWantedLevel()
	return _in(0x4C9296CBCD1B971E, _ri)
end
Global.N_0x4c9296cbcd1b971e = Global.GetFakeWantedLevel

--- GET_FINAL_RENDERED_CAM_COORD
function Global.GetFinalRenderedCamCoord()
	return _in(0xA200EB1EE790F448, _rv)
end
Global.GetGameplayCamCoords = Global.GetFinalRenderedCamCoord

--- GET_FINAL_RENDERED_CAM_FAR_CLIP
function Global.GetFinalRenderedCamFarClip()
	return _in(0xDFC8CBC606FDB0FC, _rf)
end
Global.N_0xdfc8cbc606fdb0fc = Global.GetFinalRenderedCamFarClip
Global.GetGameplayCamFarClip = Global.GetFinalRenderedCamFarClip

--- GET_FINAL_RENDERED_CAM_FAR_DOF
function Global.GetFinalRenderedCamFarDof()
	return _in(0x9780F32BCAF72431, _rf)
end
Global.N_0x9780f32bcaf72431 = Global.GetFinalRenderedCamFarDof
Global.GetGameplayCamFarDof = Global.GetFinalRenderedCamFarDof

--- GET_FINAL_RENDERED_CAM_FOV
function Global.GetFinalRenderedCamFov()
	return _in(0x80EC114669DAEFF4, _rf)
end
Global.N_0x80ec114669daeff4 = Global.GetFinalRenderedCamFov

--- GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH
function Global.GetFinalRenderedCamMotionBlurStrength()
	return _in(0x162F9D995753DC19, _rf)
end
Global.N_0x162f9d995753dc19 = Global.GetFinalRenderedCamMotionBlurStrength
Global.GetGameplayCamFarClip_2 = Global.GetFinalRenderedCamMotionBlurStrength

--- GET_FINAL_RENDERED_CAM_NEAR_CLIP
function Global.GetFinalRenderedCamNearClip()
	return _in(0xD0082607100D7193, _rf)
end
Global.N_0xd0082607100d7193 = Global.GetFinalRenderedCamNearClip
Global.GetGameplayCamNearClip = Global.GetFinalRenderedCamNearClip

--- GET_FINAL_RENDERED_CAM_NEAR_DOF
function Global.GetFinalRenderedCamNearDof()
	return _in(0xA03502FC581F7D9B, _rf)
end
Global.N_0xa03502fc581f7d9b = Global.GetFinalRenderedCamNearDof
Global.GetGameplayCamNearDof = Global.GetFinalRenderedCamNearDof

--- GET_FINAL_RENDERED_CAM_ROT
function Global.GetFinalRenderedCamRot(rotationOrder)
	return _in(0x5B4E4C817FCC2DFB, rotationOrder, _rv)
end
Global.GetGameplayCamRot_2 = Global.GetFinalRenderedCamRot

--- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_FOV
function Global.GetFinalRenderedInWhenFriendlyFov(player)
	return _in(0x5F35F6732C3FBBA0, player, _rf)
end
Global.N_0x5f35f6732c3fbba0 = Global.GetFinalRenderedInWhenFriendlyFov

--- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_ROT
function Global.GetFinalRenderedInWhenFriendlyRot(player, rotationOrder)
	return _in(0x26903D9CD1175F2C, player, rotationOrder, _rv)
end
Global.N_0x26903d9cd1175f2c = Global.GetFinalRenderedInWhenFriendlyRot

--- Also see [`GET_NEXT_BLIP_INFO_ID`](#\_0x14F96AA50D6FBEA7) for an example.
-- @param blipSprite Sprite ID, see the [Blips Game Reference](https://docs.fivem.net/docs/game-references/blips/) for the full list.
-- @return Returns the first blip ID in an interator that has the specified blip sprite.
function Global.GetFirstBlipInfoId(blipSprite)
	return _in(0x1BEDE233E6CD2A1F, blipSprite, _ri)
end

--- GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
function Global.GetFirstPersonAimCamZoomFactor()
	return _in(0x7EC52CC40597D170, _rf)
end
Global.GetGameplayCamZoom = Global.GetFirstPersonAimCamZoomFactor

--- GET_FOCUS_PED_ON_SCREEN
function Global.GetFocusPedOnScreen(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x89215EC747DF244A, p0, p1, p2, p3, p4, p5, p6, p7, p8, _ri)
end
Global.N_0x89215ec747df244a = Global.GetFocusPedOnScreen

--- cpp
-- // view mode enumeration
-- enum _0xA11D7CA8
-- {
-- THIRD_PERSON_NEAR = 0,
-- THIRD_PERSON_MEDIUM = 1,
-- THIRD_PERSON_FAR = 2,
-- CINEMATIC = 3,
-- FIRST_PERSON = 4,
-- };
-- @return Returns a value from the view mode enumeration
function Global.GetFollowPedCamViewMode()
	return _in(0x8D4D46230B2C353A, _ri)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function Global.GetFollowPedCamZoomLevel()
	return _in(0x33E6C8EFD0CD93E9, _ri)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function Global.GetFollowVehicleCamViewMode()
	return _in(0xA4FF579AC0E3AAAE, _ri)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function Global.GetFollowVehicleCamZoomLevel()
	return _in(0xEE82280AB767B690, _ri)
end

--- GET_FORCED_COMPONENT
function Global.GetForcedComponent(componentHash, forcedComponentIndex)
	return _in(0x6C93ED8C2F74859B, _ch(componentHash), forcedComponentIndex, _i, _i, _i)
end

--- GET_FORCED_PROP
function Global.GetForcedProp(componentHash, forcedPropIndex)
	return _in(0xE1CA84EBF72E691D, _ch(componentHash), forcedPropIndex, _i, _i, _i)
end
Global.N_0xe1ca84ebf72e691d = Global.GetForcedProp

--- Gets the number of the current frame being displayed.
-- @return The number of the current frame being displayed.
function Global.GetFrameCount()
	return _in(0xFC8202EFC642E6F2, _ri)
end

--- Gets the high precision frame time of the last frame in seconds.
-- *note: the example above is way less precise.*
-- @return The frame time (in seconds) of the last frame.
function Global.GetFrameTime()
	return _in(0x15C40837039FFAF7, _rf)
end

--- GET_FUEL_CONSUMPTION_RATE_MULTIPLIER
-- @return Current fuel consumption rate multiplier. 0 means that fuel is not consumed.
function Global.GetFuelConsumptionRateMultiplier()
	return _in(0x5550bf9f, _rf)
end

--- GET_FUEL_CONSUMPTION_STATE
-- @return True if fuel consumption is turned on. False otherwise.
function Global.GetFuelConsumptionState()
	return _in(0xc66cd90c, _r)
end

--- Returns the internal build number of the current game being executed.
-- Possible values:
-- *   FiveM
-- *   1604
-- *   2060
-- *   2189
-- *   2372
-- *   2545
-- *   2612
-- *   2699
-- *   2802
-- *   2944
-- *   3095
-- *   RedM
-- *   1311
-- *   1355
-- *   1436
-- *   1491
-- *   LibertyM
-- *   43
-- *   FXServer
-- *   0
-- @return The build number, or **0** if no build number is known.
function Global.GetGameBuildNumber()
	return _in(0x804b9f7b, _ri)
end

--- Returns the current game being executed.
-- Possible values:
-- | Return value | Meaning                        |
-- | ------------ | ------------------------------ |
-- | `fxserver`   | Server-side code ('Duplicity') |
-- | `fivem`      | FiveM for GTA V                |
-- | `libertym`   | LibertyM for GTA IV            |
-- | `redm`       | RedM for Red Dead Redemption 2 |
-- @return The game the script environment is running in.
function Global.GetGameName()
	return _in(0xe8eaa18b, _s)
end

--- Returns a list of entity handles (script GUID) for all entities in the specified pool - the data returned is an array as
-- follows:
-- ```json
-- [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
-- ```
-- ### Supported pools
-- *   `CPed`: Peds (including animals) and players.
-- *   `CObject`: Objects (props), doors, and projectiles.
-- *   `CVehicle`: Vehicles.
-- *   `CPickup`: Pickups.
-- @param poolName The pool name to get a list of entities from.
-- @return An array containing entity handles for each entity in the named pool.
function Global.GetGamePool(poolName)
	return _in(0x2b9d4f50, _ts(poolName), _ro)
end

--- GET_GAME_TIMER
function Global.GetGameTimer()
	return _in(0x9CD27B0045628463, _ri)
end

--- GET_GAMEPLAY_CAM_COORD
function Global.GetGameplayCamCoord()
	return _in(0x14D6F5678D8F1B37, _rv)
end

--- GET_GAMEPLAY_CAM_FOV
function Global.GetGameplayCamFov()
	return _in(0x65019750A0324133, _rf)
end

--- GET_GAMEPLAY_CAM_RELATIVE_HEADING
function Global.GetGameplayCamRelativeHeading()
	return _in(0x743607648ADD4587, _rf)
end

--- GET_GAMEPLAY_CAM_RELATIVE_PITCH
-- @return Returns the relative pitch of the gameplay camera
function Global.GetGameplayCamRelativePitch()
	return _in(0x3A6867B4845BEDA2, _rf)
end

--- This function takes a rotation order and outputs a `Vector3` in degrees.
-- It first calls a game function to calculate these values given the rotation order and effectively multiplies those values by `180/PI`, hence degrees since the function it calls outputs radians which are then converted to degrees.
-- @param rotationOrder The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- @return A `Vector3` representing the gameplay camera rotation in degrees.
function Global.GetGameplayCamRot(rotationOrder)
	return _in(0x837765A25378F0BB, rotationOrder, _rv)
end

--- Returns the ActionScript flagValue.
-- ActionScript flags are global flags that scaleforms use
-- Flags found during testing
-- 0: Returns 1 if the web_browser keyboard is open, otherwise 0
-- 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
-- 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
-- 9: Returns the current selection on the mobile phone scaleform
-- There are 20 flags in total.
function Global.GetGlobalActionscriptFlag(flagIndex)
	return _in(0xE3B05614DCE1D014, flagIndex, _ri)
end
Global.N_0xe3b05614dce1d014 = Global.GetGlobalActionscriptFlag

--- Returns pointer to an empty string.
-- GET_C*
function Global.GetGlobalCharBuffer()
	return _in(0x24DA7D7667FD7B09, _s)
end
Global.N_0x24da7d7667fd7b09 = Global.GetGlobalCharBuffer

--- NativeDB Introduced: v2189
function Global.GetGlobalWaterType()
	return _in(0xF741BD853611592D, _ri)
end

--- GET_GPS_BLIP_ROUTE_FOUND
function Global.GetGpsBlipRouteFound()
	return _in(0x869DAACBBE9FA006, _r)
end
Global.N_0x869daacbbe9fa006 = Global.GetGpsBlipRouteFound

--- GET_GPS_BLIP_ROUTE_LENGTH
function Global.GetGpsBlipRouteLength()
	return _in(0xBBB45C3CF5C8AA85, _ri)
end
Global.N_0xbbb45c3cf5c8aa85 = Global.GetGpsBlipRouteLength

--- p3 can be 0, 1 or 2.
function Global.GetGpsWaypointRouteEnd(p1, p2, p3)
	return _in(0xF3162836C28F9DA5, _v, p1, p2, p3, _r)
end
Global.N_0xf3162836c28f9da5 = Global.GetGpsWaypointRouteEnd

--- Attempts to identify the highest ground Z-coordinate and determine the corresponding surface normal directly beneath a specified 3D coordinate.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param x X-coordinate of the point to check.
-- @param y Y-coordinate of the point to check.
-- @param z Z-coordinate of the point to check.
-- @param groundZ A pointer to a float where the ground Z-coordinate will be stored if found.
-- @param normal A pointer to a Vector3 structure where the surface normal at the ground point will be stored.
-- @return Returns `true` if ground is found below the given coordinates and the surface normal could be determined, otherwise `false`.
function Global.GetGroundZAndNormalFor_3dCoord(x, y, z)
	return _in(0x8BDC7BFC57A81E76, x, y, z, _f, _v, _r)
end
Global.N_0x8bdc7bfc57a81e76 = Global.GetGroundZAndNormalFor_3dCoord
Global.GetGroundZCoordWithOffsets = Global.GetGroundZAndNormalFor_3dCoord

--- Determines the highest ground Z-coordinate directly below a specified 3D coordinate, excluding any objects at that point. Optionally, water can be considered as ground when determining the highest point.
-- ```
-- NativeDB Added Parameter 6: BOOL ignoreDistToWaterLevelCheck - If set to true, the distance to the water level will be ignored when checking for water as ground.
-- ```
-- ```
-- NativeDB Introduced: v505
-- ```
-- @param x X-coordinate of the point to check.
-- @param y Y-coordinate of the point to check.
-- @param z Z-coordinate of the point to check.
-- @param groundZ A pointer to a float where the ground Z-coordinate will be stored if found.
-- @param waterAsGround If set to `true`, water will be included in the check, and its height will be returned if it is higher than the ground level.
-- @return Returns `true` if ground (or water, if specified) is found below the given coordinates, otherwise `false`.
function Global.GetGroundZExcludingObjectsFor_3dCoord(x, y, z, waterAsGround)
	return _in(0x9E82F0F362881B29, x, y, z, _f, waterAsGround, _r)
end
Global.N_0x9e82f0f362881b29 = Global.GetGroundZExcludingObjectsFor_3dCoord
Global.GetGroundZFor_3dCoord_2 = Global.GetGroundZExcludingObjectsFor_3dCoord

--- Bear in mind this native can only calculate the elevation when the coordinates are within the client's render distance.
-- ```
-- ```
-- NativeDB Added Parameter 6: BOOL p5
-- @param x Position on the X-axis to get ground elevation at.
-- @param y Position on the Y-axis to get ground elevation at.
-- @param z Position on the Z-axis to get ground elevation at.
-- @param groundZ The ground elevation at the specified position.
function Global.GetGroundZFor_3dCoord(x, y, z, ignoreWater)
	return _in(0xC906A7DAB05C8D2B, x, y, z, _f, ignoreWater, _r)
end

--- p1 may be a BOOL representing whether or not the group even exists
function Global.GetGroupSize(groupID)
	return _in(0x8DE69FE35CA09A45, groupID, _i, _i)
end

--- GET_*
function Global.GetHasObjectFragInst(object)
	return _in(0x0C112765300C7E1E, object, _r)
end
Global.N_0x0c112765300c7e1e = Global.GetHasObjectFragInst
Global.DoesEntityHaveFragInst = Global.GetHasObjectFragInst

--- _GET_HAS_RETRACTABLE_WHEELS
function Global.GetHasRetractableWheels(vehicle)
	return _in(0xDCA174A42133F08C, vehicle, _r)
end
Global.GetHasLowerableWheels = Global.GetHasRetractableWheels
Global.DoesVehicleHaveRetractableWheels = Global.GetHasRetractableWheels

--- _GET_HAS_ROCKET_BOOST
function Global.GetHasRocketBoost(vehicle)
	return _in(0x36D782F68B309BDA, vehicle, _r)
end
Global.HasVehicleRocketBoost = Global.GetHasRocketBoost
Global.DoesVehicleHaveRocketBoost = Global.GetHasRocketBoost

--- This native converts its past string to hash. It is hashed using jenkins one at a time method.
-- @param string The string to hash.
-- @return The hash of `string`.
function Global.GetHashKey(string)
	return _in(0xD24D37CC275948CC, _ts(string), _ri)
end

--- GET_HASH_NAME_FOR_COMPONENT
function Global.GetHashNameForComponent(entity, componentId, drawableVariant, textureVariant)
	return _in(0x0368B3A838070348, entity, componentId, drawableVariant, textureVariant, _ri)
end

--- GET_HASH_NAME_FOR_PROP
function Global.GetHashNameForProp(entity, componentId, propIndex, propTextureIndex)
	return _in(0x5D6160275CAEC8DD, entity, componentId, propIndex, propTextureIndex, _ri)
end

--- Returns a hash representing which part of the map the given coords are located.
-- Possible return values:
-- (Hash of) city -> -289320599
-- (Hash of) countryside -> 2072609373
-- C# Example :
-- Ped player = Game.Player.Character;
-- Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
function Global.GetHashOfMapAreaAtCoords(x, y, z)
	return _in(0x7EE64D51E8498728, x, y, z, _ri)
end

--- GET_HASH_OF_THIS_SCRIPT_NAME
function Global.GetHashOfThisScriptName()
	return _in(0x8A1C8B1738FFE87E, _ri)
end
Global.GetThisScriptHash = Global.GetHashOfThisScriptName

--- dx = x1 - x2
-- dy = y1 - y2
function Global.GetHeadingFromVector_2d(dx, dy)
	return _in(0x2FFB6B224F4B2926, dx, dy, _rf)
end

--- Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
function Global.GetHeightmapBottomZForArea(x1, y1, x2, y2)
	return _in(0x3599D741C9AC6310, x1, y1, x2, y2, _rf)
end
Global.N_0x3599d741c9ac6310 = Global.GetHeightmapBottomZForArea

--- Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
function Global.GetHeightmapBottomZForPosition(x, y)
	return _in(0x336511A34F2E5185, x, y, _rf)
end
Global.N_0x336511a34f2e5185 = Global.GetHeightmapBottomZForPosition

--- Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
function Global.GetHeightmapTopZForArea(x1, y1, x2, y2)
	return _in(0x8ABE8608576D9CE3, x1, y1, x2, y2, _rf)
end
Global.N_0x8abe8608576d9ce3 = Global.GetHeightmapTopZForArea

--- Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
function Global.GetHeightmapTopZForPosition(x, y)
	return _in(0x29C24BFBED8AB8FB, x, y, _rf)
end
Global.N_0x29c24bfbed8ab8fb = Global.GetHeightmapTopZForPosition

--- Max 1000.
-- At 0 the main rotor will stall.
function Global.GetHeliMainRotorHealth(vehicle)
	return _in(0xE4CB7541F413D2C5, vehicle, _rf)
end
Global.GetHeliMainRotorHealth = Global.GetHeliMainRotorHealth

--- Max 1000.
-- At -100 both helicopter rotors will stall.
function Global.GetHeliTailBoomHealth(vehicle)
	return _in(0xAC51915D27E4A5F7, vehicle, _rf)
end
Global.GetHeliEngineHealth = Global.GetHeliTailBoomHealth

--- Max 1000.
-- At 0 the tail rotor will stall.
function Global.GetHeliTailRotorHealth(vehicle)
	return _in(0xAE8CE82A4219AC8C, vehicle, _rf)
end
Global.GetHeliTailRotorHealth = Global.GetHeliTailRotorHealth

--- Gets hud color RGBA parameter values by passing a hud color index (hudColorIndex).
-- HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
function Global.GetHudColour(hudColorIndex)
	return _in(0x7C9C91AB74A0360F, hudColorIndex, _i, _i, _i, _i)
end

--- See [SET_SCRIPT_GFX_ALIGN](#\_0xB8A850F20A067EB6) for details about how gfx align works.
-- @param id The hud component id.
function Global.GetHudComponentAlign(id)
	return _in(0xcd949e20, id, _i, _i)
end

--- GET_HUD_COMPONENT_NAME
-- @param id The hud component id.
-- @return The hud component name.
function Global.GetHudComponentName(id)
	return _in(0xa91866bc, id, _s)
end

--- GET_HUD_COMPONENT_POSITION
function Global.GetHudComponentPosition(id)
	return _in(0x223CA69A8C4417FD, id, _rv)
end

--- GET_HUD_COMPONENT_SIZE
-- @param id The hud component id.
-- @return A Vector3 with the hud component size X and size Y values.
function Global.GetHudComponentSize(id)
	return _in(0x12217d33, id, _rv)
end

--- World to relative screen coords
-- this world to screen will keep the text on screen. it will keep it in the screen pos
function Global.GetHudScreenPositionFromWorldPosition(worldX, worldY, worldZ)
	return _in(0xF9904D11F1ACBEC3, worldX, worldY, worldZ, _f, _f, _r)
end
Global.N_0xf9904d11f1acbec3 = Global.GetHudScreenPositionFromWorldPosition
Global.Get_2dCoordFrom_3dCoord = Global.GetHudScreenPositionFromWorldPosition

--- NativeDB Introduced: v2372
function Global.GetHydraulicWheelValue(vehicle, wheelId)
	return _in(0x0BB5CBDDD0F25AE3, vehicle, wheelId, _rf)
end

--- GET_ID_OF_THIS_THREAD
function Global.GetIdOfThisThread()
	return _in(0xC30338E8088E2E21, _ri)
end

--- x1, y1, z1 -- Coords of your ped model
-- x2, y2, z2 -- Coords of the ped you want to switch to
function Global.GetIdealPlayerSwitchType(x1, y1, z1, x2, y2, z2)
	return _in(0xB5D7B26B45720E05, x1, y1, z1, x2, y2, z2, _ri)
end

--- GET_INDEX_OF_CURRENT_LEVEL
function Global.GetIndexOfCurrentLevel()
	return _in(0xCBAD6729F7B1F4FC, _ri)
end

--- GET_INDEXED_ITEM_IN_ITEMSET
function Global.GetIndexedItemInItemset(p0, p1)
	return _in(0x7A197E2521EE2BAB, p0, p1, _ri)
end

--- GET_INSTANCE_ID
function Global.GetInstanceId()
	return _in(0x9f1c4383, _ri)
end

--- Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
-- Example for VB.NET
-- Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
function Global.GetInteriorAtCoords(x, y, z)
	return _in(0xB0F7F8663821D9C3, x, y, z, _ri)
end

--- Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
-- Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))
-- Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
-- Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
function Global.GetInteriorAtCoordsWithType(x, y, z, interiorType)
	return _in(0x05B7A89BD78797FC, x, y, z, _ts(interiorType), _ri)
end
Global.N_0x05b7a89bd78797fc = Global.GetInteriorAtCoordsWithType

--- Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
function Global.GetInteriorAtCoordsWithTypehash(x, y, z, typeHash)
	return _in(0xF0F77ADB9F67E79D, x, y, z, _ch(typeHash), _ri)
end
Global.N_0xf0f77adb9f67e79d = Global.GetInteriorAtCoordsWithTypehash
Global.UnkGetInteriorAtCoords = Global.GetInteriorAtCoordsWithTypehash

--- GET_INTERIOR_ENTITIES_EXTENTS
-- @param interiorId The target interior.
-- @return Interior entities extents.
function Global.GetInteriorEntitiesExtents(interiorId)
	return _in(0x322b1192, interiorId, _f, _f, _f, _f, _f, _f)
end

--- GET_INTERIOR_FROM_COLLISION
function Global.GetInteriorFromCollision(x, y, z)
	return _in(0xEC4CF9FCB29A4424, x, y, z, _ri)
end

--- Returns the handle of the interior that the entity is in. Returns 0 if outside.
function Global.GetInteriorFromEntity(entity)
	return _in(0x2107BA504071A6BB, entity, _ri)
end

--- NativeDB Introduced: v1604
function Global.GetInteriorFromPrimaryView()
	return _in(0xE7D267EC6CA966C3, _ri)
end
Global.N_0xe7d267ec6ca966c3 = Global.GetInteriorFromPrimaryView
Global.GetInteriorFromGameplayCam = Global.GetInteriorFromPrimaryView

--- Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.
function Global.GetInteriorGroupId(interior)
	return _in(0xE4A84ABF135EF91A, interior, _ri)
end

--- NativeDB Introduced: v1493
-- @param interior ID of the interior
-- @return Returns interior heading in radians. Multiply the returned value with 57.29578 (or 180.0 / math.pi) to convert it to degrees.
function Global.GetInteriorHeading(interior)
	return _in(0xF49B58631D9E22D9, interior, _rf)
end
Global.GetInteriorHeading = Global.GetInteriorHeading

--- NativeDB Introduced: v1290
function Global.GetInteriorLocationAndNamehash(interior)
	return _in(0x252BDC06B73FA6EA, interior, _v, _i)
end
Global.N_0x252bdc06b73fa6ea = Global.GetInteriorLocationAndNamehash
Global.GetInteriorInfo = Global.GetInteriorLocationAndNamehash

--- GET_INTERIOR_PORTAL_CORNER_POSITION
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param cornerIndex Portal's corner index.
-- @return Portal corner position.
function Global.GetInteriorPortalCornerPosition(interiorId, portalIndex, cornerIndex)
	return _in(0xf772bb2c, interiorId, portalIndex, cornerIndex, _f, _f, _f)
end

--- GET_INTERIOR_PORTAL_COUNT
-- @param interiorId The target interior.
-- @return The amount of portals in interior.
function Global.GetInteriorPortalCount(interiorId)
	return _in(0xd05bb8b1, interiorId, _ri)
end

--- GET_INTERIOR_PORTAL_ENTITY_ARCHETYPE
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param entityIndex Portal entity index.
-- @return Portal entity archetype.
function Global.GetInteriorPortalEntityArchetype(interiorId, portalIndex, entityIndex)
	return _in(0x9a0e1700, interiorId, portalIndex, entityIndex, _ri)
end

--- GET_INTERIOR_PORTAL_ENTITY_COUNT
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @return Portal entity count.
function Global.GetInteriorPortalEntityCount(interiorId, portalIndex)
	return _in(0xc68021b, interiorId, portalIndex, _ri)
end

--- GET_INTERIOR_PORTAL_ENTITY_FLAG
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param entityIndex Portal entity index.
-- @return Portal entity flag.
function Global.GetInteriorPortalEntityFlag(interiorId, portalIndex, entityIndex)
	return _in(0x9da2e811, interiorId, portalIndex, entityIndex, _ri)
end

--- GET_INTERIOR_PORTAL_ENTITY_POSITION
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param entityIndex Portal entity index.
-- @return Portal entity position.
function Global.GetInteriorPortalEntityPosition(interiorId, portalIndex, entityIndex)
	return _in(0x9b7ab83c, interiorId, portalIndex, entityIndex, _f, _f, _f)
end

--- GET_INTERIOR_PORTAL_ENTITY_ROTATION
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param entityIndex Portal entity index.
-- @return Portal entity rotation.
function Global.GetInteriorPortalEntityRotation(interiorId, portalIndex, entityIndex)
	return _in(0x9f9ceb63, interiorId, portalIndex, entityIndex, _f, _f, _f, _f)
end

--- GET_INTERIOR_PORTAL_FLAG
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @return Portal's flag.
function Global.GetInteriorPortalFlag(interiorId, portalIndex)
	return _in(0xc74da47c, interiorId, portalIndex, _ri)
end

--- GET_INTERIOR_PORTAL_ROOM_FROM
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @return Portal's room FROM index.
function Global.GetInteriorPortalRoomFrom(interiorId, portalIndex)
	return _in(0xaa9c141d, interiorId, portalIndex, _ri)
end

--- GET_INTERIOR_PORTAL_ROOM_TO
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @return Portal's room TO index.
function Global.GetInteriorPortalRoomTo(interiorId, portalIndex)
	return _in(0x3f47f0e8, interiorId, portalIndex, _ri)
end

--- GET_INTERIOR_POSITION
-- @param interiorId The target interior.
-- @return Interior position.
function Global.GetInteriorPosition(interiorId)
	return _in(0x77a435b0, interiorId, _f, _f, _f)
end

--- GET_INTERIOR_ROOM_COUNT
-- @param interiorId The target interior.
-- @return The amount of rooms in interior.
function Global.GetInteriorRoomCount(interiorId)
	return _in(0xa2737c2c, interiorId, _ri)
end

--- GET_INTERIOR_ROOM_EXTENTS
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
-- @return Room extents.
function Global.GetInteriorRoomExtents(interiorId, roomIndex)
	return _in(0xf9e795dd, interiorId, roomIndex, _f, _f, _f, _f, _f, _f)
end

--- GET_INTERIOR_ROOM_FLAG
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
-- @return Room's flag.
function Global.GetInteriorRoomFlag(interiorId, roomIndex)
	return _in(0x6b7af743, interiorId, roomIndex, _ri)
end

--- GET_INTERIOR_ROOM_INDEX_BY_HASH
-- @param interiorId The target interior.
-- @param roomHash Interior room hash.
-- @return Room index, -1 if failed.
function Global.GetInteriorRoomIndexByHash(interiorId, roomHash)
	return _in(0xe0ee05f8, interiorId, roomHash, _ri)
end

--- GET_INTERIOR_ROOM_NAME
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
-- @return Room's name.
function Global.GetInteriorRoomName(interiorId, roomIndex)
	return _in(0x11755df2, interiorId, roomIndex, _s)
end

--- GET_INTERIOR_ROOM_TIMECYCLE
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
-- @return Room's timecycle hash.
function Global.GetInteriorRoomTimecycle(interiorId, roomIndex)
	return _in(0x82ba3f88, interiorId, roomIndex, _ri)
end

--- GET_INTERIOR_ROTATION
-- @param interiorId The target interior.
-- @return Interior rotation in quaternion.
function Global.GetInteriorRotation(interiorId)
	return _in(0x5a039998, interiorId, _f, _f, _f, _f)
end

--- GET_INVOKING_RESOURCE
function Global.GetInvokingResource()
	return _in(0x4d52fe5b, _s)
end

--- NativeDB Introduced: v1604
function Global.GetIsArenaPropPhysicsDisabled(entity, p1)
	return _in(0x43C677F1E1158005, entity, p1, _r)
end
Global.N_0x43c677f1e1158005 = Global.GetIsArenaPropPhysicsDisabled

--- Returns true if profile setting 208 is equal to 0.
function Global.GetIsAutoSaveOff()
	return _in(0x6E04F06094C87047, _r)
end
Global.N_0x6e04f06094c87047 = Global.GetIsAutoSaveOff

--- Checks whether the specified boat vehicle is capsized, meaning it has overturned or is upside down in the water.
-- @param vehicle The vehicle to check. This should be a boat-type vehicle.
-- @return Returns `true` if the specified boat is capsized, `false` otherwise.
function Global.GetIsBoatCapsized(vehicle)
	return _in(0xBA91D045575699AD, vehicle, _r)
end
Global.N_0xba91d045575699ad = Global.GetIsBoatCapsized

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.GetIsDoorValid(vehicle, doorIndex)
	return _in(0x645F4B6E8499F632, vehicle, doorIndex, _r)
end
Global.DoesVehicleHaveDoor = Global.GetIsDoorValid

--- false = Any resolution < 1280x720
-- true = Any resolution >= 1280x720
function Global.GetIsHidef()
	return _in(0x84ED31191CC5D2C9, _r)
end

--- From the driver's perspective, is the left headlight broken.
function Global.GetIsLeftVehicleHeadlightDamaged(vehicle)
	return _in(0x5EF77C9ADD3B11A3, vehicle, _r)
end
Global.IsHeadlightLBroken = Global.GetIsLeftVehicleHeadlightDamaged

--- GET_IS_LOADING_SCREEN_ACTIVE
function Global.GetIsLoadingScreenActive()
	return _in(0x10D0A8F259E93EC9, _r)
end

--- gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
function Global.GetIsPedGadgetEquipped(ped, gadgetHash)
	return _in(0xF731332072F5156C, ped, _ch(gadgetHash), _r)
end

--- GET_IS_PETROL_DECAL_IN_RANGE
function Global.GetIsPetrolDecalInRange(xCoord, yCoord, zCoord, radius)
	return _in(0x2F09F7976C512404, xCoord, yCoord, zCoord, radius, _r)
end
Global.N_0x2f09f7976c512404 = Global.GetIsPetrolDecalInRange

--- Although we don't have a jenkins hash for this one, the name is 100% confirmed.
function Global.GetIsPlayerInAnimalForm()
	return _in(0x9689123E3F213AA5, _r)
end
Global.N_0x9689123e3f213aa5 = Global.GetIsPlayerInAnimalForm

--- GET_IS_PRELOADED_CONVERSATION_READY
-- @return Returns true if the preloaded conversation has finished preparing.
function Global.GetIsPreloadedConversationReady()
	return _in(0xE73364DB90778FFA, _r)
end
Global.N_0xe73364db90778ffa = Global.GetIsPreloadedConversationReady

--- From the driver's perspective, is the right headlight broken.
function Global.GetIsRightVehicleHeadlightDamaged(vehicle)
	return _in(0xA7ECB73355EB2F20, vehicle, _r)
end
Global.IsHeadlightRBroken = Global.GetIsRightVehicleHeadlightDamaged

--- Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
function Global.GetIsTaskActive(ped, taskIndex)
	return _in(0xB0760331C7AA4155, ped, taskIndex, _r)
end

--- Returns profile setting 225.
function Global.GetIsUsingAlternateDriveby()
	return _in(0x0F70731BACCFBB96, _r)
end
Global.N_0x0f70731baccfbb96 = Global.GetIsUsingAlternateDriveby

--- Returns whether this vehicle is currently disabled by an EMP mine.
-- NativeDB Introduced: v1604
function Global.GetIsVehicleEmpDisabled(vehicle)
	return _in(0x0506ED94363AD905, vehicle, _r)
end

--- Returns true when in a vehicle, false whilst entering/exiting.
function Global.GetIsVehicleEngineRunning(vehicle)
	return _in(0xAE31E7DF9B5B132E, vehicle, _r)
end
Global.IsVehicleEngineOn = Global.GetIsVehicleEngineRunning

--- GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM
function Global.GetIsVehiclePrimaryColourCustom(vehicle)
	return _in(0xF095C0405307B21B, vehicle, _r)
end

--- Check if Vehicle Secondary is avaliable for customize
function Global.GetIsVehicleSecondaryColourCustom(vehicle)
	return _in(0x910A32E7AAD2656C, vehicle, _r)
end

--- NativeDB Introduced: v1604
function Global.GetIsVehicleShuntBoostActive(vehicle)
	return _in(0xA2459F72C14E2E8D, vehicle, _r)
end

--- GET_IS_WAYPOINT_RECORDING_LOADED
function Global.GetIsWaypointRecordingLoaded(name)
	return _in(0xCB4E8BE8A0063C5D, _ts(name), _r)
end

--- _GET_IS_WHEELS_LOWERED_STATE_ACTIVE
function Global.GetIsWheelsLoweredStateActive(vehicle)
	return _in(0x1DA0DA9CB3F0C8BF, vehicle, _r)
end
Global.N_0x1da0da9cb3f0c8bf = Global.GetIsWheelsLoweredStateActive

--- Setting Aspect Ratio Manually in game will return:
-- false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
-- true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
-- Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
function Global.GetIsWidescreen()
	return _in(0x30CF4BDA4FCB1905, _r)
end

--- GET_ITEMSET_SIZE
function Global.GetItemsetSize(x)
	return _in(0xD9127E83ABF7C631, x, _ri)
end

--- GET_JACK_TARGET
function Global.GetJackTarget(ped)
	return _in(0x5486A79D9FBD342D, ped, _ri)
end

--- Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
function Global.GetKeyForEntityInRoom(entity)
	return _in(0x399685DB942336BC, entity, _ri)
end

--- Gets a string literal from a label name.
-- GET_F*
function Global.GetLabelText(labelName)
	return _in(0x7B5280EBA9840C72, _ts(labelName), _s)
end

--- ```
-- Landing gear states:
-- 0: Deployed
-- 1: Closing (Retracting)
-- 3: Opening (Deploying)
-- 4: Retracted
-- 5: Broken
-- ```
-- Landing gear state 2 is never used.
-- @param vehicle The vehicle to check.
-- @return The current state of the vehicles landing gear.
function Global.GetLandingGearState(vehicle)
	return _in(0x9B0F3DCA3DB0F4CD, vehicle, _ri)
end
Global.GetVehicleLandingGear = Global.GetLandingGearState

--- GET_LAST_DRIVEN_VEHICLE
function Global.GetLastDrivenVehicle()
	return _in(0xB2D06FAEDE65B577, _ri)
end
Global.N_0xb2d06faede65b577 = Global.GetLastDrivenVehicle

--- GET_LAST_MATERIAL_HIT_BY_ENTITY
function Global.GetLastMaterialHitByEntity(entity)
	return _in(0x5C3D0A935F535C4C, entity, _ri)
end

--- GET_LAST_PED_IN_VEHICLE_SEAT
-- @param vehicle The vehicle to get the ped for.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.GetLastPedInVehicleSeat(vehicle, seatIndex)
	return _in(0x83F969AA1EE2A664, vehicle, seatIndex, _ri)
end

--- Returns last vehicle that was rammed by the given vehicle using the shunt boost.
-- NativeDB Introduced: v1604
function Global.GetLastRammedVehicle(vehicle)
	return _in(0x04F2FA6E234162F7, vehicle, _ri)
end

--- Returns the length of the string passed (much like strlen).
function Global.GetLengthOfLiteralString(string)
	return _in(0xF030907CCBB8A9FD, _ts(string), _ri)
end

--- GET_LENGTH_OF_LITERAL_STRING_IN_BYTES
function Global.GetLengthOfLiteralStringInBytes(string)
	return _in(0x43E4111189E54F0E, _ts(string), _ri)
end
Global.N_0x43e4111189e54f0e = Global.GetLengthOfLiteralStringInBytes
Global.GetLengthOfString = Global.GetLengthOfLiteralStringInBytes

--- Returns the string length of the string from the gxt string .
function Global.GetLengthOfStringWithThisTextLabel(gxt)
	return _in(0x801BD273D3A23F74, _ts(gxt), _ri)
end

--- Determines whether a line segment intersects a plane and, if so, returns the parameter value at which this intersection occurs.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param x1 The X-coordinate of the first point of the line segment.
-- @param y1 The Y-coordinate of the first point of the line segment.
-- @param z1 The Z-coordinate of the first point of the line segment. Together, `x1`, `y1`, and `z1` define the starting point of the line segment.
-- @param x2 The X-coordinate of the second point of the line segment.
-- @param y2 The Y-coordinate of the second point of the line segment.
-- @param z2 The Z-coordinate of the second point of the line segment. Together, `x2`, `y2`, and `z2` define the ending point of the line segment.
-- @param planeX The X-coordinate of a point on the plane. This, along with `planeY` and `planeZ`, specifies a point that lies on the plane's surface.
-- @param planeY The Y-coordinate of a point on the plane.
-- @param planeZ The Z-coordinate of a point on the plane.
-- @param planeNormalX The X-component of the plane's normal vector. The normal vector is perpendicular to the plane's surface and defines its orientation.
-- @param planeNormalY The Y-component of the plane's normal vector.
-- @param planeNormalZ The Z-component of the plane's normal vector. Together, `planeNormalX`, `planeNormalY`, and `planeNormalZ` fully describe the plane's orientation in 3D space.
-- @param intersectionParameter A pointer to a float. This parameter is used to return the value of `t` at which the line segment intersects the plane. The value of `t` is a scalar multiplier that can be used to calculate the exact intersection point on the line segment. If the line does not intersect the plane, the value of `t` is not meaningful.
-- @return Returns `true` if the line segment intersects the plane, in which case the `intersectionParameter` will contain the intersection point's parameter value. Returns `false` if there is no intersection, making the `intersectionParameter` value irrelevant.
function Global.GetLinePlaneIntersection(x1, y1, z1, x2, y2, z2, planeX, planeY, planeZ, planeNormalX, planeNormalY, planeNormalZ, intersectionParameter)
	return _in(0xF56DFB7B61BE7276, x1, y1, z1, x2, y2, z2, planeX, planeY, planeZ, planeNormalX, planeNormalY, planeNormalZ, _fi(intersectionParameter) --[[ may be optional ]], _r)
end
Global.N_0xf56dfb7b61be7276 = Global.GetLinePlaneIntersection

--- Second Param = LiveryIndex
-- example
-- int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);
-- for (int i = 0; i < count; i++)
-- {
-- char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);
-- }
-- this example will work fine to fetch all names
-- for example for Sanchez we get
-- SANC_LV1
-- SANC_LV2
-- SANC_LV3
-- SANC_LV4
-- SANC_LV5
-- Use _GET_LABEL_TEXT, to get the localized livery name.
-- -----------
-- NOTE: You may need to set the vehicle's modKit to 0 by using this function: SET_VEHICLE_MOD_KIT() before getting the name, otherwise this native may return NULL.
-- dev-c.com/nativedb/func/info/1f2aa07f00b3217a
function Global.GetLiveryName(vehicle, liveryIndex)
	return _in(0xB4C7A93837C91A1F, vehicle, liveryIndex, _s)
end

--- Returns the local player's targeting mode. See [`SET_PLAYER_TARGETING_MODE`](#\_0xB1906895227793F3).
function Global.GetLocalPlayerAimState()
	return _in(0xBB41AFBBBC0A0287, _ri)
end

--- Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.
function Global.GetLocalPlayerAimState_2()
	return _in(0x59B9A7AF4C95133C, _ri)
end
Global.N_0x59b9a7af4c95133c = Global.GetLocalPlayerAimState_2

--- Gets local system time as year, month, day, hour, minute and second.
-- Example usage:
-- int year;
-- int month;
-- int day;
-- int hour;
-- int minute;
-- int second;
-- or use std::tm struct
-- TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);
function Global.GetLocalTime()
	return _in(0x50C7A99057A69748, _i, _i, _i, _i, _i, _i)
end

--- GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON
function Global.GetLockonDistanceOfCurrentPedWeapon(ped)
	return _in(0x840F03E9041E2C9C, ped, _rf)
end
Global.N_0x840f03e9041e2c9c = Global.GetLockonDistanceOfCurrentPedWeapon
Global.GetLockonRangeOfCurrentPedWeapon = Global.GetLockonDistanceOfCurrentPedWeapon

--- GET_LODSCALE
function Global.GetLodscale()
	return _in(0x0C15B0E443B2349D, _rf)
end
Global.N_0x0c15b0e443b2349d = Global.GetLodscale

--- GET_MAIN_PLAYER_BLIP_ID
function Global.GetMainPlayerBlipId()
	return _in(0xDCD4EC3F419D02FA, _ri)
end

--- Retrieves the manufacturer's name for a specified vehicle.
-- ```
-- NativeDB Introduced: v1868
-- ```
-- @param modelHash The model hash of the vehicle.
-- @return Returns the display label of the manufacturer if the vehicle model is recognized, or "CARNOTFOUND" if the hash does not correspond to any known vehicle model.
function Global.GetMakeNameFromVehicleModel(modelHash)
	return _in(0xF7AF4F159FF99F97, _ch(modelHash), _s)
end
Global.GetMakeNameFromVehicleModel = Global.GetMakeNameFromVehicleModel

--- Returns the zoom level data by index from mapzoomdata.meta file.
-- @param index Zoom level index.
-- @param zoomScale fZoomScale value.
-- @param zoomSpeed fZoomSpeed value.
-- @param scrollSpeed fScrollSpeed value.
-- @param tilesX vTiles X.
-- @param tilesY vTiles Y.
-- @return A boolean indicating TRUE if the data was received successfully.
function Global.GetMapZoomDataLevel(index)
	return _in(0x1363a998, index, _f, _f, _f, _f, _f, _r)
end

--- Retrieves the map data entity handle.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapDataHash A mapdata hash from `mapDataLoaded` event.
-- @param entityInternalIdx An internal entity's index.
-- @param entityHandle The output entity handle.
-- @return True if successful, false if not.
function Global.GetMapdataEntityHandle(mapDataHash, entityInternalIdx, entityHandle)
	return _in(0x30aa6911, mapDataHash, entityInternalIdx, _ii(entityHandle) --[[ may be optional ]], _r)
end

--- Returns mapdata's entity matrix. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
-- Matrix layout is as follows:
-- *   Element \[0], \[1] and \[2] should represent the right vector.
-- *   Element \[4], \[5] and \[6] should represent the forward vector.
-- *   Element \[8], \[9] and \[10] should represent the up vector.
-- *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
-- *   All other elements should be \[0, 0, 0, 1].
-- @param mapDataHash A mapdata hash from `mapDataLoaded` event.
-- @param entityInternalIdx An internal entity's index.
-- @param matrixPtr A mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.
-- @return Whether or not the matrix was retrieved.
function Global.GetMapdataEntityMatrix(mapDataHash, entityInternalIdx, matrixPtr)
	return _in(0x2c3cda93, mapDataHash, entityInternalIdx, matrixPtr, _r)
end

--- Returns the transient map data index for a specified hash.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapdataHandle The input map data handle.
-- @return A transient (non-persistable) index to the requested mapdata, or -1.
function Global.GetMapdataFromHashKey(mapdataHandle)
	return _in(0xd29d8edd, _ch(mapdataHandle), _ri)
end

--- GET_MAX_AMMO
function Global.GetMaxAmmo(ped, weaponHash, ammo)
	return _in(0xDC16122C7A20C933, ped, _ch(weaponHash), _ii(ammo) --[[ may be optional ]], _r)
end

--- _GET_MAX_AMMO_BY_TYPE
function Global.GetMaxAmmoByType(ped, ammoType, ammo)
	return _in(0x585847C5E4E11709, ped, _ch(ammoType), _ii(ammo) --[[ may be optional ]], _r)
end
Global.N_0x585847c5e4e11709 = Global.GetMaxAmmoByType
Global.GetMaxAmmo_2 = Global.GetMaxAmmoByType

--- p2 is mostly 1 in the scripts.
function Global.GetMaxAmmoInClip(ped, weaponHash, p2)
	return _in(0xA38DCFFCEA8962FA, ped, _ch(weaponHash), p2, _ri)
end

--- GET_MAX_NUM_NETWORK_OBJECTS
function Global.GetMaxNumNetworkObjects()
	return _in(0xC7BE335216B5EC7C, _ri)
end
Global.N_0xc7be335216b5ec7c = Global.GetMaxNumNetworkObjects

--- GET_MAX_NUM_NETWORK_PEDS
function Global.GetMaxNumNetworkPeds()
	return _in(0x0C1F7D49C39D2289, _ri)
end
Global.N_0x0c1f7d49c39d2289 = Global.GetMaxNumNetworkPeds

--- GET_MAX_NUM_NETWORK_PICKUPS
function Global.GetMaxNumNetworkPickups()
	return _in(0xA72835064DD63E4C, _ri)
end
Global.N_0xa72835064dd63e4c = Global.GetMaxNumNetworkPickups

--- GET_MAX_NUM_NETWORK_VEHICLES
function Global.GetMaxNumNetworkVehicles()
	return _in(0x0AFCE529F69B21FF, _ri)
end
Global.N_0x0afce529f69b21ff = Global.GetMaxNumNetworkVehicles

--- GET_MAX_RANGE_OF_CURRENT_PED_WEAPON
function Global.GetMaxRangeOfCurrentPedWeapon(ped)
	return _in(0x814C9D19DFD69679, ped, _rf)
end

--- Gets the maximum wanted level the player can get.
-- Ranges from 0 to 5.
function Global.GetMaxWantedLevel()
	return _in(0x462E0DB9B137DC5F, _ri)
end

--- This function is hard-coded to always return 96.
function Global.GetMaximumNumberOfCloudPhotos()
	return _in(0xDC54A7AF8B3A14EF, _ri)
end
Global.N_0xdc54a7af8b3a14ef = Global.GetMaximumNumberOfCloudPhotos
Global.GetMaximumNumberOfPhotos_2 = Global.GetMaximumNumberOfCloudPhotos

--- This function is hard-coded to always return 0.
function Global.GetMaximumNumberOfPhotos()
	return _in(0x34D23450F028B0BF, _ri)
end

--- GET_MELEE_TARGET_FOR_PED
function Global.GetMeleeTargetForPed(ped)
	return _in(0x18A3E9EE1297FD39, ped, _ri)
end

--- p0 was always 0xAE2602A3.
function Global.GetMenuPedBoolStat(p0, p1)
	return _in(0x052991E59076E4E4, _ch(p0), _ii(p1) --[[ may be optional ]], _r)
end
Global.N_0x052991e59076e4e4 = Global.GetMenuPedBoolStat

--- GET_MENU_PED_FLOAT_STAT
function Global.GetMenuPedFloatStat(p0, p1)
	return _in(0x5FBD7095FE7AE57F, p0, _fi(p1) --[[ may be optional ]], _r)
end
Global.N_0x5fbd7095fe7ae57f = Global.GetMenuPedFloatStat

--- GET_MENU_PED_INT_STAT
function Global.GetMenuPedIntStat(p0, p1)
	return _in(0xEF4CED81CEBEDC6D, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.SetUseridsUihidden = Global.GetMenuPedIntStat
Global.N_0xef4ced81cebedc6d = Global.GetMenuPedIntStat

--- GET_MENU_PED_MASKED_INT_STAT
function Global.GetMenuPedMaskedIntStat(p0, p2, p3)
	return _in(0x90A6526CF0381030, p0, _i, p2, p3, _r)
end
Global.N_0x90a6526cf0381030 = Global.GetMenuPedMaskedIntStat

--- Returns how many real ms are equal to one game minute.
-- A getter for [`SetMillisecondsPerGameMinute`](#\_0x36CA2554).
-- @return A number of milliseconds that equals to one game minute.
function Global.GetMillisecondsPerGameMinute()
	return _in(0x2F8B4D1C595B11DB, _ri)
end

--- GET_MINIMAP_FOW_COORDINATE_IS_REVEALED
function Global.GetMinimapFowCoordinateIsRevealed(x, y, z)
	return _in(0x6E31B91145873922, x, y, z, _r)
end
Global.N_0x6e31b91145873922 = Global.GetMinimapFowCoordinateIsRevealed
Global.IsMinimapAreaRevealed = Global.GetMinimapFowCoordinateIsRevealed

--- GET_MINIMAP_FOW_DISCOVERY_RATIO
function Global.GetMinimapFowDiscoveryRatio()
	return _in(0xE0130B41D3CF4574, _rf)
end
Global.N_0xe0130b41d3cf4574 = Global.GetMinimapFowDiscoveryRatio
Global.GetMinimapRevealPercentage = Global.GetMinimapFowDiscoveryRatio

--- GET_MISSION_FLAG
function Global.GetMissionFlag()
	return _in(0xA33CDCCDA663159E, _r)
end

--- GET_MOBILE_PHONE_POSITION
function Global.GetMobilePhonePosition(position)
	return _in(0x584FDFDA48805B86, _v)
end

--- GET_MOBILE_PHONE_RENDER_ID
function Global.GetMobilePhoneRenderId(renderId)
	return _in(0xB4A53E05F68B6FA1, _ii(renderId) --[[ may be optional ]])
end

--- GET_MOBILE_PHONE_ROTATION
function Global.GetMobilePhoneRotation(p1)
	return _in(0x1CEFB61F193070AE, _v, p1)
end

--- GET_MOD_SLOT_NAME
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.GetModSlotName(vehicle, modType)
	return _in(0x51F0FEB9F6AE98C0, vehicle, modType, _s)
end

--- Returns the text label of a mod type for a given vehicle
-- Use _GET_LABEL_TEXT to get the part name in the game's language
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.GetModTextLabel(vehicle, modType, modValue)
	return _in(0x8935624F8C5592CC, vehicle, modType, modValue, _s)
end

--- Gets the dimensions of a model.
-- Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
-- Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
function Global.GetModelDimensions(modelHash)
	return _in(0x03E8D3D5F549087A, _ch(modelHash), _v, _v)
end

--- Function just returns 0
-- void __fastcall ped__get_mount(NativeContext *a1)
-- {
-- NativeContext *v1; // rbx@1
-- v1 = a1;
-- GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
-- v1->Returns->Item1= 0;
-- }
function Global.GetMount(ped)
	return _in(0xE7E11B8DCBED1058, ped, _ri)
end

--- GET_MUSIC_PLAYTIME
-- @return Returns the play time in milliseconds of the current score track.
function Global.GetMusicPlaytime()
	return _in(0xE7A0D23DC414507B, _ri)
end

--- GET_MUSIC_VOL_SLIDER
-- @return Returns the current volume slider position from 0 to 10
function Global.GetMusicVolSlider()
	return _in(0x3A48AB4445D499BE, _ri)
end
Global.N_0x3a48ab4445d499be = Global.GetMusicVolSlider

--- _GET_NAME_OF_THREAD
function Global.GetNameOfThread(threadId)
	return _in(0x05A42BA9FC8DA96B, threadId, _s)
end
Global.GetThreadName = Global.GetNameOfThread

--- AIRP = Los Santos International Airport
-- ALAMO = Alamo Sea
-- ALTA = Alta
-- ARMYB = Fort Zancudo
-- BANHAMC = Banham Canyon Dr
-- BANNING = Banning
-- BEACH = Vespucci Beach
-- BHAMCA = Banham Canyon
-- BRADP = Braddock Pass
-- BRADT = Braddock Tunnel
-- BURTON = Burton
-- CALAFB = Calafia Bridge
-- CANNY = Raton Canyon
-- CCREAK = Cassidy Creek
-- CHAMH = Chamberlain Hills
-- CHIL = Vinewood Hills
-- CHU = Chumash
-- CMSW = Chiliad Mountain State Wilderness
-- CYPRE = Cypress Flats
-- DAVIS = Davis
-- DELBE = Del Perro Beach
-- DELPE = Del Perro
-- DELSOL = La Puerta
-- DESRT = Grand Senora Desert
-- DOWNT = Downtown
-- DTVINE = Downtown Vinewood
-- EAST_V = East Vinewood
-- EBURO = El Burro Heights
-- ELGORL = El Gordo Lighthouse
-- ELYSIAN = Elysian Island
-- GALFISH = Galilee
-- GOLF = GWC and Golfing Society
-- GRAPES = Grapeseed
-- GREATC = Great Chaparral
-- HARMO = Harmony
-- HAWICK = Hawick
-- HORS = Vinewood Racetrack
-- HUMLAB = Humane Labs and Research
-- JAIL = Bolingbroke Penitentiary
-- KOREAT = Little Seoul
-- LACT = Land Act Reservoir
-- LAGO = Lago Zancudo
-- LDAM = Land Act Dam
-- LEGSQU = Legion Square
-- LMESA = La Mesa
-- LOSPUER = La Puerta
-- MIRR = Mirror Park
-- MORN = Morningwood
-- MOVIE = Richards Majestic
-- MTCHIL = Mount Chiliad
-- MTGORDO = Mount Gordo
-- MTJOSE = Mount Josiah
-- MURRI = Murrieta Heights
-- NCHU = North Chumash
-- NOOSE = N.O.O.S.E
-- OCEANA = Pacific Ocean
-- PALCOV = Paleto Cove
-- PALETO = Paleto Bay
-- PALFOR = Paleto Forest
-- PALHIGH = Palomino Highlands
-- PALMPOW = Palmer-Taylor Power Station
-- PBLUFF = Pacific Bluffs
-- PBOX = Pillbox Hill
-- PROCOB = Procopio Beach
-- RANCHO = Rancho
-- RGLEN = Richman Glen
-- RICHM = Richman
-- ROCKF = Rockford Hills
-- RTRAK = Redwood Lights Track
-- SANAND = San Andreas
-- SANCHIA = San Chianski Mountain Range
-- SANDY = Sandy Shores
-- SKID = Mission Row
-- SLAB = Stab City
-- STAD = Maze Bank Arena
-- STRAW = Strawberry
-- TATAMO = Tataviam Mountains
-- TERMINA = Terminal
-- TEXTI = Textile City
-- TONGVAH = Tongva Hills
-- TONGVAV = Tongva Valley
-- VCANA = Vespucci Canals
-- VESP = Vespucci
-- VINE = Vinewood
-- WINDF = Ron Alternates Wind Farm
-- WVINE = West Vinewood
-- ZANCUDO = Zancudo River
-- ZP_ORT = Port of South Los Santos
-- ZQ_UAR = Davis Quartz
-- PROL = Prologue / North Yankton
-- ISHeist = Cayo Perico Island
function Global.GetNameOfZone(x, y, z)
	return _in(0xCD90657D4C30E1CA, x, y, z, _s)
end

--- GET_NAMED_RENDERTARGET_RENDER_ID
function Global.GetNamedRendertargetRenderId(name)
	return _in(0x1A6478B61C6BDC3B, _ts(name), _ri)
end

--- Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
-- Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
-- Looks like the native returns an int for the path's state:
-- 1 - ???
-- 2 - ???
-- 3 - Finished Generating
function Global.GetNavmeshRouteDistanceRemaining(ped)
	return _in(0xC6F5C0BCDC74D62D, ped, _f, _i --[[ actually bool ]], _ri)
end

--- See [`GET_NAVMESH_ROUTE_DISTANCE_REMAINING`](#\_0xC6F5C0BCDC74D62D) for more details.
function Global.GetNavmeshRouteResult(ped)
	return _in(0x632E831F382A0FA8, ped, _ri)
end

--- GET_NEAREST_PLAYER_TO_ENTITY
function Global.GetNearestPlayerToEntity(entity)
	return _in(0x7196842CB375CDB3, entity, _ri)
end

--- GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM
function Global.GetNearestPlayerToEntityOnTeam(entity, team)
	return _in(0x4DC9A62F844D9337, entity, team, _ri)
end

--- GET_NETWORK_ID_FROM_SOUND_ID
-- @return Returns the network id for the specific sound
function Global.GetNetworkIdFromSoundId(soundId)
	return _in(0x2DE3F0A134FFBC0D, soundId, _ri)
end

--- GET_NETWORK_TIME
function Global.GetNetworkTime()
	return _in(0x7A5487FE9FAA6B48, _ri)
end

--- Returns the same value as [`GetNetworkTime`](#\_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.
-- Could be used for benchmarking since it can return times in ticks.
-- @return Returns the network time as an integer
function Global.GetNetworkTimeAccurate()
	return _in(0x89023FBBF9200E9F, _ri)
end
Global.N_0x89023fbbf9200e9f = Global.GetNetworkTimeAccurate

--- GET_NEW_SELECTED_MISSION_CREATOR_BLIP
function Global.GetNewSelectedMissionCreatorBlip()
	return _in(0x5C90988E7C8E1AF4, _ri)
end
Global.DisableBlipNameForVar = Global.GetNewSelectedMissionCreatorBlip
Global.N_0x5c90988e7c8e1af4 = Global.GetNewSelectedMissionCreatorBlip

--- GET_NEXT_AUDIBLE_BEAT
-- @param timeInSeconds time in seconds until the start of the next beat
-- @param bpm current tempo in beats per minute,
-- @param beatNum integer beat within the bar
-- @return Returns information on beat information for any audible music.
function Global.GetNextAudibleBeat()
	return _in(0xC64A06D939F826F5, _f, _f, _i, _r)
end
Global.N_0xc64a06d939f826f5 = Global.GetNextAudibleBeat

--- GET_NEXT_BLIP_INFO_ID
-- @param blipSprite Sprite ID, see the [Game Reference](https://docs.fivem.net/docs/game-references/blips/) for the full list.
-- @return Returns the next blip ID in an interator that has the specified blip sprite.
function Global.GetNextBlipInfoId(blipSprite)
	return _in(0x14F96AA50D6FBEA7, blipSprite, _ri)
end

--- Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
-- ```
-- NativeDB Removed Parameter 1: int index
-- ```
-- @return The disabled zone index
function Global.GetNextGpsDisabledZoneIndex(index)
	return _in(0xD3A6A0EF48823A8C, index, _ri)
end
Global.N_0xd3a6a0ef48823a8c = Global.GetNextGpsDisabledZoneIndex

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function Global.GetNextWeatherTypeHashName()
	return _in(0x711327CD09C8F162, _ri)
end
Global.GetNextWeatherType = Global.GetNextWeatherTypeHashName

--- Needs more research. Gets the stat name of a masked bool?
-- section - values used in the decompiled scripts:
-- "_NGPSTAT_BOOL"
-- "_NGTATPSTAT_BOOL"
-- "_NGDLCPSTAT_BOOL"
-- "_DLCBIKEPSTAT_BOOL"
-- "_DLCGUNPSTAT_BOOL"
-- "_GUNTATPSTAT_BOOL"
-- "_DLCSMUGCHARPSTAT_BOOL"
-- "_GANGOPSPSTAT_BOOL"
-- "_BUSINESSBATPSTAT_BOOL"
-- "_ARENAWARSPSTAT_BOOL"
-- "_CASINOPSTAT_BOOL"
-- "_CASINOHSTPSTAT_BOOL"
-- "_HEIST3TATTOOSTAT_BOOL"
function Global.GetNgstatBoolHash(index, spStat, charStat, character, section)
	return _in(0xBA52FF538ED2BC71, index, spStat, charStat, character, _ts(section), _ri)
end
Global.N_0xba52ff538ed2bc71 = Global.GetNgstatBoolHash

--- Needs more research. Gets the stat name of a masked int?
-- section - values used in the decompiled scripts:
-- "_NGPSTAT_INT"
-- "_MP_NGPSTAT_INT"
-- "_MP_LRPSTAT_INT"
-- "_MP_APAPSTAT_INT"
-- "_MP_LR2PSTAT_INT"
-- "_MP_BIKEPSTAT_INT"
-- "_MP_IMPEXPPSTAT_INT"
-- "_MP_GUNRPSTAT_INT"
-- "_NGDLCPSTAT_INT"
-- "_MP_NGDLCPSTAT_INT"
-- "_DLCSMUGCHARPSTAT_INT"
-- "_GANGOPSPSTAT_INT"
-- "_BUSINESSBATPSTAT_INT"
-- "_ARENAWARSPSTAT_INT"
-- "_CASINOPSTAT_INT"
-- "_CASINOHSTPSTAT_INT"
function Global.GetNgstatIntHash(index, spStat, charStat, character, section)
	return _in(0x2B4CDCA6F07FF3DA, index, spStat, charStat, character, _ts(section), _ri)
end
Global.N_0x2b4cdca6f07ff3da = Global.GetNgstatIntHash

--- GET_NO_LOADING_SCREEN
function Global.GetNoLoadingScreen()
	return _in(0x18C1270EA7F199BC, _r)
end
Global.GetNoLoadingScreen = Global.GetNoLoadingScreen

--- _GET_NORTH_RADAR_BLIP
function Global.GetNorthRadarBlip()
	return _in(0x3F0CF9CB7E589B88, _ri)
end
Global.N_0x3f0cf9cb7e589b88 = Global.GetNorthRadarBlip

--- GET_NTH_CLOSEST_VEHICLE_NODE
function Global.GetNthClosestVehicleNode(x, y, z, nthClosest, unknown1, unknown2, unknown3)
	return _in(0xE50E52416CCF948B, x, y, z, nthClosest, _v, unknown1, unknown2, unknown3, _r)
end

--- See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
-- p10 always equal 0x40400000
-- p11 always equal 0
function Global.GetNthClosestVehicleNodeFavourDirection(x, y, z, desiredX, desiredY, desiredZ, nthClosest, nodetype, p10, p11)
	return _in(0x45905BE8654AE067, x, y, z, desiredX, desiredY, desiredZ, nthClosest, _v, _f, nodetype, p10, p11, _r)
end

--- Returns the id.
function Global.GetNthClosestVehicleNodeId(x, y, z, nth, nodetype, p5, p6)
	return _in(0x22D7275A79FE8215, x, y, z, nth, nodetype, p5, p6, _ri)
end

--- GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING
function Global.GetNthClosestVehicleNodeIdWithHeading(x, y, z, nthClosest, p6, p7, p8)
	return _in(0x6448050E9C2A7207, x, y, z, nthClosest, _v, _f, p6, p7, p8, _ri)
end

--- Get the nth closest vehicle node and its heading. (unknown2 = 9, unknown3 = 3.0, unknown4 = 2.5)
function Global.GetNthClosestVehicleNodeWithHeading(x, y, z, nthClosest, unknown2, unknown3, unknown4)
	return _in(0x80CA6A8B6C094CC4, x, y, z, nthClosest, _v, _f, _i, unknown2, unknown3, unknown4, _r)
end

--- GET_NUI_CURSOR_POSITION
function Global.GetNuiCursorPosition()
	return _in(0xbdba226f, _i, _i)
end

--- GET_NUM_COMMERCE_ITEMS
function Global.GetNumCommerceItems()
	return _in(0xF2EAC213D5EA0623, _ri)
end
Global.N_0xf2eac213d5ea0623 = Global.GetNumCommerceItems

--- GET_NUM_CREATED_MISSION_OBJECTS
function Global.GetNumCreatedMissionObjects(p0)
	return _in(0x12B6281B6C6706C0, p0, _ri)
end
Global.N_0x12b6281b6c6706c0 = Global.GetNumCreatedMissionObjects

--- GET_NUM_CREATED_MISSION_PEDS
function Global.GetNumCreatedMissionPeds(p0)
	return _in(0xCB215C4B56A7FAE7, p0, _ri)
end
Global.N_0xcb215c4b56a7fae7 = Global.GetNumCreatedMissionPeds

--- GET_NUM_CREATED_MISSION_VEHICLES
function Global.GetNumCreatedMissionVehicles(p0)
	return _in(0x0CD9AB83489430EA, p0, _ri)
end
Global.N_0x0cd9ab83489430ea = Global.GetNumCreatedMissionVehicles

--- _GET_NUM_DISPATCHED_UNITS_FOR_PLAYER
function Global.GetNumDispatchedUnitsForPlayer(dispatchService)
	return _in(0xEB4A0C2D56441717, dispatchService, _ri)
end
Global.N_0xeb4a0c2d56441717 = Global.GetNumDispatchedUnitsForPlayer
Global.GetNumberOfDispatchedUnitsForPlayer = Global.GetNumDispatchedUnitsForPlayer

--- Returns the total number of DLC vehicles.
function Global.GetNumDlcVehicles()
	return _in(0xA7A866D21CD2329B, _ri)
end

--- Returns the total number of DLC weapon components.
function Global.GetNumDlcWeaponComponents(dlcWeaponIndex)
	return _in(0x405425358A7D61FE, dlcWeaponIndex, _ri)
end

--- Returns the total number of DLC weapon components that are available in SP.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.GetNumDlcWeaponComponentsSp(dlcWeaponIndex)
	return _in(0xAD2A7A6DFF55841B, dlcWeaponIndex, _ri)
end

--- Returns the total number of DLC weapons.
function Global.GetNumDlcWeapons()
	return _in(0xEE47635F352DA367, _ri)
end

--- Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.GetNumDlcWeaponsSp()
	return _in(0x4160B65AE085B5A9, _ri)
end

--- Used for freemode (online) characters.
function Global.GetNumHairColors()
	return _in(0xE5C0CF872C2AD150, _ri)
end

--- _GET_NUM_MAKEUP_COLORS
function Global.GetNumMakeupColors()
	return _in(0xD1F7CA1535D22818, _ri)
end
Global.N_0xd1f7ca1535d22818 = Global.GetNumMakeupColors

--- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
function Global.GetNumModColors(paintType, p1)
	return _in(0xA551BE18C11A476D, paintType, p1, _ri)
end

--- GET_NUM_MOD_KITS
function Global.GetNumModKits(vehicle)
	return _in(0x33F2E3FE70EAAE1D, vehicle, _ri)
end

--- GET_NUM_NAVMESHES_EXISTING_IN_AREA
-- @param posMinX Min X Coordinate.
-- @param posMinY Min Y Coordinate.
-- @param posMinZ Min Z Coordinate.
-- @param posMaxX Max X Coordinate.
-- @param posMaxY Max Y Coordinate.
-- @param posMaxZ Max Z Coordinate.
-- @return Returns the number of navmeshes which exist in the given area (irrespective of whether they are currently loaded or not)
function Global.GetNumNavmeshesExistingInArea(posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ)
	return _in(0x01708E8DD3FF8C65, posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, _ri)
end
Global.N_0x01708e8dd3ff8c65 = Global.GetNumNavmeshesExistingInArea

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.GetNumReservedMissionObjects(p0)
	return _in(0xAA81B5F10BC43AC2, p0, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.GetNumReservedMissionPeds(p0)
	return _in(0x1F13D5AE5CB17E17, p0, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.GetNumReservedMissionVehicles(p0)
	return _in(0xCF3A965906452031, p0, _ri)
end

--- Gets the amount of metadata values with the specified key existing in the specified resource's manifest.
-- See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
-- @param resourceName The resource name.
-- @param metadataKey The key to look up in the resource manifest.
function Global.GetNumResourceMetadata(resourceName, metadataKey)
	return _in(0x776e864, _ts(resourceName), _ts(metadataKey), _ri)
end

--- GET_NUM_RESOURCES
function Global.GetNumResources()
	return _in(0x863f27b, _ri)
end

--- GET_NUM_SUCCESSFUL_STUNT_JUMPS
function Global.GetNumSuccessfulStuntJumps()
	return _in(0x996DD1E1E02F1008, _ri)
end
Global.N_0x996dd1e1e02f1008 = Global.GetNumSuccessfulStuntJumps

--- Character types:
-- 0 = Michael,
-- 1 = Franklin,
-- 2 = Trevor,
-- 3 = MPMale,
-- 4 = MPFemale
function Global.GetNumTattooShopDlcItems(character)
	return _in(0x278F76C3B0A8F109, character, _ri)
end
Global.N_0x278f76c3b0a8f109 = Global.GetNumTattooShopDlcItems
Global.GetNumDecorations = Global.GetNumTattooShopDlcItems

--- GET_NUM_UNLOCKED_RADIO_STATIONS
-- @return Returns the number of radio stations currently unlocked in the game. This can change as a result of DLC and/or script calls.
function Global.GetNumUnlockedRadioStations()
	return _in(0xF1620ECB50E01DE7, _ri)
end
Global.MaxRadioStationIndex = Global.GetNumUnlockedRadioStations

--- Returns how many possible mods a vehicle has for a given mod type
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.GetNumVehicleMods(vehicle, modType)
	return _in(0xE38E9162A2500646, vehicle, modType, _ri)
end

--- GET_NUM_VEHICLE_WINDOW_TINTS
function Global.GetNumVehicleWindowTints()
	return _in(0x9D1224004B3A6707, _ri)
end

--- GET_NUMBER_OF_ACTIVE_BLIPS
function Global.GetNumberOfActiveBlips()
	return _in(0x9A3FF3DE163034E8, _ri)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
function Global.GetNumberOfEvents(eventGroup)
	return _in(0x5F92A689A06620AA, eventGroup, _ri)
end

--- GET_NUMBER_OF_FIRES_IN_RANGE
function Global.GetNumberOfFiresInRange(x, y, z, radius)
	return _in(0x50CAD495A460B305, x, y, z, radius, _ri)
end

--- GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE
function Global.GetNumberOfFreeStacksOfThisSize(stackSize)
	return _in(0xFEAD16FC8F9DFC0F, stackSize, _ri)
end
Global.GetFreeStackSlotsCount = Global.GetNumberOfFreeStacksOfThisSize

--- GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS
-- @param ped The ped handle.
-- @param componentId The component id you want to get the drawable variatons of. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80)
function Global.GetNumberOfPedDrawableVariations(ped, componentId)
	return _in(0x27561561732A7842, ped, componentId, _ri)
end

--- GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS
-- @param ped The ped handle.
-- @param propId The prop id you want to get the drawable variations of. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F)
function Global.GetNumberOfPedPropDrawableVariations(ped, propId)
	return _in(0x5FAF9754E789FB47, ped, propId, _ri)
end

--- Need to check behavior when drawableId = -1
-- @param ped The ped handle.
-- @param propId The prop id you want to get the texture variations of. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F)
-- @param drawableId The drawable id of the prop you want to get the texture variations of. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
function Global.GetNumberOfPedPropTextureVariations(ped, propId, drawableId)
	return _in(0xA6E7F1CEB523E171, ped, propId, drawableId, _ri)
end

--- GET_NUMBER_OF_PED_TEXTURE_VARIATIONS
-- @param ped The ped handle.
-- @param componentId The component id you want to get the texture variations of. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId The drawable id of the component you want to get the texture variations of. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
function Global.GetNumberOfPedTextureVariations(ped, componentId, drawableId)
	return _in(0x8F7156A3142A6BAD, ped, componentId, drawableId, _ri)
end

--- Gets the number of players in the current session.
-- If not multiplayer, always returns 1.
function Global.GetNumberOfPlayers()
	return _in(0x407C7F91DDB46C16, _ri)
end

--- NativeDB Introduced: v1180
function Global.GetNumberOfPlayersInTeam(team)
	return _in(0x1FC200409F10E6F1, team, _ri)
end

--- Gets the number of instances of the specified script is currently running.
-- Actually returns numRefs - 1.
-- if (program)
-- v3 = rage::scrProgram::GetNumRefs(program) - 1;
-- return v3;
function Global.GetNumberOfReferencesOfScriptWithNameHash(scriptHash)
	return _in(0x2C83A9DA6BFFC4F9, _ch(scriptHash), _ri)
end
Global.GetNumberOfInstancesOfStreamedScript = Global.GetNumberOfReferencesOfScriptWithNameHash
Global.GetNumberOfInstancesOfScriptWithNameHash = Global.GetNumberOfReferencesOfScriptWithNameHash

--- GET_NUMBER_OF_STREAMING_REQUESTS
function Global.GetNumberOfStreamingRequests()
	return _in(0x4060057271CEBC89, _ri)
end

--- Actually number of color combinations
function Global.GetNumberOfVehicleColours(vehicle)
	return _in(0x3B963160CD65D41E, vehicle, _ri)
end

--- _GET_NUMBER_OF_VEHICLE_DOORS
function Global.GetNumberOfVehicleDoors(vehicle)
	return _in(0x92922A607497B14D, vehicle, _ri)
end

--- Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
function Global.GetNumberOfVehicleNumberPlates()
	return _in(0x4C4D6B2644F458CB, _ri)
end

--- GET_OBJECT_FRAGMENT_DAMAGE_HEALTH
function Global.GetObjectFragmentDamageHealth(p0, p1)
	return _in(0xB6FBFD079B8D0596, p0, p1, _rf)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.GetObjectIndexFromEntityIndex(entity)
	return _in(0xD7E3B9735C0F89D6, entity, _ri)
end

--- _GET_OBJECT_TEXTURE_VARIATION
function Global.GetObjectTextureVariation(object)
	return _in(0xE84EB93729C5F36A, object, _ri)
end
Global.N_0xe84eb93729c5f36a = Global.GetObjectTextureVariation

--- Calculates the world coordinates after applying the specified offsets to the given position, relative to a certain heading.
-- This native is similar to [`GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS`](#\_0x1899F328B0E12848), but uses a world position and heading as the reference point.
-- @param xPos The X coordinate of the original position.
-- @param yPos The Y coordinate of the original position.
-- @param zPos The Z coordinate of the original position.
-- @param heading The heading (in degrees) relative to which the offsets are applied.
-- @param xOffset Left/right offset from the coord.
-- @param yOffset Forward/backward offset from the coord.
-- @param zOffset Upward/downward offset from the coord.
-- @return Returns a Vector3 representing the new world coordinates after applying the offsets to the original position relative to the specified heading.
function Global.GetOffsetFromCoordAndHeadingInWorldCoords(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset)
	return _in(0x163E252DE035A133, xPos, yPos, zPos, heading, xOffset, yOffset, zOffset, _rv)
end
Global.N_0x163e252de035a133 = Global.GetOffsetFromCoordAndHeadingInWorldCoords
Global.GetObjectOffsetFromCoords = Global.GetOffsetFromCoordAndHeadingInWorldCoords

--- Converts world coords (posX - Z) to coords relative to the entity
-- Example:
-- posX = 50
-- posY = 1000
-- posZ = 60
-- Entity's coords are: x=30, y=1000, z=60.
-- All three returned coords will then be in range of [-20,20] depending on rotation of the entity.
function Global.GetOffsetFromEntityGivenWorldCoords(entity, posX, posY, posZ)
	return _in(0x2274BC1C4885E333, entity, posX, posY, posZ, _rv)
end

--- Offset values are relative to the entity.
-- x = left/right
-- y = forward/backward
-- z = up/down
function Global.GetOffsetFromEntityInWorldCoords(entity, offsetX, offsetY, offsetZ)
	return _in(0x1899F328B0E12848, entity, offsetX, offsetY, offsetZ, _rv)
end

--- GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS
function Global.GetOffsetFromInteriorInWorldCoords(interior, x, y, z)
	return _in(0x9E3B3E6D66F6E22F, interior, x, y, z, _rv)
end

--- Online version is defined here: update\update.rpf\common\data\version.txt
-- Example:
-- [ONLINE_VERSION_NUMBER]
-- 1.33
-- _GET_ONLINE_VERSION() will return "1.33"
function Global.GetOnlineVersion()
	return _in(0xFCA9373EF340AC0A, _s)
end
Global.GetGameVersion = Global.GetOnlineVersion

--- Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
function Global.GetOnscreenKeyboardResult()
	return _in(0x8362B09B91893647, _s)
end

--- GET_PACKED_BOOL_STAT_KEY
function Global.GetPackedBoolStatKey(index, spStat, charStat, character)
	return _in(0x80C75307B1C42837, index, spStat, charStat, character, _ri)
end
Global.N_0x80c75307b1c42837 = Global.GetPackedBoolStatKey
Global.GetPstatBoolHash = Global.GetPackedBoolStatKey

--- GET_PACKED_INT_STAT_KEY
function Global.GetPackedIntStatKey(index, spStat, charStat, character)
	return _in(0x61E111E323419E07, index, spStat, charStat, character, _ri)
end
Global.N_0x61e111e323419e07 = Global.GetPackedIntStatKey
Global.GetPstatIntHash = Global.GetPackedIntStatKey

--- GET_PACKED_TU_BOOL_STAT_KEY
function Global.GetPackedTuBoolStatKey(index, spStat, charStat, character)
	return _in(0xC4BB08EE7907471E, index, spStat, charStat, character, _ri)
end
Global.N_0xc4bb08ee7907471e = Global.GetPackedTuBoolStatKey
Global.GetTupstatBoolHash = Global.GetPackedTuBoolStatKey
Global.GetPackedTitleUpdateBoolStatKey = Global.GetPackedTuBoolStatKey

--- GET_PACKED_TU_INT_STAT_KEY
function Global.GetPackedTuIntStatKey(index, spStat, charStat, character)
	return _in(0xD16C2AD6B8E32854, index, spStat, charStat, character, _ri)
end
Global.N_0xd16c2ad6b8e32854 = Global.GetPackedTuIntStatKey
Global.GetTupstatIntHash = Global.GetPackedTuIntStatKey
Global.GetPackedTitleUpdateIntStatKey = Global.GetPackedTuIntStatKey

--- A getter for [SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xEAE6DCC7EEE3DB1D).
-- @return Returns parked vehicle density multiplier value.
function Global.GetParkedVehicleDensityMultiplier()
	return _in(0xff72df84, _rf)
end

--- Returns the world position the pointer is hovering on the pause map.
-- @return A Vector3 with the pause map pointer world position X and Y values.
function Global.GetPauseMapPointerWorldPosition()
	return _in(0xe5af7a82, _rv)
end

--- Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
-- @return If the pause menu is open, it will return a Vector3, Z is always 0.
-- 		If the pause menu is closed, it will return Vector3.Zero
function Global.GetPauseMenuCursorPosition()
	return _in(0x5BFF36D6ED83E0AE, _rv)
end
Global.N_0x5bff36d6ed83e0ae = Global.GetPauseMenuCursorPosition

--- _GET_PAUSE_MENU_SELECTION
function Global.GetPauseMenuSelection()
	return _in(0x36C1451A88A09630, _i, _i)
end
Global.N_0x36c1451a88a09630 = Global.GetPauseMenuSelection

--- lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
-- selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
-- selectedItemUniqueId: this is uniqueID of the currently selected menu item
-- when the pausemenu is closed:
-- lastItemMenuId = -1
-- selectedItemMenuId = -1
-- selectedItemUniqueId = 0
-- when the header gains focus:
-- lastItemMenuId updates as normal or 0 if the pausemenu was just opened
-- selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
-- selectedItemUniqueId = -1
-- when focus is moved from the header to a pausemenu page:
-- lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
-- selectedItemMenuId = -1
-- selectedItemUniqueId updates as normal
function Global.GetPauseMenuSelectionData()
	return _in(0x7E17BE53E1AAABAF, _i, _i, _i)
end
Global.N_0x7e17be53e1aaabaf = Global.GetPauseMenuSelectionData

--- Returns:
-- 0
-- 5
-- 10
-- 15
-- 20
-- 25
-- 30
-- 35
function Global.GetPauseMenuState()
	return _in(0x272ACD84970869C5, _ri)
end

--- GET_PED_ACCURACY
function Global.GetPedAccuracy(ped)
	return _in(0x37F4AD56ECBC0CD6, ped, _ri)
end

--- Returns the ped's alertness (0-3).
-- Values :
-- 0 : Neutral
-- 1 : Heard something (gun shot, hit, etc)
-- 2 : Knows (the origin of the event)
-- 3 : Fully alerted (is facing the event?)
-- If the Ped does not exist, returns -1.
function Global.GetPedAlertness(ped)
	return _in(0xF6AA118530443FD2, ped, _ri)
end

--- GET_PED_AMMO_BY_TYPE
function Global.GetPedAmmoByType(ped, ammoType)
	return _in(0x39D22031557946C1, ped, _ch(ammoType), _ri)
end

--- Returns the current ammo type of the specified ped's specified weapon.
-- MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
-- Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
function Global.GetPedAmmoTypeFromWeapon(ped, weaponHash)
	return _in(0x7FEAD38B326B9F74, ped, _ch(weaponHash), _ri)
end
Global.GetPedAmmoType = Global.GetPedAmmoTypeFromWeapon

--- Returns the base/default ammo type of the specified ped's specified weapon.
-- Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
function Global.GetPedAmmoTypeFromWeapon_2(ped, weaponHash)
	return _in(0xF489B44DD5AF4BD9, ped, _ch(weaponHash), _ri)
end

--- GET_PED_ARMOUR
function Global.GetPedArmour(ped)
	return _in(0x9483AF821605B1D8, ped, _ri)
end

--- GET_PED_AS_GROUP_LEADER
function Global.GetPedAsGroupLeader(groupID)
	return _in(0x5CCE68DBD5FE93EC, groupID, _ri)
end
Global.GetPedAsGroupLeader = Global.GetPedAsGroupLeader

--- from fm_mission_controller.c4 (variable names changed for clarity):
-- int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());
-- PED::GET_GROUP_SIZE(group, &unused, &groupSize);
-- if (groupSize >= 1) {
-- . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
-- . . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);
-- . . . . . . . . //and so on
function Global.GetPedAsGroupMember(groupID, memberNumber)
	return _in(0x51455483CF23ED97, groupID, memberNumber, _ri)
end

--- Gets the position of the specified bone of the specified ped.
-- ped: The ped to get the position of a bone from.
-- boneId: The ID of the bone to get the position from. This is NOT the index.
-- offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
-- offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
-- offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
function Global.GetPedBoneCoords(ped, boneId, offsetX, offsetY, offsetZ)
	return _in(0x17C07FC640E86B4E, ped, boneId, offsetX, offsetY, offsetZ, _rv)
end

--- enum ePedBoneId : uint16_t
-- {
-- SKEL_ROOT = 0x0,
-- SKEL_Pelvis = 0x2E28,
-- SKEL_L_Thigh = 0xE39F,
-- SKEL_L_Calf = 0xF9BB,
-- SKEL_L_Foot = 0x3779,
-- SKEL_L_Toe0 = 0x83C,
-- EO_L_Foot = 0x84C5,
-- EO_L_Toe = 0x68BD,
-- IK_L_Foot = 0xFEDD,
-- PH_L_Foot = 0xE175,
-- MH_L_Knee = 0xB3FE,
-- SKEL_R_Thigh = 0xCA72,
-- SKEL_R_Calf = 0x9000,
-- SKEL_R_Foot = 0xCC4D,
-- SKEL_R_Toe0 = 0x512D,
-- EO_R_Foot = 0x1096,
-- EO_R_Toe = 0x7163,
-- IK_R_Foot = 0x8AAE,
-- PH_R_Foot = 0x60E6,
-- MH_R_Knee = 0x3FCF,
-- RB_L_ThighRoll = 0x5C57,
-- RB_R_ThighRoll = 0x192A,
-- SKEL_Spine_Root = 0xE0FD,
-- SKEL_Spine0 = 0x5C01,
-- SKEL_Spine1 = 0x60F0,
-- SKEL_Spine2 = 0x60F1,
-- SKEL_Spine3 = 0x60F2,
-- SKEL_L_Clavicle = 0xFCD9,
-- SKEL_L_UpperArm = 0xB1C5,
-- SKEL_L_Forearm = 0xEEEB,
-- SKEL_L_Hand = 0x49D9,
-- SKEL_L_Finger00 = 0x67F2,
-- SKEL_L_Finger01 = 0xFF9,
-- SKEL_L_Finger02 = 0xFFA,
-- SKEL_L_Finger10 = 0x67F3,
-- SKEL_L_Finger11 = 0x1049,
-- SKEL_L_Finger12 = 0x104A,
-- SKEL_L_Finger20 = 0x67F4,
-- SKEL_L_Finger21 = 0x1059,
-- SKEL_L_Finger22 = 0x105A,
-- SKEL_L_Finger30 = 0x67F5,
-- SKEL_L_Finger31 = 0x1029,
-- SKEL_L_Finger32 = 0x102A,
-- SKEL_L_Finger40 = 0x67F6,
-- SKEL_L_Finger41 = 0x1039,
-- SKEL_L_Finger42 = 0x103A,
-- PH_L_Hand = 0xEB95,
-- IK_L_Hand = 0x8CBD,
-- RB_L_ForeArmRoll = 0xEE4F,
-- RB_L_ArmRoll = 0x1470,
-- MH_L_Elbow = 0x58B7,
-- SKEL_R_Clavicle = 0x29D2,
-- SKEL_R_UpperArm = 0x9D4D,
-- SKEL_R_Forearm = 0x6E5C,
-- SKEL_R_Hand = 0xDEAD,
-- SKEL_R_Finger00 = 0xE5F2,
-- SKEL_R_Finger01 = 0xFA10,
-- SKEL_R_Finger02 = 0xFA11,
-- SKEL_R_Finger10 = 0xE5F3,
-- SKEL_R_Finger11 = 0xFA60,
-- SKEL_R_Finger12 = 0xFA61,
-- SKEL_R_Finger20 = 0xE5F4,
-- SKEL_R_Finger21 = 0xFA70,
-- SKEL_R_Finger22 = 0xFA71,
-- SKEL_R_Finger30 = 0xE5F5,
-- SKEL_R_Finger31 = 0xFA40,
-- SKEL_R_Finger32 = 0xFA41,
-- SKEL_R_Finger40 = 0xE5F6,
-- SKEL_R_Finger41 = 0xFA50,
-- SKEL_R_Finger42 = 0xFA51,
-- PH_R_Hand = 0x6F06,
-- IK_R_Hand = 0x188E,
-- RB_R_ForeArmRoll = 0xAB22,
-- RB_R_ArmRoll = 0x90FF,
-- MH_R_Elbow = 0xBB0,
-- SKEL_Neck_1 = 0x9995,
-- SKEL_Head = 0x796E,
-- IK_Head = 0x322C,
-- FACIAL_facialRoot = 0xFE2C,
-- FB_L_Brow_Out_000 = 0xE3DB,
-- FB_L_Lid_Upper_000 = 0xB2B6,
-- FB_L_Eye_000 = 0x62AC,
-- FB_L_CheekBone_000 = 0x542E,
-- FB_L_Lip_Corner_000 = 0x74AC,
-- FB_R_Lid_Upper_000 = 0xAA10,
-- FB_R_Eye_000 = 0x6B52,
-- FB_R_CheekBone_000 = 0x4B88,
-- FB_R_Brow_Out_000 = 0x54C,
-- FB_R_Lip_Corner_000 = 0x2BA6,
-- FB_Brow_Centre_000 = 0x9149,
-- FB_UpperLipRoot_000 = 0x4ED2,
-- FB_UpperLip_000 = 0xF18F,
-- FB_L_Lip_Top_000 = 0x4F37,
-- FB_R_Lip_Top_000 = 0x4537,
-- FB_Jaw_000 = 0xB4A0,
-- FB_LowerLipRoot_000 = 0x4324,
-- FB_LowerLip_000 = 0x508F,
-- FB_L_Lip_Bot_000 = 0xB93B,
-- FB_R_Lip_Bot_000 = 0xC33B,
-- FB_Tongue_000 = 0xB987,
-- RB_Neck_1 = 0x8B93,
-- SPR_L_Breast = 0xFC8E,
-- SPR_R_Breast = 0x885F,
-- IK_Root = 0xDD1C,
-- SKEL_Neck_2 = 0x5FD4,
-- SKEL_Pelvis1 = 0xD003,
-- SKEL_PelvisRoot = 0x45FC,
-- SKEL_SADDLE = 0x9524,
-- MH_L_CalfBack = 0x1013,
-- MH_L_ThighBack = 0x600D,
-- SM_L_Skirt = 0xC419,
-- MH_R_CalfBack = 0xB013,
-- MH_R_ThighBack = 0x51A3,
-- SM_R_Skirt = 0x7712,
-- SM_M_BackSkirtRoll = 0xDBB,
-- SM_L_BackSkirtRoll = 0x40B2,
-- SM_R_BackSkirtRoll = 0xC141,
-- SM_M_FrontSkirtRoll = 0xCDBB,
-- SM_L_FrontSkirtRoll = 0x9B69,
-- SM_R_FrontSkirtRoll = 0x86F1,
-- SM_CockNBalls_ROOT = 0xC67D,
-- SM_CockNBalls = 0x9D34,
-- MH_L_Finger00 = 0x8C63,
-- MH_L_FingerBulge00 = 0x5FB8,
-- MH_L_Finger10 = 0x8C53,
-- MH_L_FingerTop00 = 0xA244,
-- MH_L_HandSide = 0xC78A,
-- MH_Watch = 0x2738,
-- MH_L_Sleeve = 0x933C,
-- MH_R_Finger00 = 0x2C63,
-- MH_R_FingerBulge00 = 0x69B8,
-- MH_R_Finger10 = 0x2C53,
-- MH_R_FingerTop00 = 0xEF4B,
-- MH_R_HandSide = 0x68FB,
-- MH_R_Sleeve = 0x92DC,
-- FACIAL_jaw = 0xB21,
-- FACIAL_underChin = 0x8A95,
-- FACIAL_L_underChin = 0x234E,
-- FACIAL_chin = 0xB578,
-- FACIAL_chinSkinBottom = 0x98BC,
-- FACIAL_L_chinSkinBottom = 0x3E8F,
-- FACIAL_R_chinSkinBottom = 0x9E8F,
-- FACIAL_tongueA = 0x4A7C,
-- FACIAL_tongueB = 0x4A7D,
-- FACIAL_tongueC = 0x4A7E,
-- FACIAL_tongueD = 0x4A7F,
-- FACIAL_tongueE = 0x4A80,
-- FACIAL_L_tongueE = 0x35F2,
-- FACIAL_R_tongueE = 0x2FF2,
-- FACIAL_L_tongueD = 0x35F1,
-- FACIAL_R_tongueD = 0x2FF1,
-- FACIAL_L_tongueC = 0x35F0,
-- FACIAL_R_tongueC = 0x2FF0,
-- FACIAL_L_tongueB = 0x35EF,
-- FACIAL_R_tongueB = 0x2FEF,
-- FACIAL_L_tongueA = 0x35EE,
-- FACIAL_R_tongueA = 0x2FEE,
-- FACIAL_chinSkinTop = 0x7226,
-- FACIAL_L_chinSkinTop = 0x3EB3,
-- FACIAL_chinSkinMid = 0x899A,
-- FACIAL_L_chinSkinMid = 0x4427,
-- FACIAL_L_chinSide = 0x4A5E,
-- FACIAL_R_chinSkinMid = 0xF5AF,
-- FACIAL_R_chinSkinTop = 0xF03B,
-- FACIAL_R_chinSide = 0xAA5E,
-- FACIAL_R_underChin = 0x2BF4,
-- FACIAL_L_lipLowerSDK = 0xB9E1,
-- FACIAL_L_lipLowerAnalog = 0x244A,
-- FACIAL_L_lipLowerThicknessV = 0xC749,
-- FACIAL_L_lipLowerThicknessH = 0xC67B,
-- FACIAL_lipLowerSDK = 0x7285,
-- FACIAL_lipLowerAnalog = 0xD97B,
-- FACIAL_lipLowerThicknessV = 0xC5BB,
-- FACIAL_lipLowerThicknessH = 0xC5ED,
-- FACIAL_R_lipLowerSDK = 0xA034,
-- FACIAL_R_lipLowerAnalog = 0xC2D9,
-- FACIAL_R_lipLowerThicknessV = 0xC6E9,
-- FACIAL_R_lipLowerThicknessH = 0xC6DB,
-- FACIAL_nose = 0x20F1,
-- FACIAL_L_nostril = 0x7322,
-- FACIAL_L_nostrilThickness = 0xC15F,
-- FACIAL_noseLower = 0xE05A,
-- FACIAL_L_noseLowerThickness = 0x79D5,
-- FACIAL_R_noseLowerThickness = 0x7975,
-- FACIAL_noseTip = 0x6A60,
-- FACIAL_R_nostril = 0x7922,
-- FACIAL_R_nostrilThickness = 0x36FF,
-- FACIAL_noseUpper = 0xA04F,
-- FACIAL_L_noseUpper = 0x1FB8,
-- FACIAL_noseBridge = 0x9BA3,
-- FACIAL_L_nasolabialFurrow = 0x5ACA,
-- FACIAL_L_nasolabialBulge = 0xCD78,
-- FACIAL_L_cheekLower = 0x6907,
-- FACIAL_L_cheekLowerBulge1 = 0xE3FB,
-- FACIAL_L_cheekLowerBulge2 = 0xE3FC,
-- FACIAL_L_cheekInner = 0xE7AB,
-- FACIAL_L_cheekOuter = 0x8161,
-- FACIAL_L_eyesackLower = 0x771B,
-- FACIAL_L_eyeball = 0x1744,
-- FACIAL_L_eyelidLower = 0x998C,
-- FACIAL_L_eyelidLowerOuterSDK = 0xFE4C,
-- FACIAL_L_eyelidLowerOuterAnalog = 0xB9AA,
-- FACIAL_L_eyelashLowerOuter = 0xD7F6,
-- FACIAL_L_eyelidLowerInnerSDK = 0xF151,
-- FACIAL_L_eyelidLowerInnerAnalog = 0x8242,
-- FACIAL_L_eyelashLowerInner = 0x4CCF,
-- FACIAL_L_eyelidUpper = 0x97C1,
-- FACIAL_L_eyelidUpperOuterSDK = 0xAF15,
-- FACIAL_L_eyelidUpperOuterAnalog = 0x67FA,
-- FACIAL_L_eyelashUpperOuter = 0x27B7,
-- FACIAL_L_eyelidUpperInnerSDK = 0xD341,
-- FACIAL_L_eyelidUpperInnerAnalog = 0xF092,
-- FACIAL_L_eyelashUpperInner = 0x9B1F,
-- FACIAL_L_eyesackUpperOuterBulge = 0xA559,
-- FACIAL_L_eyesackUpperInnerBulge = 0x2F2A,
-- FACIAL_L_eyesackUpperOuterFurrow = 0xC597,
-- FACIAL_L_eyesackUpperInnerFurrow = 0x52A7,
-- FACIAL_forehead = 0x9218,
-- FACIAL_L_foreheadInner = 0x843,
-- FACIAL_L_foreheadInnerBulge = 0x767C,
-- FACIAL_L_foreheadOuter = 0x8DCB,
-- FACIAL_skull = 0x4221,
-- FACIAL_foreheadUpper = 0xF7D6,
-- FACIAL_L_foreheadUpperInner = 0xCF13,
-- FACIAL_L_foreheadUpperOuter = 0x509B,
-- FACIAL_R_foreheadUpperInner = 0xCEF3,
-- FACIAL_R_foreheadUpperOuter = 0x507B,
-- FACIAL_L_temple = 0xAF79,
-- FACIAL_L_ear = 0x19DD,
-- FACIAL_L_earLower = 0x6031,
-- FACIAL_L_masseter = 0x2810,
-- FACIAL_L_jawRecess = 0x9C7A,
-- FACIAL_L_cheekOuterSkin = 0x14A5,
-- FACIAL_R_cheekLower = 0xF367,
-- FACIAL_R_cheekLowerBulge1 = 0x599B,
-- FACIAL_R_cheekLowerBulge2 = 0x599C,
-- FACIAL_R_masseter = 0x810,
-- FACIAL_R_jawRecess = 0x93D4,
-- FACIAL_R_ear = 0x1137,
-- FACIAL_R_earLower = 0x8031,
-- FACIAL_R_eyesackLower = 0x777B,
-- FACIAL_R_nasolabialBulge = 0xD61E,
-- FACIAL_R_cheekOuter = 0xD32,
-- FACIAL_R_cheekInner = 0x737C,
-- FACIAL_R_noseUpper = 0x1CD6,
-- FACIAL_R_foreheadInner = 0xE43,
-- FACIAL_R_foreheadInnerBulge = 0x769C,
-- FACIAL_R_foreheadOuter = 0x8FCB,
-- FACIAL_R_cheekOuterSkin = 0xB334,
-- FACIAL_R_eyesackUpperInnerFurrow = 0x9FAE,
-- FACIAL_R_eyesackUpperOuterFurrow = 0x140F,
-- FACIAL_R_eyesackUpperInnerBulge = 0xA359,
-- FACIAL_R_eyesackUpperOuterBulge = 0x1AF9,
-- FACIAL_R_nasolabialFurrow = 0x2CAA,
-- FACIAL_R_temple = 0xAF19,
-- FACIAL_R_eyeball = 0x1944,
-- FACIAL_R_eyelidUpper = 0x7E14,
-- FACIAL_R_eyelidUpperOuterSDK = 0xB115,
-- FACIAL_R_eyelidUpperOuterAnalog = 0xF25A,
-- FACIAL_R_eyelashUpperOuter = 0xE0A,
-- FACIAL_R_eyelidUpperInnerSDK = 0xD541,
-- FACIAL_R_eyelidUpperInnerAnalog = 0x7C63,
-- FACIAL_R_eyelashUpperInner = 0x8172,
-- FACIAL_R_eyelidLower = 0x7FDF,
-- FACIAL_R_eyelidLowerOuterSDK = 0x1BD,
-- FACIAL_R_eyelidLowerOuterAnalog = 0x457B,
-- FACIAL_R_eyelashLowerOuter = 0xBE49,
-- FACIAL_R_eyelidLowerInnerSDK = 0xF351,
-- FACIAL_R_eyelidLowerInnerAnalog = 0xE13,
-- FACIAL_R_eyelashLowerInner = 0x3322,
-- FACIAL_L_lipUpperSDK = 0x8F30,
-- FACIAL_L_lipUpperAnalog = 0xB1CF,
-- FACIAL_L_lipUpperThicknessH = 0x37CE,
-- FACIAL_L_lipUpperThicknessV = 0x38BC,
-- FACIAL_lipUpperSDK = 0x1774,
-- FACIAL_lipUpperAnalog = 0xE064,
-- FACIAL_lipUpperThicknessH = 0x7993,
-- FACIAL_lipUpperThicknessV = 0x7981,
-- FACIAL_L_lipCornerSDK = 0xB1C,
-- FACIAL_L_lipCornerAnalog = 0xE568,
-- FACIAL_L_lipCornerThicknessUpper = 0x7BC,
-- FACIAL_L_lipCornerThicknessLower = 0xDD42,
-- FACIAL_R_lipUpperSDK = 0x7583,
-- FACIAL_R_lipUpperAnalog = 0x51CF,
-- FACIAL_R_lipUpperThicknessH = 0x382E,
-- FACIAL_R_lipUpperThicknessV = 0x385C,
-- FACIAL_R_lipCornerSDK = 0xB3C,
-- FACIAL_R_lipCornerAnalog = 0xEE0E,
-- FACIAL_R_lipCornerThicknessUpper = 0x54C3,
-- FACIAL_R_lipCornerThicknessLower = 0x2BBA,
-- MH_MulletRoot = 0x3E73,
-- MH_MulletScaler = 0xA1C2,
-- MH_Hair_Scale = 0xC664,
-- MH_Hair_Crown = 0x1675,
-- SM_Torch = 0x8D6,
-- FX_Light = 0x8959,
-- FX_Light_Scale = 0x5038,
-- FX_Light_Switch = 0xE18E,
-- BagRoot = 0xAD09,
-- BagPivotROOT = 0xB836,
-- BagPivot = 0x4D11,
-- BagBody = 0xAB6D,
-- BagBone_R = 0x937,
-- BagBone_L = 0x991,
-- SM_LifeSaver_Front = 0x9420,
-- SM_R_Pouches_ROOT = 0x2962,
-- SM_R_Pouches = 0x4141,
-- SM_L_Pouches_ROOT = 0x2A02,
-- SM_L_Pouches = 0x4B41,
-- SM_Suit_Back_Flapper = 0xDA2D,
-- SPR_CopRadio = 0x8245,
-- SM_LifeSaver_Back = 0x2127,
-- MH_BlushSlider = 0xA0CE,
-- SKEL_Tail_01 = 0x347,
-- SKEL_Tail_02 = 0x348,
-- MH_L_Concertina_B = 0xC988,
-- MH_L_Concertina_A = 0xC987,
-- MH_R_Concertina_B = 0xC8E8,
-- MH_R_Concertina_A = 0xC8E7,
-- MH_L_ShoulderBladeRoot = 0x8711,
-- MH_L_ShoulderBlade = 0x4EAF,
-- MH_R_ShoulderBladeRoot = 0x3A0A,
-- MH_R_ShoulderBlade = 0x54AF,
-- FB_R_Ear_000 = 0x6CDF,
-- SPR_R_Ear = 0x63B6,
-- FB_L_Ear_000 = 0x6439,
-- SPR_L_Ear = 0x5B10,
-- FB_TongueA_000 = 0x4206,
-- FB_TongueB_000 = 0x4207,
-- FB_TongueC_000 = 0x4208,
-- SKEL_L_Toe1 = 0x1D6B,
-- SKEL_R_Toe1 = 0xB23F,
-- SKEL_Tail_03 = 0x349,
-- SKEL_Tail_04 = 0x34A,
-- SKEL_Tail_05 = 0x34B,
-- SPR_Gonads_ROOT = 0xBFDE,
-- SPR_Gonads = 0x1C00,
-- FB_L_Brow_Out_001 = 0xE3DB,
-- FB_L_Lid_Upper_001 = 0xB2B6,
-- FB_L_Eye_001 = 0x62AC,
-- FB_L_CheekBone_001 = 0x542E,
-- FB_L_Lip_Corner_001 = 0x74AC,
-- FB_R_Lid_Upper_001 = 0xAA10,
-- FB_R_Eye_001 = 0x6B52,
-- FB_R_CheekBone_001 = 0x4B88,
-- FB_R_Brow_Out_001 = 0x54C,
-- FB_R_Lip_Corner_001 = 0x2BA6,
-- FB_Brow_Centre_001 = 0x9149,
-- FB_UpperLipRoot_001 = 0x4ED2,
-- FB_UpperLip_001 = 0xF18F,
-- FB_L_Lip_Top_001 = 0x4F37,
-- FB_R_Lip_Top_001 = 0x4537,
-- FB_Jaw_001 = 0xB4A0,
-- FB_LowerLipRoot_001 = 0x4324,
-- FB_LowerLip_001 = 0x508F,
-- FB_L_Lip_Bot_001 = 0xB93B,
-- FB_R_Lip_Bot_001 = 0xC33B,
-- FB_Tongue_001 = 0xB987
-- };
function Global.GetPedBoneIndex(ped, boneId)
	return _in(0x3F428D08BE5AAE31, ped, boneId, _ri)
end

--- Returns the hash of the weapon/model/object that killed the ped.
function Global.GetPedCauseOfDeath(ped)
	return _in(0x16FFE42AB2D2DC59, ped, _ri)
end

--- GET_PED_COMBAT_MOVEMENT
function Global.GetPedCombatMovement(ped)
	return _in(0xDEA92412FCAEB3F5, ped, _ri)
end

--- GET_PED_COMBAT_RANGE
function Global.GetPedCombatRange(ped)
	return _in(0xF9D9F7F2DB8E2FA0, ped, _ri)
end

--- See [`SET_PED_CONFIG_FLAG`](#\_0x1913FE4CBF41C463).
function Global.GetPedConfigFlag(ped, flagId, p2)
	return _in(0x7EE53118C892B513, ped, flagId, p2, _r)
end

--- _GET_PED_CURRENT_MOVEMENT_SPEED
function Global.GetPedCurrentMovementSpeed(ped)
	return _in(0xF60165E1D2C5370B, ped, _f, _f, _r)
end
Global.N_0xf60165e1d2c5370b = Global.GetPedCurrentMovementSpeed

--- Returns the zoneID for the overlay if it is a member of collection.
-- enum ePedDecorationZone
-- {
-- ZONE_TORSO = 0,
-- ZONE_HEAD = 1,
-- ZONE_LEFT_ARM = 2,
-- ZONE_RIGHT_ARM = 3,
-- ZONE_LEFT_LEG = 4,
-- ZONE_RIGHT_LEG = 5,
-- ZONE_UNKNOWN = 6,
-- ZONE_NONE = 7
-- };
function Global.GetPedDecorationZoneFromHashes(collection, overlay)
	return _in(0x9FD452BFBE7A7A8B, _ch(collection), _ch(overlay), _ri)
end
Global.GetTattooZone = Global.GetPedDecorationZoneFromHashes

--- Returns a list of decorations applied to a ped.
-- The data returned adheres to the following layout:
-- ```
-- [ [ collectionHash1, overlayHash1 ], ..., [c ollectionHashN, overlayHashN ] ]
-- ```
-- This command will return undefined data if invoked on a remote player ped.
-- @param ped The ped you want to retrieve data for.
-- @return An object containing a list of applied decorations.
function Global.GetPedDecorations(ped)
	return _in(0x7cce1163, ped, _ro)
end

--- GET_PED_DECORATIONS_STATE
function Global.GetPedDecorationsState(ped)
	return _in(0x71EAB450D86954A1, ped, _ri)
end
Global.N_0x71eab450d86954a1 = Global.GetPedDecorationsState

--- GET_PED_DEFENSIVE_AREA_POSITION
function Global.GetPedDefensiveAreaPosition(ped, p1)
	return _in(0x3C06B8786DD94CD1, ped, p1, _rv)
end

--- A getter for [SET_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x95E3D6257B166CF2).
-- @return Returns ped density multiplier value.
function Global.GetPedDensityMultiplier()
	return _in(0xf5a904f9, _rf)
end

--- GET_PED_DESIRED_MOVE_BLEND_RATIO
function Global.GetPedDesiredMoveBlendRatio(ped)
	return _in(0x8517D4A6CA8513ED, ped, _rf)
end

--- NativeDB Introduced: v2699
function Global.GetPedDiesInWater(ped)
	return _in(0x65671A4FB8218930, ped, _r)
end

--- Ids
-- 0 - Head
-- 1 - Beard
-- 2 - Hair
-- 3 - Torso
-- 4 - Legs
-- 5 - Hands
-- 6 - Foot
-- 7 - Scarfs/Neck Accessories
-- 8 - Accessories 1
-- 9 - Accessories 2
-- 10- Decals
-- 11 - Auxiliary parts for torso
function Global.GetPedDrawableVariation(ped, componentId)
	return _in(0x67F3780DD425D4FC, ped, componentId, _ri)
end

--- Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
-- @param ped The ped to get the glow intensity from.
-- @return A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
function Global.GetPedEmissiveIntensity(ped)
	return _in(0x1461B28A06717D68, ped, _rf)
end
Global.N_0x1461b28a06717d68 = Global.GetPedEmissiveIntensity
Global.GetPedIlluminatedClothingGlowIntensity = Global.GetPedEmissiveIntensity

--- GET_PED_ENVEFF_SCALE
function Global.GetPedEnveffScale(ped)
	return _in(0x9C14D30395A51A3C, ped, _rf)
end

--- NativeDB Introduced: v2189
function Global.GetPedEventData(ped, eventType, outData)
	return _in(0xBA656A3BB01BDEA3, ped, eventType, _ii(outData) --[[ may be optional ]], _r)
end

--- Gets the offset the specified ped has moved since the previous tick.
-- If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
-- If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
function Global.GetPedExtractedDisplacement(ped, worldSpace)
	return _in(0xE0AF41401ADF87E3, ped, worldSpace, _rv)
end

--- A getter for [`_SET_PED_EYE_COLOR`](#\_0x50B56988B170AFDF).
-- @param ped The target ped
-- @return Returns ped's eye colour, or -1 if fails to get.
function Global.GetPedEyeColor(ped)
	return _in(0x76BBA2CEE66D47E9, ped, _ri)
end
Global.N_0x76bba2cee66d47e9 = Global.GetPedEyeColor

--- A getter for [\_SET_PED_EYE_COLOR](#\_0x50B56988B170AFDF). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's eye colour, or -1 if fails to get.
function Global.GetPedEyeColor(ped)
	return _in(0xa47b860f, ped, _ri)
end

--- A getter for [\_SET_PED_FACE_FEATURE](#\_0x71A5C1DBA060049E). Returns 0.0 if fails to get.
-- @param ped The target ped
-- @param index Face feature index
-- @return Returns ped's face feature value, or 0.0 if fails to get.
function Global.GetPedFaceFeature(ped, index)
	return _in(0xba352add, ped, index, _rf)
end

--- Returns the group id of which the specified ped is a member of.
function Global.GetPedGroupIndex(ped)
	return _in(0xF162E133B4E7A675, ped, _ri)
end

--- A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's primary hair colour.
function Global.GetPedHairColor(ped)
	return _in(0xa3ea2893, ped, _ri)
end

--- A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's secondary hair colour.
function Global.GetPedHairHighlightColor(ped)
	return _in(0x4b087305, ped, _ri)
end

--- Input: Haircolor index, value between 0 and 63 (inclusive).
-- Output: RGB values for the haircolor specified in the input.
-- This is used with the hair color swatches scaleform.
-- Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
-- @param hairColorIndex The hair color index. Value between 0-63 (inclusive).
-- @param outR Output red value.
-- @param outG Output green value.
-- @param outB Output blue value.
function Global.GetPedHairRgbColor(hairColorIndex)
	return _in(0x4852FC386E2E1BB5, hairColorIndex, _i, _i, _i)
end
Global.N_0x4852fc386e2e1bb5 = Global.GetPedHairRgbColor
Global.GetHairRgbColor = Global.GetPedHairRgbColor

--- The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
-- pass this struct in the second parameter
-- typedef struct
-- {
-- int shapeFirst, shapeSecond, shapeThird;
-- int skinFirst, skinSecond, skinThird;
-- float shapeMix, skinMix, thirdMix;
-- } headBlendData;
function Global.GetPedHeadBlendData(ped, headBlendData)
	return _in(0x2746BD9D88C5C5D0, ped, _ii(headBlendData) --[[ may be optional ]], _r)
end
Global.GetPedHeadBlendData = Global.GetPedHeadBlendData

--- Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
-- Used when calling SET_PED_HEAD_BLEND_DATA.
function Global.GetPedHeadBlendFirstIndex(type)
	return _in(0x68D353AB88B97E0C, type, _ri)
end
Global.GetFirstParentIdForPedType = Global.GetPedHeadBlendFirstIndex

--- Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
function Global.GetPedHeadBlendNumHeads(type)
	return _in(0x5EF37013A6539C9D, type, _ri)
end
Global.GetNumParentPedsOfType = Global.GetPedHeadBlendNumHeads

--- A getter for [SET_PED_HEAD_OVERLAY](#\_0x48F44967FA05CC1E) and [\_SET_PED_HEAD_OVERLAY_COLOR](#\_0x497BF74A7B9CB952) natives.
-- @param ped The target ped
-- @param index Overlay index
-- @param overlayValue Overlay value pointer
-- @param colourType Colour type pointer
-- @param firstColour First colour pointer
-- @param secondColour Second colour pointer
-- @param overlayOpacity Opacity pointer
-- @return Returns ped's head overlay data.
function Global.GetPedHeadOverlayData(ped, index)
	return _in(0xc46ee605, ped, index, _i, _i, _i, _i, _f, _r)
end

--- Used with freemode (online) characters.
function Global.GetPedHeadOverlayNum(overlayID)
	return _in(0xCF1CE768BB43480E, overlayID, _ri)
end
Global.GetNumHeadOverlayValues = Global.GetPedHeadOverlayNum

--- Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
-- This might be the once removed native GET_PED_HEAD_OVERLAY.
function Global.GetPedHeadOverlayValue(ped, overlayID)
	return _in(0xA60EF3B6461A4D43, ped, overlayID, _ri)
end

--- GET_PED_HELMET_STORED_HAT_PROP_INDEX
function Global.GetPedHelmetStoredHatPropIndex(ped)
	return _in(0x451294E859ECC018, ped, _ri)
end
Global.N_0x451294e859ecc018 = Global.GetPedHelmetStoredHatPropIndex

--- GET_PED_HELMET_STORED_HAT_TEX_INDEX
function Global.GetPedHelmetStoredHatTexIndex(ped)
	return _in(0x9D728C1E12BF5518, ped, _ri)
end
Global.N_0x9d728c1e12bf5518 = Global.GetPedHelmetStoredHatTexIndex

--- Gets the ped in the specified seat of the passed vehicle.
-- If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
-- **NativeDB Added Parameter 3**: BOOL p2 (uses a different GetOccupant function)
-- @param vehicle The vehicle to get the ped for.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- @return A handle to a ped in the specified vehicle seat, or 0 if no such ped existed.
function Global.GetPedInVehicleSeat(vehicle, seatIndex)
	return _in(0xBB40DD2270B65366, vehicle, seatIndex, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.GetPedIndexFromEntityIndex(entity)
	return _in(0x04A2A40C73395041, entity, _ri)
end

--- GET_PED_LAST_DAMAGE_BONE
function Global.GetPedLastDamageBone(ped, outBone)
	return _in(0xD75960F6BD9EA49C, ped, _ii(outBone) --[[ may be optional ]], _r)
end

--- Pass ped. Pass address of Vector3.
-- The coord will be put into the Vector3.
-- The return will determine whether there was a coord found or not.
function Global.GetPedLastWeaponImpactCoord(ped, coords)
	return _in(0x6C4D0409BA1A2BC2, ped, _v, _r)
end

--- Input: Makeup color index, value between 0 and 63 (inclusive).
-- Output: RGB values for the makeup color specified in the input.
-- This is used with the makeup color swatches scaleform.
-- Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
-- @param makeupColorIndex The hair color index. Value between 0-63 (inclusive).
-- @param outR Output red value.
-- @param outG Output green value.
-- @param outB Output blue value.
function Global.GetPedMakeupRgbColor(makeupColorIndex)
	return _in(0x013E5CFC38CD5387, makeupColorIndex, _i, _i, _i)
end
Global.N_0x013e5cfc38cd5387 = Global.GetPedMakeupRgbColor
Global.GetMakeupRgbColor = Global.GetPedMakeupRgbColor

--- GET_PED_MAX_HEALTH
function Global.GetPedMaxHealth(ped)
	return _in(0x4700A416E8324EF3, ped, _ri)
end

--- Gets a ped model's personality type.
-- @param modelHash Ped's model.
function Global.GetPedModelPersonality(modelHash)
	return _in(0xfe08cad6, _ch(modelHash), _ri)
end

--- GET_PED_MONEY
function Global.GetPedMoney(ped)
	return _in(0x3F69145BBA87BAE7, ped, _ri)
end

--- GET_PED_MOVEMENT_CLIPSET
-- @param ped The target ped.
-- @return The current movement clipset hash.
function Global.GetPedMovementClipset(ped)
	return _in(0x69e81e3d, ped, _ri)
end

--- Console/PC structure definitions and example: pastebin.com/SsFej963
-- For FiveM/Cfx.Re use-cases refer to: [`GET_GAME_POOL`](#\_0x2B9D4F50).
-- @param ignore Ped type to ignore
function Global.GetPedNearbyPeds(ped, ignore)
	return _in(0x23F8F5FC7E8C4A6B, ped, _i, ignore, _ri)
end

--- Returns size of array, passed into the second variable.
-- See below for usage information.
-- This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
-- //Setup the array
-- const int numElements = 10;
-- const int arrSize = numElements * 2 + 2;
-- Any veh[arrSize];
-- //0 index is the size of the array
-- veh[0] = numElements;
-- int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);
-- if (veh != NULL)
-- {
-- //Simple loop to go through results
-- for (int i = 0; i < count; i++)
-- {
-- int offsettedID = i * 2 + 2;
-- //Make sure it exists
-- if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))
-- {
-- //Do something
-- }
-- }
-- }
-- Here's the right way to do it (console and pc):
-- pastebin.com/SsFej963
function Global.GetPedNearbyVehicles(ped, sizeAndVehs)
	return _in(0xCFF869CBFA210D82, ped, _ii(sizeAndVehs) --[[ may be optional ]], _ri)
end

--- GET_PED_PALETTE_VARIATION
-- @param ped The ped handle.
-- @param componentId The component id to get the palette variation from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
function Global.GetPedPaletteVariation(ped, componentId)
	return _in(0xE3DD5F2A84B42281, ped, componentId, _ri)
end

--- -1: no landing
-- 0: landing on both feet
-- 1: stumbling
-- 2: rolling
-- 3: ragdoll
function Global.GetPedParachuteLandingType(ped)
	return _in(0x8B9F1FC6AE8166C0, ped, _ri)
end

--- Returns:
-- -1: Normal
-- 0: Wearing parachute on back
-- 1: Parachute opening
-- 2: Parachute open
-- 3: Falling to doom (e.g. after exiting parachute)
-- Normal means no parachute?
function Global.GetPedParachuteState(ped)
	return _in(0x79CFD9827CC979B6, ped, _ri)
end

--- GET_PED_PARACHUTE_TINT_INDEX
function Global.GetPedParachuteTintIndex(ped, outTintIndex)
	return _in(0xEAF5F7E5AE7C6C9D, ped, _ii(outTintIndex) --[[ may be optional ]])
end

--- GET_PED_PROP_INDEX
-- @param ped The ped handle.
-- @param componentId The component id to get the prop index from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
function Global.GetPedPropIndex(ped, componentId)
	return _in(0x898CC20EA75BACD8, ped, componentId, _ri)
end

--- GET_PED_PROP_TEXTURE_INDEX
-- @param ped The ped handle.
-- @param componentId The component id to get the prop texture index from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
function Global.GetPedPropTextureIndex(ped, componentId)
	return _in(0xE131A28626F81AB2, ped, componentId, _ri)
end

--- GET_PED_RAGDOLL_BONE_INDEX
function Global.GetPedRagdollBoneIndex(ped, bone)
	return _in(0x2057EF813397A772, ped, bone, _ri)
end

--- GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
function Global.GetPedRelationshipGroupDefaultHash(ped)
	return _in(0x42FDD0F017B1E38E, ped, _ri)
end

--- GET_PED_RELATIONSHIP_GROUP_HASH
function Global.GetPedRelationshipGroupHash(ped)
	return _in(0x7DBDD04862D95F04, ped, _ri)
end

--- GET_PED_RESET_FLAG
function Global.GetPedResetFlag(ped, flagId)
	return _in(0xAF9E59B1B1FBF2A0, ped, flagId, _r)
end

--- Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
-- Is best to check if the Ped is dead before asking for its killer.
function Global.GetPedSourceOfDeath(ped)
	return _in(0x93C8B64DEB84728C, ped, _ri)
end
Global.GetPedKiller = Global.GetPedSourceOfDeath

--- Returns whether the entity is in stealth mode
function Global.GetPedStealthMovement(ped)
	return _in(0x7C2AC9CA66575FBF, ped, _r)
end

--- A getter for [SET_PED_SWEAT](#\_0x27B0405F59637D1F).
-- @param ped The target ped
-- @return Returns ped's sweat.
function Global.GetPedSweat(ped)
	return _in(0x44b91e94, ped, _rf)
end

--- NativeDB Introduced: v2372
function Global.GetPedTaskCombatTarget(ped, p1)
	return _in(0x32C27A11307B01CC, ped, p1, _ri)
end
Global.N_0x32c27a11307b01cc = Global.GetPedTaskCombatTarget

--- GET_PED_TEXTURE_VARIATION
-- @param ped The ped handle.
-- @param componentId The component id to get the texture variation from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
function Global.GetPedTextureVariation(ped, componentId)
	return _in(0x04A355E041E004E6, ped, componentId, _ri)
end

--- GET_PED_TIME_OF_DEATH
function Global.GetPedTimeOfDeath(ped)
	return _in(0x1E98817B311AE98A, ped, _ri)
end
Global.GetPedTimeOfDeath = Global.GetPedTimeOfDeath
Global.N_0x1e98817b311ae98a = Global.GetPedTimeOfDeath

--- Ped types:
-- ```cpp
-- enum ePedType
-- {
-- PED_TYPE_PLAYER_0,
-- PED_TYPE_PLAYER_1,
-- PED_TYPE_NETWORK_PLAYER,
-- PED_TYPE_PLAYER_2,
-- PED_TYPE_CIVMALE,
-- PED_TYPE_CIVFEMALE,
-- PED_TYPE_COP,
-- PED_TYPE_GANG_ALBANIAN,
-- PED_TYPE_GANG_BIKER_1,
-- PED_TYPE_GANG_BIKER_2,
-- PED_TYPE_GANG_ITALIAN,
-- PED_TYPE_GANG_RUSSIAN,
-- PED_TYPE_GANG_RUSSIAN_2,
-- PED_TYPE_GANG_IRISH,
-- PED_TYPE_GANG_JAMAICAN,
-- PED_TYPE_GANG_AFRICAN_AMERICAN,
-- PED_TYPE_GANG_KOREAN,
-- PED_TYPE_GANG_CHINESE_JAPANESE,
-- PED_TYPE_GANG_PUERTO_RICAN,
-- PED_TYPE_DEALER,
-- PED_TYPE_MEDIC,
-- PED_TYPE_FIREMAN,
-- PED_TYPE_CRIMINAL,
-- PED_TYPE_BUM,
-- PED_TYPE_PROSTITUTE,
-- PED_TYPE_SPECIAL,
-- PED_TYPE_MISSION,
-- PED_TYPE_SWAT,
-- PED_TYPE_ANIMAL,
-- PED_TYPE_ARMY
-- };
-- ```
function Global.GetPedType(ped)
	return _in(0xFF059E1E4C01E63C, ped, _ri)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.GetPedUsingVehicleDoor(vehicle, doorIndex)
	return _in(0x218297BF0CFD853B, vehicle, doorIndex, _ri)
end
Global.N_0x218297bf0cfd853b = Global.GetPedUsingVehicleDoor
Global.GetPedUsingVehicleDoor = Global.GetPedUsingVehicleDoor

--- NativeDB Introduced: v1493
function Global.GetPedVisualFieldCenterAngle(ped)
	return _in(0xEF2C71A32CAD5FBD, ped, _rf)
end

--- GET_PED_WAYPOINT_DISTANCE
function Global.GetPedWaypointDistance(p0)
	return _in(0xE6A877C64CAF1BC5, p0, _rf)
end

--- GET_PED_WAYPOINT_PROGRESS
function Global.GetPedWaypointProgress(ped)
	return _in(0x2720AAA75001E094, ped, _ri)
end

--- _GET_PED_WEAPON_LIVERY_COLOR
function Global.GetPedWeaponLiveryColor(ped, weaponHash, camoComponentHash)
	return _in(0xF0A60040BE558F2D, ped, _ch(weaponHash), _ch(camoComponentHash), _ri)
end
Global.N_0xf0a60040be558f2d = Global.GetPedWeaponLiveryColor

--- GET_PED_WEAPON_TINT_INDEX
function Global.GetPedWeaponTintIndex(ped, weaponHash)
	return _in(0x2B9EEDC07BD06B9F, ped, _ch(weaponHash), _ri)
end

--- GET_PED_WEAPONTYPE_IN_SLOT
function Global.GetPedWeapontypeInSlot(ped, weaponSlot)
	return _in(0xEFFED78E9011134D, ped, _ch(weaponSlot), _ri)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.GetPedheadshotTxdString(id)
	return _in(0xDB4EACD4AD0A5D6B, id, _s)
end

--- GET_PEDS_JACKER
function Global.GetPedsJacker(ped)
	return _in(0x9B128DC36C1E04CF, ped, _ri)
end

--- GET_PHONE_GESTURE_ANIM_CURRENT_TIME
function Global.GetPhoneGestureAnimCurrentTime(ped)
	return _in(0x47619ABE8B268C60, ped, _rf)
end

--- GET_PHONE_GESTURE_ANIM_TOTAL_TIME
function Global.GetPhoneGestureAnimTotalTime(ped)
	return _in(0x1EE0F68A7C25DEC6, ped, _rf)
end

--- GET_PICKUP_COORDS
function Global.GetPickupCoords(pickup)
	return _in(0x225B8B35C88029B3, pickup, _rv)
end

--- _GET_PICKUP_GENERATION_RANGE_MULTIPLIER
function Global.GetPickupGenerationRangeMultiplier()
	return _in(0xB3ECA65C7317F174, _rf)
end
Global.N_0xb3eca65c7317f174 = Global.GetPickupGenerationRangeMultiplier

--- returns pickup hash.
function Global.GetPickupHash(pickupHash)
	return _in(0x5EAAD83F8CFB4575, _ch(pickupHash), _ri)
end
Global.N_0x5eaad83f8cfb4575 = Global.GetPickupHash

--- NativeDB Introduced: v1290
function Global.GetPickupHashFromWeapon(weapon)
	return _in(0xD6429A016084F1A5, _ch(weapon), _ri)
end
Global.N_0xd6429a016084f1a5 = Global.GetPickupHashFromWeapon

--- GET_PICKUP_OBJECT
function Global.GetPickupObject(pickup)
	return _in(0x5099BC55630B25AE, pickup, _ri)
end
Global.N_0x5099bc55630b25ae = Global.GetPickupObject

--- GET_PLAYER_CURRENT_STEALTH_NOISE
function Global.GetPlayerCurrentStealthNoise(player)
	return _in(0x2F395D61F3A1F877, player, _rf)
end

--- GET_PLAYER_FAKE_WANTED_LEVEL
function Global.GetPlayerFakeWantedLevel(player)
	return _in(0x56105E599CAB0EFA, player, _ri)
end
Global.N_0x56105e599cab0efa = Global.GetPlayerFakeWantedLevel

--- Gets a local client's Player ID from its server ID counterpart, assuming the passed `serverId` exists on the client.
-- If no matching client is found, or an invalid value is passed over as the `serverId` native's parameter, the native result will be `-1`.
-- It's worth noting that this native method can only retrieve information about clients that are culled to the connected client.
-- @param serverId The player's server ID.
-- @return A valid Player ID if one is found, `-1` if not.
function Global.GetPlayerFromServerId(serverId)
	return _in(0x344ea166, serverId, _ri)
end

--- On the server this will return the players source, on the client it will return the player handle.
-- @param bagName An internal state bag ID from the argument to a state bag change handler.
-- @return The player handle or 0 if the state bag name did not refer to a player, or the player does not exist.
function Global.GetPlayerFromStateBagName(bagName)
	return _in(0xa56135e0, _ts(bagName), _ri)
end

--- Returns the group ID the player is member of.
function Global.GetPlayerGroup(player)
	return _in(0x0D127585F77030AF, player, _ri)
end

--- GET_PLAYER_HAS_RESERVE_PARACHUTE
function Global.GetPlayerHasReserveParachute(player)
	return _in(0x5DDFE2FF727F3CA3, player, _r)
end

--- _GET_PLAYER_HEALTH_RECHARGE_LIMIT
function Global.GetPlayerHealthRechargeLimit(player)
	return _in(0x8BC515BAE4AAF8FF, player, _rf)
end
Global.N_0x8bc515bae4aaf8ff = Global.GetPlayerHealthRechargeLimit

--- Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
function Global.GetPlayerIndex()
	return _in(0xA5EDC40EF369B48D, _ri)
end

--- Returns the Player's Invincible status.
-- This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
-- bool IsPlayerInvincible(Player player)
-- {
-- auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x188);
-- return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
-- }
-- return false;
-- }
-- ============================================================
-- This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash? 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?
function Global.GetPlayerInvincible(player)
	return _in(0xB721981B2B939E07, player, _r)
end

--- Unlike [GET_PLAYER_INVINCIBLE](#\_0xB721981B2B939E07) this native gets both [SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED](#\_0x6BC97F4F4BB3C04B) and [SET_PLAYER_INVINCIBLE](#\_0x239528EACDC3E7DE) invincibility state.
-- @param player The player id
-- @return A boolean to tell if the player is invincible.
function Global.GetPlayerInvincible_2(player)
	return _in(0xf2e3912b, player, _r)
end

--- GET_PLAYER_MAX_ARMOUR
function Global.GetPlayerMaxArmour(player)
	return _in(0x92659B4CE1863CB3, player, _ri)
end

--- GET_PLAYER_MAX_STAMINA
-- @param playerId The player index.
-- @return The value of player max stamina.
function Global.GetPlayerMaxStamina(playerId)
	return _in(0xd014ab79, playerId, _rf)
end

--- A getter for [SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER](#\_0x4A3DC7ECCC321032).
-- @param playerId The player index.
-- @return Returns player melee weapon damage modifier value.
function Global.GetPlayerMeleeWeaponDamageModifier(playerId)
	return _in(0x8689a825, playerId, _rf)
end

--- A getter for [SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER](#\_0xAE540335B4ABC4E2).
-- @param playerId The player index.
-- @return The value of player melee weapon defense modifier.
function Global.GetPlayerMeleeWeaponDefenseModifier(playerId)
	return _in(0x27e94ef8, playerId, _rf)
end

--- Returns the players name from a specified player index
-- @param player The player index, or -1 to get the local player ped.
-- @return The name of the queried player. "**Invalid**" if the player does not exist.
function Global.GetPlayerName(player)
	return _in(0x6D0DE6A7B5DA71F8, player, _s)
end

--- NativeDB Introduced: v2372
function Global.GetPlayerParachuteModelOverride(player)
	return _in(0xC219887CA3E65C41, player, _ri)
end

--- GET_PLAYER_PARACHUTE_PACK_TINT_INDEX
function Global.GetPlayerParachutePackTintIndex(player, tintIndex)
	return _in(0x6E9C742F340CE5A2, player, _ii(tintIndex) --[[ may be optional ]])
end

--- GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR
function Global.GetPlayerParachuteSmokeTrailColor(player)
	return _in(0xEF56DBABD3CD4887, player, _i, _i, _i)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.GetPlayerParachuteTintIndex(player, tintIndex)
	return _in(0x75D3F7A1B0D9B145, player, _ii(tintIndex) --[[ may be optional ]])
end

--- Gets the ped for a specified player index.
-- @param playerId The player index, or -1 to get the local player ped.
-- @return The specified player's ped, or 0 if invalid.
function Global.GetPlayerPed(playerId)
	return _in(0x43A66C31C68491C0, playerId, _ri)
end

--- GET_PLAYER_PED_IS_FOLLOWING
function Global.GetPlayerPedIsFollowing(ped)
	return _in(0x6A3975DEA89F9A17, ped, _ri)
end

--- Does the same like PLAYER::GET_PLAYER_PED
function Global.GetPlayerPedScriptIndex(player)
	return _in(0x50FAC3A3E030A6E1, player, _ri)
end

--- GET_PLAYER_RADIO_STATION_GENRE
-- @return Returns the genre of the players current radio station
function Global.GetPlayerRadioStationGenre()
	return _in(0xA571991A7FE6CCEB, _ri)
end

--- GET_PLAYER_RADIO_STATION_INDEX
-- @return Returns the index of the current players radio station, or 255 if the radio is off
function Global.GetPlayerRadioStationIndex()
	return _in(0xE8AF77C4C06ADC93, _ri)
end

--- GET_PLAYER_RADIO_STATION_NAME
-- @return Returns the name of the players radio station. This serves as the text label.
function Global.GetPlayerRadioStationName()
	return _in(0xF6D733C32076AD03, _s)
end

--- NativeDB Introduced: v2372
function Global.GetPlayerReserveParachuteModelOverride(player)
	return _in(0x37FAAA68DCA9D08D, player, _ri)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.GetPlayerReserveParachuteTintIndex(player, index)
	return _in(0xD5A016BC3C09CF40, player, _ii(index) --[[ may be optional ]])
end

--- GET_PLAYER_RGB_COLOUR
function Global.GetPlayerRgbColour(player)
	return _in(0xE902EF951DCE178F, player, _i, _i, _i)
end

--- GET_PLAYER_SERVER_ID
function Global.GetPlayerServerId(player)
	return _in(0x4d97bcc7, player, _ri)
end

--- GET_PLAYER_SHORT_SWITCH_STATE
function Global.GetPlayerShortSwitchState()
	return _in(0x20F898A5D9782800, _ri)
end

--- GET_PLAYER_SPRINT_STAMINA_REMAINING
function Global.GetPlayerSprintStaminaRemaining(player)
	return _in(0x3F9F16F8E65A7ED7, player, _rf)
end

--- GET_PLAYER_SPRINT_TIME_REMAINING
function Global.GetPlayerSprintTimeRemaining(player)
	return _in(0x1885BC9B108B4C99, player, _rf)
end

--- GET_PLAYER_STAMINA
-- @param playerId The player index.
-- @return The value of player stamina.
function Global.GetPlayerStamina(playerId)
	return _in(0xe415ec5c, playerId, _rf)
end

--- GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME
function Global.GetPlayerSwitchInterpOutCurrentTime()
	return _in(0x5B48A06DD0E792A5, _ri)
end
Global.N_0x5b48a06dd0e792a5 = Global.GetPlayerSwitchInterpOutCurrentTime

--- GET_PLAYER_SWITCH_INTERP_OUT_DURATION
function Global.GetPlayerSwitchInterpOutDuration()
	return _in(0x08C2D6C52A3104BB, _ri)
end
Global.SetPlayerInvertedUp = Global.GetPlayerSwitchInterpOutDuration
Global.N_0x08c2d6c52a3104bb = Global.GetPlayerSwitchInterpOutDuration

--- GET_PLAYER_SWITCH_JUMP_CUT_INDEX
function Global.GetPlayerSwitchJumpCutIndex()
	return _in(0x78C0D93253149435, _ri)
end
Global.N_0x78c0d93253149435 = Global.GetPlayerSwitchJumpCutIndex

--- GET_PLAYER_SWITCH_STATE
-- @return *   Returns 5 if the player is in the air (in a state of switch).
-- 		*   Returns 12 if the player is either not in the air or if the switch is completed.
function Global.GetPlayerSwitchState()
	return _in(0x470555300D10B2A5, _ri)
end

--- GET_PLAYER_SWITCH_TYPE
function Global.GetPlayerSwitchType()
	return _in(0xB3C94A90D9FC9E62, _ri)
end

--- Assigns the handle of locked-on melee target to *entity that you pass it.
-- Returns false if no entity found.
function Global.GetPlayerTargetEntity(player, entity)
	return _in(0x13EDE1A5DBF797C9, player, _ii(entity) --[[ may be optional ]], _r)
end

--- Gets the player's team.
-- Does nothing in singleplayer.
function Global.GetPlayerTeam(player)
	return _in(0x37039302F4E0A008, player, _ri)
end

--- GET_PLAYER_UNDERWATER_TIME_REMAINING
function Global.GetPlayerUnderwaterTimeRemaining(player)
	return _in(0xA1FCF8E6AF40B731, player, _rf)
end

--- A getter for [SET_PLAYER_VEHICLE_DAMAGE_MODIFIER](#\_0xA50E117CDDF82F0C).
-- @param playerId The player index.
-- @return The value of player vehicle damage modifier.
function Global.GetPlayerVehicleDamageModifier(playerId)
	return _in(0x78f27b1f, playerId, _rf)
end

--- A getter for [SET_PLAYER_VEHICLE_DEFENSE_MODIFIER](#\_0x4C60E6EFDAFF2462).
-- @param playerId The player index.
-- @return The value of player vehicle defense modifier.
function Global.GetPlayerVehicleDefenseModifier(playerId)
	return _in(0x8326e7cd, playerId, _rf)
end

--- GET_PLAYER_WANTED_CENTRE_POSITION
function Global.GetPlayerWantedCentrePosition(player)
	return _in(0x0C92BA89F1AF26F8, player, _rv)
end

--- GET_PLAYER_WANTED_LEVEL
function Global.GetPlayerWantedLevel(player)
	return _in(0xE28E54788CE8F12D, player, _ri)
end

--- A getter for [SET_PLAYER_WEAPON_DAMAGE_MODIFIER](#\_0xCE07B9F7817AADA3).
-- @param playerId The player index.
-- @return The value of player weapon damage modifier.
function Global.GetPlayerWeaponDamageModifier(playerId)
	return _in(0x2a3d7cda, playerId, _rf)
end

--- A getter for [SET_PLAYER_WEAPON_DEFENSE_MODIFIER](#\_0x2D83BC011CA14A3C).
-- @param playerId The player index.
-- @return The value of player weapon defense modifier.
function Global.GetPlayerWeaponDefenseModifier(playerId)
	return _in(0xf1543251, playerId, _rf)
end

--- A getter for [\_SET_PLAYER_WEAPON_DEFENSE_MODIFIER\_2](#\_0xBCFDE9EDE4CF27DC).
-- @param playerId The player index.
-- @return The value of player weapon defense modifier 2.
function Global.GetPlayerWeaponDefenseModifier_2(playerId)
	return _in(0x986b65ff, playerId, _rf)
end

--- ### Warning
-- This native will return `0` if the last vehicle the player was in was destroyed.
-- ### Alternative
-- You can use [GET_VEHICLE_PED_IS_IN](#\_0x9A9112A0FE9A4713), which will actually get the last vehicle, even if it was destroyed.
-- @return A vehicle handle containing the last player's vehicle.
function Global.GetPlayersLastVehicle()
	return _in(0xB6997A7EB3F5C8C0, _ri)
end

--- _GET_POINT_ON_ROAD_SIDE
function Global.GetPointOnRoadSide(x, y, z, p3, outPosition)
	return _in(0x16F46FB18C8009E4, x, y, z, p3, _v, _r)
end
Global.N_0x16f46fb18c8009e4 = Global.GetPointOnRoadSide

--- Distance traveled in the vehicles current recording.
function Global.GetPositionInRecording(vehicle)
	return _in(0x2DACD605FC681475, vehicle, _rf)
end

--- This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
-- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
function Global.GetPositionOfVehicleRecordingAtTime(recording, time, script)
	return _in(0xD242728AA6F0FBA2, recording, time, _ts(script), _rv)
end

--- GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME
function Global.GetPositionOfVehicleRecordingIdAtTime(id, time)
	return _in(0x92523B76657A517D, id, time, _rv)
end
Global.N_0x92523b76657a517d = Global.GetPositionOfVehicleRecordingIdAtTime

--- Gets system time as year, month, day, hour, minute and second.
-- Example usage:
-- int year;
-- int month;
-- int day;
-- int hour;
-- int minute;
-- int second;
-- TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);
function Global.GetPosixTime()
	return _in(0xDA488F299A5B164E, _i, _i, _i, _i, _i, _i)
end

--- Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
function Global.GetPowerSavingModeDuration()
	return _in(0xABB2FA71C83A1B72, _ri)
end
Global.N_0xabb2fa71c83a1b72 = Global.GetPowerSavingModeDuration

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function Global.GetPrevWeatherTypeHashName()
	return _in(0x564B884A05EC45A3, _ri)
end
Global.GetPrevWeatherType = Global.GetPrevWeatherTypeHashName

--- GET_PROFILE_SETTING
function Global.GetProfileSetting(profileSetting)
	return _in(0xC488FF2356EA7791, profileSetting, _ri)
end

--- _GET_PROJECTILE_NEAR_PED
function Global.GetProjectileNearPed(ped, weaponHash, distance, ownedByPlayer)
	return _in(0x82FDE6A57EE4EE44, ped, _ch(weaponHash), distance, _v, _i, ownedByPlayer, _r)
end
Global.N_0x82fde6a57ee4ee44 = Global.GetProjectileNearPed

--- GET_RADIO_STATION_NAME
-- @return Returns the name of the radio station with the specified index. This serves as the text label.
function Global.GetRadioStationName(stationIndex)
	return _in(0xB28ECA15046CA8B9, stationIndex, _s)
end

--- GET_RAIN_LEVEL
function Global.GetRainLevel()
	return _in(0x96695E368AD855F3, _rf)
end

--- GET_RANDOM_EVENT_FLAG
function Global.GetRandomEventFlag()
	return _in(0xD2D57F1D764117B1, _r)
end

--- GET_RANDOM_FLOAT_IN_RANGE
function Global.GetRandomFloatInRange(startRange, endRange)
	return _in(0x313CE5879CEB6FCD, startRange, endRange, _rf)
end

--- GET_RANDOM_INT_IN_RANGE
function Global.GetRandomIntInRange(startRange, endRange)
	return _in(0xD53343AA4FB7DD28, startRange, endRange, _ri)
end

--- NativeDB Introduced: v1734
function Global.GetRandomIntInRange_2(startRange, endRange)
	return _in(0xF2D49816A804D134, startRange, endRange, _ri)
end

--- Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
-- Ped Types:
-- Any = -1
-- Player = 1
-- Male = 4
-- Female = 5
-- Cop = 6
-- Human = 26
-- SWAT = 27
-- Animal = 28
-- Army = 29
function Global.GetRandomPedAtCoord(x, y, z, xRadius, yRadius, zRadius, pedType)
	return _in(0x876046A8E3A4B71C, x, y, z, xRadius, yRadius, zRadius, pedType, _ri)
end

--- GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE
function Global.GetRandomVehicleBackBumperInSphere(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xB50807EABE20A8DC, p0, p1, p2, p3, p4, p5, p6, _ri)
end

--- A getter for [SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xB3B3359379FE77D3).
-- Same as vehicle density multiplier.
-- @return Returns random vehicle density multiplier value.
function Global.GetRandomVehicleDensityMultiplier()
	return _in(0x7b0d00c5, _rf)
end

--- GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE
function Global.GetRandomVehicleFrontBumperInSphere(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xC5574E0AEB86BA68, p0, p1, p2, p3, p4, p5, p6, _ri)
end

--- Gets a random vehicle in a sphere at the specified position, of the specified radius.
-- x: The X-component of the position of the sphere.
-- y: The Y-component of the position of the sphere.
-- z: The Z-component of the position of the sphere.
-- radius: The radius of the sphere. Max is 9999.9004.
-- modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
-- flags: The bitwise flags that modifies the behaviour of this function.
function Global.GetRandomVehicleInSphere(x, y, z, radius, modelHash, flags)
	return _in(0x386F6CE5BAF6091C, x, y, z, radius, _ch(modelHash), flags, _ri)
end

--- Not present in the retail version! It's just a nullsub.
-- p0 always true (except in one case)
-- p1 a random vehicle hash loaded in memory
-- successIndicator: 0 if success, -1 if failed
function Global.GetRandomVehicleModelInMemory(p0)
	return _in(0x055BF0AC0C34F4FD, p0, _i, _i)
end

--- GET_RANDOM_VEHICLE_NODE
function Global.GetRandomVehicleNode(x, y, z, radius, p4, p5, p6)
	return _in(0x93E0DB8440B73A7D, x, y, z, radius, p4, p5, p6, _v, _i, _r)
end

--- Example:
-- OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
function Global.GetRayfireMapObject(x, y, z, radius, name)
	return _in(0xB48FCED898292E52, x, y, z, radius, _ts(name), _ri)
end
Global.N_0xb48fced898292e52 = Global.GetRayfireMapObject
Global.GetDesObject = Global.GetRayfireMapObject

--- `object`: The des-object handle to get the animation progress from.
-- Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
-- @param object The des-object handle to get the animation progress from.
-- @return A float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
function Global.GetRayfireMapObjectAnimPhase(object)
	return _in(0x260EE4FDBDF4DB01, object, _rf)
end
Global.N_0x260ee4fdbdf4db01 = Global.GetRayfireMapObjectAnimPhase
Global.GetDesObjectAnimProgress = Global.GetRayfireMapObjectAnimPhase

--- Returns all commands that are registered in the command system.
-- The data returned adheres to the following layout:
-- ```
-- [
-- {
-- "name": "cmdlist"
-- },
-- {
-- "name": "command1"
-- }
-- ]
-- ```
-- @return An object containing registered commands.
function Global.GetRegisteredCommands()
	return _in(0xd4bef069, _ro)
end

--- Gets the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- Example:
-- PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);
-- PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);
function Global.GetRelationshipBetweenGroups(group1, group2)
	return _in(0x9E6B70061662AE5C, _ch(group1), _ch(group2), _ri)
end

--- Gets the relationship between two peds. This should be called twice (once for each ped).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- (Credits: Inco)
-- Example:
-- PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);
-- PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);
function Global.GetRelationshipBetweenPeds(ped1, ped2)
	return _in(0xEBA5AD3A0EAF7121, ped1, ped2, _ri)
end

--- This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
-- Old name: _GET_TEXT_SCALE_HEIGHT
function Global.GetRenderedCharacterHeight(size, font)
	return _in(0xDB88A37483346780, size, font, _rf)
end
Global.N_0xdb88a37483346780 = Global.GetRenderedCharacterHeight
Global.GetTextScaleHeight = Global.GetRenderedCharacterHeight

--- GET_RENDERING_CAM
function Global.GetRenderingCam()
	return _in(0x5234F9F10919EABA, _ri)
end

--- GET_REPLAY_STAT_AT_INDEX
function Global.GetReplayStatAtIndex(index)
	return _in(0x8098C8D6597AAE18, index, _ri)
end
Global.N_0x8098c8d6597aae18 = Global.GetReplayStatAtIndex

--- GET_REPLAY_STAT_COUNT
function Global.GetReplayStatCount()
	return _in(0xDC9274A7EF6B2867, _ri)
end
Global.N_0xdc9274a7ef6b2867 = Global.GetReplayStatCount

--- GET_REPLAY_STAT_MISSION_TYPE
function Global.GetReplayStatMissionType()
	return _in(0x2B626A0150E4D449, _ri)
end
Global.N_0x2b626a0150e4d449 = Global.GetReplayStatMissionType

--- GET_REQUESTINGNIGHTVISION
function Global.GetRequestingnightvision()
	return _in(0x35FB78DC42B7BD21, _r)
end
Global.N_0x35fb78dc42b7bd21 = Global.GetRequestingnightvision

--- GET_RESOURCE_BY_FIND_INDEX
-- @param findIndex The index of the resource (starting at 0)
-- @return The resource name as a `string`
function Global.GetResourceByFindIndex(findIndex)
	return _in(0x387246b7, findIndex, _s)
end

--- A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938).
-- @param key The key to fetch
-- @return The floating-point value stored under the specified key, or 0.0 if not found.
function Global.GetResourceKvpFloat(key)
	return _in(0x35bdceea, _ts(key), _rf)
end

--- A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8).
-- @param key The key to fetch
-- @return The integer value stored under the specified key, or 0 if not found.
function Global.GetResourceKvpInt(key)
	return _in(0x557b586a, _ts(key), _ri)
end

--- A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B).
-- @param key The key to fetch
-- @return The string value stored under the specified key, or nil/null if not found.
function Global.GetResourceKvpString(key)
	return _in(0x5240da5a, _ts(key), _s)
end

--- Gets the metadata value at a specified key/index from a resource's manifest.
-- See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
-- @param resourceName The resource name.
-- @param metadataKey The key in the resource manifest.
-- @param index The value index, in a range from \[0..GET_NUM_RESOURCE_METDATA-1].
function Global.GetResourceMetadata(resourceName, metadataKey, index)
	return _in(0x964bab1d, _ts(resourceName), _ts(metadataKey), index, _s)
end

--- Returns the current state of the specified resource.
-- @param resourceName The name of the resource.
-- @return The resource state. One of `"missing", "started", "starting", "stopped", "stopping", "uninitialized" or "unknown"`.
function Global.GetResourceState(resourceName)
	return _in(0x4039b485, _ts(resourceName), _s)
end

--- GET_ROAD_BOUNDARY_USING_HEADING
function Global.GetRoadBoundaryUsingHeading(x, y, z, heading, outPosition)
	return _in(0xA0F8A7517A273C05, x, y, z, heading, _v, _r)
end
Global.N_0xa0f8a7517a273c05 = Global.GetRoadBoundaryUsingHeading
Global.GetRoadSidePointWithHeading = Global.GetRoadBoundaryUsingHeading

--- GET_ROOM_KEY_FOR_GAME_VIEWPORT
function Global.GetRoomKeyForGameViewport()
	return _in(0xA6575914D2A0B450, _ri)
end
Global.N_0xa6575914d2a0b450 = Global.GetRoomKeyForGameViewport
Global.GetRoomKeyFromGameplayCam = Global.GetRoomKeyForGameViewport

--- Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
function Global.GetRoomKeyFromEntity(entity)
	return _in(0x47C2A06D4F5F424B, entity, _ri)
end

--- cpp
-- enum eRopeFlags
-- {
-- DrawShadowEnabled = 2,
-- Breakable = 4,
-- RopeUnwindingFront = 8,
-- RopeWinding = 32
-- }
-- @param rope The rope to get the flags for.
-- @return The rope's flags.
function Global.GetRopeFlags(rope)
	return _in(0xa80ffe99, rope, _ri)
end

--- GET_ROPE_LAST_VERTEX_COORD
function Global.GetRopeLastVertexCoord(ropeId)
	return _in(0x21BB0FBD3E217C2D, ropeId, _rv)
end

--- GET_ROPE_LENGTH_CHANGE_RATE
-- @param rope The rope to get the length change rate for.
-- @return The rope's length change rate.
function Global.GetRopeLengthChangeRate(rope)
	return _in(0x66d70ea3, rope, _rf)
end

--- GET_ROPE_TIME_MULTIPLIER
-- @param rope The rope to get the time multiplier for.
-- @return The rope's time multiplier.
function Global.GetRopeTimeMultiplier(rope)
	return _in(0xf341e6ca, rope, _rf)
end

--- GET_ROPE_UPDATE_ORDER
-- @param rope The rope to get the update order for.
-- @return The rope's update order.
function Global.GetRopeUpdateOrder(rope)
	return _in(0x2ab2e0f6, rope, _ri)
end

--- GET_ROPE_VERTEX_COORD
function Global.GetRopeVertexCoord(ropeId, vertex)
	return _in(0xEA61CA8E80F09E4D, ropeId, vertex, _rv)
end

--- GET_ROPE_VERTEX_COUNT
function Global.GetRopeVertexCount(ropeId)
	return _in(0x3655F544CD30F0B5, ropeId, _ri)
end

--- GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME
function Global.GetRotationOfVehicleRecordingAtTime(recording, time, script)
	return _in(0x2058206FBE79A8AD, recording, time, _ts(script), _rv)
end

--- GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME
function Global.GetRotationOfVehicleRecordingIdAtTime(id, time)
	return _in(0xF0F2103EFAF8CBA7, id, time, _rv)
end
Global.N_0xf0f2103efaf8cba7 = Global.GetRotationOfVehicleRecordingIdAtTime

--- Gets the height of the specified runtime texture.
-- @param tex A handle to the runtime texture.
-- @return The height in pixels.
function Global.GetRuntimeTextureHeight(tex)
	return _in(0x3574aace, tex, _ri)
end

--- Gets the row pitch of the specified runtime texture, for use when creating data for `SET_RUNTIME_TEXTURE_ARGB_DATA`.
-- @param tex A handle to the runtime texture.
-- @return The row pitch in bytes.
function Global.GetRuntimeTexturePitch(tex)
	return _in(0xca0a085f, tex, _ri)
end

--- Gets the width of the specified runtime texture.
-- @param tex A handle to the runtime texture.
-- @return The width in pixels.
function Global.GetRuntimeTextureWidth(tex)
	return _in(0xc9f55558, tex, _ri)
end

--- Flags are:
-- 1 = 1 = B02_IsFootpath
-- 2 = 4 = !B15_InteractionUnk
-- 4 = 0x20 = !B14_IsInterior
-- 8 = 0x40 = !B07_IsWater
-- 16 = 0x200 = B17_IsFlatGround
-- When onGround == true outPosition is a position located on the nearest pavement.
-- When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
-- In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
-- 16 works for me, 0 crashed the script.
function Global.GetSafeCoordForPed(x, y, z, onGround, flags)
	return _in(0xB61C8E878A4199CA, x, y, z, onGround, _v, flags, _r)
end

--- GET_SAFE_PICKUP_COORDS
function Global.GetSafePickupCoords(x, y, z, p3, p4)
	return _in(0x6E16BC2503FF1FF0, x, y, z, p3, p4, _rv)
end

--- Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
function Global.GetSafeZoneSize()
	return _in(0xBAF107B6BB2C97F0, _rf)
end

--- Gets mouse selection data from scaleforms with mouse support. Must be checked every frame.
-- Returns item index if using the COLOUR_SWITCHER\_02 scaleform.
-- Selection types, found in MOUSE_EVENTS.as:
-- MOUSE_DRAG_OUT = 0;
-- MOUSE_DRAG_OVER = 1;
-- MOUSE_DOWN = 2;
-- MOUSE_MOVE = 3;
-- MOUSE_UP = 4;
-- MOUSE_PRESS = 5;
-- MOUSE_RELEASE = 6;
-- MOUSE_RELEASE_OUTSIDE = 7;
-- MOUSE_ROLL_OUT = 8;
-- MOUSE_ROLL_OVER = 9;
-- MOUSE_WHEEL_UP = 10;
-- MOUSE_WHEEL_DOWN = 11;
-- Scaleforms that this works with:
-- *   COLOUR_SWITCHER\_02
-- *   MP_RESULTS_PANEL
-- *   MP_NEXT_JOB_SELECTION
-- *   SC_LEADERBOARD
-- Probably works with other scaleforms, needs more research.
-- In order to use this Native you MUST have controls 239, 240, 237, 238 enabled!
-- This native, due to its erroneous redundancy of the returned boolean value, works differently in C#: shifting the parameters (where `received` becomes `selectionType` and so on making the fourth parameter unused and always 0).
-- @param scaleformHandle Handle of the scaleform
-- @param received Returns a boolean indicating if the data was received successfully (in Lua).
-- @param selectionType The type of MouseEvent specified above.
-- @param context Context of the slot the mouse is hovering on.
-- @param slotIndex Index of the slot the mouse is hovering on.
-- @return *   **retVal** Returns true if MOUSE_EVENT callback from Scaleforms has been called.
function Global.GetScaleformMovieCursorSelection(scaleformHandle)
	return _in(0x632B2940C67F4EA9, scaleformHandle, _i --[[ actually bool ]], _i, _i, _i, _r)
end
Global.N_0x632b2940c67f4ea9 = Global.GetScaleformMovieCursorSelection

--- methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
function Global.GetScaleformMovieMethodReturnValueBool(methodReturn)
	return _in(0xD80A80346A45D761, methodReturn, _r)
end
Global.N_0xd80a80346a45d761 = Global.GetScaleformMovieMethodReturnValueBool

--- Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
function Global.GetScaleformMovieMethodReturnValueInt(method_return)
	return _in(0x2DE7EFA66B906036, method_return, _ri)
end
Global.N_0x2de7efa66b906036 = Global.GetScaleformMovieMethodReturnValueInt
Global.GetScaleformMovieFunctionReturnInt = Global.GetScaleformMovieMethodReturnValueInt

--- Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns a string in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT` returns an int.
function Global.GetScaleformMovieMethodReturnValueString(method_return)
	return _in(0xE1E258829A885245, method_return, _s)
end
Global.SittingTv = Global.GetScaleformMovieMethodReturnValueString
Global.GetScaleformMovieFunctionReturnString = Global.GetScaleformMovieMethodReturnValueString

--- A getter for [SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x7A556143A1C03898).
-- @return Returns scenario ped density multiplier value.
function Global.GetScenarioPedDensityMultiplier()
	return _in(0x77c598b2, _rf)
end

--- Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
-- Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
-- For .NET users...
-- VB:
-- Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
-- Dim x2dp, y2dp As New Native.OutputArgument
-- Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
-- Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
-- End Function
-- C#:
-- Vector2 World3DToScreen2d(Vector3 pos)
-- {
-- var x2dp = new OutputArgument();
-- var y2dp = new OutputArgument();
-- Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
-- return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
-- }
-- //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
-- Used to be called _WORLD3D_TO_SCREEN2D
-- I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
function Global.GetScreenCoordFromWorldCoord(worldX, worldY, worldZ)
	return _in(0x34E82F05DF2974F5, worldX, worldY, worldZ, _f, _f, _r)
end
Global.World3dToScreen2d = Global.GetScreenCoordFromWorldCoord

--- Hardcoded to always return 1280x720. Use [`_GET_ACTIVE_SCREEN_RESOLUTION`](?\_0x873C9F3104101DD3) to retrieve the correct screen resolution.
function Global.GetScreenResolution()
	return _in(0x888D57E407E63624, _i, _i)
end

--- GET_SCREENBLUR_FADE_CURRENT_TIME
function Global.GetScreenblurFadeCurrentTime()
	return _in(0x5CCABFFCA31DDE33, _rf)
end
Global.IsParticleFxDelayedBlink = Global.GetScreenblurFadeCurrentTime

--- Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
-- `SET_SCRIPT_GFX_ALIGN_PARAMS`.
-- @param x The input X coordinate.
-- @param y The input Y coordinate.
-- @param calculatedX A pointer to the calculated X value.
-- @param calculatedY A pointer to the calculated Y value.
function Global.GetScriptGfxPosition(x, y)
	return _in(0x6DD8F5AA635EB4B2, x, y, _f, _f)
end
Global.N_0x6dd8f5aa635eb4b2 = Global.GetScriptGfxPosition

--- Gets the status of a spesifed script-assigned task on the given ped. The return value is always an int between 0-7.
-- You can set taskHash to `SCRIPT_TASK_ANY` to check if any task is active, it will return 1 for active, 3 for no active.
-- `SCRIPT_TASK_INVALID` can be similarly used, it returns 7 if there are any active task, and 3 if there are no active tasks.
-- taskHash list: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
-- Returns:
-- ```
-- 0 = WAITING_TO_START_TASK
-- 1 = PERFORMING_TASK
-- 2 = DORMANT_TASK
-- 3 = VACANT_STAGE
-- 7 = TASK_FINISHED_OR_NOT_FOUND
-- ```
-- @param ped The ped the task is running on
-- @param taskHash The hash of the task
-- @return The status of the script-assigned task.
function Global.GetScriptTaskStatus(ped, taskHash)
	return _in(0x77F1BEB8863288D5, ped, _ch(taskHash), _ri)
end

--- GET_SCRIPTED_COVER_POINT_COORDS
function Global.GetScriptedCoverPointCoords(coverpoint)
	return _in(0x594A1028FC2A3E85, coverpoint, _rv)
end

--- GET_SEAT_PED_IS_TRYING_TO_ENTER
function Global.GetSeatPedIsTryingToEnter(ped)
	return _in(0x6F4C85ACD641BCD2, ped, _ri)
end

--- GET_SELECTED_PED_WEAPON
function Global.GetSelectedPedWeapon(ped)
	return _in(0x0A6DB4965674D243, ped, _ri)
end

--- returned values:
-- 0 to 7 = task that's currently in progress, 0 meaning the first one.
-- -1 no task sequence in progress.
function Global.GetSequenceProgress(ped)
	return _in(0x00A9010CFE1E3533, ped, _ri)
end

--- Returns the result of a shape test.
-- When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
-- Unless the return value is 2, the other return values are undefined.
-- @param shapeTestHandle A shape test handle.
-- @param hit Whether or not the shape test hit any collisions.
-- @param endCoords The resulting coordinates where the shape test hit a collision.
-- @param surfaceNormal The surface normal of the hit position.
-- @param entityHit Any dynamic entity hit by the shape test.
-- @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
function Global.GetShapeTestResult(shapeTestHandle)
	return _in(0x3D87450E15D98694, shapeTestHandle, _i --[[ actually bool ]], _v, _v, _i, _ri)
end
Global.GetRaycastResult = Global.GetShapeTestResult

--- Returns the result of a shape test, also returning the material of any touched surface.
-- When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
-- Unless the return value is 2, the other return values are undefined.
-- @param shapeTestHandle A shape test handle.
-- @param hit Whether or not the shape test hit any collisions.
-- @param endCoords The resulting coordinates where the shape test hit a collision.
-- @param surfaceNormal The surface normal of the hit position.
-- @param materialHash hash of the hit material or surface type, see materialFX.dat
-- @param entityHit Any dynamic entity hit by the shape test.
-- @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
function Global.GetShapeTestResultIncludingMaterial(shapeTestHandle)
	return _in(0x65287525D951F6BE, shapeTestHandle, _i --[[ actually bool ]], _v, _v, _i, _i, _ri)
end
Global.N_0x65287525d951f6be = Global.GetShapeTestResultIncludingMaterial
Global.GetShapeTestResultEx = Global.GetShapeTestResultIncludingMaterial

--- Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
function Global.GetShopPedApparelForcedComponentCount(componentHash)
	return _in(0xC6B9DB42C04DD8C3, _ch(componentHash), _ri)
end
Global.GetNumForcedComponents = Global.GetShopPedApparelForcedComponentCount

--- Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
function Global.GetShopPedApparelForcedPropCount(componentHash)
	return _in(0x017568A8182D98A6, _ch(componentHash), _ri)
end
Global.N_0x017568a8182d98a6 = Global.GetShopPedApparelForcedPropCount

--- GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT
function Global.GetShopPedApparelVariantComponentCount(componentHash)
	return _in(0xC17AD0E5752BECDA, _ch(componentHash), _ri)
end
Global.N_0xc17ad0e5752becda = Global.GetShopPedApparelVariantComponentCount

--- _GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT
-- @param propHash Ped helmet prop hash
-- @return This native returns 1 when the player helmet has a visor (there is another prop index for the same helmet with closed/opened visor variant) that can be toggled. 0 if there's no alternative version with a visor for this helmet prop.
function Global.GetShopPedApparelVariantPropCount(propHash)
	return _in(0xD40AAC51E8E4C663, _ch(propHash), _ri)
end
Global.N_0xd40aac51e8e4c663 = Global.GetShopPedApparelVariantPropCount

--- More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
function Global.GetShopPedComponent(componentHash, outComponent)
	return _in(0x74C0E2A57EC66760, _ch(componentHash), _ii(outComponent) --[[ may be optional ]])
end

--- GET_SHOP_PED_OUTFIT
function Global.GetShopPedOutfit(p0, p1)
	return _in(0xB7952076E444979D, p0, _ii(p1) --[[ may be optional ]])
end

--- GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT
-- @param outfit A structure, see [`GET_SHOP_PED_QUERY_OUTFIT`](#\_0x6D793F03A631FE56).
-- @param slot outfit slot.
function Global.GetShopPedOutfitComponentVariant(outfit, slot, outComponentVariant)
	return _in(0x19F2A026EDF0013F, _ch(outfit), slot, _ii(outComponentVariant) --[[ may be optional ]], _r)
end
Global.GetPropFromOutfit = Global.GetShopPedOutfitComponentVariant

--- GET_SHOP_PED_OUTFIT_LOCATE
function Global.GetShopPedOutfitLocate(p0)
	return _in(0x073CA26B079F956E, p0, _ri)
end
Global.N_0x073ca26b079f956e = Global.GetShopPedOutfitLocate

--- GET_SHOP_PED_OUTFIT_PROP_VARIANT
function Global.GetShopPedOutfitPropVariant(outfitHash, variantIndex, outPropVariant)
	return _in(0xA9F9C2E0FDE11CBB, _ch(outfitHash), variantIndex, _ii(outPropVariant) --[[ may be optional ]], _r)
end
Global.N_0xa9f9c2e0fde11cbb = Global.GetShopPedOutfitPropVariant

--- GET_SHOP_PED_PROP
function Global.GetShopPedProp(componentHash, outProp)
	return _in(0x5D5CAFF661DDF6FC, _ch(componentHash), _ii(outProp) --[[ may be optional ]])
end
Global.N_0x5d5caff661ddf6fc = Global.GetShopPedProp

--- GET_SHOP_PED_QUERY_COMPONENT
function Global.GetShopPedQueryComponent(componentId, outComponent)
	return _in(0x249E310B2D920699, componentId, _ii(outComponent) --[[ may be optional ]])
end

--- struct Outfit_s
-- {
-- int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;
-- int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,
-- armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;
-- };
function Global.GetShopPedQueryOutfit(outfitIndex, outfit)
	return _in(0x6D793F03A631FE56, outfitIndex, _ii(outfit) --[[ may be optional ]])
end

--- GET_SHOP_PED_QUERY_PROP
function Global.GetShopPedQueryProp(componentId, outProp)
	return _in(0xDE44A00999B2837D, componentId, _ii(outProp) --[[ may be optional ]])
end

--- GET_SIZE_OF_SAVE_DATA
function Global.GetSizeOfSaveData(p0)
	return _in(0xA09F896CE912481F, p0, _ri)
end
Global.N_0xa09f896ce912481f = Global.GetSizeOfSaveData

--- GET_SNOW_LEVEL
function Global.GetSnowLevel()
	return _in(0xC5868A966E5BE3AE, _rf)
end

--- If a playback function has a soundId field but the sound doesn't need to be altered after triggering then pass a value of -1 for fire-and-forget playback, rather than getting a soundId.
-- SoundId's can be reused, without needing to release them and grab a new one.
-- If a sound's finished playing, you can reuse its SoundId to kick off another one.
-- If the sound's not finished playing, it'll be stopped first (fading out or whatever is set up in RAVE by the sound designer), and the new one kicked off; usually it is safer to just get a new SoundId.
-- SoundId's are not automatically cleaned up, you must use [RELEASE_SOUND_ID](#\_0x353FC880830B88FA) after you've finished using them to allow the engine to recycle the sound id.
-- @return Returns a sound id which can be used to control the sound after its has started playing.
function Global.GetSoundId()
	return _in(0x430386FE9BF80B45, _ri)
end

--- Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#\_0x2DE3F0A134FFBC0D).
-- @param netId Network ID of sound.
-- @return Integer representing a sound id, -1 on failure.
function Global.GetSoundIdFromNetworkId(netId)
	return _in(0x75262FD12D0A1C84, netId, _ri)
end
Global.N_0x75262fd12d0a1c84 = Global.GetSoundIdFromNetworkId

--- GET_STANDARD_BLIP_ENUM_ID
function Global.GetStandardBlipEnumId()
	return _in(0x4A9923385BDB9DAD, _ri)
end
Global.N_0x4a9923385bdb9dad = Global.GetStandardBlipEnumId
Global.GetLevelBlipSprite = Global.GetStandardBlipEnumId

--- Returns the value of a state bag key.
-- @return Value.
function Global.GetStateBagValue(bagName, key)
	return _in(0x637f4c75, _ts(bagName), _ts(key), _ro)
end

--- locked is 0 if no door is found
-- locked is 0 if door is unlocked
-- locked is 1 if door is found and unlocked.
-- -------------
-- the locked bool is either 0(unlocked)(false) or 1(locked)(true)
function Global.GetStateOfClosestDoorOfType(type, x, y, z)
	return _in(0xEDC1A5B84AEF33FF, _ch(type), x, y, z, _i --[[ actually bool ]], _f)
end

--- See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states
-- Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
function Global.GetStateOfRayfireMapObject(object)
	return _in(0x899BA936634A322E, object, _ri)
end
Global.N_0x899ba936634a322e = Global.GetStateOfRayfireMapObject
Global.GetDesObjectState = Global.GetStateOfRayfireMapObject

--- GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
function Global.GetStatusOfLoadMissionCreatorPhoto(p0)
	return _in(0x1670F8D05056F257, _ts(p0), _ri)
end
Global.N_0x1670f8d05056f257 = Global.GetStatusOfLoadMissionCreatorPhoto

--- GET_STATUS_OF_MISSION_REPEAT_SAVE
function Global.GetStatusOfMissionRepeatSave()
	return _in(0x2B5E102E4A42F2BF, _ri)
end
Global.N_0x2b5e102e4a42f2bf = Global.GetStatusOfMissionRepeatSave

--- GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO
function Global.GetStatusOfSaveHighQualityPhoto()
	return _in(0x0C0C4E81E1AC60A0, _ri)
end
Global.N_0x0c0c4e81e1ac60a0 = Global.GetStatusOfSaveHighQualityPhoto

--- Returns status of gallery photo fetch, which was requested by [`QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS`](#\_0x2A893980E96B659A).
-- @return 0 - Succeeded, 1 - In progress, 2 - Failed
function Global.GetStatusOfSortedListOperation(scanForSaving)
	return _in(0xF5BED327CEA362B1, scanForSaving, _ri)
end
Global.N_0xf5bed327cea362b1 = Global.GetStatusOfSortedListOperation

--- GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO
function Global.GetStatusOfTakeHighQualityPhoto()
	return _in(0x0D6CA79EEEBD8CA3, _ri)
end
Global.N_0x0d6ca79eeebd8ca3 = Global.GetStatusOfTakeHighQualityPhoto

--- GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO
function Global.GetStatusOfTakeMissionCreatorPhoto()
	return _in(0x90A78ECAA4E78453, _ri)
end
Global.N_0x90a78ecaa4e78453 = Global.GetStatusOfTakeMissionCreatorPhoto

--- 0 = succeeded
-- 1 = pending
-- 2 = failed
function Global.GetStatusOfTextureDownload(p0)
	return _in(0x8BD6C6DEA20E82C6, p0, _ri)
end
Global.N_0x8bd6c6dea20e82c6 = Global.GetStatusOfTextureDownload
Global.GetStatusOfTextureDownload = Global.GetStatusOfTextureDownload

--- GET_STREAM_PLAY_TIME
-- @return Returns the currently playing stream's play time
function Global.GetStreamPlayTime()
	return _in(0x4E72BBDBCA58A3DB, _ri)
end

--- Determines the name of the street which is the closest to the given coordinates.
-- x,y,z - the coordinates of the street
-- streetName - returns a hash to the name of the street the coords are on
-- crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
-- Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.
function Global.GetStreetNameAtCoord(x, y, z)
	return _in(0x2EB41072B4C1E4C0, x, y, z, _i, _i)
end

--- Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see [`GET_STREET_NAME_AT_COORD`](#\_0x2EB41072B4C1E4C0).
function Global.GetStreetNameFromHashKey(hash)
	return _in(0xD0EF8A959B8A4CB9, _ch(hash), _s)
end

--- Determines if the submarine is operating below its designated crush depth.
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param submarine The submarine vehicle to be evaluated for being under its crush depth threshold.
-- @return Returns `true` if the submarine is below its designated crush depth, `false` otherwise.
function Global.GetSubmarineIsUnderDesignDepth(submarine)
	return _in(0x3E71D0B300B7AA79, submarine, _r)
end
Global.GetSubmarineIsBelowFirstCrushDepth = Global.GetSubmarineIsUnderDesignDepth

--- Checks if a Submarine has any air leaks, when there is more than 4 the player will drown.
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param submarine The submarine vehicle to check for air leaks.
-- @return Returns the number of air leaks on the submarine.
function Global.GetSubmarineNumberOfAirLeaks(submarine)
	return _in(0x093D6DDCA5B8FBAE, submarine, _ri)
end
Global.GetSubmarineCrushDepthWarningState = Global.GetSubmarineNumberOfAirLeaks

--- GET_SYNCHRONIZED_SCENE_PHASE
function Global.GetSynchronizedScenePhase(sceneID)
	return _in(0xE4A310B1D7FA73CC, sceneID, _rf)
end

--- GET_SYNCHRONIZED_SCENE_RATE
function Global.GetSynchronizedSceneRate(sceneID)
	return _in(0xD80932D577274D40, sceneID, _rf)
end

--- GET_TASK_MOVE_NETWORK_EVENT
function Global.GetTaskMoveNetworkEvent(ped, eventName)
	return _in(0xB4F47213DF45A64C, ped, _ts(eventName), _r)
end
Global.N_0xb4f47213df45a64c = Global.GetTaskMoveNetworkEvent

--- GET_TASK_MOVE_NETWORK_SIGNAL_BOOL
function Global.GetTaskMoveNetworkSignalBool(ped, signalName)
	return _in(0xA7FFBA498E4AAF67, ped, _ts(signalName), _r)
end
Global.N_0xa7ffba498e4aaf67 = Global.GetTaskMoveNetworkSignalBool

--- NativeDB Introduced: v1493
function Global.GetTaskMoveNetworkSignalFloat(ped, signalName)
	return _in(0x44AB0B3AFECCE242, ped, _ts(signalName), _rf)
end

--- GET_TASK_MOVE_NETWORK_STATE
function Global.GetTaskMoveNetworkState(ped)
	return _in(0x717E4D1F2048376D, ped, _s)
end
Global.N_0x717e4d1f2048376d = Global.GetTaskMoveNetworkState

--- Character types:
-- ```
-- 0 = Michael,
-- 1 = Franklin,
-- 2 = Trevor,
-- 3 = MPMale,
-- 4 = MPFemale
-- ```
-- ```csharp
-- enum TattooZoneData
-- {
-- ZONE_TORSO = 0,
-- ZONE_HEAD = 1,
-- ZONE_LEFT_ARM = 2,
-- ZONE_RIGHT_ARM = 3,
-- ZONE_LEFT_LEG = 4,
-- ZONE_RIGHT_LEG = 5,
-- ZONE_UNKNOWN = 6,
-- ZONE_NONE = 7,
-- };
-- struct outComponent
-- {
-- // these vars are suffixed with 4 bytes of padding each.
-- uint unk;
-- int unk2;
-- uint tattooCollectionHash;
-- uint tattooNameHash;
-- int unk3;
-- TattooZoneData zoneId;
-- uint unk4;
-- uint unk5;
-- // maybe more, not sure exactly, decompiled scripts are very vague around this part.
-- }
-- ```
-- @param characterType Character types 0 = Michael, 1 = Franklin, 2 = Trevor, 3 = MPMale, 4 = MPFemale.
-- @param decorationIndex Tattoo index, value between 0 and GetNumDecorations(characterType).
-- @param outComponent The referenced struct.
-- @return A bool indicating that the tattoo data could be fetched(?)
function Global.GetTattooShopDlcItemData(characterType, decorationIndex, outComponent)
	return _in(0xFF56381874F82086, characterType, decorationIndex, _ii(outComponent) --[[ may be optional ]], _r)
end
Global.N_0xff56381874f82086 = Global.GetTattooShopDlcItemData
Global.GetTattooCollectionData = Global.GetTattooShopDlcItemData

--- NativeDB Introduced: v2189
-- @param character AKA eFaction in shop_tattoo.meta. Which character this tattoo belongs to. See [GET_NUM_TATTOO_SHOP_DLC_ITEMS](#\_0x278F76C3B0A8F109).
-- @param collection Which collection this tattoo belongs to. If you specify `-1`, it will check all collections.
-- @param preset Which preset this tattoo belongs to.
-- @return Returns the actual index (Not ID from `shop_tattoo.meta`) from `0` to [GET_NUM_TATTOO_SHOP_DLC_ITEMS](#\_0x278F76C3B0A8F109), or `-1` (if it failed to find the tattoo) of a tattoo.
function Global.GetTattooShopDlcItemIndex(character, collection, preset)
	return _in(0x10144267DD22866C, character, collection, preset, _ri)
end
Global.N_0x10144267dd22866c = Global.GetTattooShopDlcItemIndex

--- GET_TENNIS_SWING_ANIM_COMPLETE
function Global.GetTennisSwingAnimComplete(ped)
	return _in(0x17DF68D720AA77F8, ped, _r)
end
Global.N_0x17df68d720aa77f8 = Global.GetTennisSwingAnimComplete

--- Returns a substring of a specified length starting at a specified position.
-- Example:
-- // Get "STRING" text from "MY_STRING"
-- subStr = HUD::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);
function Global.GetTextSubstring(text, position, length)
	return _in(0x169BD9382084C8C0, _ts(text), position, length, _s)
end

--- Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
-- NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
-- Example:
-- // Condensed example of how Rockstar uses this function
-- strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
-- subStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
-- --
-- "fm_race_creator.ysc", line 85115:
-- // parameters modified for clarity
-- BOOL sub_8e5aa(char *text, int length) {
-- for (i = 0; i <= (length - 2); i += 1) {
-- if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {
-- return FALSE;
-- }
-- }
-- return TRUE;
-- }
function Global.GetTextSubstringSafe(text, position, length, maxLength)
	return _in(0xB2798643312205C5, _ts(text), position, length, maxLength, _s)
end

--- Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
-- Example:
-- // Get "STRING" text from "MY_STRING"
-- subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);
-- // Overflows are possibly replaced with underscores (needs verification)
-- subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?
function Global.GetTextSubstringSlice(text, startPosition, endPosition)
	return _in(0xCE94AEBA5D82908A, _ts(text), startPosition, endPosition, _s)
end

--- Returns the texture resolution of the passed texture dict+name.
-- Note: Most texture resolutions are doubled compared to the console version of the game.
function Global.GetTextureResolution(textureDict, textureName)
	return _in(0x35736EE65BD00C11, _ts(textureDict), _ts(textureName), _rv)
end

--- GET_THIS_SCRIPT_NAME
function Global.GetThisScriptName()
	return _in(0x442E0A7EDE4A738A, _s)
end

--- GET_TIME_AS_STRING
function Global.GetTimeAsString(time)
	return _in(0x9E23B1777A927DAD, time, _s)
end
Global.FormatTime = Global.GetTimeAsString

--- Subtracts the second argument from the first.
function Global.GetTimeDifference(timeA, timeB)
	return _in(0xA2C6FC031D46FFF0, timeA, timeB, _ri)
end

--- GET_TIME_*
function Global.GetTimeOfLastPedWeaponDamage(ped, weaponHash)
	return _in(0x36B77BB84687C318, ped, _ch(weaponHash), _ri)
end
Global.N_0x36b77bb84687c318 = Global.GetTimeOfLastPedWeaponDamage

--- Adds the first argument to the second.
function Global.GetTimeOffset(timeA, timeB)
	return _in(0x017008CCDAD48503, timeA, timeB, _ri)
end

--- Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
function Global.GetTimePositionInRecording(vehicle)
	return _in(0x5746F3A7AB7FE544, vehicle, _rf)
end

--- Returns the time since the character was arrested in (ms) milliseconds.
-- example
-- var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
-- UI.DrawSubtitle(time.ToString());
-- if player has not been arrested, the int returned will be -1.
function Global.GetTimeSinceLastArrest()
	return _in(0x5063F92F07C2A316, _ri)
end

--- Returns the time since the character died in (ms) milliseconds.
-- example
-- var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
-- UI.DrawSubtitle(time.ToString());
-- if player has not died, the int returned will be -1.
function Global.GetTimeSinceLastDeath()
	return _in(0xC7034807558DDFCA, _ri)
end

--- The number of milliseconds since last padIndex registered pressed
function Global.GetTimeSinceLastInput(padIndex)
	return _in(0xD7D22F5592AED8BA, padIndex, _ri)
end
Global.N_0xd7d22f5592aed8ba = Global.GetTimeSinceLastInput

--- GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC
function Global.GetTimeSincePlayerDroveAgainstTraffic(player)
	return _in(0xDB89591E290D9182, player, _ri)
end

--- GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT
function Global.GetTimeSincePlayerDroveOnPavement(player)
	return _in(0xD559D2BE9E37853B, player, _ri)
end

--- GET_TIME_SINCE_PLAYER_HIT_PED
function Global.GetTimeSincePlayerHitPed(player)
	return _in(0xE36A25322DC35F42, player, _ri)
end

--- GET_TIME_SINCE_PLAYER_HIT_VEHICLE
function Global.GetTimeSincePlayerHitVehicle(player)
	return _in(0x5D35ECF3A81A0EE0, player, _ri)
end

--- GET_TIMECYCLE_MODIFIER_COUNT
-- @return Returns the amount of timecycle modifiers loaded.
function Global.GetTimecycleModifierCount()
	return _in(0xfe2a1d4d, _ri)
end

--- Only use for this in the PC scripts is:
-- if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
-- For a full list, see here: pastebin.com/cnk7FTF2
function Global.GetTimecycleModifierIndex()
	return _in(0xFDF3D97C674AFB66, _ri)
end

--- GET_TIMECYCLE_MODIFIER_INDEX_BY_NAME
-- @param modifierName The timecycle modifier name.
-- @return The timecycle modifier index.
function Global.GetTimecycleModifierIndexByName(modifierName)
	return _in(0x5f4cd0e2, _ts(modifierName), _ri)
end

--- GET_TIMECYCLE_MODIFIER_NAME_BY_INDEX
-- @param modifierIndex The timecycle modifier index.
-- @return The timecycle modifier name.
function Global.GetTimecycleModifierNameByIndex(modifierIndex)
	return _in(0x28cb8608, modifierIndex, _s)
end

--- A getter for [SET_TIMECYCLE_MODIFIER_STRENGTH](#\_0x82E7FFCD5B2326B3).
-- @return Returns current timecycle modifier strength.
function Global.GetTimecycleModifierStrength()
	return _in(0xbe54124a, _rf)
end

--- GET_TIMECYCLE_MODIFIER_VAR
-- @param modifierName The name of timecycle modifier.
-- @param varName The name of timecycle variable.
-- @return Whether or not variable by name was found on the specified timecycle modifier.
function Global.GetTimecycleModifierVar(modifierName, varName)
	return _in(0xa7109e12, _ts(modifierName), _ts(varName), _f, _f, _r)
end

--- GET_TIMECYCLE_MODIFIER_VAR_COUNT
-- @param modifierName The timecycle modifier name.
-- @return The amount of variables used on a specified timecycle modifier.
function Global.GetTimecycleModifierVarCount(modifierName)
	return _in(0x60fb60fe, _ts(modifierName), _ri)
end

--- GET_TIMECYCLE_MODIFIER_VAR_NAME_BY_INDEX
-- @param modifierName The name of timecycle modifier.
-- @param modifierVarIndex The index of a variable on the specified timecycle modifier.
-- @return The name of a variable by index.
function Global.GetTimecycleModifierVarNameByIndex(modifierName, modifierVarIndex)
	return _in(0xe874ab1d, _ts(modifierName), modifierVarIndex, _s)
end

--- GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX
function Global.GetTimecycleTransitionModifierIndex()
	return _in(0x459FD2C8D0AB78BC, _ri)
end
Global.N_0x459fd2c8d0ab78bc = Global.GetTimecycleTransitionModifierIndex

--- Returns the amount of variables available to be applied on timecycle modifiers.
-- @return The amount of available variables for timecycle modifiers.
function Global.GetTimecycleVarCount()
	return _in(0x838b34d8, _ri)
end

--- See [GET_TIMECYCLE_VAR_COUNT](#\_0x838B34D8).
-- @param varIndex The index of variable.
-- @return The default value of a timecycle variable.
function Global.GetTimecycleVarDefaultValueByIndex(varIndex)
	return _in(0x3b90238, varIndex, _rf)
end

--- See [GET_TIMECYCLE_VAR_COUNT](#\_0x838B34D8).
-- @param varIndex The index of variable.
-- @return The name of a timecycle variable.
function Global.GetTimecycleVarNameByIndex(varIndex)
	return _in(0xc6c55aaf, varIndex, _s)
end

--- GET_TOGGLE_PAUSED_RENDERPHASES_STATUS
function Global.GetTogglePausedRenderphasesStatus()
	return _in(0xEB3DAC2C86001E5E, _r)
end
Global.N_0xeb3dac2c86001e5e = Global.GetTogglePausedRenderphasesStatus

--- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING
function Global.GetTotalDurationOfVehicleRecording(recording, script)
	return _in(0x0E48D1C262390950, recording, _ts(script), _rf)
end

--- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID
function Global.GetTotalDurationOfVehicleRecordingId(id)
	return _in(0x102D125411A7B6E6, id, _rf)
end

--- GET_TOTAL_SUCCESSFUL_STUNT_JUMPS
function Global.GetTotalSuccessfulStuntJumps()
	return _in(0x6856EC3D35C81EA4, _ri)
end
Global.N_0x6856ec3d35c81ea4 = Global.GetTotalSuccessfulStuntJumps

--- Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
function Global.GetTrainCarriage(train, trailerNumber)
	return _in(0x08AAFD0814722BC3, train, trailerNumber, _ri)
end

--- GET_TRAIN_CURRENT_TRACK_NODE
-- @param train The target train.
-- @return Train's current track node index.
function Global.GetTrainCurrentTrackNode(train)
	return _in(0xe015e854, train, _ri)
end

--- Gets the door count for the specified train.
-- @param train The train to obtain the door count for.
-- @return The door count.
function Global.GetTrainDoorCount(train)
	return _in(0x99974721, train, _ri)
end

--- Gets the ratio that a door is open for on a train.
-- @param train The train to obtain the door ratio for.
-- @param doorIndex Zero-based door index.
-- @return A value between 0.0 (fully closed) and 1.0 (fully open).
function Global.GetTrainDoorOpenRatio(train, doorIndex)
	return _in(0x40b16551, train, doorIndex, _rf)
end

--- GET_TV_CHANNEL
function Global.GetTvChannel()
	return _in(0xFC1E275A90D39995, _ri)
end

--- GET_TV_VOLUME
function Global.GetTvVolume()
	return _in(0x2170813D3DD8661B, _rf)
end

--- NativeDB Introduced: v1868
function Global.GetTyreHealth(vehicle, wheelIndex)
	return _in(0x55EAB010FAEE9380, vehicle, wheelIndex, _rf)
end

--- NativeDB Introduced: v2060
function Global.GetTyreWearMultiplier(vehicle, wheelIndex)
	return _in(0x6E387895952F4F71, vehicle, wheelIndex, _rf)
end

--- 0.0 = no memory used
-- 1.0 = all memory used
-- Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
-- GET_*
function Global.GetUsedCreatorModelMemoryPercentage()
	return _in(0x3D3D8B3BE5A83D35, _rf)
end
Global.N_0x3d3d8b3be5a83d35 = Global.GetUsedCreatorModelMemoryPercentage

--- GET_USINGNIGHTVISION
function Global.GetUsingnightvision()
	return _in(0x2202A3F42C8E5F79, _r)
end
Global.IsNightvisionInactive = Global.GetUsingnightvision
Global.IsNightvisionActive = Global.GetUsingnightvision

--- GET_USINGSEETHROUGH
function Global.GetUsingseethrough()
	return _in(0x44B80ABAB9D80BD3, _r)
end
Global.IsSeethroughActive = Global.GetUsingseethrough

--- Gets current UTC time
function Global.GetUtcTime()
	return _in(0x8117E09A19EEF4D3, _i, _i, _i, _i, _i, _i)
end
Global.GetUtcTime = Global.GetUtcTime

--- GET_VARIANT_COMPONENT
function Global.GetVariantComponent(componentHash, variantComponentIndex)
	return _in(0x6E11F282F11863B6, _ch(componentHash), variantComponentIndex, _i, _i, _i)
end

--- _GET_VARIANT_PROP
function Global.GetVariantProp(componentHash, variantPropIndex)
	return _in(0xD81B7F27BC773E66, _ch(componentHash), variantPropIndex, _i, _i, _i)
end
Global.N_0xd81b7f27bc773e66 = Global.GetVariantProp

--- GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE
-- @param textLabel all the text labels for filenames in `AmericanDialogueFiles.txt` appear to end with the letter 'A', it is the script's responsibility to add this 'A' before calling `GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE`.
-- @return Returns the variation chosen for a given script speech line, or `0` if it hasn't been chosen yet.Returns `-1` if there is no conversation active or if the active conversation doesn't contain this line or if the text label can't be found in the currently loaded text blocks
function Global.GetVariationChosenForScriptedLine(textLabel)
	return _in(0xAA19F5572C38B564, _ts(textLabel), _ri)
end
Global.N_0xaa19f5572c38b564 = Global.GetVariationChosenForScriptedLine

--- Retrieves a static value representing the maximum drive force of specific a vehicle, including any vehicle mods. This value does not change dynamically during gameplay. This value provides an approximation and should be considered alongside other performance metrics like top speed for a more comprehensive understanding of the vehicle's capabilities.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param vehicle The vehicle for which to obtain the acceleration.
-- @return Returns the acceleration value of the specified vehicle as a float number.
function Global.GetVehicleAcceleration(vehicle)
	return _in(0x5DD35C8D074E57AE, vehicle, _rf)
end

--- GET_VEHICLE_ALARM_TIME_LEFT
function Global.GetVehicleAlarmTimeLeft(vehicle)
	return _in(0xc62aac98, vehicle, _ri)
end

--- Returns attached vehicle (Vehicle in parameter must be cargobob)
function Global.GetVehicleAttachedToCargobob(cargobob)
	return _in(0x873B82D42AC2B9E5, cargobob, _ri)
end

--- Seems related to vehicle health, like the one in IV.
-- Max 1000, min 0.
-- Vehicle does not necessarily explode or become undrivable at 0.
function Global.GetVehicleBodyHealth(vehicle)
	return _in(0xF271147EB7B40F12, vehicle, _rf)
end

--- Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
-- In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).
-- Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
-- @param aircraft The vehicle to get the amount of bombs from.
-- @return An int indicating the amount of bombs remaining on that plane.
function Global.GetVehicleBombCount(aircraft)
	return _in(0xEA12BD130D7569A1, aircraft, _ri)
end
Global.N_0xea12bd130d7569a1 = Global.GetVehicleBombCount
Global.GetAircraftBombCount = Global.GetVehicleBombCount

--- _GET_VEHICLE_CAN_ACTIVATE_PARACHUTE
function Global.GetVehicleCanActivateParachute(vehicle)
	return _in(0xA916396DF4154EE3, vehicle, _r)
end
Global.CanVehicleParachuteBeActivated = Global.GetVehicleCanActivateParachute

--- GET_VEHICLE_CAUSE_OF_DESTRUCTION
-- @param vehicle The vehicle to get the cause of destruction of.
-- @return A hash representing the destruction cause. These can be weapon hashes.
function Global.GetVehicleCauseOfDestruction(vehicle)
	return _in(0xE495D1EF4C91FD20, vehicle, _ri)
end

--- A getter for [SET_VEHICLE_CHEAT_POWER_INCREASE](#\_0xB59E4BD37AE292DB).
-- @param vehicle The target vehicle.
-- @return Returns vehicle's cheat power increase modifier value.
function Global.GetVehicleCheatPowerIncrease(vehicle)
	return _in(0xc3c93f28, vehicle, _rf)
end

--- Returns an int
-- Vehicle Classes:
-- 0: Compacts
-- 1: Sedans
-- 2: SUVs
-- 3: Coupes
-- 4: Muscle
-- 5: Sports Classics
-- 6: Sports
-- 7: Super
-- 8: Motorcycles
-- 9: Off-road
-- 10: Industrial
-- 11: Utility
-- 12: Vans
-- 13: Cycles
-- 14: Boats
-- 15: Helicopters
-- 16: Planes
-- 17: Service
-- 18: Emergency
-- 19: Military
-- 20: Commercial
-- 21: Trains
-- 22: Open Wheel
-- char buffer[128];
-- std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));
-- char* className = UI::_GET_LABEL_TEXT(buffer);
function Global.GetVehicleClass(vehicle)
	return _in(0x29439776AAA00A62, vehicle, _ri)
end

--- GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED
function Global.GetVehicleClassEstimatedMaxSpeed(vehicleClass)
	return _in(0x00C09F246ABEDD82, vehicleClass, _rf)
end
Global.N_0x00c09f246abedd82 = Global.GetVehicleClassEstimatedMaxSpeed
Global.GetVehicleClassMaxSpeed = Global.GetVehicleClassEstimatedMaxSpeed

--- For a full enum, see here : pastebin.com/i2GGAjY0
-- char buffer[128];
-- std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
-- const char* className = HUD::_GET_LABEL_TEXT(buffer);
function Global.GetVehicleClassFromName(modelHash)
	return _in(0xDEDF1C8BD47C2200, _ch(modelHash), _ri)
end

--- GET_VEHICLE_CLASS_MAX_ACCELERATION
function Global.GetVehicleClassMaxAcceleration(vehicleClass)
	return _in(0x2F83E7E45D9EA7AE, vehicleClass, _rf)
end

--- GET_VEHICLE_CLASS_MAX_AGILITY
function Global.GetVehicleClassMaxAgility(vehicleClass)
	return _in(0x4F930AD022D6DE3B, vehicleClass, _rf)
end

--- GET_VEHICLE_CLASS_MAX_BRAKING
function Global.GetVehicleClassMaxBraking(vehicleClass)
	return _in(0x4BF54C16EC8FEC03, vehicleClass, _rf)
end

--- GET_VEHICLE_CLASS_MAX_TRACTION
function Global.GetVehicleClassMaxTraction(vehicleClass)
	return _in(0xDBC86D85C5059461, vehicleClass, _rf)
end

--- GET_VEHICLE_CLUTCH
function Global.GetVehicleClutch(vehicle)
	return _in(0x1dad4583, vehicle, _rf)
end

--- See [`SET_VEHICLE_CUSTOM_PRIMARY_COLOUR`](#\_0x7141766F91D15BEA) and [`SET_VEHICLE_CUSTOM_SECONDARY_COLOUR`](#\_0x36CED73BFED89754).
-- @param vehicle The target vehicle
function Global.GetVehicleColor(vehicle)
	return _in(0xF3CC740D36221548, vehicle, _i, _i, _i)
end

--- GET_VEHICLE_COLOUR_COMBINATION
function Global.GetVehicleColourCombination(vehicle)
	return _in(0x6A842D197F845D56, vehicle, _ri)
end

--- GET_VEHICLE_COLOURS
function Global.GetVehicleColours(vehicle)
	return _in(0xA19435F193E081AC, vehicle, _i, _i)
end

--- Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
-- Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
-- @param aircraft The vehicle to get the amount of countermeasures from.
-- @return An int indicating the amount of countermeasures remaining on that plane.
function Global.GetVehicleCountermeasureCount(aircraft)
	return _in(0xF846AA63DF56B804, aircraft, _ri)
end
Global.N_0xf846aa63df56b804 = Global.GetVehicleCountermeasureCount
Global.GetAircraftCountermeasureCount = Global.GetVehicleCountermeasureCount

--- GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE
function Global.GetVehicleCrewEmblemRequestState(vehicle, p1)
	return _in(0xFE26117A5841B2FF, vehicle, p1, _ri)
end
Global.N_0xfe26117a5841b2ff = Global.GetVehicleCrewEmblemRequestState

--- GET_VEHICLE_CURRENT_GEAR
function Global.GetVehicleCurrentGear(vehicle)
	return _in(0xb4f4e566, vehicle, _ri)
end

--- GET_VEHICLE_CURRENT_RPM
function Global.GetVehicleCurrentRpm(vehicle)
	return _in(0xe7b12b54, vehicle, _rf)
end

--- Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
-- GET_VEHICLE_*
function Global.GetVehicleCurrentSlipstreamDraft(vehicle)
	return _in(0x36492C2F0D134C56, vehicle, _rf)
end
Global.N_0x36492c2f0d134c56 = Global.GetVehicleCurrentSlipstreamDraft

--- GET_VEHICLE_CUSTOM_PRIMARY_COLOUR
function Global.GetVehicleCustomPrimaryColour(vehicle)
	return _in(0xB64CF2CCA9D95F52, vehicle, _i, _i, _i)
end

--- GET_VEHICLE_CUSTOM_SECONDARY_COLOUR
function Global.GetVehicleCustomSecondaryColour(vehicle)
	return _in(0x8389CD56CA8072DC, vehicle, _i, _i, _i)
end

--- GET_VEHICLE_DASHBOARD_BOOST
function Global.GetVehicleDashboardBoost()
	return _in(0xdffaba2a, _rf)
end

--- _GET_VEHICLE_DASHBOARD_COLOR
function Global.GetVehicleDashboardColor(vehicle, color)
	return _in(0xB7635E80A5C31BFF, vehicle, _ii(color) --[[ may be optional ]])
end
Global.GetVehicleDashboardColour = Global.GetVehicleDashboardColor

--- GET_VEHICLE_DASHBOARD_FUEL
function Global.GetVehicleDashboardFuel()
	return _in(0x19b0b2ce, _rf)
end

--- Gets the state of the player vehicle's dashboard lights as a bit set
-- indicator_left = 1
-- indicator_right = 2
-- handbrakeLight = 4
-- engineLight = 8
-- ABSLight = 16
-- gasLight = 32
-- oilLight = 64
-- headlights = 128
-- highBeam = 256
-- batteryLight = 512
function Global.GetVehicleDashboardLights()
	return _in(0x500ffe9d, _ri)
end

--- GET_VEHICLE_DASHBOARD_OIL_PRESSURE
function Global.GetVehicleDashboardOilPressure()
	return _in(0x3856d767, _rf)
end

--- GET_VEHICLE_DASHBOARD_OIL_TEMP
function Global.GetVehicleDashboardOilTemp()
	return _in(0x1f5996aa, _rf)
end

--- GET_VEHICLE_DASHBOARD_RPM
-- @return float 0 to ~1.1 representing the angle of the rpm gauge on the player's vehicle dashboard
function Global.GetVehicleDashboardRpm()
	return _in(0xf9716a11, _rf)
end

--- GET_VEHICLE_DASHBOARD_SPEED
function Global.GetVehicleDashboardSpeed(vehicle)
	return _in(0x9aad420e, vehicle, _rf)
end

--- GET_VEHICLE_DASHBOARD_TEMP
function Global.GetVehicleDashboardTemp()
	return _in(0x6b6adafa, _rf)
end

--- GET_VEHICLE_DASHBOARD_VACUUM
function Global.GetVehicleDashboardVacuum()
	return _in(0xfabe67a9, _rf)
end

--- GET_VEHICLE_DASHBOARD_WATER_TEMP
function Global.GetVehicleDashboardWaterTemp()
	return _in(0x8e3b3e42, _rf)
end

--- GET_VEHICLE_DEFAULT_HORN
-- @return Returns the horn sound hash
function Global.GetVehicleDefaultHorn(vehicle)
	return _in(0x02165D55000219AC, vehicle, _ri)
end

--- GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS
-- @return Returns the horn sound hash ignoring any horn mods applied to the car
function Global.GetVehicleDefaultHornIgnoreMods(vehicle)
	return _in(0xACB5DCCA1EC76840, vehicle, _ri)
end
Global.N_0xacb5dcca1ec76840 = Global.GetVehicleDefaultHornIgnoreMods
Global.GetVehicleHornHash = Global.GetVehicleDefaultHornIgnoreMods

--- The only example I can find of this function in the scripts, is this:
-- struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- PC scripts:
-- v_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);
function Global.GetVehicleDeformationAtPos(vehicle, offsetX, offsetY, offsetZ)
	return _in(0x4EC6CFBC7B2E9536, vehicle, offsetX, offsetY, offsetZ, _rv)
end

--- A getter for [SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x245A6883D966D537).
-- @return Returns vehicle density multiplier value.
function Global.GetVehicleDensityMultiplier()
	return _in(0xef7c6538, _rf)
end

--- A getter for [`SET_VEHICLE_DIRT_LEVEL`](#\_0x79D3B596FE44EE8B).
-- @param vehicle The vehicle to check.
-- @return A number between 0.0 and 15.0 representing the vehicles dirt level.
function Global.GetVehicleDirtLevel(vehicle)
	return _in(0x8F17BC8BA08DA62B, vehicle, _rf)
end

--- Checks the angle of the door mapped from 0.0 - 1.0 where 0.0 is fully closed and 1.0 is fully open.
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex Index of door to check
-- @return A float representing angle of door mapped from 0.0 to 1.0
function Global.GetVehicleDoorAngleRatio(vehicle, doorIndex)
	return _in(0xFE3F9C29F7B32BD5, vehicle, doorIndex, _rf)
end

--- enum VehicleLockStatus = {
-- None = 0,
-- Unlocked = 1,
-- Locked = 2,
-- LockedForPlayer = 3,
-- StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
-- CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
-- CanBeBrokenIntoPersist = 8, -- Can be broken into persist
-- CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
-- }
function Global.GetVehicleDoorLockStatus(vehicle)
	return _in(0x25BC98A59C2EA962, vehicle, _ri)
end

--- GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
function Global.GetVehicleDoorsLockedForPlayer(vehicle, player)
	return _in(0xF6AF6CB341349015, vehicle, player, _r)
end

--- Gets a vehicle's multiplier used with a wheel's GET_VEHICLE_WHEEL_STEERING_ANGLE to determine the angle the wheel is rendered.
function Global.GetVehicleDrawnWheelAngleMult(vehicle)
	return _in(0x21c1da8e, vehicle, _rf)
end

--- Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
-- Minimum: -4000
-- Maximum: 1000
-- -4000: Engine is destroyed
-- 0 and below: Engine catches fire and health rapidly declines
-- 300: Engine is smoking and losing functionality
-- 1000: Engine is perfect
function Global.GetVehicleEngineHealth(vehicle)
	return _in(0xC45D23BAF168AAB8, vehicle, _rf)
end

--- GET_VEHICLE_ENGINE_TEMPERATURE
function Global.GetVehicleEngineTemperature(vehicle)
	return _in(0xf4f495cb, vehicle, _rf)
end

--- formerly known as _GET_VEHICLE_PAINT_FADE
-- The result is a value from 0-1, where 0 is fresh paint.
function Global.GetVehicleEnveffScale(vehicle)
	return _in(0xA82819CAC9C4C403, vehicle, _rf)
end
Global.GetVehiclePaintFade = Global.GetVehicleEnveffScale

--- Retrieves a static value representing the estimated max speed of a specific vehicle, including any vehicle mods. This value does not change dynamically during gameplay.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param vehicle The vehicle for which to obtain the estimated max speed.
-- @return Returns the estimated maximum speed of the specified vehicle as a float number.
function Global.GetVehicleEstimatedMaxSpeed(vehicle)
	return _in(0x53AF99BAA671CA47, vehicle, _rf)
end
Global.N_0x53af99baa671ca47 = Global.GetVehicleEstimatedMaxSpeed
Global.GetVehicleMaxSpeed = Global.GetVehicleEstimatedMaxSpeed

--- GET_VEHICLE_EXTRA_COLOURS
function Global.GetVehicleExtraColours(vehicle)
	return _in(0x3BC4245933A166F7, vehicle, _i, _i)
end

--- GET_VEHICLE_FLIGHT_NOZZLE_POSITION
-- @param aircraft The vehicle to check the hover mode on.
-- @return A float indicating the percentage of the hover mode. 1.0 = in VTOL mode, 0.0 = in normal flying mode.
function Global.GetVehicleFlightNozzlePosition(aircraft)
	return _in(0xDA62027C8BDB326E, aircraft, _rf)
end
Global.N_0xda62027c8bdb326e = Global.GetVehicleFlightNozzlePosition
Global.GetPlaneHoverModePercentage = Global.GetVehicleFlightNozzlePosition
Global.GetVehicleHoverModePercentage = Global.GetVehicleFlightNozzlePosition
Global.GetPlaneVtolDirection = Global.GetVehicleFlightNozzlePosition

--- GET_VEHICLE_FUEL_LEVEL
function Global.GetVehicleFuelLevel(vehicle)
	return _in(0x5f739bb8, vehicle, _rf)
end

--- Gets vehicles gear ratio on choosen gear.
-- @param vehicle The vehicle handle.
-- @param gear The vehicles gear you want to get.
function Global.GetVehicleGearRatio(vehicle, gear)
	return _in(0x82e794b7, vehicle, gear, _rf)
end

--- GET_VEHICLE_GRAVITY_AMOUNT
function Global.GetVehicleGravityAmount(vehicle)
	return _in(0xb48a1292, vehicle, _rf)
end

--- GET_VEHICLE_HANDBRAKE
function Global.GetVehicleHandbrake(vehicle)
	return _in(0x483b013c, vehicle, _r)
end

--- Returns the effective handling data of a vehicle as a floating-point value.
-- Example: `local fSteeringLock = GetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return A floating-point value.
function Global.GetVehicleHandlingFloat(vehicle, class_, fieldName)
	return _in(0x642fc12f, vehicle, _ts(class_), _ts(fieldName), _rf)
end

--- Returns the effective handling data of a vehicle as an integer value.
-- Example: `local modelFlags = GetVehicleHandlingInt(vehicle, 'CHandlingData', 'strModelFlags')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return An integer.
function Global.GetVehicleHandlingInt(vehicle, class_, fieldName)
	return _in(0x27396c75, vehicle, _ts(class_), _ts(fieldName), _ri)
end

--- Returns the effective handling data of a vehicle as a vector value.
-- Example: `local inertiaMultiplier = GetVehicleHandlingVector(vehicle, 'CHandlingData', 'vecInertiaMultiplier')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return An integer.
function Global.GetVehicleHandlingVector(vehicle, class_, fieldName)
	return _in(0xfb341304, vehicle, _ts(class_), _ts(fieldName), _rv)
end

--- GET_VEHICLE_HAS_KERS
-- @param vehicle The vehicle handle.
-- @return Returns true if the vehicle has a kers boost (for instance the lectro or the vindicator)
function Global.GetVehicleHasKers(vehicle)
	return _in(0x50634E348C8D44EF, vehicle, _r)
end
Global.N_0x50634e348c8d44ef = Global.GetVehicleHasKers
Global.HasVehicleKersBoost = Global.GetVehicleHasKers

--- _GET_VEHICLE_HAS_PARACHUTE
function Global.GetVehicleHasParachute(vehicle)
	return _in(0xBC9CFF381338CB4F, vehicle, _r)
end
Global.HasVehicleParachute = Global.GetVehicleHasParachute
Global.DoesVehicleHaveParachute = Global.GetVehicleHasParachute

--- NativeDB Added Parameter 2: float maxEngineHealth
-- NativeDB Added Parameter 3: float maxPetrolTankHealth
-- NativeDB Added Parameter 4: float maxBodyHealth
-- NativeDB Added Parameter 5: float maxMainRotorHealth
-- NativeDB Added Parameter 6: float maxTailRotorHealth
-- NativeDB Added Parameter 7: float maxUnkHealth
function Global.GetVehicleHealthPercentage(vehicle)
	return _in(0xB8EF61207C2393A9, vehicle, _rf)
end
Global.GetVehicleBodyHealth_2 = Global.GetVehicleHealthPercentage

--- GET_VEHICLE_HIGH_GEAR
function Global.GetVehicleHighGear(vehicle)
	return _in(0xf1d1d689, vehicle, _ri)
end

--- Returns a value depending on the lock-on state of vehicle weapons.
-- 0: not locked on
-- 1: locking on
-- 2: locked on
function Global.GetVehicleHomingLockonState(vehicle)
	return _in(0xE6B0E8CFC3633BF0, vehicle, _ri)
end
Global.N_0xe6b0e8cfc3633bf0 = Global.GetVehicleHomingLockonState

--- NativeDB Introduced: v1365
-- @return The current horn sound index being used by the given vehicle
function Global.GetVehicleHornSoundIndex(vehicle)
	return _in(0xD53F3A29BCE2580E, vehicle, _ri)
end
Global.N_0xd53f3a29bce2580e = Global.GetVehicleHornSoundIndex
Global.N_0x22fecb546c276a30 = Global.GetVehicleHornSoundIndex
Global.GetVehicleDefaultHornVariation = Global.GetVehicleHornSoundIndex

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.GetVehicleIndexFromEntityIndex(entity)
	return _in(0x4B53F92932ADFAC0, entity, _ri)
end

--- Gets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both
-- @return An integer.
function Global.GetVehicleIndicatorLights(vehicle)
	return _in(0x83070354, vehicle, _ri)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @return Returns vehicle door lock state previously set with [`SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED`](#\_0xBE70724027F85BCD)
function Global.GetVehicleIndividualDoorLockStatus(vehicle, doorIndex)
	return _in(0xCA4AC3EAAE46EC7B, vehicle, doorIndex, _ri)
end
Global.N_0xca4ac3eaae46ec7b = Global.GetVehicleIndividualDoorLockStatus
Global.GetVehicleDoorDestroyType = Global.GetVehicleIndividualDoorLockStatus

--- _GET_VEHICLE_INTERIOR_COLOR
function Global.GetVehicleInteriorColor(vehicle, color)
	return _in(0x7D1464D472D32136, vehicle, _ii(color) --[[ may be optional ]])
end
Global.GetVehicleInteriorColour = Global.GetVehicleInteriorColor

--- Returns whether the specified vehicle is designated as a mercenary vehicle
-- @param vehicle The vehicle to check for mercenary status.
-- @return Returns `true` if the vehicle is a mercenary vehicle, `false` otherwise.
function Global.GetVehicleIsMercenary(vehicle)
	return _in(0xD4C4642CB7F50B5D, vehicle, _r)
end
Global.N_0xd4c4642cb7f50b5d = Global.GetVehicleIsMercenary

--- GET_VEHICLE_LAYOUT_HASH
function Global.GetVehicleLayoutHash(vehicle)
	return _in(0x28D37D4F71AC5C58, vehicle, _ri)
end

--- GET_VEHICLE_LIGHT_MULTIPLIER
function Global.GetVehicleLightMultiplier(vehicle)
	return _in(0x7e6e219c, vehicle, _rf)
end

--- GET_VEHICLE_LIGHTS_STATE
function Global.GetVehicleLightsState(vehicle)
	return _in(0xB91B4C20085BD12F, vehicle, _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- -1 = no livery
function Global.GetVehicleLivery(vehicle)
	return _in(0x2BB9230590DA5E8A, vehicle, _ri)
end

--- Returns -1 if the vehicle has no livery
function Global.GetVehicleLiveryCount(vehicle)
	return _in(0x87B63E25A529D526, vehicle, _ri)
end

--- GET_VEHICLE_LOCK_ON_TARGET
function Global.GetVehicleLockOnTarget(vehicle, entity)
	return _in(0x8F5EBAB1F260CFCE, vehicle, _ii(entity) --[[ may be optional ]], _r)
end
Global.GetVehicleOwner = Global.GetVehicleLockOnTarget

--- GET_VEHICLE_MAX_BRAKING
function Global.GetVehicleMaxBraking(vehicle)
	return _in(0xAD7E85FC227197C4, vehicle, _rf)
end

--- GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS
function Global.GetVehicleMaxNumberOfPassengers(vehicle)
	return _in(0xA7C4F2C6E744A550, vehicle, _ri)
end

--- GET_VEHICLE_MAX_TRACTION
function Global.GetVehicleMaxTraction(vehicle)
	return _in(0xA132FB5370554DB0, vehicle, _rf)
end

--- GET_VEHICLE_MOD
-- @param vehicle The vehicle to get the mod of.
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @return Returns the current modIndex, or `-1` if the mod is stock.
function Global.GetVehicleMod(vehicle, modType)
	return _in(0x772960298DA26FDB, vehicle, modType, _ri)
end

--- GET_VEHICLE_MOD_COLOR_1
function Global.GetVehicleModColor_1(vehicle)
	return _in(0xE8D65CA700C9A693, vehicle, _i, _i, _i)
end

--- returns a string which is the codename of the vehicle's currently selected primary color
-- p1 is always 0
function Global.GetVehicleModColor_1Name(vehicle, p1)
	return _in(0xB45085B721EFD38C, vehicle, p1, _s)
end
Global.N_0xb45085b721efd38c = Global.GetVehicleModColor_1Name

--- GET_VEHICLE_MOD_COLOR_2
function Global.GetVehicleModColor_2(vehicle)
	return _in(0x81592BE4E3878728, vehicle, _i, _i)
end

--- returns a string which is the codename of the vehicle's currently selected secondary color
function Global.GetVehicleModColor_2Name(vehicle)
	return _in(0x4967A516ED23A5A1, vehicle, _s)
end
Global.N_0x4967a516ed23a5a1 = Global.GetVehicleModColor_2Name

--- Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.GetVehicleModIdentifierHash(vehicle, modType, modIndex)
	return _in(0x4593CF82AA179706, vehicle, modType, modIndex, _ri)
end
Global.N_0x4593cf82aa179706 = Global.GetVehicleModIdentifierHash
Global.GetVehicleModData = Global.GetVehicleModIdentifierHash

--- GET_VEHICLE_MOD_KIT
function Global.GetVehicleModKit(vehicle)
	return _in(0x6325D1A044AE510D, vehicle, _ri)
end

--- GET_VEHICLE_MOD_KIT_TYPE
function Global.GetVehicleModKitType(vehicle)
	return _in(0xFC058F5121E54C32, vehicle, _ri)
end

--- GET_VEHICLE_MOD_MODIFIER_VALUE
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.GetVehicleModModifierValue(vehicle, modType, modIndex)
	return _in(0x90A38E9838E0A8C1, vehicle, modType, modIndex, _ri)
end

--- Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.GetVehicleModVariation(vehicle, modType)
	return _in(0xB3924ECD70E095DC, vehicle, modType, _r)
end

--- Returns the acceleration of the specified model.
function Global.GetVehicleModelAcceleration(modelHash)
	return _in(0x8C044C5C84505B6A, _ch(modelHash), _rf)
end

--- GET_VEHICLE_MODEL_*
-- 9.8 * thrust if air vehicle, else 0.38 + drive force?
function Global.GetVehicleModelEstimatedAgility(modelHash)
	return _in(0x53409B5163D5B846, _ch(modelHash), _rf)
end
Global.N_0x53409b5163d5b846 = Global.GetVehicleModelEstimatedAgility
Global.GetVehicleModelDownForce = Global.GetVehicleModelEstimatedAgility

--- Returns max speed (without mods) of the specified vehicle model in m/s.
function Global.GetVehicleModelEstimatedMaxSpeed(modelHash)
	return _in(0xF417C2502FFFED43, _ch(modelHash), _rf)
end
Global.GetVehicleModelMaxSpeed = Global.GetVehicleModelEstimatedMaxSpeed

--- Returns max braking of the specified vehicle model.
function Global.GetVehicleModelMaxBraking(modelHash)
	return _in(0xDC53FD41B4ED944C, _ch(modelHash), _rf)
end

--- GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS
function Global.GetVehicleModelMaxBrakingMaxMods(modelHash)
	return _in(0xBFBA3BA79CFF7EBF, _ch(modelHash), _rf)
end
Global.N_0xbfba3ba79cff7ebf = Global.GetVehicleModelMaxBrakingMaxMods
Global.GetVehicleModelHandBrake = Global.GetVehicleModelMaxBrakingMaxMods

--- GET_VEHICLE_MODEL_*
-- Function pertains only to aviation vehicles.
function Global.GetVehicleModelMaxKnots(modelHash)
	return _in(0xC6AD107DDC9054CC, _ch(modelHash), _rf)
end
Global.N_0xc6ad107ddc9054cc = Global.GetVehicleModelMaxKnots

--- Returns max traction of the specified vehicle model.
function Global.GetVehicleModelMaxTraction(modelHash)
	return _in(0x539DE94D44FDFD0D, _ch(modelHash), _rf)
end

--- Returns max number of passengers (including the driver) for the specified vehicle model.
function Global.GetVehicleModelNumberOfSeats(modelHash)
	return _in(0x2AD93716F184EDA4, _ch(modelHash), _ri)
end
Global.GetVehicleModelMaxNumberOfPassengers = Global.GetVehicleModelNumberOfSeats

--- Returns `nMonetaryValue` from handling.meta for specific model, which is the vehicle's monetary value.
function Global.GetVehicleModelValue(vehicleModel)
	return _in(0x5873C14A52D74236, _ch(vehicleModel), _ri)
end
Global.N_0x5873c14a52d74236 = Global.GetVehicleModelValue
Global.GetVehicleModelMonetaryValue = Global.GetVehicleModelValue

--- Gets the color of the neon lights of the specified vehicle.
-- See [`_SET_VEHICLE_NEON_LIGHTS_COLOUR`](#\_0x8E0A582209A62695) for more information
function Global.GetVehicleNeonLightsColour(vehicle)
	return _in(0x7619EEE8C886757F, vehicle, _i, _i, _i)
end

--- GET_VEHICLE_NEXT_GEAR
function Global.GetVehicleNextGear(vehicle)
	return _in(0xddb298ae, vehicle, _ri)
end

--- Returns false for nodes that aren't used for GPS routes.
-- Example:
-- Nodes in Fort Zancudo and LSIA are false
function Global.GetVehicleNodeIsGpsAllowed(nodeID)
	return _in(0xA2AE5C478B96E3B6, nodeID, _r)
end
Global.N_0xa2ae5c478b96e3b6 = Global.GetVehicleNodeIsGpsAllowed
Global.GetSupportsGpsRouteFlag = Global.GetVehicleNodeIsGpsAllowed

--- Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
-- Normal roads where plenty of Peds spawn will return false
function Global.GetVehicleNodeIsSwitchedOff(nodeID)
	return _in(0x4F5070AA58F69279, nodeID, _r)
end
Global.N_0x4f5070aa58f69279 = Global.GetVehicleNodeIsSwitchedOff
Global.GetIsSlowRoadFlag = Global.GetVehicleNodeIsSwitchedOff

--- Calling this with an invalid node id, will crash the game.
-- Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
-- Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
function Global.GetVehicleNodePosition(nodeId, outPosition)
	return _in(0x703123E5E7D429C2, nodeId, _v)
end

--- Gets the density and flags of the closest node to the specified position.
-- Density is a value between 0 and 15, indicating how busy the road is.
-- Flags is a bit field.
function Global.GetVehicleNodeProperties(x, y, z)
	return _in(0x0568566ACBB5DEDC, x, y, z, _i, _i, _r)
end

--- _GET_VEHICLE_NUMBER_OF_BROKEN_BONES
function Global.GetVehicleNumberOfBrokenBones(vehicle)
	return _in(0x2C8CBFE1EA5FC631, vehicle, _ri)
end
Global.N_0x2c8cbfe1ea5fc631 = Global.GetVehicleNumberOfBrokenBones

--- Also includes some "turnOffBones" when vehicle mods are installed.
function Global.GetVehicleNumberOfBrokenOffBones(vehicle)
	return _in(0x42A4BEB35D372407, vehicle, _ri)
end
Global.N_0x42a4beb35d372407 = Global.GetVehicleNumberOfBrokenOffBones

--- Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
function Global.GetVehicleNumberOfPassengers(vehicle)
	return _in(0x24CB2137731FFE89, vehicle, _ri)
end

--- GET_VEHICLE_NUMBER_OF_WHEELS
function Global.GetVehicleNumberOfWheels(vehicle)
	return _in(0xedf4b0fc, vehicle, _ri)
end

--- Returns the license plate text from a vehicle.  8 chars maximum.
function Global.GetVehicleNumberPlateText(vehicle)
	return _in(0x7CE1CCB9B293020E, vehicle, _s)
end

--- Returns the PlateType of a vehicle
-- Blue_on_White_1 = 3,
-- Blue_on_White_2 = 0,
-- Blue_on_White_3 = 4,
-- Yellow_on_Blue = 2,
-- Yellow_on_Black = 1,
-- North_Yankton = 5,
function Global.GetVehicleNumberPlateTextIndex(vehicle)
	return _in(0xF11BC2DD9A3E7195, vehicle, _ri)
end

--- GET_VEHICLE_OIL_LEVEL
function Global.GetVehicleOilLevel(vehicle)
	return _in(0xfc7f8ef4, vehicle, _rf)
end

--- GET_VEHICLE_PED_IS_ENTERING
function Global.GetVehiclePedIsEntering(ped)
	return _in(0xF92691AED837A5FC, ped, _ri)
end
Global.SetExclusivePhoneRelationships = Global.GetVehiclePedIsEntering

--- Retrieves the vehicle the specified ped is currently in, or the last vehicle they were in.
-- @param ped The target ped
-- @param lastVehicle A boolean value where `false` represents the current vehicle the Ped is in, and `true` represents the last vehicle the Ped was in.
-- @return The vehicle id. Returns 0 if the ped is/was not in a vehicle.
function Global.GetVehiclePedIsIn(ped, lastVehicle)
	return _in(0x9A9112A0FE9A4713, ped, lastVehicle, _ri)
end

--- GET_VEHICLE_PED_IS_TRYING_TO_ENTER
function Global.GetVehiclePedIsTryingToEnter(ped)
	return _in(0x814FA8BE5449445D, ped, _ri)
end

--- Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
function Global.GetVehiclePedIsUsing(ped)
	return _in(0x6094AD011A2EA87D, ped, _ri)
end

--- 1000 is max health
-- Begins leaking gas at around 650 health
function Global.GetVehiclePetrolTankHealth(vehicle)
	return _in(0x7D5DABE888D2D074, vehicle, _rf)
end

--- Returns the plates a vehicle has.
-- ```
-- enum eVehiclePlateType
-- {
-- VPT_FRONT_AND_BACK_PLATES = 0,
-- VPT_FRONT_PLATES = 1,
-- VPT_BACK_PLATES = 2,
-- VPT_NONE = 3,
-- };
-- ```
-- Motorcycles with no visible plates will sometimes return a 2 for unknown reasons.
function Global.GetVehiclePlateType(vehicle)
	return _in(0x9CCC9525BF2408E0, vehicle, _ri)
end

--- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
function Global.GetVehicleRecordingId(recording, script)
	return _in(0x21543C612379DB3C, recording, _ts(script), _ri)
end

--- Returns index of the current vehicle's rooftop livery.
-- A getter for [\_SET_VEHICLE_ROOF_LIVERY](#\_0xA6D3A8750DC73270).
-- @param vehicle The vehicle handle.
-- @return An index of the current vehicle's rooftop livery.
function Global.GetVehicleRoofLivery(vehicle)
	return _in(0x60190048C0764A26, vehicle, _ri)
end
Global.N_0x60190048c0764a26 = Global.GetVehicleRoofLivery

--- Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
-- @param vehicle The vehicle handle.
-- @return A number of available rooftop liveries for vehicle.
function Global.GetVehicleRoofLiveryCount(vehicle)
	return _in(0x5ECB40269053C0D4, vehicle, _ri)
end
Global.N_0x5ecb40269053c0d4 = Global.GetVehicleRoofLiveryCount

--- GET_VEHICLE_STEERING_ANGLE
function Global.GetVehicleSteeringAngle(vehicle)
	return _in(0x1382fcea, vehicle, _rf)
end

--- GET_VEHICLE_STEERING_SCALE
function Global.GetVehicleSteeringScale(vehicle)
	return _in(0x954465de, vehicle, _rf)
end

--- Outputs 2 Vector3's.
-- Scripts check if out2.x - out1.x > something.x
-- Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
function Global.GetVehicleSuspensionBounds(vehicle)
	return _in(0xDF7E3EEB29642C38, vehicle, _v, _v)
end
Global.N_0xdf7e3eeb29642c38 = Global.GetVehicleSuspensionBounds

--- Gets the height of the vehicle's suspension.
-- The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
-- 0.000 is the stock suspension.
-- 0.008 is Ultra Suspension.
function Global.GetVehicleSuspensionHeight(vehicle)
	return _in(0x53952FD2BAA19F17, vehicle, _rf)
end

--- GET_VEHICLE_THROTTLE_OFFSET
-- @return A float among -1 and 1 according if the vehicle is moving forwards or backwards
function Global.GetVehicleThrottleOffset(vehicle)
	return _in(0xd1d07351, vehicle, _rf)
end
Global.GetVehicleCurrentAcceleration = Global.GetVehicleThrottleOffset

--- A getter for [MODIFY_VEHICLE_TOP_SPEED](#\_0x93A3996368C94158). Returns -1.0 if a modifier is not set.
-- @param vehicle The target vehicle.
-- @return Returns vehicle's modified top speed.
function Global.GetVehicleTopSpeedModifier(vehicle)
	return _in(0x998b7fee, vehicle, _rf)
end

--- Gets the trailer of a vehicle and puts it into the trailer parameter.
function Global.GetVehicleTrailerVehicle(vehicle, trailer)
	return _in(0x1CDD6BADC297830D, vehicle, _ii(trailer) --[[ may be optional ]], _r)
end

--- GET_VEHICLE_TURBO_PRESSURE
function Global.GetVehicleTurboPressure(vehicle)
	return _in(0xe02b51d7, vehicle, _rf)
end

--- Returns the type of the passed vehicle.
-- For client scripts, reference the more detailed [GET_VEHICLE_TYPE_RAW](#\_0xDE73BC10) native.
-- ### Vehicle types
-- *   automobile
-- *   bike
-- *   boat
-- *   heli
-- *   plane
-- *   submarine
-- *   trailer
-- *   train
-- @param vehicle The vehicle's entity handle.
-- @return If the entity is a vehicle, the vehicle type. If it is not a vehicle, the return value will be null.
function Global.GetVehicleType(vehicle)
	return _in(0xa273060e, vehicle, _s)
end

--- Returns the model type of the vehicle as defined by:
-- ```cpp
-- enum VehicleType
-- {
-- VEHICLE_TYPE_NONE = -1,
-- VEHICLE_TYPE_CAR = 0,
-- VEHICLE_TYPE_PLANE = 1,
-- VEHICLE_TYPE_TRAILER = 2,
-- VEHICLE_TYPE_QUADBIKE = 3,
-- VEHICLE_TYPE_DRAFT = 4,
-- VEHICLE_TYPE_SUBMARINECAR = 5,
-- VEHICLE_TYPE_AMPHIBIOUS_AUTOMOBILE = 6,
-- VEHICLE_TYPE_AMPHIBIOUS_QUADBIKE = 7,
-- VEHICLE_TYPE_HELI = 8,
-- VEHICLE_TYPE_BLIMP = 9,
-- VEHICLE_TYPE_AUTOGYRO = 10,
-- VEHICLE_TYPE_BIKE = 11,
-- VEHICLE_TYPE_BICYCLE = 12,
-- VEHICLE_TYPE_BOAT = 13,
-- VEHICLE_TYPE_TRAIN = 14,
-- VEHICLE_TYPE_SUBMARINE = 15,
-- };
-- ```
-- @param vehicle The vehicle's entity handle.
-- @return Returns the vehicles model type
function Global.GetVehicleTypeRaw(vehicle)
	return _in(0xde73bc10, vehicle, _ri)
end

--- GET_VEHICLE_TYRE_SMOKE_COLOR
function Global.GetVehicleTyreSmokeColor(vehicle)
	return _in(0xB635392A4938B3C3, vehicle, _i, _i, _i)
end

--- GET_VEHICLE_TYRES_CAN_BURST
function Global.GetVehicleTyresCanBurst(vehicle)
	return _in(0x678B9BB8C3F58FEB, vehicle, _r)
end

--- GET_VEHICLE_WAYPOINT_PROGRESS
function Global.GetVehicleWaypointProgress(vehicle)
	return _in(0x9824CFF8FC66E159, vehicle, _ri)
end

--- GET_VEHICLE_WAYPOINT_TARGET_POINT
function Global.GetVehicleWaypointTargetPoint(vehicle)
	return _in(0x416B62AC8B9E5BBD, vehicle, _ri)
end

--- _GET_VEHICLE_WEAPON_CAPACITY
function Global.GetVehicleWeaponCapacity(vehicle, weaponIndex)
	return _in(0x8181CE2F25CB9BB7, vehicle, weaponIndex, _ri)
end
Global.N_0x8181ce2f25cb9bb7 = Global.GetVehicleWeaponCapacity

--- Gets brake pressure of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- Normal values around 1.0f when braking.
function Global.GetVehicleWheelBrakePressure(vehicle, wheelIndex)
	return _in(0x70fe2eff, vehicle, wheelIndex, _rf)
end

--- Gets the flags of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return An unsigned int containing bit flags.
function Global.GetVehicleWheelFlags(vehicle, wheelIndex)
	return _in(0xc70fa0c7, vehicle, wheelIndex, _ri)
end

--- GET_VEHICLE_WHEEL_HEALTH
function Global.GetVehicleWheelHealth(vehicle, wheelIndex)
	return _in(0x54a677f5, vehicle, wheelIndex, _rf)
end

--- Gets whether the wheel is powered.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- This is a shortcut to a flag in GET_VEHICLE_WHEEL_FLAGS.
function Global.GetVehicleWheelIsPowered(vehicle, wheelIndex)
	return _in(0x3ccf1b49, vehicle, wheelIndex, _r)
end

--- Gets power being sent to a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function Global.GetVehicleWheelPower(vehicle, wheelIndex)
	return _in(0xd203287, vehicle, wheelIndex, _rf)
end

--- GET_VEHICLE_WHEEL_RIM_COLLIDER_SIZE
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @return Float representing size of the rim collider. Not sure what it is used for, probably to detect whether bullets hit rim or tire and puncture it (and to determine size of the wheel when tire is fully blown).
function Global.GetVehicleWheelRimColliderSize(vehicle, wheelIndex)
	return _in(0xcee21ab2, vehicle, wheelIndex, _rf)
end

--- Gets the rotation speed of a wheel.
-- This is used internally to calcuate GET_VEHICLE_WHEEL_SPEED.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return The angular velocity of the wheel.
function Global.GetVehicleWheelRotationSpeed(vehicle, wheelIndex)
	return _in(0xea1859e5, vehicle, wheelIndex, _rf)
end

--- Returns vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels (returns 0 in case of default wheels).
-- @param vehicle The vehicle to obtain data for.
-- @return Float representing size of the wheel (usually between 0.5 and 1.5)
function Global.GetVehicleWheelSize(vehicle)
	return _in(0x4046b66, vehicle, _rf)
end

--- Gets speed of a wheel at the tyre.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return An integer.
function Global.GetVehicleWheelSpeed(vehicle, wheelIndex)
	return _in(0x149c9da0, vehicle, wheelIndex, _rf)
end

--- Gets steering angle of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return The steering angle of the wheel, with 0 being straight.
function Global.GetVehicleWheelSteeringAngle(vehicle, wheelIndex)
	return _in(0xa0867448, vehicle, wheelIndex, _rf)
end

--- GET_VEHICLE_WHEEL_SURFACE_MATERIAL
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @return Integer representing the index of the current surface material of that wheel. Check materials.dat for the indexes.
function Global.GetVehicleWheelSurfaceMaterial(vehicle, wheelIndex)
	return _in(0xa7f04022, vehicle, wheelIndex, _ri)
end

--- Gets the current suspension compression of a wheel.
-- Returns a positive value. 0 means the suspension is fully extended, the wheel is off the ground.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return The current compression of the wheel's suspension.
function Global.GetVehicleWheelSuspensionCompression(vehicle, wheelIndex)
	return _in(0x2b48175b, vehicle, wheelIndex, _rf)
end

--- GET_VEHICLE_WHEEL_TIRE_COLLIDER_SIZE
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @return Float representing size of the wheel collider.
function Global.GetVehicleWheelTireColliderSize(vehicle, wheelIndex)
	return _in(0xe0ba9fe6, vehicle, wheelIndex, _rf)
end

--- GET_VEHICLE_WHEEL_TIRE_COLLIDER_WIDTH
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @return Float representing width of the wheel collider.
function Global.GetVehicleWheelTireColliderWidth(vehicle, wheelIndex)
	return _in(0xef65929c, vehicle, wheelIndex, _rf)
end

--- Gets the traction vector length of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function Global.GetVehicleWheelTractionVectorLength(vehicle, wheelIndex)
	return _in(0x3bcfee14, vehicle, wheelIndex, _rf)
end

--- cpp
-- enum eVehicleWheelType
-- {
-- VWT_SPORT = 0,
-- VWT_MUSCLE = 1,
-- VWT_LOWRIDER = 2,
-- VWT_SUV = 3,
-- VWT_OFFROAD = 4,
-- VWT_TUNER = 5,
-- VWT_BIKE = 6,
-- VWT_HIEND = 7,
-- VWT_SUPERMOD1 = 8, // Benny's Original
-- VWT_SUPERMOD2 = 9, // Benny's Bespoke
-- VWT_SUPERMOD3 = 10, // Open Wheel
-- VWT_SUPERMOD4 = 11, // Street
-- VWT_SUPERMOD5 = 12, // Track
-- };
-- @return Returns an eVehicleWheelType integer value.
function Global.GetVehicleWheelType(vehicle)
	return _in(0xB3ED1BFB4BE636DC, vehicle, _ri)
end

--- Returns vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels (returns 0 in case of default wheels).
-- @param vehicle The vehicle to obtain data for.
-- @return Float representing width of the wheel (usually between 0.1 and 1.5)
function Global.GetVehicleWheelWidth(vehicle)
	return _in(0x9c7b59f9, vehicle, _rf)
end

--- Returns the offset of the specified wheel relative to the wheel's axle center.
function Global.GetVehicleWheelXOffset(vehicle, wheelIndex)
	return _in(0xcc90cbca, vehicle, wheelIndex, _rf)
end

--- GET_VEHICLE_WHEEL_Y_ROTATION
function Global.GetVehicleWheelYRotation(vehicle, wheelIndex)
	return _in(0x2ea4affe, vehicle, wheelIndex, _rf)
end
Global.GetVehicleWheelXrot = Global.GetVehicleWheelYRotation

--- List of known states:
-- ```
-- 1: Not wheeling.
-- 65: Vehicle is ready to do wheelie (burnouting).
-- 129: Vehicle is doing wheelie.
-- ```
-- @param vehicle Vehicle
-- @return Vehicle's current wheelie state.
function Global.GetVehicleWheelieState(vehicle)
	return _in(0x137260d1, vehicle, _ri)
end

--- GET_VEHICLE_WINDOW_TINT
function Global.GetVehicleWindowTint(vehicle)
	return _in(0x0EE21293DAD47C95, vehicle, _ri)
end

--- Returns the headlight color index from the vehicle. Value between 0, 12.
-- Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
-- Must enable xenon headlights before it'll take affect.
-- List of colors and ids:
-- ```
-- enum headlightColors {
-- Default = -1,
-- White = 0,
-- Blue = 1,
-- Electric_Blue = 2,
-- Mint_Green = 3,
-- Lime_Green = 4,
-- Yellow = 5,
-- Golden_Shower = 6,
-- Orange = 7,
-- Red = 8,
-- Pony_Pink = 9,
-- Hot_Pink = 10,
-- Purple = 11,
-- Blacklight = 12
-- }
-- ```
-- @param vehicle The vehicle to get the headlight color from.
-- @return Returns an int, value between 0-12 or 255 if no color is set.
function Global.GetVehicleXenonLightsColor(vehicle)
	return _in(0x3DFF319A831E0CDB, vehicle, _ri)
end
Global.N_0x3dff319a831e0cdb = Global.GetVehicleXenonLightsColor
Global.GetVehicleHeadlightsColour = Global.GetVehicleXenonLightsColor
Global.GetVehicleXenonLightsColour = Global.GetVehicleXenonLightsColor

--- Returns vehicle xenon lights custom RGB color values. Do note this native doesn't return non-RGB colors that was set with [\_SET_VEHICLE_XENON_LIGHTS_COLOR](#\_0xE41033B25D003A07).
-- @param vehicle The vehicle handle.
-- @param red Red color (0-255).
-- @param green Green color (0-255).
-- @param blue Blue color (0-255).
-- @return A boolean indicating if vehicle have custom xenon lights RGB color.
function Global.GetVehicleXenonLightsCustomColor(vehicle)
	return _in(0xc715f730, vehicle, _i, _i, _i, _r)
end

--- NativeDB Introduced: v2372
function Global.GetWantedLevelParoleDuration()
	return _in(0xA72200F51875FEA4, _ri)
end
Global.N_0xa72200f51875fea4 = Global.GetWantedLevelParoleDuration

--- Remnant from GTA IV. Does nothing in GTA V.
function Global.GetWantedLevelRadius(player)
	return _in(0x085DEB493BE80812, player, _rf)
end

--- Drft
function Global.GetWantedLevelThreshold(wantedLevel)
	return _in(0xFDD179EAF45B556C, wantedLevel, _ri)
end

--- NativeDB Introduced: v1290
function Global.GetWarningMessageTitleHash()
	return _in(0x81DF9ABA6C83DFF9, _ri)
end

--- Retrieves the depth of the water beneath the specified position, accounting for the waves.
-- **Note:** The result might vary depending on the specific frame when this command is executed due to wave fluctuations.
-- @param x The coordinate at which to test at for water.
-- @param y The coordinate at which to test at for water.
-- @param z The coordinate at which to test at for water.
-- @param height The height at which to test at for water.
-- @return Returns `false` when land at the tested coordinates is higher than water, `true` otherwise.
function Global.GetWaterHeight(x, y, z, height)
	return _in(0xF6829842C06AE524, x, y, z, _fi(height) --[[ may be optional ]], _r)
end

--- Retrieves the depth of the water beneath the specified position, disregarding wave effects.
-- **Note:** The result remains consistent across different frames as it doesn't consider wave fluctuations.
function Global.GetWaterHeightNoWaves(x, y, z, height)
	return _in(0x8EE6B53CE13A9794, x, y, z, _fi(height) --[[ may be optional ]], _r)
end

--- GET_WATER_QUAD_ALPHA
-- @param waterQuad The water quad index
-- @param a0 The a0 level
-- @param a1 The a1 level
-- @param a2 The a2 level
-- @param a3 The a3 level
-- @return Returns true on success. Alpha values are undefined on failure
function Global.GetWaterQuadAlpha(waterQuad)
	return _in(0x14088095, waterQuad, _i, _i, _i, _i, _r)
end

--- This native returns the index of a water quad if the given point is inside its bounds.
-- *If you also want to check for water level, check out [`GetWaterQuadAtCoords_3d`](#\_0xF8E03DB8)*
-- @param x The X coordinate
-- @param y The Y coordinate
-- @return The water quad index at the given position. Returns -1 if there isn't any there.
function Global.GetWaterQuadAtCoords(x, y)
	return _in(0x17321452, x, y, _ri)
end

--- This alternative implementation of [`GetWaterQuadAtCoords`](#\_0x17321452) also checks the height of the water level.
-- @param x The X coordinate
-- @param y The Y coordinate
-- @param z The water level inside the water quad
-- @return The water quad index at the given position. Returns -1 if there isn't any there. Also returns -1 if the given point is above the water level.
function Global.GetWaterQuadAtCoords_3d(x, y, z)
	return _in(0xf8e03db8, x, y, z, _ri)
end

--- GET_WATER_QUAD_BOUNDS
-- @param waterQuad The water quad index
-- @param minX The minX coordinate
-- @param minY The minY coordinate
-- @param maxX The maxX coordinate
-- @param maxY The maxY coordinate
-- @return Returns true on success. Bounds are undefined on failure
function Global.GetWaterQuadBounds(waterQuad)
	return _in(0x42e9a06a, waterQuad, _i, _i, _i, _i, _r)
end

--- GET_WATER_QUAD_COUNT
-- @return Returns the amount of water quads loaded.
function Global.GetWaterQuadCount()
	return _in(0xb1884159, _ri)
end

--- GET_WATER_QUAD_HAS_LIMITED_DEPTH
-- @param waterQuad The water quad index
-- @return Returns if the given water quad has a limited depth.
function Global.GetWaterQuadHasLimitedDepth(waterQuad, hasLimitedDepth)
	return _in(0x22ea3bd8, waterQuad, _ii(hasLimitedDepth) --[[ may be optional ]], _r)
end

--- GET_WATER_QUAD_IS_INVISIBLE
-- @param waterQuad The water quad index
-- @return Returns if the given water quad is invisible
function Global.GetWaterQuadIsInvisible(waterQuad, isInvisible)
	return _in(0x1dedbd77, waterQuad, _ii(isInvisible) --[[ may be optional ]], _r)
end

--- *level is defined as "z" in water.xml*
-- @param waterQuad The returned water quad level
-- @return Returns true on success. Level is undefined on failure
function Global.GetWaterQuadLevel(waterQuad, waterQuadLevel)
	return _in(0x6523816b, waterQuad, _fi(waterQuadLevel) --[[ may be optional ]], _r)
end

--- GET_WATER_QUAD_NO_STENCIL
-- @param waterQuad The water quad index
-- @return Returns if the given water quad has no stencil.
function Global.GetWaterQuadNoStencil(waterQuad, noStencil)
	return _in(0x6f4acba, waterQuad, _ii(noStencil) --[[ may be optional ]], _r)
end

--- Valid type definitions:
-- *   **0** Square
-- *   **1** Right triangle where the 90 degree angle is at maxX, minY
-- *   **2** Right triangle where the 90 degree angle is at minX, minY
-- *   **3** Right triangle where the 90 degree angle is at minX, maxY
-- *   **4** Right triangle where the 90 degree angle is at maxY, maxY
-- @param waterQuad The water quad index
-- @return Returns true on success. Type is undefined on failure
function Global.GetWaterQuadType(waterQuad, waterType)
	return _in(0xe2501b8b, waterQuad, _ii(waterType) --[[ may be optional ]], _r)
end

--- GET_WAVE_QUAD_AMPLITUDE
-- @param waveQuad The wave quad index
-- @return Returns true on success. Amplitude is undefined on failure
function Global.GetWaveQuadAmplitude(waveQuad, waveQuadAmplitude)
	return _in(0x865139a3, waveQuad, _fi(waveQuadAmplitude) --[[ may be optional ]], _r)
end

--- This native returns the index of a wave quad if the given point is inside its bounds.
-- @param x The X coordinate
-- @param y The Y coordinate
-- @return The wave quad index at the given position. Returns -1 if there isn't any there.
function Global.GetWaveQuadAtCoords(x, y)
	return _in(0x3f5a61a7, x, y, _ri)
end

--- GET_WAVE_QUAD_BOUNDS
-- @param waveQuad The wave quad index
-- @param minX The minX coordinate
-- @param minY The minY coordinate
-- @param maxX The maxX coordinate
-- @param maxY The maxY coordinate
-- @return Returns true on success. Bounds are undefined on failure
function Global.GetWaveQuadBounds(waveQuad)
	return _in(0xf86136db, waveQuad, _i, _i, _i, _i, _r)
end

--- GET_WAVE_QUAD_COUNT
-- @return Returns the amount of wave quads loaded.
function Global.GetWaveQuadCount()
	return _in(0x9250c76, _ri)
end

--- GET_WAVE_QUAD_DIRECTION
-- @param waveQuad The wave quad index
-- @param directionX The wave quad X direction
-- @param directionY The wave quad Y direction
-- @return Returns true on success. Direction values are undefined on failure
function Global.GetWaveQuadDirection(waveQuad)
	return _in(0xcce49a1c, waveQuad, _f, _f, _r)
end

--- GET_WAYPOINT_BLIP_ENUM_ID
function Global.GetWaypointBlipEnumId()
	return _in(0x186E5D252FA50E7D, _ri)
end
Global.GetBlipInfoIdIterator = Global.GetWaypointBlipEnumId

--- GET_WAYPOINT_DISTANCE_ALONG_ROUTE
function Global.GetWaypointDistanceAlongRoute(p0, p1)
	return _in(0xA5B769058763E497, _ts(p0), p1, _rf)
end

--- A getter for [SET_WEAPON_ANIMATION_OVERRIDE](#\_0x1055AC3A667F09D9).
-- @param ped The target ped.
-- @return The weapon animation override.
function Global.GetWeaponAnimationOverride(ped)
	return _in(0x63ed2e7, ped, _ri)
end

--- // Returns the size of the default weapon component clip.
-- Use it like this:
-- char cClipSize[32];
-- Hash cur;
-- if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))
-- {
-- if (WEAPON::IS_WEAPON_VALID(cur))
-- {
-- int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);
-- sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
-- vDrawString(cClipSize, 0.5f, 0.5f);
-- }
-- }
function Global.GetWeaponClipSize(weaponHash)
	return _in(0x583BE370B1EC6EB4, _ch(weaponHash), _ri)
end

--- A getter for `CWeaponAccuracyModifier` in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component accuracy modifier.
function Global.GetWeaponComponentAccuracyModifier(componentHash)
	return _in(0xc693e278, _ch(componentHash), _rf)
end

--- A getter for `CameraHash` in a weapon scope component.
-- @param componentHash Weapon component name hash.
-- @return The hash of the scope camera.
function Global.GetWeaponComponentCameraHash(componentHash)
	return _in(0xacb7e68f, _ch(componentHash), _ri)
end

--- A getter for `ClipSize` in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component clip size.
function Global.GetWeaponComponentClipSize(componentHash)
	return _in(0xe14cf665, _ch(componentHash), _ri)
end

--- A getter for `CWeaponDamageModifier` in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component damage modifier.
function Global.GetWeaponComponentDamageModifier(componentHash)
	return _in(0x4a0e3855, _ch(componentHash), _rf)
end

--- GET_WEAPON_COMPONENT_HUD_STATS
function Global.GetWeaponComponentHudStats(componentHash, outData)
	return _in(0xB3CAF387AE12E9F8, _ch(componentHash), _ii(outData) --[[ may be optional ]], _r)
end

--- A getter for `CWeaponFallOffModifier` damage modifier value in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component damage modifier.
function Global.GetWeaponComponentRangeDamageModifier(componentHash)
	return _in(0xe134fb8d, _ch(componentHash), _rf)
end

--- A getter for `CWeaponFallOffModifier` range modifier value in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component range modifier.
function Global.GetWeaponComponentRangeModifier(componentHash)
	return _in(0x2fd0bc1b, _ch(componentHash), _rf)
end

--- A getter for `ReticuleHash` in a weapon scope component.
-- @param componentHash Weapon component name hash.
-- @return The hash of the reticule camera.
function Global.GetWeaponComponentReticuleHash(componentHash)
	return _in(0xf9ab9297, _ch(componentHash), _ri)
end

--- GET_WEAPON_COMPONENT_TYPE_MODEL
function Global.GetWeaponComponentTypeModel(componentHash)
	return _in(0x0DB57B41EC1DB083, _ch(componentHash), _ri)
end

--- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_COUNT
function Global.GetWeaponComponentVariantExtraComponentCount(componentHash)
	return _in(0x6558AC7C17BFEF58, _ch(componentHash), _ri)
end
Global.N_0x6558ac7c17bfef58 = Global.GetWeaponComponentVariantExtraComponentCount

--- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_MODEL
function Global.GetWeaponComponentVariantExtraComponentModel(componentHash, extraComponentIndex)
	return _in(0x4D1CB8DC40208A17, _ch(componentHash), extraComponentIndex, _ri)
end
Global.N_0x4d1cb8dc40208a17 = Global.GetWeaponComponentVariantExtraComponentModel

--- This native does not return damages of weapons from the melee and explosive group.
-- @param componentHash 0 in the decompiled scripts.
-- @return Damages of the weapon.
function Global.GetWeaponDamage(weaponHash, componentHash)
	return _in(0x3133B907D8B32053, _ch(weaponHash), _ch(componentHash), _rf)
end
Global.N_0x3133b907d8b32053 = Global.GetWeaponDamage
Global.GetWeaponDamage = Global.GetWeaponDamage

--- A getter for [\_SET_WEAPON_DAMAGE_MODIFIER](#\_0x4757F00BC6323CFE).
-- @param weaponHash Weapon name hash.
-- @return A weapon damage modifier.
function Global.GetWeaponDamageModifier(weaponHash)
	return _in(0xd979143, _ch(weaponHash), _rf)
end

--- 0=unknown (or incorrect weaponHash)
-- 1= no damage (flare,snowball, petrolcan)
-- 2=melee
-- 3=bullet
-- 4=force ragdoll fall
-- 5=explosive (RPG, Railgun, grenade)
-- 6=fire(molotov)
-- 8=fall(WEAPON_HELI_CRASH)
-- 10=electric
-- 11=barbed wire
-- 12=extinguisher
-- 13=gas
-- 14=water cannon(WEAPON_HIT_BY_WATER_CANNON)
function Global.GetWeaponDamageType(weaponHash)
	return _in(0x3BE0BB12D25FB305, _ch(weaponHash), _ri)
end

--- // members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure
-- struct WeaponHudStatsData
-- {
-- alignas(8) uint8_t hudDamage; // 0x0000
-- alignas(8) uint8_t hudSpeed; // 0x0008
-- alignas(8) uint8_t hudCapacity; // 0x0010
-- alignas(8) uint8_t hudAccuracy; // 0x0018
-- alignas(8) uint8_t hudRange; // 0x0020
-- };
-- Usage:
-- WeaponHudStatsData data;
-- if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))
-- {
-- // uint8_t damagePercentage = data.hudDamage etc...
-- }
function Global.GetWeaponHudStats(weaponHash, outData)
	return _in(0xD92C739EE34C9EBA, _ch(weaponHash), _ii(outData) --[[ may be optional ]], _r)
end

--- Drops the current weapon and returns the object
-- Unknown behavior when unarmed.
function Global.GetWeaponObjectFromPed(ped, p1)
	return _in(0xCAE1DC9A0E22A16D, ped, p1, _ri)
end

--- _GET_WEAPON_OBJECT_LIVERY_COLOR
function Global.GetWeaponObjectLiveryColor(weaponObject, camoComponentHash)
	return _in(0xB3EA4FEABF41464B, weaponObject, _ch(camoComponentHash), _ri)
end
Global.N_0xb3ea4feabf41464b = Global.GetWeaponObjectLiveryColor

--- GET_WEAPON_OBJECT_TINT_INDEX
function Global.GetWeaponObjectTintIndex(weapon)
	return _in(0xCD183314F7CD2E57, weapon, _ri)
end

--- A getter for the recoil shake amplitude of a weapon.
-- @param weaponHash Weapon name hash.
-- @return The recoil shake amplitude of a weapon.
function Global.GetWeaponRecoilShakeAmplitude(weaponHash)
	return _in(0x5e1af5f, _ch(weaponHash), _rf)
end

--- _GET_WEAPON_TIME_BETWEEN_SHOTS
function Global.GetWeaponTimeBetweenShots(weaponHash)
	return _in(0x065D2AACAD8CF7A4, _ch(weaponHash), _rf)
end
Global.N_0x065d2aacad8cf7a4 = Global.GetWeaponTimeBetweenShots

--- GET_WEAPON_TINT_COUNT
function Global.GetWeaponTintCount(weaponHash)
	return _in(0x5DCF6C5CAB2E9BF7, _ch(weaponHash), _ri)
end

--- GET_WEAPON_TYPE_FROM_PICKUP_TYPE
function Global.GetWeaponTypeFromPickupType(pickupHash)
	return _in(0x08F96CA6C551AD51, _ch(pickupHash), _ri)
end
Global.N_0x08f96ca6c551ad51 = Global.GetWeaponTypeFromPickupType
Global.GetWeaponHashFromPickup = Global.GetWeaponTypeFromPickupType

--- Gets and returns the hash of the group of the specified weapon (group names can be found/changed under "Group" in the weapons' meta file).
-- Note that the group is **not** the same as the location on the weapon wheel.
-- @param weaponHash The hash of the weapon.
-- @return Returns the hash of the group of the weapon. Hashes:| Group                  | Unsigned   | Signed      | Example                 |
-- 		|:----------------------:|:----------:|:-----------:|:-----------------------:|
-- 		| GROUP_DIGISCANNER      | 3539449195 | -755518101  | WEAPON_DIGISCANNER      |
-- 		| GROUP_FIREEXTINGUISHER | 4257178988 | -37788308   | WEAPON_FIREEXTINGUISHER |
-- 		| GROUP_HACKINGDEVICE    | 1175761940 | 1175761940  | WEAPON_HACKINGDEVICE    |
-- 		| GROUP_HEAVY            | 2725924767 | -1569042529 | WEAPON_RPG              |
-- 		| GROUP_MELEE            | 3566412244 | -728555052  | WEAPON_BAT              |
-- 		| GROUP_METALDETECTOR    | 3759491383 | -535475913  | WEAPON_METALDETECTOR    |
-- 		| GROUP_MG               | 1159398588 | 1159398588  | WEAPON_COMBATMG         |
-- 		| GROUP_NIGHTVISION      | 3493187224 | -801780072  | GADGET_NIGHTVISION      |
-- 		| GROUP_PARACHUTE        | 431593103  | 431593103   | GADGET_PARACHUTE        |
-- 		| GROUP_PETROLCAN        | 1595662460 | 1595662460  | WEAPON_PETROLCAN        |
-- 		| GROUP_PISTOL           | 416676503  | 416676503   | WEAPON_PISTOL           |
-- 		| GROUP_RIFLE            | 970310034  | 970310034   | WEAPON_ASSAULTRIFLE     |
-- 		| GROUP_SHOTGUN          | 860033945  | 860033945   | WEAPON_PUMPSHOTGUN      |
-- 		| GROUP_SMG              | 3337201093 | -957766203  | WEAPON_MICROSMG         |
-- 		| GROUP_SNIPER           | 3082541095 | -1212426201 | WEAPON_SNIPERRIFLE      |
-- 		| GROUP_STUNGUN          | 690389602  | 690389602   | WEAPON_STUNGUN          |
-- 		| GROUP_THROWN           | 1548507267 | 1548507267  | WEAPON_SNOWBALL         |
-- 		| GROUP_TRANQILIZER      | 75159441   | 75159441    | WEAPON_TRANQUILIZER     |
-- 		| GROUP_UNARMED          | 2685387236 | -1609580060 | WEAPON_UNARMED          |
function Global.GetWeapontypeGroup(weaponHash)
	return _in(0xC3287EE3050FB74C, _ch(weaponHash), _ri)
end

--- Returns the model of any weapon.
-- Can also take an ammo hash?
-- sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));
function Global.GetWeapontypeModel(weaponHash)
	return _in(0xF46CDC33180FDA94, _ch(weaponHash), _ri)
end

--- GET_WEAPONTYPE_SLOT
function Global.GetWeapontypeSlot(weaponHash)
	return _in(0x4215460B9B8B7FA0, _ch(weaponHash), _ri)
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function Global.GetWeatherTypeTransition()
	return _in(0xF3BBE884A14BB413, _i, _i, _f)
end

--- GET_WIND_DIRECTION
function Global.GetWindDirection()
	return _in(0x1F400FEF721170DA, _rv)
end

--- GET_WIND_SPEED
function Global.GetWindSpeed()
	return _in(0xA8CF1CC0AFCD3F12, _rf)
end

--- Converts a screen coordinate into its relative world coordinate.
-- @param screenX A screen horizontal axis coordinate (0.0 - 1.0).
-- @param screenY A screen vertical axis coordinate (0.0 - 1.0).
-- @param worldVector The world coord vector pointer.
-- @param normalVector The screen normal vector pointer.
-- @return A Vector3 representing the world coordinates relative to the specified screen coordinates and a screen plane normal Vector3 (normalised).
function Global.GetWorldCoordFromScreenCoord(screenX, screenY)
	return _in(0xc81d0659, screenX, screenY, _v, _v)
end

--- Returns the coordinates of an entity-bone.
function Global.GetWorldPositionOfEntityBone(entity, boneIndex)
	return _in(0x44A8FCB8ED227738, entity, boneIndex, _rv)
end

--- GET_ZONE_AT_COORDS
function Global.GetZoneAtCoords(x, y, z)
	return _in(0x27040C25DE6CB2F4, x, y, z, _ri)
end

--- 'zoneName' corresponds to an entry in 'popzone.ipl'.
-- AIRP = Los Santos International Airport
-- ALAMO = Alamo Sea
-- ALTA = Alta
-- ARMYB = Fort Zancudo
-- BANHAMC = Banham Canyon Dr
-- BANNING = Banning
-- BEACH = Vespucci Beach
-- BHAMCA = Banham Canyon
-- BRADP = Braddock Pass
-- BRADT = Braddock Tunnel
-- BURTON = Burton
-- CALAFB = Calafia Bridge
-- CANNY = Raton Canyon
-- CCREAK = Cassidy Creek
-- CHAMH = Chamberlain Hills
-- CHIL = Vinewood Hills
-- CHU = Chumash
-- CMSW = Chiliad Mountain State Wilderness
-- CYPRE = Cypress Flats
-- DAVIS = Davis
-- DELBE = Del Perro Beach
-- DELPE = Del Perro
-- DELSOL = La Puerta
-- DESRT = Grand Senora Desert
-- DOWNT = Downtown
-- DTVINE = Downtown Vinewood
-- EAST_V = East Vinewood
-- EBURO = El Burro Heights
-- ELGORL = El Gordo Lighthouse
-- ELYSIAN = Elysian Island
-- GALFISH = Galilee
-- GOLF = GWC and Golfing Society
-- GRAPES = Grapeseed
-- GREATC = Great Chaparral
-- HARMO = Harmony
-- HAWICK = Hawick
-- HORS = Vinewood Racetrack
-- HUMLAB = Humane Labs and Research
-- JAIL = Bolingbroke Penitentiary
-- KOREAT = Little Seoul
-- LACT = Land Act Reservoir
-- LAGO = Lago Zancudo
-- LDAM = Land Act Dam
-- LEGSQU = Legion Square
-- LMESA = La Mesa
-- LOSPUER = La Puerta
-- MIRR = Mirror Park
-- MORN = Morningwood
-- MOVIE = Richards Majestic
-- MTCHIL = Mount Chiliad
-- MTGORDO = Mount Gordo
-- MTJOSE = Mount Josiah
-- MURRI = Murrieta Heights
-- NCHU = North Chumash
-- NOOSE = N.O.O.S.E
-- OCEANA = Pacific Ocean
-- PALCOV = Paleto Cove
-- PALETO = Paleto Bay
-- PALFOR = Paleto Forest
-- PALHIGH = Palomino Highlands
-- PALMPOW = Palmer-Taylor Power Station
-- PBLUFF = Pacific Bluffs
-- PBOX = Pillbox Hill
-- PROCOB = Procopio Beach
-- RANCHO = Rancho
-- RGLEN = Richman Glen
-- RICHM = Richman
-- ROCKF = Rockford Hills
-- RTRAK = Redwood Lights Track
-- SANAND = San Andreas
-- SANCHIA = San Chianski Mountain Range
-- SANDY = Sandy Shores
-- SKID = Mission Row
-- SLAB = Stab City
-- STAD = Maze Bank Arena
-- STRAW = Strawberry
-- TATAMO = Tataviam Mountains
-- TERMINA = Terminal
-- TEXTI = Textile City
-- TONGVAH = Tongva Hills
-- TONGVAV = Tongva Valley
-- VCANA = Vespucci Canals
-- VESP = Vespucci
-- VINE = Vinewood
-- WINDF = Ron Alternates Wind Farm
-- WVINE = West Vinewood
-- ZANCUDO = Zancudo River
-- ZP_ORT = Port of South Los Santos
-- ZQ_UAR = Davis Quartz
function Global.GetZoneFromNameId(zoneName)
	return _in(0x98CD1D2934B76CC1, _ts(zoneName), _ri)
end

--- GET_ZONE_POPSCHEDULE
function Global.GetZonePopschedule(zoneId)
	return _in(0x4334BC40AA0CB4BB, zoneId, _ri)
end

--- Gets the zone scumminess level, used to calculate the cellphone signal strength.
-- ```cpp
-- enum eZoneScumminess
-- {
-- SCUMMINESS_POSH = 0,
-- SCUMMINESS_NICE = 1,
-- SCUMMINESS_ABOVE_AVERAGE = 2,
-- SCUMMINESS_BELOW_AVERAGE = 3,
-- SCUMMINESS_CRAP = 4,
-- SCUMMINESS_SCUM = 5
-- }
-- ```
-- @param zoneId The zone id
-- @return The zone scumminess level
function Global.GetZoneScumminess(zoneId)
	return _in(0x5F7B268D15BA0739, zoneId, _ri)
end

--- Achievements from 0-57
-- more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
function Global.GiveAchievementToPlayer(achievement)
	return _in(0xBEC7076D64130195, achievement, _r)
end

--- Gives a weapon to PED with a delay, example:
-- WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
function Global.GiveDelayedWeaponToPed(ped, weaponHash, ammoCount, bForceInHand)
	return _in(0xB282DC6EBD803C75, ped, _ch(weaponHash), ammoCount, bForceInHand)
end

--- _GIVE_LOADOUT_TO_PED
function Global.GiveLoadoutToPed(ped, loadoutHash)
	return _in(0x68F8BE6AF5CDF8A6, ped, _ch(loadoutHash))
end
Global.N_0x68f8be6af5cdf8a6 = Global.GiveLoadoutToPed

--- Gives the ped a helmet. Can be removed by invoking [`REMOVE_PED_HELMET`](#0xA7B2458D0AD6DED8).
-- ```cpp
-- enum ePedCompFlags {
-- PV_FLAG_NONE                  = 0, // 0
-- PV_FLAG_BULKY                 = 1, // 1<<0
-- PV_FLAG_JOB                   = 2, // 1<<1
-- PV_FLAG_SUNNY                 = 4, // 1<<2
-- PV_FLAG_WET                   = 8, // 1<<3
-- PV_FLAG_COLD                  = 16, // 1<<4
-- PV_FLAG_NOT_IN_CAR            = 32, // 1<<5
-- PV_FLAG_BIKE_ONLY             = 64, // 1<<6
-- PV_FLAG_NOT_INDOORS           = 128, // 1<<7
-- PV_FLAG_FIRE_RETARDENT        = 256, // 1<<8
-- PV_FLAG_ARMOURED              = 512, // 1<<9
-- PV_FLAG_LIGHTLY_ARMOURED      = 1024, // 1<<10
-- PV_FLAG_HIGH_DETAIL           = 2048, // 1<<11
-- PV_FLAG_DEFAULT_HELMET        = 4096, // 1<<12
-- PV_FLAG_RANDOM_HELMET         = 8192, // 1<<13
-- PV_FLAG_SCRIPT_HELMET         = 16384, // 1<<14
-- PV_FLAG_FLIGHT_HELMET         = 32768, // 1<<15
-- PV_FLAG_HIDE_IN_FIRST_PERSON  = 65536, // 1<<16
-- PV_FLAG_USE_PHYSICS_HAT_2     = 131072, // 1<<17
-- PV_FLAG_PILOT_HELMET          = 262144 // 1<<18
-- };
-- ```
-- @param ped Ped index.
-- @param cannotRemove Can remove helmet or not.
-- @param helmetFlag Flag for the helmet, the helmet appearance depends on the ped it's being applied on.
-- @param textureIndex Texture index; any value other than `-1` will overwrite the default texture index. The helmet texture index needs to be valid for it to be applied.
function Global.GivePedHelmet(ped, cannotRemove, helmetFlag, textureIndex)
	return _in(0x54C7C4A94367717E, ped, cannotRemove, helmetFlag, textureIndex)
end

--- Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
-- If a message hasn't been created already, this function does nothing.
-- If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
-- The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
-- Call order:
-- SET_PED_TO_RAGDOLL
-- CREATE_NM_MESSAGE
-- GIVE_PED_NM_MESSAGE
-- Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
-- SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
-- CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
-- CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
-- CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
function Global.GivePedNmMessage(ped)
	return _in(0xB158DFCCC56E5C5B, ped)
end

--- ```
-- p1 is either 1 or 2 in the PC scripts.
-- ```
-- This native is used to "give"/duplicate a player ped to a frontend menu as configured via the `ACTIVATE_FRONTEND_MENU` native, you first must utilize the [CLONE_PED](#\_0xEF29A16337FACADB) to clone said ped.
function Global.GivePedToPauseMenu(ped, p1)
	return _in(0xAC0BFBDC3BE00E14, ped, p1)
end

--- GIVE_PLAYER_RAGDOLL_CONTROL
function Global.GivePlayerRagdollControl(player, toggle)
	return _in(0x3C49C870E66F0A28, player, toggle)
end

--- GIVE_WEAPON_COMPONENT_TO_PED
function Global.GiveWeaponComponentToPed(ped, weaponHash, componentHash)
	return _in(0xD966D51AA5B28BB9, ped, _ch(weaponHash), _ch(componentHash))
end

--- addonHash:
-- (use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
-- ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
function Global.GiveWeaponComponentToWeaponObject(weaponObject, addonHash)
	return _in(0x33E179436C0B31DB, weaponObject, _ch(addonHash))
end

--- GIVE_WEAPON_OBJECT_TO_PED
function Global.GiveWeaponObjectToPed(weaponObject, ped)
	return _in(0xB1FA61371AF7C4B7, weaponObject, ped)
end

--- GIVE_WEAPON_TO_PED
function Global.GiveWeaponToPed(ped, weaponHash, ammoCount, isHidden, bForceInHand)
	return _in(0xBF0FD6E56C964FCB, ped, _ch(weaponHash), ammoCount, isHidden, bForceInHand)
end

--- GOLF_TRAIL_GET_MAX_HEIGHT
function Global.GolfTrailGetMaxHeight()
	return _in(0xA4819F5E23E2FFAD, _rf)
end
Global.N_0xa4819f5e23e2ffad = Global.GolfTrailGetMaxHeight

--- GOLF_TRAIL_GET_VISUAL_CONTROL_POINT
function Global.GolfTrailGetVisualControlPoint(p0)
	return _in(0xA4664972A9B8F8BA, p0, _rv)
end
Global.N_0xa4664972a9b8f8ba = Global.GolfTrailGetVisualControlPoint

--- GOLF_TRAIL_SET_COLOUR
function Global.GolfTrailSetColour(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x12995F2E53FFA601, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end
Global.N_0x12995f2e53ffa601 = Global.GolfTrailSetColour

--- GOLF_TRAIL_SET_ENABLED
function Global.GolfTrailSetEnabled(toggle)
	return _in(0xA51C4B86B71652AE, toggle)
end
Global.N_0xa51c4b86b71652ae = Global.GolfTrailSetEnabled

--- GOLF_TRAIL_SET_FACING
function Global.GolfTrailSetFacing(p0)
	return _in(0x06F761EA47C1D3ED, p0)
end
Global.N_0x06f761ea47c1d3ed = Global.GolfTrailSetFacing

--- 12 matches across 4 scripts. All 4 scripts were job creators.
-- type ranged from 0 - 2.
-- p4 was always 0.2f. Likely scale.
-- assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
-- Tested but noticed nothing.
function Global.GolfTrailSetFixedControlPoint(type, xPos, yPos, zPos, p4, red, green, blue, alpha)
	return _in(0xB1BB03742917A5D6, type, xPos, yPos, zPos, p4, red, green, blue, alpha)
end
Global.N_0xb1bb03742917a5d6 = Global.GolfTrailSetFixedControlPoint

--- p8 seems to always be false.
function Global.GolfTrailSetPath(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x312342E1A4874F3F, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
Global.N_0x312342e1a4874f3f = Global.GolfTrailSetPath

--- GOLF_TRAIL_SET_RADIUS
function Global.GolfTrailSetRadius(p0, p1, p2)
	return _in(0x2485D34E50A22E84, p0, p1, p2)
end
Global.N_0x2485d34e50a22e84 = Global.GolfTrailSetRadius

--- Only appeared in Golf & Golf_mp. Parameters were all ptrs
function Global.GolfTrailSetShaderParams(p0, p1, p2, p3, p4)
	return _in(0x9CFDD90B2B844BF7, p0, p1, p2, p3, p4)
end
Global.N_0x9cfdd90b2b844bf7 = Global.GolfTrailSetShaderParams

--- GOLF_TRAIL_SET_TESSELLATION
function Global.GolfTrailSetTessellation(p0, p1)
	return _in(0xDBAA5EC848BA2D46, p0, p1)
end
Global.N_0xdbaa5ec848ba2d46 = Global.GolfTrailSetTessellation

--- _GRASS_LOD_RESET_SCRIPT_AREAS
function Global.GrassLodResetScriptAreas()
	return _in(0x302C91AB2D477F7E)
end
Global.N_0x302c91ab2d477f7e = Global.GrassLodResetScriptAreas

--- Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
function Global.GrassLodShrinkScriptAreas(x, y, z, radius, p4, p5, p6)
	return _in(0x6D955F6A9E0295B1, x, y, z, radius, p4, p5, p6)
end
Global.N_0x6d955f6a9e0295b1 = Global.GrassLodShrinkScriptAreas

--- HAS_ACHIEVEMENT_BEEN_PASSED
function Global.HasAchievementBeenPassed(achievement)
	return _in(0x867365E111A3B6EB, achievement, _r)
end

--- HAS_ACTION_MODE_ASSET_LOADED
function Global.HasActionModeAssetLoaded(asset)
	return _in(0xE4B5F4BF2CB24E65, _ts(asset), _r)
end

--- HAS_ADDITIONAL_TEXT_LOADED
function Global.HasAdditionalTextLoaded(slot)
	return _in(0x02245FE4BED318B8, slot, _r)
end

--- HAS_ANIM_DICT_LOADED
function Global.HasAnimDictLoaded(animDict)
	return _in(0xD031A9162D01088C, _ts(animDict), _r)
end

--- if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))
function Global.HasAnimEventFired(entity, actionHash)
	return _in(0xEAF4CD9EA3E7E922, entity, _ch(actionHash), _r)
end

--- Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.
-- Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
function Global.HasAnimSetLoaded(animSet)
	return _in(0xC4EA073D86FB29B0, _ts(animSet), _r)
end

--- Hardcoded to always return true.
function Global.HasAsyncInstallFinished()
	return _in(0x14832BF2ABA53FC5, _r)
end
Global.N_0x14832bf2aba53fc5 = Global.HasAsyncInstallFinished

--- p3 - possibly radius?
function Global.HasBulletImpactedInArea(x, y, z, p3, p4, p5)
	return _in(0x9870ACFB89A90995, x, y, z, p3, p4, p5, _r)
end

--- HAS_BULLET_IMPACTED_IN_BOX
function Global.HasBulletImpactedInBox(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xDC8C5D7CFEAB8394, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

--- This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
-- INT_SCORES_SCORTED was a hash collision
function Global.HasButtonCombinationJustBeenEntered(hash, amount)
	return _in(0x071E2A839DE82D90, _ch(hash), amount, _r)
end
Global.N_0x071e2a839de82d90 = Global.HasButtonCombinationJustBeenEntered

--- Get inputted "Cheat code", for example:
-- while (TRUE)
-- {
-- if (MISC::_557E43C447E700A8(${fugitive}))
-- {
-- // Do something.
-- }
-- SYSTEM::WAIT(0);
-- }
-- Calling this will also set the last saved string hash to zero.
function Global.HasCheatStringJustBeenEntered(hash)
	return _in(0x557E43C447E700A8, _ch(hash), _r)
end
Global.N_0x557e43c447e700a8 = Global.HasCheatStringJustBeenEntered

--- Alias for HAS_ANIM_SET_LOADED.
function Global.HasClipSetLoaded(clipSet)
	return _in(0x318234F4F3738AF3, _ts(clipSet), _r)
end

--- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN
function Global.HasClosestObjectOfTypeBeenBroken(p0, p1, p2, p3, modelHash, p5)
	return _in(0x761B0E69AC4D007E, p0, p1, p2, p3, _ch(modelHash), p5, _r)
end

--- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED
function Global.HasClosestObjectOfTypeBeenCompletelyDestroyed(x, y, z, radius, modelHash, p5)
	return _in(0x46494A2475701343, x, y, z, radius, _ch(modelHash), p5, _r)
end
Global.N_0x46494a2475701343 = Global.HasClosestObjectOfTypeBeenCompletelyDestroyed

--- Sets the value of the specified variable to 0.
-- Always returns true.
function Global.HasCloudRequestsFinished(unused)
	return _in(0x46E2B844905BC5F0, _i --[[ actually bool ]], unused, _r)
end
Global.Nullify = Global.HasCloudRequestsFinished

--- HAS_COLLISION_FOR_MODEL_LOADED
function Global.HasCollisionForModelLoaded(model)
	return _in(0x22CCA434E368F03A, _ch(model), _r)
end

--- HAS_COLLISION_LOADED_AROUND_ENTITY
function Global.HasCollisionLoadedAroundEntity(entity)
	return _in(0xE9676F61BC0B3321, entity, _r)
end

--- Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
function Global.HasCutFileLoaded(cutsceneName)
	return _in(0xA1C996C2A744262E, _ts(cutsceneName), _r)
end
Global.N_0xa1c996c2a744262e = Global.HasCutFileLoaded

--- HAS_CUTSCENE_CUT_THIS_FRAME
function Global.HasCutsceneCutThisFrame()
	return _in(0x708BDD8CD795B043, _r)
end
Global.N_0x708bdd8cd795b043 = Global.HasCutsceneCutThisFrame

--- HAS_CUTSCENE_FINISHED
function Global.HasCutsceneFinished()
	return _in(0x7C0A893088881D57, _r)
end

--- HAS_CUTSCENE_LOADED
function Global.HasCutsceneLoaded()
	return _in(0xC59F528E9AB9F339, _r)
end

--- HAS_*
function Global.HasDirectorModeBeenTriggered()
	return _in(0xA277800A9EAE340E, _r)
end
Global.N_0xa277800a9eae340e = Global.HasDirectorModeBeenTriggered

--- ```
-- P3 is always 3 as far as i cant tell
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.HasEntityAnimFinished(entity, animDict, animName, p3)
	return _in(0x20B711662962B472, entity, _ts(animDict), _ts(animName), p3, _r)
end

--- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT
function Global.HasEntityBeenDamagedByAnyObject(entity)
	return _in(0x95EB9964FF5C5C65, entity, _r)
end

--- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED
function Global.HasEntityBeenDamagedByAnyPed(entity)
	return _in(0x605F5A140F202491, entity, _r)
end

--- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE
function Global.HasEntityBeenDamagedByAnyVehicle(entity)
	return _in(0xDFD5033FDBA0A9C8, entity, _r)
end

--- Entity 1 = Victim
-- Entity 2 = Attacker
-- p2 seems to always be 1
function Global.HasEntityBeenDamagedByEntity(entity1, entity2, p2)
	return _in(0xC86D67D52A707CF8, entity1, entity2, p2, _r)
end

--- It determines what weapons caused damage:
-- If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
-- If you want to define any melee weapon, second parameter=0, third parameter=1.
-- If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
function Global.HasEntityBeenDamagedByWeapon(entity, weaponHash, weaponType)
	return _in(0x131D401334815E94, entity, _ch(weaponHash), weaponType, _r)
end

--- Checks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.
-- The direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false.
-- @param entity1 Entity to start from
-- @param entity2 Entity to check to
-- @param flags A bit mask with bits 1, 2, 4, etc, relating to collider types (see: [START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE](#\_0x377906D8A31E5586)). 17 is most common in GTA scripts.
-- @return Returns `true` if no collider of specified bitmask is hit.
function Global.HasEntityClearLosToEntity(entity1, entity2, flags)
	return _in(0xFCDFF7B72D23A1AC, entity1, entity2, flags, _r)
end

--- Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
-- This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
function Global.HasEntityClearLosToEntityInFront(entity1, entity2)
	return _in(0x0267D00AF114F17A, entity1, entity2, _r)
end

--- NativeDB Introduced: v1868
function Global.HasEntityClearLosToEntity_2(entity1, entity2, traceType)
	return _in(0x394BDE2A7BBA031E, entity1, entity2, traceType, _ri)
end
Global.N_0x394bde2a7bba031e = Global.HasEntityClearLosToEntity_2

--- Called on tick.
-- Tested with vehicles, returns true whenever the vehicle is touching any entity.
-- Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
function Global.HasEntityCollidedWithAnything(entity)
	return _in(0x8BAD02F0368D9E14, entity, _r)
end

--- HAS_*
function Global.HasFilledVehiclePopulation()
	return _in(0x91D6DD290888CBAB, _r)
end
Global.N_0x91d6dd290888cbab = Global.HasFilledVehiclePopulation

--- HAS_FORCE_CLEANUP_OCCURRED
function Global.HasForceCleanupOccurred(cleanupFlags)
	return _in(0xC968670BFACE42D9, cleanupFlags, _r)
end

--- HAS_LOADED_MP_DATA_SET
-- @return Returns true if the audio for the Multiplayer data set has loaded
function Global.HasLoadedMpDataSet()
	return _in(0x544810ED9DB6BBE6, _r)
end
Global.N_0x544810ed9db6bbe6 = Global.HasLoadedMpDataSet
Global.HasMultiplayerAudioDataLoaded = Global.HasLoadedMpDataSet

--- HAS_LOADED_SP_DATA_SET
-- @return Returns true if the audio for the Single Player data set has loaded
function Global.HasLoadedSpDataSet()
	return _in(0x5B50ABB1FE3746F4, _r)
end
Global.N_0x5b50abb1fe3746f4 = Global.HasLoadedSpDataSet
Global.HasMultiplayerAudioDataUnloaded = Global.HasLoadedSpDataSet

--- Returns whether or not the specific minimap overlay has loaded.
-- @param id A minimap overlay ID.
-- @return A boolean indicating load status.
function Global.HasMinimapOverlayLoaded(id)
	return _in(0xf7535f32, id, _r)
end

--- Returns whether the specified model (archetype) is currently loaded.
-- Note that this will return 'true' even if the model has been requested and loaded by something other than the current script, if you're intending to actually use the model in a later frame, you should call REQUEST_MODEL anyway.
-- @param model The model hash to check for.
-- @return A boolean indicating whether the archetype is loaded (true) or not (false).
function Global.HasModelLoaded(model)
	return _in(0x98A4EB5D89A0C952, _ch(model), _r)
end

--- HAS_NAMED_PTFX_ASSET_LOADED
function Global.HasNamedPtfxAssetLoaded(fxName)
	return _in(0x8702416E512EC454, _ts(fxName), _r)
end

--- HAS_NETWORK_TIME_STARTED
function Global.HasNetworkTimeStarted()
	return _in(0x46718ACEEDEAFC84, _r)
end
Global.N_0x46718aceedeafc84 = Global.HasNetworkTimeStarted

--- NativeDB Added Parameter 2: Any p1
function Global.HasObjectBeenBroken(object)
	return _in(0x8ABFB70C49CC43E2, object, _r)
end

--- It determines what weapons caused damage:
-- If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
-- If you want to define any melee weapon, second parameter=0, third parameter=1.
-- If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
function Global.HasPedBeenDamagedByWeapon(ped, weaponHash, weaponType)
	return _in(0x2D343D2219CD027A, ped, _ch(weaponHash), weaponType, _r)
end

--- p2 should be FALSE, otherwise it seems to always return FALSE
-- Bool does not check if the weapon is current equipped, unfortunately.
function Global.HasPedGotWeapon(ped, weaponHash, p2)
	return _in(0x8DECB02F88F428BC, ped, _ch(weaponHash), p2, _r)
end

--- HAS_PED_GOT_WEAPON_COMPONENT
function Global.HasPedGotWeaponComponent(ped, weaponHash, componentHash)
	return _in(0xC593212475FAE340, ped, _ch(weaponHash), _ch(componentHash), _r)
end

--- HAS_PED_HEAD_BLEND_FINISHED
function Global.HasPedHeadBlendFinished(ped)
	return _in(0x654CD0A825161131, ped, _r)
end

--- HAS_PED_PRELOAD_PROP_DATA_FINISHED
function Global.HasPedPreloadPropDataFinished(ped)
	return _in(0x784002A632822099, ped, _r)
end
Global.N_0x784002a632822099 = Global.HasPedPreloadPropDataFinished

--- HAS_PED_PRELOAD_VARIATION_DATA_FINISHED
function Global.HasPedPreloadVariationDataFinished(ped)
	return _in(0x66680A92700F43DF, ped, _r)
end
Global.N_0x66680a92700f43df = Global.HasPedPreloadVariationDataFinished

--- HAS_PED_RECEIVED_EVENT
function Global.HasPedReceivedEvent(ped, eventId)
	return _in(0x8507BCB710FA6DC0, ped, eventId, _r)
end

--- HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED
function Global.HasPedheadshotImgUploadFailed()
	return _in(0x876928DDDFCCC9CD, _r)
end
Global.N_0x876928dddfccc9cd = Global.HasPedheadshotImgUploadFailed

--- HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED
function Global.HasPedheadshotImgUploadSucceeded()
	return _in(0xE8A169E666CBC541, _r)
end
Global.N_0xe8a169e666cbc541 = Global.HasPedheadshotImgUploadSucceeded

--- HAS_PICKUP_BEEN_COLLECTED
function Global.HasPickupBeenCollected(pickup)
	return _in(0x80EC48E6679313F9, pickup, _r)
end

--- _HAS_PLAYER_BEEN_SHOT_BY_COP
-- @param ms Time since last bullet fired
-- @param p2 Always false
function Global.HasPlayerBeenShotByCop(player, ms, p2)
	return _in(0xBC0753C9CA14B506, player, ms, p2, _r)
end
Global.N_0xbc0753c9ca14b506 = Global.HasPlayerBeenShotByCop

--- HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE
function Global.HasPlayerBeenSpottedInStolenVehicle(player)
	return _in(0xD705740BB0A1CF4C, player, _r)
end

--- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
function Global.HasPlayerDamagedAtLeastOneNonAnimalPed(player)
	return _in(0xE4B90F367BD81752, player, _r)
end

--- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED
function Global.HasPlayerDamagedAtLeastOnePed(player)
	return _in(0x20CE80B0C2BF4ACC, player, _r)
end

--- HAS_PLAYER_LEFT_THE_WORLD
function Global.HasPlayerLeftTheWorld(player)
	return _in(0xD55DDFB47991A294, player, _r)
end

--- HAS_PRELOAD_MODS_FINISHED
function Global.HasPreloadModsFinished(p0)
	return _in(0x06F43E5175EB6D96, p0, _r)
end

--- HAS_PTFX_ASSET_LOADED
function Global.HasPtfxAssetLoaded()
	return _in(0xCA7D9B86ECA7481B, _r)
end

--- Hardcoded to return false.
function Global.HasResumedFromSuspend()
	return _in(0xE8B9C0EC9E183F35, _r)
end
Global.N_0xe8b9c0ec9e183f35 = Global.HasResumedFromSuspend

--- HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT
function Global.HasScaleformContainerMovieLoadedIntoParent(scaleformHandle)
	return _in(0x8217150E1217EBFD, scaleformHandle, _r)
end

--- Only values used in the scripts are:
-- "heist_mp"
-- "heistmap_mp"
-- "instructional_buttons"
-- "heist_pre"
function Global.HasScaleformMovieFilenameLoaded(scaleformName)
	return _in(0x0C1C5D756FB5F337, _ts(scaleformName), _r)
end
Global.N_0x0c1c5d756fb5f337 = Global.HasScaleformMovieFilenameLoaded
Global.HasNamedScaleformMovieLoaded = Global.HasScaleformMovieFilenameLoaded

--- HAS_SCALEFORM_MOVIE_LOADED
function Global.HasScaleformMovieLoaded(scaleformHandle)
	return _in(0x85F01B8D5B90570E, scaleformHandle, _r)
end

--- HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED
function Global.HasScaleformScriptHudMovieLoaded(hudComponent)
	return _in(0xDF6E5987D2B4D140, hudComponent, _r)
end
Global.HasHudScaleformLoaded = Global.HasScaleformScriptHudMovieLoaded

--- Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
function Global.HasScriptLoaded(scriptName)
	return _in(0xE6CC9F3BA0FB9EF1, _ts(scriptName), _r)
end

--- HAS_SCRIPT_WITH_NAME_HASH_LOADED
function Global.HasScriptWithNameHashLoaded(scriptHash)
	return _in(0x5F0F0C783EB16C04, _ch(scriptHash), _r)
end
Global.HasStreamedScriptLoaded = Global.HasScriptWithNameHashLoaded

--- HAS_SOUND_FINISHED
-- @return Returns true if the sound has finished playing, false otherwise.
function Global.HasSoundFinished(soundId)
	return _in(0xFCBDCE714A7C88E5, soundId, _r)
end

--- HAS_STEALTH_MODE_ASSET_LOADED
function Global.HasStealthModeAssetLoaded(asset)
	return _in(0xE977FC5B08AF3441, _ts(asset), _r)
end

--- HAS_STREAMED_TEXTURE_DICT_LOADED
function Global.HasStreamedTextureDictLoaded(textureDict)
	return _in(0x0145F696AAAAD2E4, _ts(textureDict), _r)
end

--- Checks if the specified gxt has loaded into the passed slot.
function Global.HasThisAdditionalTextLoaded(gxt, slot)
	return _in(0xADBF060E2B30C5BC, _ts(gxt), slot, _r)
end

--- HAS_THIS_CUTSCENE_LOADED
function Global.HasThisCutsceneLoaded(cutsceneName)
	return _in(0x228D3D94F8A11C3C, _ts(cutsceneName), _r)
end

--- HAS_VEHICLE_ASSET_LOADED
function Global.HasVehicleAssetLoaded(vehicleAsset)
	return _in(0x1BBE0523B8DB9A21, vehicleAsset, _r)
end

--- Third Parameter = unsure, but pretty sure it is weapon hash
-- --> get_hash_key("weapon_stickybomb")
-- Fourth Parameter = unsure, almost always -1
function Global.HasVehicleGotProjectileAttached(driver, vehicle, weaponHash, p3)
	return _in(0x717C8481234E3B88, driver, vehicle, _ch(weaponHash), p3, _r)
end

--- HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE
function Global.HasVehiclePhoneExplosiveDevice()
	return _in(0x6ADAABD3068C5235, _r)
end
Global.N_0x6adaabd3068c5235 = Global.HasVehiclePhoneExplosiveDevice

--- HAS_VEHICLE_RECORDING_BEEN_LOADED
function Global.HasVehicleRecordingBeenLoaded(recording, script)
	return _in(0x300D614A4C785FC4, recording, _ts(script), _r)
end

--- HAS_WEAPON_ASSET_LOADED
function Global.HasWeaponAssetLoaded(weaponHash)
	return _in(0x36E353271F0E90EE, _ch(weaponHash), _r)
end

--- HAS_WEAPON_GOT_WEAPON_COMPONENT
function Global.HasWeaponGotWeaponComponent(weapon, addonHash)
	return _in(0x76A18844E743BF91, weapon, _ch(addonHash), _r)
end

--- HAVE_ALL_STREAMING_REQUESTS_COMPLETED
function Global.HaveAllStreamingRequestsCompleted(ped)
	return _in(0x7350823473013C02, ped, _r)
end
Global.N_0x7350823473013c02 = Global.HaveAllStreamingRequestsCompleted
Global.HasStreamedPedAssetsLoaded = Global.HaveAllStreamingRequestsCompleted

--- HAVE_CREDITS_REACHED_END
function Global.HaveCreditsReachedEnd()
	return _in(0x075F1D57402C93BA, _r)
end
Global.N_0x075f1d57402c93ba = Global.HaveCreditsReachedEnd

--- HAVE_VEHICLE_MODS_STREAMED_IN
function Global.HaveVehicleModsStreamedIn(vehicle)
	return _in(0x9A83F5F9963775EF, vehicle, _r)
end
Global.N_0x9a83f5f9963775ef = Global.HaveVehicleModsStreamedIn
Global.IsVehicleModLoadDone = Global.HaveVehicleModsStreamedIn

--- HIDE_*_THIS_FRAME
-- Hides area and vehicle name HUD components for one frame.
function Global.HideAreaAndVehicleNameThisFrame()
	return _in(0xA4DEDE28B1814289)
end
Global.N_0xa4dede28b1814289 = Global.HideAreaAndVehicleNameThisFrame

--- HIDE_HELP_TEXT_THIS_FRAME
function Global.HideHelpTextThisFrame()
	return _in(0xD46923FC481CA285)
end

--- I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
function Global.HideHudAndRadarThisFrame()
	return _in(0x719FF505F097FD20)
end

--- This function hides various HUD (Heads-up Display) components.
-- Listed below are the integers and the corresponding HUD component.
-- *   1 : WANTED_STARS
-- *   2 : WEAPON_ICON
-- *   3 : CASH
-- *   4 : MP_CASH
-- *   5 : MP_MESSAGE
-- *   6 : VEHICLE_NAME
-- *   7 : AREA_NAME
-- *   8 : VEHICLE_CLASS
-- *   9 : STREET_NAME
-- *   10 : HELP_TEXT
-- *   11 : FLOATING_HELP_TEXT\_1
-- *   12 : FLOATING_HELP_TEXT\_2
-- *   13 : CASH_CHANGE
-- *   14 : RETICLE
-- *   15 : SUBTITLE_TEXT
-- *   16 : RADIO_STATIONS
-- *   17 : SAVING_GAME
-- *   18 : GAME_STREAM
-- *   19 : WEAPON_WHEEL
-- *   20 : WEAPON_WHEEL_STATS
-- *   21 : HUD_COMPONENTS
-- *   22 : HUD_WEAPONS
-- These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#\_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
function Global.HideHudComponentThisFrame(id)
	return _in(0x6806C51AD12B83B8, id)
end

--- HIDE_LOADING_ON_FADE_THIS_FRAME
function Global.HideLoadingOnFadeThisFrame()
	return _in(0x4B0311D3CDC4648F)
end

--- HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME
function Global.HideMinimapExteriorMapThisFrame()
	return _in(0x5FBAE526203990C9)
end
Global.DisableRadarThisFrame = Global.HideMinimapExteriorMapThisFrame

--- HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME
function Global.HideMinimapInteriorMapThisFrame()
	return _in(0x20FE7FDFEEAD38C0)
end
Global.N_0x20fe7fdfeead38c0 = Global.HideMinimapInteriorMapThisFrame

--- HIDE_NUMBER_ON_BLIP
function Global.HideNumberOnBlip(blip)
	return _in(0x532CFF637EF80148, blip)
end

--- HIDE_PED_BLOOD_DAMAGE_BY_ZONE
function Global.HidePedBloodDamageByZone(ped, p1, p2)
	return _in(0x62AB793144DE75DC, ped, p1, p2)
end
Global.N_0x62ab793144de75dc = Global.HidePedBloodDamageByZone

--- Hides the players weapon during a cutscene.
function Global.HidePedWeaponForScriptedCutscene(ped, toggle)
	return _in(0x6F6981D2253C208F, ped, toggle)
end

--- HIDE_PORTABLE_PICKUP_WHEN_DETACHED
function Global.HidePortablePickupWhenDetached(pickup, toggle)
	return _in(0x867458251D47CCB2, pickup, toggle)
end
Global.N_0x867458251d47ccb2 = Global.HidePortablePickupWhenDetached
Global.HidePickup = Global.HidePortablePickupWhenDetached

--- HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME
function Global.HideScriptedHudComponentThisFrame(id)
	return _in(0xE374C498D8BADC14, id)
end

--- NativeDB Introduced: v1604
function Global.HideVehicleTombstone(vehicle, toggle)
	return _in(0xAE71FB656C600587, vehicle, toggle)
end

--- This native is marked as a deprecated native internally, use [HINT_SCRIPT_AUDIO_BANK](#\_0xFB380A29641EC31A) instead
function Global.HintAmbientAudioBank(bankName, bOverNetwork)
	return _in(0x8F8C0E370AE62F5C, _ts(bankName), bOverNetwork, _r)
end

--- This is marked as a deprecated function internally, please use [HINT_SCRIPT_AUDIO_BANK](#\_0xFB380A29641EC31A) instead.
function Global.HintMissionAudioBank(bankName, bOverNetwork, playerBits)
	return _in(0x40763EA7B9B783E7, _ts(bankName), bOverNetwork, playerBits, _r)
end
Global.N_0x40763ea7b9b783e7 = Global.HintMissionAudioBank

--- Hints that this bank would be good to load if there are free slots.
-- Does not guarentee loading of the bank, [REQUEST_SCRIPT_AUDIO_BANK](#\_0xFE02FFBED8CA9D99) MUST be used as normal before triggering sounds"
-- This native has a new argument on newer game builds:
-- *   **playerBits**: likely used to specifiy players to sync to as a bit mask (1 << (0-128))
function Global.HintScriptAudioBank(bankName, bOverNetwork)
	return _in(0xFB380A29641EC31A, _ts(bankName), bOverNetwork, _r)
end

--- _HIRED_LIMO
function Global.HiredLimo(p0, p1)
	return _in(0x792271AB35C356A4, p0, p1)
end
Global.N_0x792271ab35c356a4 = Global.HiredLimo

--- Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
function Global.HudDisplayLoadingScreenTips()
	return _in(0x488043841BBE156F)
end
Global.N_0x488043841bbe156f = Global.HudDisplayLoadingScreenTips

--- Forces the weapon wheel to show/hide.
function Global.HudForceWeaponWheel(show)
	return _in(0xEB354E5376BC81A7, show)
end
Global.N_0xeb354e5376bc81a7 = Global.HudForceWeaponWheel
Global.ShowWeaponWheel = Global.HudForceWeaponWheel

--- Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
function Global.HudSetWeaponWheelTopSlot(weaponHash)
	return _in(0x72C1056D678BB7D8, _ch(weaponHash))
end
Global.N_0x72c1056d678bb7d8 = Global.HudSetWeaponWheelTopSlot
Global.HudWeaponWheelSetSlotHash = Global.HudSetWeaponWheelTopSlot

--- Returns the weapon hash to the selected/highlighted weapon in the wheel
function Global.HudWeaponWheelGetSelectedHash()
	return _in(0xA48931185F0536FE, _ri)
end
Global.N_0xa48931185f0536fe = Global.HudWeaponWheelGetSelectedHash

--- Returns the weapon hash active in a specific weapon wheel slotList
function Global.HudWeaponWheelGetSlotHash(weaponTypeIndex)
	return _in(0xA13E93403F26C812, weaponTypeIndex, _ri)
end
Global.N_0xa13e93403f26c812 = Global.HudWeaponWheelGetSlotHash

--- Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
function Global.HudWeaponWheelIgnoreControlInput(toggle)
	return _in(0x14C9FDCC41F81F63, toggle)
end
Global.N_0x14c9fdcc41f81f63 = Global.HudWeaponWheelIgnoreControlInput

--- Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
function Global.HudWeaponWheelIgnoreSelection()
	return _in(0x0AFC4AF510774B47)
end
Global.BlockWeaponWheelThisFrame = Global.HudWeaponWheelIgnoreSelection
Global.N_0x0afc4af510774b47 = Global.HudWeaponWheelIgnoreSelection

--- IGNORE_NEXT_RESTART
function Global.IgnoreNextRestart(toggle)
	return _in(0x21FFB63D8C615361, toggle)
end

--- INIT_CREATOR_BUDGET
function Global.InitCreatorBudget()
	return _in(0xB5A4DB34FE89B88A)
end
Global.N_0xb5a4db34fe89b88a = Global.InitCreatorBudget
Global.LoadMissionCreatorData = Global.InitCreatorBudget

--- INIT_SHOP_PED_COMPONENT
function Global.InitShopPedComponent(outComponent)
	return _in(0x1E8C308FD312C036, _ii(outComponent) --[[ may be optional ]])
end

--- INIT_SHOP_PED_PROP
function Global.InitShopPedProp(outProp)
	return _in(0xEB0A2B758F7B850F, _ii(outProp) --[[ may be optional ]])
end

--- INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY
function Global.InitSynchSceneAudioWithEntity(audioName, entity)
	return _in(0x950A154B8DAB6185, _ts(audioName), entity)
end
Global.N_0x950a154b8dab6185 = Global.InitSynchSceneAudioWithEntity
Global.SetSynchronizedAudioEventPositionThisFrame = Global.InitSynchSceneAudioWithEntity

--- INIT_SYNCH_SCENE_AUDIO_WITH_POSITION
function Global.InitSynchSceneAudioWithPosition(audioName, x, y, z)
	return _in(0xC8EDE9BDBCCBA6D4, _ts(audioName), x, y, z)
end
Global.N_0xc8ede9bdbccba6d4 = Global.InitSynchSceneAudioWithPosition

--- INSTANTLY_FILL_PED_POPULATION
function Global.InstantlyFillPedPopulation()
	return _in(0x4759CC730F947C81)
end
Global.N_0x4759cc730f947c81 = Global.InstantlyFillPedPopulation

--- INSTANTLY_FILL_VEHICLE_POPULATION
function Global.InstantlyFillVehiclePopulation()
	return _in(0x48ADC8A773564670)
end
Global.N_0x48adc8a773564670 = Global.InstantlyFillVehiclePopulation

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
-- --------------------------------------------------------
-- if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))
function Global.IntToParticipantindex(value)
	return _in(0x9EC6603812C24710, value, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.IntToPlayerindex(value)
	return _in(0x41BD2A6B006AF756, value, _ri)
end

--- Handles conversation interrupts, using the code-side system for improved timing and to minimize unfriendly logic interactions.
-- @param interrupterPed the ped speaking
-- @param context the line to use
-- @param voiceName the voicename for the audio asset
function Global.InterruptConversation(interrupterPed, context, voiceName)
	return _in(0xA018A12E5C5C2FA6, interrupterPed, _ts(context), _ts(voiceName))
end

--- Handles conversation interrupts and pauses, using the code-side system for improved timing and to minimize unfriendly logic interactions.
-- @param interrupterPed the ped speaking
-- @param context the line to use
-- @param voiceName the voicename for the audio asset
function Global.InterruptConversationAndPause(interrupterPed, context, voiceName)
	return _in(0x8A694D7A68F8DC38, interrupterPed, _ts(context), _ts(voiceName))
end
Global.N_0x8a694d7a68f8dc38 = Global.InterruptConversationAndPause

--- Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
function Global.InvalidateIdleCam()
	return _in(0xF4F2C0D4EE209E20)
end
Global.N_0xf4f2c0d4ee209e20 = Global.InvalidateIdleCam

--- Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
function Global.InvalidateVehicleIdleCam()
	return _in(0x9E4CFFF989258472)
end
Global.N_0x9e4cfff989258472 = Global.InvalidateVehicleIdleCam

--- INVOKE_FUNCTION_REFERENCE
function Global.InvokeFunctionReference(referenceIdentity, argsSerialized, argsLength, retvalLength)
	return _in(0xe3551879, _ts(referenceIdentity), _ts(argsSerialized), argsLength, _ii(retvalLength) --[[ may be optional ]], _s)
end

--- IS_ACE_ALLOWED
function Global.IsAceAllowed(object)
	return _in(0x7ebb9929, _ts(object), _r)
end

--- IS_AIM_CAM_ACTIVE
function Global.IsAimCamActive()
	return _in(0x68EDDA28A5976D07, _r)
end

--- IS_A*
function Global.IsAimCamThirdPersonActive()
	return _in(0x74BD83EA840F6BC9, _r)
end
Global.N_0x74bd83ea840f6bc9 = Global.IsAimCamThirdPersonActive

--- IS_ALARM_PLAYING
-- @return Returns true if an alarm is currently playing with the specified name
function Global.IsAlarmPlaying(alarmName)
	return _in(0x226435CB96CCFC8C, _ts(alarmName), _r)
end

--- IS_AMBIENT_SPEECH_DISABLED
-- @return Returns true if ambient speech for the ped has been disabled
function Global.IsAmbientSpeechDisabled(ped)
	return _in(0x932C2D096A2C3FFF, ped, _r)
end

--- IS_AMBIENT_SPEECH_PLAYING
-- @return Returns true if the ped is currently playing ambient speech
function Global.IsAmbientSpeechPlaying(ped)
	return _in(0x9072C8B49907BFAD, ped, _r)
end

--- IS_AMBIENT_ZONE_ENABLED
-- @return Returns true if the given ambient zone is allowed to be active
function Global.IsAmbientZoneEnabled(ambientZone)
	return _in(0x01E2817A479A7F9B, _ts(ambientZone), _r)
end

--- IS_AN_ENTITY
function Global.IsAnEntity(handle)
	return _in(0x731EC8A916BD11A1, handle, _r)
end

--- IS_ANIMAL_VOCALIZATION_PLAYING
-- @return Returns true of the ped is currently playing animal sounds
function Global.IsAnimalVocalizationPlaying(pedHandle)
	return _in(0xC265DF9FB44A9FBD, pedHandle, _r)
end
Global.N_0xc265df9fb44a9fbd = Global.IsAnimalVocalizationPlaying

--- _IS_ANY_AIR_DEFENSE_ZONE_INSIDE_SPHERE
function Global.IsAnyAirDefenseZoneInsideSphere(x, y, z, radius, SphereIndex)
	return _in(0xDAB963831DBFD3F4, x, y, z, radius, _ii(SphereIndex) --[[ may be optional ]], _r)
end
Global.N_0xdab963831dbfd3f4 = Global.IsAnyAirDefenseZoneInsideSphere
Global.IsAirDefenseZoneInsideSphere = Global.IsAnyAirDefenseZoneInsideSphere

--- IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME
function Global.IsAnyEntityAttachedToHandlerFrame(vehicle)
	return _in(0x62CA17B74C435651, vehicle, _r)
end
Global.N_0x62ca17b74c435651 = Global.IsAnyEntityAttachedToHandlerFrame

--- IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE
function Global.IsAnyEntityEntirelyInsideGarage(garageHash, p1, p2, p3, p4)
	return _in(0x673ED815D6E323B7, _ch(garageHash), p1, p2, p3, p4, _r)
end
Global.N_0x673ed815d6e323b7 = Global.IsAnyEntityEntirelyInsideGarage

--- IS_ANY_HOSTILE_PED_NEAR_POINT
function Global.IsAnyHostilePedNearPoint(ped, x, y, z, radius)
	return _in(0x68772DB2B2526F9F, ped, x, y, z, radius, _r)
end
Global.N_0x68772db2b2526f9f = Global.IsAnyHostilePedNearPoint

--- IS_ANY_OBJECT_NEAR_POINT
function Global.IsAnyObjectNearPoint(x, y, z, range, p4)
	return _in(0x397DC58FF00298D1, x, y, z, range, p4, _r)
end

--- IS_ANY_PED_NEAR_POINT
function Global.IsAnyPedNearPoint(x, y, z, radius)
	return _in(0x083961498679DC9F, x, y, z, radius, _r)
end

--- IS_ANY_PED_RAPPELLING_FROM_HELI
function Global.IsAnyPedRappellingFromHeli(vehicle)
	return _in(0x291E373D483E7EE7, vehicle, _r)
end
Global.N_0x291e373d483e7ee7 = Global.IsAnyPedRappellingFromHeli
Global.AnyPassengersRappeling = Global.IsAnyPedRappellingFromHeli
Global.IsAnyPassengerRappelingFromVehicle = Global.IsAnyPedRappellingFromHeli

--- Verifies whether a ped is firing within a specific area.
-- @param minX Minimum X vector
-- @param minY Minimum Y vector
-- @param minZ Minimum Z vector
-- @param maxX Maximum X vector
-- @param maxY Maximum Y vector
-- @param maxZ Maximum Z vector
-- @param bHighlightArea Highlights the area to check when set to `true`.
-- @param bDo3DCheck Conducts a 3D height check when set to `true`.
-- @return `true` if a ped is within the defined area, `false` otherwise.
function Global.IsAnyPedShootingInArea(minX, minY, minZ, maxX, maxY, maxZ, bHighlightArea, bDo3DCheck)
	return _in(0xA0D3D71EA1086C55, minX, minY, minZ, maxX, maxY, maxZ, bHighlightArea, bDo3DCheck, _r)
end

--- Determines if any ped-independent, positionally-based scripted speech is currently active. This typically includes speech events triggered using [`PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE`](#\_0xED640017ED337E45).
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @return Returns `true` if any ped-independent positional scripted speech (i.e. triggered using [PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE](#\_0xED640017ED337E45)) is currently playing, `false` otherwise.
function Global.IsAnyPositionalSpeechPlaying()
	return _in(0x30CA2EF91D15ADF8, _r)
end
Global.N_0x30ca2ef91d15adf8 = Global.IsAnyPositionalSpeechPlaying

--- IS_ANY_SPEECH_PLAYING
-- @return Returns true if the specified ped is playing any speech
function Global.IsAnySpeechPlaying(ped)
	return _in(0x729072355FA39EC9, ped, _r)
end

--- IS_ANY_VEHICLE_NEAR_POINT
function Global.IsAnyVehicleNearPoint(x, y, z, radius)
	return _in(0x61E1DD6125A3EEE6, x, y, z, radius, _r)
end

--- IS_AREA_OCCUPIED
function Global.IsAreaOccupied(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xA61B4DF533DCB56E, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, _r)
end

--- IS_AUDIO_SCENE_ACTIVE
-- @param scene the name of the scene
-- @return Returns true if the script is already running the named scene, false otherwise
function Global.IsAudioSceneActive(scene)
	return _in(0xB65B60556E2A9225, _ts(scene), _r)
end

--- if (MISC::IS_AUSSIE_VERSION()) {
-- sub_127a9(&l_31, 1024); // l_31 |= 1024
-- l_129 = 3;
-- sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
-- }
-- Used to block some of the prostitute stuff due to laws in Australia.
function Global.IsAussieVersion()
	return _in(0x9F1935CA1F724008, _r)
end

--- IS_AUTO_SAVE_IN_PROGRESS
function Global.IsAutoSaveInProgress()
	return _in(0x69240733738C19A0, _r)
end

--- IS_BIG_VEHICLE
function Global.IsBigVehicle(vehicle)
	return _in(0x9F243D3919F442FE, vehicle, _r)
end

--- Returns true if the minimap is currently expanded. False if it's the normal minimap state.
-- Use [`IsBigmapFull`](#\_0x66EE14B2) to check if the full map is currently revealed on the minimap.
-- @return A bool indicating if the minimap is currently expanded or normal state.
function Global.IsBigmapActive()
	return _in(0xfff65c63, _r)
end

--- IS_BIGMAP_FULL
-- @return Returns true if the full map is currently revealed on the minimap.
-- 		Use [`IsBigmapActive`](#\_0xFFF65C63) to check if the minimap is currently expanded or in it's normal state.
function Global.IsBigmapFull()
	return _in(0x66ee14b2, _r)
end

--- Returns bit's boolean state from [offset] of [address].
-- Example:
-- MISC::IS_BIT_SET(bitAddress, 1);
-- To enable and disable bits, see:
-- MISC::SET_BIT(&bitAddress, 1);   // enable
-- MISC::CLEAR_BIT(&bitAddress, 1); // disable
function Global.IsBitSet(address, offset)
	return _in(0xA921AA820C25702F, address, offset, _r)
end

--- IS_BLIP_FLASHING
function Global.IsBlipFlashing(blip)
	return _in(0xA5E41FD83AD6CEF0, blip, _r)
end

--- IS_BLIP_ON_MINIMAP
function Global.IsBlipOnMinimap(blip)
	return _in(0xE41CA53051197A27, blip, _r)
end

--- IS_BLIP_SHORT_RANGE
function Global.IsBlipShortRange(blip)
	return _in(0xDA5F8727EB75B926, blip, _r)
end

--- IS_*
function Global.IsBoatAnchoredAndFrozen(vehicle)
	return _in(0xB0AD1238A709B1A2, vehicle, _r)
end
Global.N_0xb0ad1238a709b1a2 = Global.IsBoatAnchoredAndFrozen

--- IS_BONNET_CINEMATIC_CAM_RENDERING
function Global.IsBonnetCinematicCamRendering()
	return _in(0xD7360051C885628B, _r)
end
Global.N_0xd7360051c885628b = Global.IsBonnetCinematicCamRendering

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- For projectiles, see: [`IS_PROJECTILE_TYPE_IN_ANGLED_AREA`](#\_0xF0BC12401061DEA0)
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
-- @return True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.
function Global.IsBulletInAngledArea(x1, y1, z1, x2, y2, z2, width, ownedByPlayer)
	return _in(0x1A8B5F3C01E2B477, x1, y1, z1, x2, y2, z2, width, ownedByPlayer, _r)
end

--- IS_BULLET_IN_AREA
function Global.IsBulletInArea(x, y, z, radius, ownedByPlayer)
	return _in(0x3F2023999AD51C1F, x, y, z, radius, ownedByPlayer, _r)
end

--- IS_BULLET_IN_BOX
function Global.IsBulletInBox(x1, y1, z1, x2, y2, z2, ownedByPlayer)
	return _in(0xDE0F6D7450D37351, x1, y1, z1, x2, y2, z2, ownedByPlayer, _r)
end

--- Returns whether or not the passed camera handle is active.
function Global.IsCamActive(cam)
	return _in(0xDFB2B516207D3534, cam, _r)
end

--- IS_CAM_INTERPOLATING
function Global.IsCamInterpolating(cam)
	return _in(0x036F97C908C2B52C, cam, _r)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.IsCamPlayingAnim(cam, animName, animDictionary)
	return _in(0xC90621D8A0CEECF2, cam, _ts(animName), _ts(animDictionary), _r)
end

--- IS_CAM_RENDERING
function Global.IsCamRendering(cam)
	return _in(0x02EC0AF5C5A49B7A, cam, _r)
end

--- IS_CAM_SHAKING
function Global.IsCamShaking(cam)
	return _in(0x6B24BFE83A2BE47B, cam, _r)
end

--- IS_CAM_SPLINE_PAUSED
function Global.IsCamSplinePaused(p0)
	return _in(0x0290F35C0AD97864, p0, _r)
end

--- NativeDB Introduced: v1493
function Global.IsCinematicCamInputActive()
	return _in(0xF5F1E89A970B7796, _r)
end
Global.N_0xf5f1e89a970b7796 = Global.IsCinematicCamInputActive
Global.IsCinematicCamActive = Global.IsCinematicCamInputActive

--- IS_CINEMATIC_CAM_RENDERING
function Global.IsCinematicCamRendering()
	return _in(0xB15162CB5826E9E8, _r)
end

--- IS_CINEMATIC_CAM_SHAKING
function Global.IsCinematicCamShaking()
	return _in(0xBBC08F6B4CB8FF0A, _r)
end

--- IS_CINEMATIC_IDLE_CAM_RENDERING
function Global.IsCinematicIdleCamRendering()
	return _in(0xCA9D2AA3E326D720, _r)
end
Global.N_0xca9d2aa3e326d720 = Global.IsCinematicIdleCamRendering

--- IS_CINEMATIC_SHOT_ACTIVE
function Global.IsCinematicShotActive(p0)
	return _in(0xCC9F3371A7C28BC9, p0, _r)
end

--- Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
function Global.IsCollisionMarkedOutside(x, y, z)
	return _in(0xEEA5AC2EDA7C33E8, x, y, z, _r)
end
Global.N_0xeea5ac2eda7c33e8 = Global.IsCollisionMarkedOutside
Global.AreCoordsCollidingWithExterior = Global.IsCollisionMarkedOutside

--- Returns true if command line option '-benchmark' is set.
function Global.IsCommandLineBenchmarkValueSet()
	return _in(0xA049A5BE0F04F2F8, _r)
end
Global.N_0xa049a5be0f04f2f8 = Global.IsCommandLineBenchmarkValueSet

--- IS_COMMERCE_DATA_VALID
function Global.IsCommerceDataValid()
	return _in(0xEA14EEF5B7CD2C30, _r)
end
Global.N_0xea14eef5b7cd2c30 = Global.IsCommerceDataValid

--- IS_COMMERCE_STORE_OPEN
function Global.IsCommerceStoreOpen()
	return _in(0x2EAC52B4019E2782, _r)
end
Global.N_0x2eac52b4019e2782 = Global.IsCommerceStoreOpen

--- IS_CONTENT_ITEM_LOCKED
function Global.IsContentItemLocked(itemHash)
	return _in(0xD4D7B033C3AA243C, _ch(itemHash), _r)
end
Global.IsOutfitEmpty = Global.IsContentItemLocked
Global.IsDlcDataEmpty = Global.IsContentItemLocked

--- IS_CONTROL_ENABLED
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.IsControlEnabled(padIndex, control)
	return _in(0x1CEA6BFDF248E5D9, padIndex, control, _r)
end

--- Returns whether a control was newly pressed since the last check.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control was pressed.
function Global.IsControlJustPressed(padIndex, control)
	return _in(0x580417101DDB492F, padIndex, control, _r)
end

--- Returns whether a control was newly released since the last check.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control was recently released.
function Global.IsControlJustReleased(padIndex, control)
	return _in(0x50F940259D3841E6, padIndex, control, _r)
end

--- Returns whether a control is currently pressed.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control was pressed.
function Global.IsControlPressed(padIndex, control)
	return _in(0xF3A21BCD95725A4A, padIndex, control, _r)
end

--- Returns whether a control is currently *not* pressed.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control is not pressed.
function Global.IsControlReleased(padIndex, control)
	return _in(0x648EE3E7F38877DD, padIndex, control, _r)
end

--- IS_CONVERSATION_PED_DEAD
function Global.IsConversationPedDead(ped)
	return _in(0xE0A0AEC214B1FABA, ped, _r)
end

--- xyz - relative to the world origin.
function Global.IsCopPedInArea_3d(x1, y1, z1, x2, y2, z2)
	return _in(0x16EC4839969F9F5E, x1, y1, z1, x2, y2, z2, _r)
end

--- Usage:
-- public bool isCopInRange(Vector3 Location, float Range)
-- {
-- return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
-- }
function Global.IsCopVehicleInArea_3d(x1, x2, y1, y2, z1, z2)
	return _in(0x7EEF65D5F153E26A, x1, x2, y1, y2, z1, z2, _r)
end

--- IS_CUTSCENE_ACTIVE
function Global.IsCutsceneActive()
	return _in(0x991251AFC3981F84, _r)
end

--- IS_CUTSCENE_PLAYBACK_FLAG_SET
function Global.IsCutscenePlaybackFlagSet(flag)
	return _in(0x71B74D2AE19338D0, flag, _r)
end
Global.N_0x71b74d2ae19338d0 = Global.IsCutscenePlaybackFlagSet

--- IS_CUTSCENE_PLAYING
function Global.IsCutscenePlaying()
	return _in(0xD3C2E180A40F031E, _r)
end

--- IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID
function Global.IsDamageTrackerActiveOnNetworkId(netID)
	return _in(0x6E192E33AD436366, netID, _r)
end

--- _IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER
function Global.IsDamageTrackerActiveOnPlayer(player)
	return _in(0xB2092A1EAA7FD45F, player, _r)
end
Global.N_0xb2092a1eaa7fd45f = Global.IsDamageTrackerActiveOnPlayer

--- IS_DECAL_ALIVE
function Global.IsDecalAlive(decal)
	return _in(0xC694D74949CAFD0C, decal, _r)
end

--- IS_DISABLED_CONTROL_JUST_PRESSED
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.IsDisabledControlJustPressed(padIndex, control)
	return _in(0x91AEF906BCA88877, padIndex, control, _r)
end

--- IS_DISABLED_CONTROL_JUST_RELEASED
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.IsDisabledControlJustReleased(padIndex, control)
	return _in(0x305C8DCD79DA8B0F, padIndex, control, _r)
end

--- IS_DISABLED_CONTROL_PRESSED
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.IsDisabledControlPressed(padIndex, control)
	return _in(0xE2587F8CBBD87B1D, padIndex, control, _r)
end

--- _IS_DISABLED_CONTROL_RELEASED
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.IsDisabledControlReleased(padIndex, control)
	return _in(0xFB6C4072E9A32E92, padIndex, control, _r)
end
Global.N_0xfb6c4072e9a32e92 = Global.IsDisabledControlReleased

--- Example:
-- DLC::IS_DLC_PRESENT($\mpbusiness2\);
-- ($ = gethashkey)
-- bruteforce these:
-- 0xB119F6D
-- 0x96F02EE6
function Global.IsDlcPresent(dlcHash)
	return _in(0x812595A0644CE1DE, _ch(dlcHash), _r)
end

--- IS_DLC_VEHICLE_MOD
function Global.IsDlcVehicleMod(hash)
	return _in(0x0564B9FF9631B82C, _ch(hash), _r)
end
Global.N_0x0564b9ff9631b82c = Global.IsDlcVehicleMod

--- IS_DOOR_CLOSED
function Global.IsDoorClosed(doorHash)
	return _in(0xC531EE8A1145A149, _ch(doorHash), _r)
end

--- if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
-- {
-- OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
-- }
function Global.IsDoorRegisteredWithSystem(doorHash)
	return _in(0xC153C43EA202C8C1, _ch(doorHash), _r)
end
Global.N_0xc153c43ea202c8c1 = Global.IsDoorRegisteredWithSystem
Global.DoesDoorExist = Global.IsDoorRegisteredWithSystem

--- IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
function Global.IsDrivebyTaskUnderneathDrivingTask(ped)
	return _in(0x8785E6E40C7A8818, ped, _r)
end

--- Returns whether or not a browser is created for a specified DUI browser object.
-- @param duiObject The DUI browser handle.
-- @return A boolean indicating TRUE if the browser is created.
function Global.IsDuiAvailable(duiObject)
	return _in(0x7aac3b4c, duiObject, _r)
end

--- Gets whether or not this is the CitizenFX server.
-- @return A boolean value.
function Global.IsDuplicityVersion()
	return _in(0xcf24c52e, _r)
end

--- IS_DURANGO_VERSION
-- @return Hard-coded to always return 0.
function Global.IsDurangoVersion()
	return _in(0x4D982ADB1978442D, _r)
end

--- IS_ENTITY_A_MISSION_ENTITY
function Global.IsEntityAMissionEntity(entity)
	return _in(0x0A7B270912999B3C, entity, _r)
end

--- IS_ENTITY_A_PED
-- @param entity The entity to check if it's a Ped.
-- @return Whether the entity is a Ped.
function Global.IsEntityAPed(entity)
	return _in(0x524AC5ECEA15343E, entity, _r)
end

--- IS_ENTITY_A_VEHICLE
function Global.IsEntityAVehicle(entity)
	return _in(0x6AC7003FA6E5575E, entity, _r)
end

--- IS_ENTITY_AN_OBJECT
function Global.IsEntityAnObject(entity)
	return _in(0x8D68C8FD0FACA94E, entity, _r)
end

--- Checks if entity is within x/y/zSize distance of x/y/z.
-- Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
function Global.IsEntityAtCoord(entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9)
	return _in(0x20B60995556D004F, entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9, _r)
end

--- Checks if entity1 is within the box defined by x/y/zSize of entity2.
-- Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
function Global.IsEntityAtEntity(entity1, entity2, xSize, ySize, zSize, p5, p6, p7)
	return _in(0x751B70C3D034E187, entity1, entity2, xSize, ySize, zSize, p5, p6, p7, _r)
end

--- IS_ENTITY_ATTACHED
-- @param entity The entity to check if it is attached to another entity.
-- @return Whether the entity is attached to another entity.
function Global.IsEntityAttached(entity)
	return _in(0xB346476EF1A64897, entity, _r)
end

--- IS_ENTITY_ATTACHED_TO_ANY_OBJECT
function Global.IsEntityAttachedToAnyObject(entity)
	return _in(0xCF511840CEEDE0CC, entity, _r)
end

--- IS_ENTITY_ATTACHED_TO_ANY_PED
function Global.IsEntityAttachedToAnyPed(entity)
	return _in(0xB1632E9A5F988D11, entity, _r)
end

--- IS_ENTITY_ATTACHED_TO_ANY_VEHICLE
function Global.IsEntityAttachedToAnyVehicle(entity)
	return _in(0x26AA915AD89BFB4B, entity, _r)
end

--- IS_ENTITY_ATTACHED_TO_ENTITY
function Global.IsEntityAttachedToEntity(from, to)
	return _in(0xEFBE71898A993728, from, to, _r)
end

--- IS_ENTITY_ATTACHED_TO_HANDLER_FRAME
function Global.IsEntityAttachedToHandlerFrame(vehicle, entity)
	return _in(0x57715966069157AD, vehicle, entity, _r)
end
Global.SetPedEnabledBikeRingtone = Global.IsEntityAttachedToHandlerFrame
Global.IsVehicleNearEntity = Global.IsEntityAttachedToHandlerFrame

--- NativeDB Added Parameter 2: BOOL p1
function Global.IsEntityDead(entity)
	return _in(0x5F9532F3B5CC2551, entity, _r)
end

--- IS_ENTITY_FOCUS
function Global.IsEntityFocus(entity)
	return _in(0x2DDFF3FB9075D747, entity, _r)
end

--- _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
function Global.IsEntityGhostedToLocalPlayer(entity)
	return _in(0x21D04D7BC538C146, entity, _r)
end
Global.N_0x21d04d7bc538c146 = Global.IsEntityGhostedToLocalPlayer
Global.IsEntityAGhost = Global.IsEntityGhostedToLocalPlayer

--- IS_ENTITY_IN_AIR
function Global.IsEntityInAir(entity)
	return _in(0x886E37EC497200B6, entity, _r)
end

--- p10 is some entity flag check, also used in [`IS_ENTITY_AT_ENTITY`](#\_0x751B70C3D034E187), [`IS_ENTITY_IN_AREA`](#\_0x54736AA40E271165) and [`IS_ENTITY_AT_COORD`](#\_0x20B60995556D004F).
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
-- @param debug a debug flag invoking functions in the same path as `DRAW_MARKER`
-- @param includez If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
function Global.IsEntityInAngledArea(entity, x1, y1, z1, x2, y2, z2, width, debug, includez, p10)
	return _in(0x51210CED3DA1C78A, entity, x1, y1, z1, x2, y2, z2, width, debug, includez, p10, _r)
end

--- IS_ENTITY_IN_AREA
function Global.IsEntityInArea(entity, x1, y1, z1, x2, y2, z2, p7, p8, p9)
	return _in(0x54736AA40E271165, entity, x1, y1, z1, x2, y2, z2, p7, p8, p9, _r)
end

--- IS_ENTITY_IN_WATER
function Global.IsEntityInWater(entity)
	return _in(0xCFB0A0D8EDD145A3, entity, _r)
end

--- IS_ENTITY_IN_ZONE
function Global.IsEntityInZone(entity, zone)
	return _in(0xB6463CF6AF527071, entity, _ts(zone), _r)
end

--- IS_ENTITY_OCCLUDED
function Global.IsEntityOccluded(entity)
	return _in(0xE31C2C72B8692B64, entity, _r)
end

--- IS_ENTITY_ON_FIRE
function Global.IsEntityOnFire(entity)
	return _in(0x28D3FED7190D3A0B, entity, _r)
end

--- Determines whether the screen position of the specified entity is within the 2D bounds of the screen.
-- This native will not check if the entity is not visible due to being occluded (for example, behind a wall). To check if a entity is on screen and is not occluded, use [IS_ENTITY_OCCLUDED](#\_0xE31C2C72B8692B64).
-- @param entity The entity to check.
-- @return Returns `true` if the the entity is in between the minimum and maximum values for the 2D screen bound coords; otherwise, `false`.
function Global.IsEntityOnScreen(entity)
	return _in(0xE659E47AF827484B, entity, _r)
end

--- See also [`IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM`](#\_0x6EC47A344923E1ED)
-- ```
-- Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)
-- p4 is always 3 in the scripts.
-- taskFlag:
-- 2 - Check synchronized scene
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.IsEntityPlayingAnim(entity, animDict, animName, taskFlag)
	return _in(0x1F0B79228E461EC9, entity, _ts(animDict), _ts(animName), taskFlag, _r)
end

--- A getter for [FREEZE_ENTITY_POSITION](#\_0x428CA6DBD1094446).
-- @param entity The entity to check for
-- @return Boolean stating if it is frozen or not.
function Global.IsEntityPositionFrozen(entity)
	return _in(0xedbe6add, entity, _r)
end

--- A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.
-- ^ Attach a phCollider to the ped.
function Global.IsEntityStatic(entity)
	return _in(0x1218E6886D3D8327, entity, _r)
end

--- IS_ENTITY_TOUCHING_ENTITY
function Global.IsEntityTouchingEntity(entity, targetEntity)
	return _in(0x17FFC1B2BA35A494, entity, targetEntity, _r)
end

--- IS_ENTITY_TOUCHING_MODEL
function Global.IsEntityTouchingModel(entity, modelHash)
	return _in(0x0F42323798A58C8C, entity, _ch(modelHash), _r)
end

--- IS_ENTITY_UPRIGHT
function Global.IsEntityUpright(entity, angle)
	return _in(0x5333F526F6AB19AA, entity, angle, _r)
end

--- IS_ENTITY_UPSIDEDOWN
function Global.IsEntityUpsidedown(entity)
	return _in(0x1DBD58820FA61D71, entity, _r)
end

--- IS_ENTITY_VISIBLE
function Global.IsEntityVisible(entity)
	return _in(0x47D6F43D77935C75, entity, _r)
end

--- IS_ENTITY_VISIBLE_TO_SCRIPT
function Global.IsEntityVisibleToScript(entity)
	return _in(0xD796CB5BA8F20E32, entity, _r)
end

--- IS_ENTITY_WAITING_FOR_WORLD_COLLISION
function Global.IsEntityWaitingForWorldCollision(entity)
	return _in(0xD05BFF0C0A12C68F, entity, _r)
end

--- IS_EXPLOSION_ACTIVE_IN_AREA
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
function Global.IsExplosionActiveInArea(explosionType, x1, y1, z1, x2, y2, z2)
	return _in(0x6070104B699B2EF4, explosionType, x1, y1, z1, x2, y2, z2, _r)
end
Global.N_0x6070104b699b2ef4 = Global.IsExplosionActiveInArea

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param explosionType explosion enum, -1 for any explosion type. See [ADD_EXPLOSION](#\_0xE3AD2BDBAEE269AC).
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.IsExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, width)
	return _in(0xA079A6C51525DC4B, explosionType, x1, y1, z1, x2, y2, z2, width, _r)
end

--- IS_EXPLOSION_IN_AREA
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
function Global.IsExplosionInArea(explosionType, x1, y1, z1, x2, y2, z2)
	return _in(0x2E2EBA0EE7CED0E0, explosionType, x1, y1, z1, x2, y2, z2, _r)
end

--- IS_EXPLOSION_IN_SPHERE
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
function Global.IsExplosionInSphere(explosionType, x, y, z, radius)
	return _in(0xAB0F816885B0E483, explosionType, x, y, z, radius, _r)
end

--- IS_FIRST_PERSON_AIM_CAM_ACTIVE
function Global.IsFirstPersonAimCamActive()
	return _in(0x5E346D934122613F, _r)
end

--- IS_FLASH_LIGHT_ON
function Global.IsFlashLightOn(ped)
	return _in(0x4B7620C47217126C, ped, _r)
end
Global.SetWeaponSmokegrenadeAssigned = Global.IsFlashLightOn

--- IS_FLOATING_HELP_TEXT_ON_SCREEN
function Global.IsFloatingHelpTextOnScreen(hudIndex)
	return _in(0x2432784ACA090DA4, hudIndex, _r)
end
Global.N_0x2432784aca090da4 = Global.IsFloatingHelpTextOnScreen

--- IS_FOLLOW_PED_CAM_ACTIVE
function Global.IsFollowPedCamActive()
	return _in(0xC6D3D26810C8E0F9, _r)
end

--- IS_FOLLOW_VEHICLE_CAM_ACTIVE
function Global.IsFollowVehicleCamActive()
	return _in(0xCBBDE6D335D6D496, _r)
end

--- This function is hard-coded to always return 0.
function Global.IsFrontendFading()
	return _in(0x7EA2B6AF97ECA6ED, _r)
end

--- IS_FRONTEND_READY_FOR_CONTROL
function Global.IsFrontendReadyForControl()
	return _in(0x3BAB9A4E4F2FF5C7, _r)
end
Global.N_0x3bab9a4e4f2ff5c7 = Global.IsFrontendReadyForControl

--- Hardcoded to return 1
function Global.IsGameInControlOfMusic()
	return _in(0x6D28DC1671E334FD, _r)
end

--- IS_GAMEPLAY_CAM_LOOKING_BEHIND
function Global.IsGameplayCamLookingBehind()
	return _in(0x70FDA869F3317EA9, _r)
end

--- Examples when this function will return 0 are:
-- - During busted screen.
-- - When player is coming out from a hospital.
-- - When player is coming out from a police station.
-- - When player is buying gun from AmmuNation.
function Global.IsGameplayCamRendering()
	return _in(0x39B5D1B10383F0C8, _r)
end

--- IS_GAMEPLAY_CAM_SHAKING
function Global.IsGameplayCamShaking()
	return _in(0x016C090630DF1F89, _r)
end

--- IS_GAMEPLAY_HINT_ACTIVE
function Global.IsGameplayHintActive()
	return _in(0xE520FF1AD2785B40, _r)
end

--- IS_GARAGE_EMPTY
function Global.IsGarageEmpty(garageHash, p1, p2)
	return _in(0x90E47239EA1980B8, _ch(garageHash), p1, p2, _r)
end

--- _IS_HANDLER_FRAME_ABOVE_CONTAINER
function Global.IsHandlerFrameAboveContainer(handler, container)
	return _in(0x89D630CF5EA96D23, handler, container, _r)
end
Global.N_0x89d630cf5ea96d23 = Global.IsHandlerFrameAboveContainer

--- IS_HELI_LANDING_AREA_BLOCKED
function Global.IsHeliLandingAreaBlocked(vehicle)
	return _in(0x634148744F385576, vehicle, _r)
end
Global.N_0x634148744f385576 = Global.IsHeliLandingAreaBlocked

--- IS_HELI_PART_BROKEN
function Global.IsHeliPartBroken(vehicle, p1, p2, p3)
	return _in(0xBC74B4BE25EB6C8A, vehicle, p1, p2, p3, _r)
end

--- IS_HELP_MESSAGE_BEING_DISPLAYED
function Global.IsHelpMessageBeingDisplayed()
	return _in(0x4D79439A6B55AC67, _r)
end

--- IS_HELP_MESSAGE_FADING_OUT
function Global.IsHelpMessageFadingOut()
	return _in(0x327EDEEEAC55C369, _r)
end

--- IS_HELP_MESSAGE_ON_SCREEN
function Global.IsHelpMessageOnScreen()
	return _in(0xDAD37F45428801AE, _r)
end

--- IS_HORN_ACTIVE
-- @return Returns true if the vehicle is currently playing a horn sound
function Global.IsHornActive(vehicle)
	return _in(0x9D6BFC12B05C6121, vehicle, _r)
end

--- IS_HOVERING_OVER_MISSION_CREATOR_BLIP
function Global.IsHoveringOverMissionCreatorBlip()
	return _in(0x4167EFE0527D706E, _r)
end
Global.N_0x4167efe0527d706e = Global.IsHoveringOverMissionCreatorBlip

--- Full list of components below
-- HUD = 0;
-- HUD_WANTED_STARS = 1;
-- HUD_WEAPON_ICON = 2;
-- HUD_CASH = 3;
-- HUD_MP_CASH = 4;
-- HUD_MP_MESSAGE = 5;
-- HUD_VEHICLE_NAME = 6;
-- HUD_AREA_NAME = 7;
-- HUD_VEHICLE_CLASS = 8;
-- HUD_STREET_NAME = 9;
-- HUD_HELP_TEXT = 10;
-- HUD_FLOATING_HELP_TEXT_1 = 11;
-- HUD_FLOATING_HELP_TEXT_2 = 12;
-- HUD_CASH_CHANGE = 13;
-- HUD_RETICLE = 14;
-- HUD_SUBTITLE_TEXT = 15;
-- HUD_RADIO_STATIONS = 16;
-- HUD_SAVING_GAME = 17;
-- HUD_GAME_STREAM = 18;
-- HUD_WEAPON_WHEEL = 19;
-- HUD_WEAPON_WHEEL_STATS = 20;
-- MAX_HUD_COMPONENTS = 21;
-- MAX_HUD_WEAPONS = 22;
-- MAX_SCRIPTED_HUD_COMPONENTS = 141;
function Global.IsHudComponentActive(id)
	return _in(0xBC4C9EA5391ECC0D, id, _r)
end

--- IS_HUD_HIDDEN
function Global.IsHudHidden()
	return _in(0xA86478C6958735C5, _r)
end

--- IS_HUD_PREFERENCE_SWITCHED_ON
function Global.IsHudPreferenceSwitchedOn()
	return _in(0x1930DFA731813EC4, _r)
end

--- IS_IN_ITEMSET
function Global.IsInItemset(p0, p1)
	return _in(0x2D0FC594D1E9C107, p0, p1, _r)
end

--- aka "constrained"
function Global.IsInPowerSavingMode()
	return _in(0x684A41975F077262, _r)
end
Global.N_0x684a41975f077262 = Global.IsInPowerSavingMode

--- _IS_IN_VEHICLE_CAM_DISABLED
function Global.IsInVehicleCamDisabled()
	return _in(0x4F32C0D5A90A9B40, _r)
end
Global.N_0x4f32c0d5a90a9b40 = Global.IsInVehicleCamDisabled

--- =======================================================
-- Correction, I have change this to int, instead of int*
-- as it doesn't use a pointer to the createdIncident.
-- If you try it you will crash (or) freeze.
-- =======================================================
function Global.IsIncidentValid(incidentId)
	return _in(0xC8BC6461E629BEAA, incidentId, _r)
end

--- IS_INTERIOR_CAPPED
function Global.IsInteriorCapped(interiorID)
	return _in(0x92BAC8ACF88CEC26, interiorID, _r)
end

--- IS_INTERIOR_DISABLED
function Global.IsInteriorDisabled(interior)
	return _in(0xBC5115A5A939DD15, interior, _r)
end

--- IS_INTERIOR_ENTITY_SET_ACTIVE
function Global.IsInteriorEntitySetActive(interior, entitySetName)
	return _in(0x35F7DD45E8C0A16D, interior, _ts(entitySetName), _r)
end
Global.N_0x35f7dd45e8c0a16d = Global.IsInteriorEntitySetActive
Global.IsInteriorPropEnabled = Global.IsInteriorEntitySetActive

--- IS_INTERIOR_READY
function Global.IsInteriorReady(interiorID)
	return _in(0x6726BDCCC1932F0E, interiorID, _r)
end

--- Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
function Global.IsInteriorRenderingDisabled()
	return _in(0x95AB8B5C992C7B58, _r)
end

--- IS_INTERIOR_SCENE
function Global.IsInteriorScene()
	return _in(0xBC72B5D7A1CBD54D, _r)
end

--- IS_IPL_ACTIVE
function Global.IsIplActive(iplName)
	return _in(0x88A741E44A2B3495, _ts(iplName), _r)
end

--- IS_ITEMSET_VALID
function Global.IsItemsetValid(p0)
	return _in(0xB1B1EA596344DFAB, p0, _r)
end

--- IS_LOOK_INVERTED
function Global.IsLookInverted()
	return _in(0x77B612531280010D, _r)
end

--- IS_MEMORY_CARD_IN_USE
function Global.IsMemoryCardInUse()
	return _in(0x8A75CE2956274ADD, _r)
end

--- IS_MESSAGE_BEING_DISPLAYED
function Global.IsMessageBeingDisplayed()
	return _in(0x7984C03AA5CC2F41, _r)
end

--- IS_MINIGAME_IN_PROGRESS
function Global.IsMinigameInProgress()
	return _in(0x2B4A15E44DE0F478, _r)
end

--- IS_MINIMAP_RENDERING
function Global.IsMinimapRendering()
	return _in(0xAF754F20EB5CD51A, _r)
end
Global.N_0xaf754f20eb5cd51a = Global.IsMinimapRendering
Global.IsRadarEnabled = Global.IsMinimapRendering

--- IS_MISSION_COMPLETE_PLAYING
-- @return Returns true if the mission complete audio is playing
function Global.IsMissionCompletePlaying()
	return _in(0x19A30C23F5827F8A, _r)
end

--- IS_MISSION_COMPLETE_READY_FOR_UI
-- @return Returns true if the script should draw the mission complete UI to be in sync with audio.
function Global.IsMissionCompleteReadyForUi()
	return _in(0x6F259F82D873B8B8, _r)
end
Global.N_0x6f259f82d873b8b8 = Global.IsMissionCompleteReadyForUi

--- IS_MISSION_CREATOR_BLIP
function Global.IsMissionCreatorBlip(blip)
	return _in(0x26F49BF3381D933D, blip, _r)
end

--- IS_MISSION_NEWS_STORY_UNLOCKED
-- @return Returns true of the specific story is available to be played back
function Global.IsMissionNewsStoryUnlocked(newsStory)
	return _in(0x66E49BF55B4B1874, newsStory, _r)
end
Global.GetNumberOfPassengerVoiceVariations = Global.IsMissionNewsStoryUnlocked

--- NativeDB Introduced: v2372
function Global.IsMissionTrain(vehicle)
	return _in(0xAD464F2E18836BFC, vehicle, _r)
end

--- IS_MOBILE_INTERFERENCE_ACTIVE
-- @return Returns true of mobile phone interference is currently happening
function Global.IsMobileInterferenceActive()
	return _in(0xC8B1B2425604CDD0, _r)
end
Global.N_0xc8b1b2425604cdd0 = Global.IsMobileInterferenceActive

--- IS_MOBILE_PHONE_CALL_ONGOING
-- @return Returns true of a mobile phone call is currently happening.
function Global.IsMobilePhoneCallOngoing()
	return _in(0x7497D2CE2C30D24C, _r)
end

--- IS_MOBILE_PHONE_RADIO_ACTIVE
-- @return Returns true if the mobile phone radio is active
function Global.IsMobilePhoneRadioActive()
	return _in(0xB35CE999E8EF317E, _r)
end

--- _IS_MODEL_A_PED
function Global.IsModelAPed(model)
	return _in(0x75816577FEA6DAD5, _ch(model), _r)
end

--- Returns whether the specified model represents a vehicle.
function Global.IsModelAVehicle(model)
	return _in(0x19AAC8F07BFEC53E, _ch(model), _r)
end

--- Check if model is in cdimage(rpf)
function Global.IsModelInCdimage(model)
	return _in(0x35B9E0803292B641, _ch(model), _r)
end

--- Returns whether the specified model exists in the game.
function Global.IsModelValid(model)
	return _in(0xC0296A2EDF545E92, _ch(model), _r)
end

--- IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK
function Global.IsMountedWeaponTaskUnderneathDrivingTask(ped)
	return _in(0xA320EF046186FA3B, ped, _r)
end

--- Returns true if the cursor is hovering above instructional buttons.
-- Note: The buttons need to support mouse (with the TOGGLE_MOUSE_SUPPORT scaleform movie method) for it to return true.
function Global.IsMouseCursorAboveInstructionalButtons()
	return _in(0x3D9ACB1EB139E702, _r)
end
Global.N_0x3d9acb1eb139e702 = Global.IsMouseCursorAboveInstructionalButtons

--- IS_MOVE_BLEND_RATIO_RUNNING
function Global.IsMoveBlendRatioRunning(ped)
	return _in(0xD4D8636C0199A939, ped, _r)
end

--- IS_MOVE_BLEND_RATIO_SPRINTING
function Global.IsMoveBlendRatioSprinting(ped)
	return _in(0x24A2AD74FA9814E2, ped, _r)
end

--- IS_MOVE_BLEND_RATIO_STILL
function Global.IsMoveBlendRatioStill(ped)
	return _in(0x349CE7B56DAFD95C, ped, _r)
end

--- IS_MOVE_BLEND_RATIO_WALKING
function Global.IsMoveBlendRatioWalking(ped)
	return _in(0xF133BBBE91E1691F, ped, _r)
end

--- IS_MP_GAMER_TAG_ACTIVE
function Global.IsMpGamerTagActive(gamerTagId)
	return _in(0x4E929E7A5796FD26, gamerTagId, _r)
end
Global.N_0x4e929e7a5796fd26 = Global.IsMpGamerTagActive

--- IS_MP_GAMER_TAG_FREE
function Global.IsMpGamerTagFree(gamerTagId)
	return _in(0x595B5178E412E199, gamerTagId, _r)
end
Global.AddTrevorRandomModifier = Global.IsMpGamerTagFree

--- IS_MP_GAMER_TAG_MOVIE_ACTIVE
function Global.IsMpGamerTagMovieActive()
	return _in(0x6E0EB3EB47C8D7AA, _r)
end
Global.N_0x6e0eb3eb47c8d7aa = Global.IsMpGamerTagMovieActive
Global.HasMpGamerTag = Global.IsMpGamerTagMovieActive

--- Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
function Global.IsMultiplayerChatActive()
	return _in(0xB118AF58B5F332A1, _r)
end
Global.IsTextChatActive = Global.IsMultiplayerChatActive

--- IS_MUSIC_ONESHOT_PLAYING
-- @return Returns true if a one shot is currently playing or prepared
function Global.IsMusicOneshotPlaying()
	return _in(0xA097AB275061FB21, _r)
end
Global.N_0xa097ab275061fb21 = Global.IsMusicOneshotPlaying

--- IS_NAMED_RENDERTARGET_LINKED
function Global.IsNamedRendertargetLinked(modelHash)
	return _in(0x113750538FA31298, _ch(modelHash), _r)
end

--- IS_NAMED_RENDERTARGET_REGISTERED
function Global.IsNamedRendertargetRegistered(name)
	return _in(0x78DCDC15C9F116B4, _ts(name), _r)
end

--- IS_NAVIGATING_MENU_CONTENT
function Global.IsNavigatingMenuContent()
	return _in(0x4E3CD0EF8A489541, _ri)
end
Global.N_0x4e3cd0ef8a489541 = Global.IsNavigatingMenuContent

--- Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
-- If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
function Global.IsNavmeshLoadedInArea(x1, y1, z1, x2, y2, z2)
	return _in(0xF813C7E63F9062A5, x1, y1, z1, x2, y2, z2, _r)
end

--- IS_*
function Global.IsNavmeshRequiredRegionOwnedByAnyThread()
	return _in(0x705A844002B39DC0, _r)
end
Global.N_0x705a844002b39dc0 = Global.IsNavmeshRequiredRegionOwnedByAnyThread

--- IS_NETWORK_ID_OWNED_BY_PARTICIPANT
function Global.IsNetworkIdOwnedByParticipant(netId)
	return _in(0xA1607996431332DF, netId, _r)
end
Global.N_0xa1607996431332df = Global.IsNetworkIdOwnedByParticipant
Global.NetworkCanNetworkIdBeSeen = Global.IsNetworkIdOwnedByParticipant

--- IS_NETWORK_LOADING_SCENE
function Global.IsNetworkLoadingScene()
	return _in(0x41CA5A33160EA4AB, _r)
end

--- IS_NEW_LOAD_SCENE_ACTIVE
function Global.IsNewLoadSceneActive()
	return _in(0xA41A05B6CB741B85, _r)
end

--- IS_NEW_LOAD_SCENE_LOADED
function Global.IsNewLoadSceneLoaded()
	return _in(0x01B8247A7A8B9AD1, _r)
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function Global.IsNextWeatherType(weatherType)
	return _in(0x2FAA3A30BEC0F25D, _ts(weatherType), _r)
end

--- Checks if keyboard input is enabled during NUI focus using `SET_NUI_FOCUS_KEEP_INPUT`.
-- @return True or false.
function Global.IsNuiFocusKeepingInput()
	return _in(0x39c9dc92, _r)
end

--- Returns the current NUI focus state previously set with `SET_NUI_FOCUS`.
-- @return True or false.
function Global.IsNuiFocused()
	return _in(0x98545e6d, _r)
end

--- IS_OBJECT_A_PICKUP
function Global.IsObjectAPickup(object)
	return _in(0xFC481C641EBBD27D, object, _r)
end
Global.N_0xfc481c641ebbd27d = Global.IsObjectAPickup

--- NativeDB Introduced: v1365
function Global.IsObjectAPortablePickup(object)
	return _in(0x0378C08504160D0D, object, _r)
end
Global.N_0x0378c08504160d0d = Global.IsObjectAPortablePickup

--- IS_OBJECT_ENTIRELY_INSIDE_GARAGE
function Global.IsObjectEntirelyInsideGarage(garageHash, entity, p2, p3)
	return _in(0x372EF6699146A1E4, _ch(garageHash), entity, p2, p3, _r)
end
Global.N_0x372ef6699146a1e4 = Global.IsObjectEntirelyInsideGarage

--- IS_OBJECT_NEAR_POINT
function Global.IsObjectNearPoint(objectHash, x, y, z, range)
	return _in(0x8C90FE4B381BA60A, _ch(objectHash), x, y, z, range, _r)
end

--- IS_OBJECT_PARTIALLY_INSIDE_GARAGE
function Global.IsObjectPartiallyInsideGarage(garageHash, entity, p2)
	return _in(0xF0EED5A6BC7B237A, _ch(garageHash), entity, p2, _r)
end
Global.N_0xf0eed5a6bc7b237a = Global.IsObjectPartiallyInsideGarage

--- IS_OBJECT_VISIBLE
function Global.IsObjectVisible(object)
	return _in(0x8B32ACE6326A7546, object, _r)
end

--- IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE
function Global.IsObjectWithinBrainActivationRange(object)
	return _in(0xCCBA154209823057, object, _r)
end

--- Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
function Global.IsOnlinePoliciesMenuActive()
	return _in(0x6F72CD94F7B5B68C, _r)
end
Global.N_0x6f72cd94f7b5b68c = Global.IsOnlinePoliciesMenuActive

--- IS_ORBIS_VERSION
-- @return Hard-coded to always return 0.
function Global.IsOrbisVersion()
	return _in(0xA72BC0B675B1519E, _r)
end

--- IS_PAUSE_MENU_ACTIVE
function Global.IsPauseMenuActive()
	return _in(0xB0034A223497FFCB, _r)
end

--- IS_PAUSE_MENU_RESTARTING
function Global.IsPauseMenuRestarting()
	return _in(0x1C491717107431C7, _r)
end

--- IS_PAUSEMAP_IN_INTERIOR_MODE
function Global.IsPausemapInInteriorMode()
	return _in(0x9049FE339D5F6F6F, _r)
end
Global.N_0x9049fe339d5f6f6f = Global.IsPausemapInInteriorMode
Global.IsMinimapInInterior = Global.IsPausemapInInteriorMode

--- IS_PC_VERSION
-- @return Hard-coded to always return 1.
function Global.IsPcVersion()
	return _in(0x48AF36444B965238, _r)
end

--- Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
function Global.IsPedAPlayer(ped)
	return _in(0x12534C348C6CB68B, ped, _r)
end

--- When passing a ped parameter, the function returns true if the ped is currently in any scenario.
function Global.IsPedActiveInScenario(ped)
	return _in(0xAA135F9482C82CC3, ped, _r)
end

--- IS_PED_AIMING_FROM_COVER
function Global.IsPedAimingFromCover(ped)
	return _in(0x3998B1276A3300E5, ped, _r)
end

--- Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
-- | Bit value | Effect            |
-- |-----------|-------------------|
-- | 1         | Melee weapons     |
-- | 2         | Explosive weapons |
-- | 4         | Any other weapons |
-- Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
-- @param ped The ped to check armed state on.
-- @param typeFlags Type flags to check.
-- @return Whether or not the ped is currently equipped with any weapon matching typeFlags.
function Global.IsPedArmed(ped, typeFlags)
	return _in(0x475768A975D5AD17, ped, typeFlags, _r)
end

--- This function is hard-coded to always return 0.
function Global.IsPedBeingArrested(ped)
	return _in(0x90A09F3A45FED688, ped, _r)
end

--- IS_PED_BEING_JACKED
function Global.IsPedBeingJacked(ped)
	return _in(0x9A497FE2DF198913, ped, _r)
end

--- IS_PED_BEING_STEALTH_KILLED
function Global.IsPedBeingStealthKilled(ped)
	return _in(0x863B23EFDE9C5DF2, ped, _r)
end

--- p1 is always 0
function Global.IsPedBeingStunned(ped, p1)
	return _in(0x4FBACCE3B4138EE8, ped, p1, _r)
end

--- _IS_PED_BLUSH_COLOR_VALID
function Global.IsPedBlushColorValid(colorID)
	return _in(0x604E810189EE3A59, colorID, _r)
end
Global.N_0x604e810189ee3a59 = Global.IsPedBlushColorValid

--- _IS_PED_BLUSH_COLOR_VALID_2
function Global.IsPedBlushColorValid_2(colorId)
	return _in(0xF41B5D290C99A3D6, colorId, _r)
end
Global.N_0xf41b5d290c99a3d6 = Global.IsPedBlushColorValid_2

--- NativeDB Introduced: v1290
function Global.IsPedBodyBlemishValid(colorID)
	return _in(0x09E7ECA981D9B210, colorID, _r)
end
Global.N_0x09e7eca981d9b210 = Global.IsPedBodyBlemishValid

--- IS_PED_CLIMBING
function Global.IsPedClimbing(ped)
	return _in(0x53E8CB4F48BFE623, ped, _r)
end

--- IS_PED_COMPONENT_VARIATION_GEN9_EXCLUSIVE
-- @param ped The target ped.
-- @param componentId The component id.
-- @param drawableId The drawable id.
-- @return Whether or not the ped component variation is a gen9 exclusive (stub assets).
function Global.IsPedComponentVariationGen9Exclusive(ped, componentId, drawableId)
	return _in(0xc767b581, ped, componentId, drawableId, _r)
end

--- Checks if the component variation is valid, this works great for randomizing components using loops.
-- @param ped The ped handle.
-- @param componentId The component id to check the variation of. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId The drawable id to get the component variation of. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- @param textureId The texture id to get the component variation of. Refer to [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171).
function Global.IsPedComponentVariationValid(ped, componentId, drawableId, textureId)
	return _in(0xE825F6B6CEA7671D, ped, componentId, drawableId, textureId, _r)
end

--- IS_PED_CUFFED
function Global.IsPedCuffed(ped)
	return _in(0x74E559B3BC910685, ped, _r)
end

--- This native returns a true or false value.
-- Ped ped = The ped whose weapon you want to check.
function Global.IsPedCurrentWeaponSilenced(ped)
	return _in(0x65F0C5AE05943EC7, ped, _r)
end

--- Determines if a ped is dead. Contrary to what the name might suggest, it does not always detect when a ped is in the 'dying' phase (transitioning to death). The exception is when `checkMeleeDeathFlags` is set to `true`, which then includes peds in the midst of melee takedown moves as being in a dying state, even if the death task has not yet started.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param ped The ped to check.
-- @param checkMeleeDeathFlags If set to `true`, extends the check to include melee takedown moves as part of the dying phase.
-- @return Returns `true` if the ped is dead. When `checkMeleeDeathFlags` is set to `true`, it also considers peds in melee takedown moves as dying, although the broader 'dying' phase may not be detected.
function Global.IsPedDeadOrDying(ped, checkMeleeDeathFlags)
	return _in(0x3317DEDB88C95038, ped, checkMeleeDeathFlags, _r)
end

--- IS_PED_DEFENSIVE_AREA_ACTIVE
function Global.IsPedDefensiveAreaActive(ped, p1)
	return _in(0xBA63D9FE45412247, ped, p1, _r)
end
Global.N_0xba63d9fe45412247 = Global.IsPedDefensiveAreaActive

--- IS_PED_DIVING
function Global.IsPedDiving(ped)
	return _in(0x5527B8246FEF9B11, ped, _r)
end

--- _IS_PED_DOING_BEAST_JUMP
function Global.IsPedDoingBeastJump(ped)
	return _in(0x451D05012CCEC234, ped, _r)
end
Global.N_0x451d05012ccec234 = Global.IsPedDoingBeastJump

--- IS_PED_DOING_DRIVEBY
function Global.IsPedDoingDriveby(ped)
	return _in(0xB2C086CC1BF8F2BF, ped, _r)
end

--- IS_PED_DUCKING
function Global.IsPedDucking(ped)
	return _in(0xD125AE748725C6BC, ped, _r)
end

--- Presumably returns the Entity that the Ped is currently diving out of the way of.
-- var num3;
-- if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
-- if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
function Global.IsPedEvasiveDiving(ped, evadingEntity)
	return _in(0x414641C26E105898, ped, _ii(evadingEntity) --[[ may be optional ]], _r)
end

--- _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE
function Global.IsPedExclusiveDriverOfVehicle(ped, vehicle, outIndex)
	return _in(0xB09D25E77C33EB3F, ped, vehicle, _ii(outIndex) --[[ may be optional ]], _r)
end
Global.N_0xb09d25e77c33eb3f = Global.IsPedExclusiveDriverOfVehicle

--- angle is ped's view cone
function Global.IsPedFacingPed(ped, otherPed, angle)
	return _in(0xD71649DB0A545AA3, ped, otherPed, angle, _r)
end

--- IS_PED_FALLING
function Global.IsPedFalling(ped)
	return _in(0xFB92A102F1C4DFA3, ped, _r)
end

--- Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
-- If the handle is invalid, the function returns true.
function Global.IsPedFatallyInjured(ped)
	return _in(0xD839450756ED5A80, ped, _r)
end

--- IS_PED_FLEEING
function Global.IsPedFleeing(ped)
	return _in(0xBBCCE00B381F8482, ped, _r)
end

--- IS_PED_GETTING_INTO_A_VEHICLE
function Global.IsPedGettingIntoAVehicle(ped)
	return _in(0xBB062B2B5722478E, ped, _r)
end

--- IS_PED_GETTING_UP
function Global.IsPedGettingUp(ped)
	return _in(0x2A74E1D5F2F00EEC, ped, _r)
end

--- IS_PED_GOING_INTO_COVER
function Global.IsPedGoingIntoCover(ped)
	return _in(0x9F65DBC537E59AD5, ped, _r)
end

--- IS_PED_GROUP_MEMBER
function Global.IsPedGroupMember(ped, groupId)
	return _in(0x9BB01E3834671191, ped, groupId, _r)
end

--- _IS_PED_HAIR_COLOR_VALID
function Global.IsPedHairColorValid(colorID)
	return _in(0xE0D36E5D9E99CC21, colorID, _r)
end
Global.N_0xe0d36e5d9e99cc21 = Global.IsPedHairColorValid

--- _IS_PED_HAIR_COLOR_VALID_2
function Global.IsPedHairColorValid_2(colorId)
	return _in(0xED6D8E27A43B8CDE, colorId, _r)
end
Global.N_0xed6d8e27a43b8cde = Global.IsPedHairColorValid_2

--- IS_PED_HANGING_ON_TO_VEHICLE
function Global.IsPedHangingOnToVehicle(ped)
	return _in(0x1C86D8AEF8254B78, ped, _r)
end

--- IS_PED_HEADING_TOWARDS_POSITION
function Global.IsPedHeadingTowardsPosition(ped, x, y, z, p4)
	return _in(0xFCF37A457CB96DC0, ped, x, y, z, p4, _r)
end
Global.N_0xfcf37a457cb96dc0 = Global.IsPedHeadingTowardsPosition

--- IS_PED_HEADTRACKING_ENTITY
function Global.IsPedHeadtrackingEntity(ped, entity)
	return _in(0x813A0A7C9D2E831F, ped, entity, _r)
end

--- IS_PED_HEADTRACKING_PED
function Global.IsPedHeadtrackingPed(ped1, ped2)
	return _in(0x5CD3CB88A7F8850D, ped1, ped2, _r)
end

--- _IS_PED_HELMET_UNK
function Global.IsPedHelmetUnk(ped)
	return _in(0xB9496CE47546DB2C, ped, _r)
end
Global.N_0xb9496ce47546db2c = Global.IsPedHelmetUnk

--- Returns true/false if the ped is/isn't humanoid.
function Global.IsPedHuman(ped)
	return _in(0xB980061DA992779D, ped, _r)
end

--- Returns whether the specified ped is hurt.
function Global.IsPedHurt(ped)
	return _in(0x5983BB449D7FDB12, ped, _r)
end

--- IS_PED_IN_ANY_BOAT
function Global.IsPedInAnyBoat(ped)
	return _in(0x2E0E1C2B4F6CB339, ped, _r)
end

--- IS_PED_IN_ANY_HELI
function Global.IsPedInAnyHeli(ped)
	return _in(0x298B91AE825E5705, ped, _r)
end

--- IS_PED_IN_ANY_PLANE
function Global.IsPedInAnyPlane(ped)
	return _in(0x5FFF4CFC74D8FB80, ped, _r)
end

--- IS_PED_IN_ANY_POLICE_VEHICLE
function Global.IsPedInAnyPoliceVehicle(ped)
	return _in(0x0BD04E29640C9C12, ped, _r)
end

--- IS_PED_IN_ANY_SUB
function Global.IsPedInAnySub(ped)
	return _in(0xFBFC01CCFB35D99E, ped, _r)
end

--- IS_PED_IN_ANY_TAXI
function Global.IsPedInAnyTaxi(ped)
	return _in(0x6E575D6A898AB852, ped, _r)
end

--- IS_PED_IN_ANY_TRAIN
function Global.IsPedInAnyTrain(ped)
	return _in(0x6F972C1AB75A1ED0, ped, _r)
end

--- Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
-- currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
-- @param ped The ped to check.
-- @param atGetIn `true` to also consider attempting to enter a vehicle.
-- @return Whether or not the ped is currently involved in any vehicle.
function Global.IsPedInAnyVehicle(ped, atGetIn)
	return _in(0x997ABD671D25CA0B, ped, atGetIn, _r)
end

--- Examines whether the ped is engaged in combat; when given a target ped index, it confirms if the ped is actively fighting the specified target, returning true if engaged and false if not.
-- @param ped Ped index.
function Global.IsPedInCombat(ped, target)
	return _in(0x4859F1FC66A6278E, ped, target, _r)
end

--- p1 is nearly always 0 in the scripts.
function Global.IsPedInCover(ped, exceptUseWeapon)
	return _in(0x60DFD0691A170B88, ped, exceptUseWeapon, _r)
end

--- IS_PED_IN_COVER_FACING_LEFT
function Global.IsPedInCoverFacingLeft(ped)
	return _in(0x845333B3150583AB, ped, _r)
end

--- IS_PED_IN_CURRENT_CONVERSATION
-- @return Returns true if the ped is in the currently playing conversation
function Global.IsPedInCurrentConversation(ped)
	return _in(0x049E937F18F4020C, ped, _r)
end

--- IS_PED_IN_FLYING_VEHICLE
function Global.IsPedInFlyingVehicle(ped)
	return _in(0x9134873537FA419C, ped, _r)
end

--- IS_PED_IN_GROUP
function Global.IsPedInGroup(ped)
	return _in(0x5891CAC5D4ACFF74, ped, _r)
end

--- IS_PED_IN_HIGH_COVER
function Global.IsPedInHighCover(ped)
	return _in(0x6A03BF943D767C93, ped, _r)
end
Global.N_0x6a03bf943d767c93 = Global.IsPedInHighCover
Global.IsPedStandingInCover = Global.IsPedInHighCover

--- Notes: The function only returns true while the ped is:
-- A.) Swinging a random melee attack (including pistol-whipping)
-- B.) Reacting to being hit by a melee attack (including pistol-whipping)
-- C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
-- You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
function Global.IsPedInMeleeCombat(ped)
	return _in(0x4E209B2C1EAD5159, ped, _r)
end

--- IS_PED_IN_MODEL
function Global.IsPedInModel(ped, modelHash)
	return _in(0x796D90EFB19AA332, ped, _ch(modelHash), _r)
end

--- IS_PED_IN_PARACHUTE_FREE_FALL
function Global.IsPedInParachuteFreeFall(ped)
	return _in(0x7DCE8BDA0F1C1200, ped, _r)
end

--- Gets a value indicating whether the specified ped is in the specified vehicle.
-- If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
function Global.IsPedInVehicle(ped, vehicle, atGetIn)
	return _in(0xA3EE4A07279BB9DB, ped, vehicle, atGetIn, _r)
end

--- This native checks if a ped is on the ground, in pain from a (gunshot) wound.
-- @return Returns `true` if the ped is in [writhe](https://dictionary.cambridge.org/dictionary/english/writhe), `false` otherwise.
function Global.IsPedInWrithe(ped)
	return _in(0xDEB6D52126E7D640, ped, _r)
end

--- Gets a value indicating whether this ped's health is below its injured threshold.
-- The default threshold is 100.
function Global.IsPedInjured(ped)
	return _in(0x84A2DD9AC37C35C1, ped, _r)
end

--- IS_PED_JACKING
function Global.IsPedJacking(ped)
	return _in(0x4AE4FF911DFB61DA, ped, _r)
end

--- IS_PED_JUMPING
function Global.IsPedJumping(ped)
	return _in(0xCEDABC5900A0BF97, ped, _r)
end

--- IS_PED_JUMPING_OUT_OF_VEHICLE
function Global.IsPedJumpingOutOfVehicle(ped)
	return _in(0x433DDFFE2044B636, ped, _r)
end

--- _IS_PED_LIPSTICK_COLOR_VALID
function Global.IsPedLipstickColorValid(colorID)
	return _in(0x0525A2C2562F3CD4, colorID, _r)
end
Global.N_0x0525a2c2562f3cd4 = Global.IsPedLipstickColorValid

--- _IS_PED_LIPSTICK_COLOR_VALID_2
function Global.IsPedLipstickColorValid_2(colorId)
	return _in(0x3E802F11FBE27674, colorId, _r)
end
Global.N_0x3e802f11fbe27674 = Global.IsPedLipstickColorValid_2

--- Returns true/false if the ped is/isn't male.
function Global.IsPedMale(ped)
	return _in(0x6D9F5FAA7488BA46, ped, _r)
end

--- IS_PED_MODEL
function Global.IsPedModel(ped, modelHash)
	return _in(0xC9D55B1A358A5BF7, ped, _ch(modelHash), _r)
end

--- IS_PED_ON_ANY_BIKE
function Global.IsPedOnAnyBike(ped)
	return _in(0x94495889E22C6479, ped, _r)
end

--- IS_PED_ON_FOOT
function Global.IsPedOnFoot(ped)
	return _in(0x01FEE67DB37F59B2, ped, _r)
end

--- Same function call as PED::GET_MOUNT, aka just returns 0
function Global.IsPedOnMount(ped)
	return _in(0x460BC76A0E10655E, ped, _r)
end

--- IS_PED_ON_SPECIFIC_VEHICLE
function Global.IsPedOnSpecificVehicle(ped, vehicle)
	return _in(0xEC5F66E459AF3BB2, ped, vehicle, _r)
end

--- Gets a value indicating whether the specified ped is on top of any vehicle.
-- Return 1 when ped is on vehicle.
-- Return 0 when ped is not on a vehicle.
function Global.IsPedOnVehicle(ped)
	return _in(0x67722AEB798E5FAB, ped, _r)
end

--- IS_PED_*
-- Returns true if the ped is currently opening a door (CTaskOpenDoor).
function Global.IsPedOpeningADoor(ped)
	return _in(0x26AF0E8E30BD2A2C, ped, _r)
end
Global.N_0x26af0e8e30bd2a2c = Global.IsPedOpeningADoor

--- IS_PED_PERFORMING_DEPENDENT_COMBO_LIMIT
function Global.IsPedPerformingDependentComboLimit(ped)
	return _in(0xEBD0EDBA5BE957CF, ped, _r)
end
Global.N_0xebd0edba5be957cf = Global.IsPedPerformingDependentComboLimit

--- IS_PED_PERFORMING_MELEE_ACTION
function Global.IsPedPerformingMeleeAction(ped)
	return _in(0xDCCA191DF9980FD7, ped, _r)
end
Global.N_0xdcca191df9980fd7 = Global.IsPedPerformingMeleeAction

--- IS_PED_PERFORMING_STEALTH_KILL
function Global.IsPedPerformingStealthKill(ped)
	return _in(0xFD4CCDBCC59941B7, ped, _r)
end

--- IS_PED_PLANTING_BOMB
function Global.IsPedPlantingBomb(ped)
	return _in(0xC70B5FAE151982D8, ped, _r)
end

--- IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO
function Global.IsPedPlayingBaseClipInScenario(ped)
	return _in(0x621C6E4729388E41, ped, _r)
end
Global.N_0x621c6e4729388e41 = Global.IsPedPlayingBaseClipInScenario

--- IS_PED_PRONE
function Global.IsPedProne(ped)
	return _in(0xD6A86331A537A7B9, ped, _r)
end

--- If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
function Global.IsPedRagdoll(ped)
	return _in(0x47E4E977581C5B55, ped, _r)
end

--- Returns whether the specified ped is reloading.
function Global.IsPedReloading(ped)
	return _in(0x24B100C68C645951, ped, _r)
end

--- IS_PED_RESPONDING_TO_EVENT
function Global.IsPedRespondingToEvent(ped, event)
	return _in(0x625B774D75C87068, ped, event, _r)
end

--- IS_PED_RINGTONE_PLAYING
-- @return Returns true if the peds ringtone is currently playing
function Global.IsPedRingtonePlaying(ped)
	return _in(0x1E8E5E20937E3137, ped, _r)
end

--- IS_PED_RUNNING
function Global.IsPedRunning(ped)
	return _in(0xC5286FFC176F28A2, ped, _r)
end

--- IS_PED_RUNNING_ARREST_TASK
function Global.IsPedRunningArrestTask(ped)
	return _in(0x3DC52677769B4AE0, ped, _r)
end

--- IS_PED_RUNNING_MELEE_TASK
function Global.IsPedRunningMeleeTask(ped)
	return _in(0xD1871251F3B5ACD7, ped, _r)
end
Global.N_0xd1871251f3b5acd7 = Global.IsPedRunningMeleeTask

--- IS_PED_RUNNING_MOBILE_PHONE_TASK
function Global.IsPedRunningMobilePhoneTask(ped)
	return _in(0x2AFE52F782F25775, ped, _r)
end

--- IS_PED_RUNNING_RAGDOLL_TASK
function Global.IsPedRunningRagdollTask(ped)
	return _in(0xE3B6097CC25AA69E, ped, _r)
end

--- _IS_PED_SHADER_EFFECT_VALID
function Global.IsPedShaderEffectValid(ped)
	return _in(0x81AA517FBBA05D39, ped, _r)
end
Global.N_0x81aa517fbba05d39 = Global.IsPedShaderEffectValid

--- Returns whether the specified ped is shooting.
function Global.IsPedShooting(ped)
	return _in(0x34616828CD07F1A1, ped, _r)
end

--- IS_PED_SHOOTING_IN_AREA
function Global.IsPedShootingInArea(ped, x1, y1, z1, x2, y2, z2, p7, p8)
	return _in(0x7E9DFE24AC1E58EF, ped, x1, y1, z1, x2, y2, z2, p7, p8, _r)
end

--- Detect if ped is in any vehicle
-- [True/False]
function Global.IsPedSittingInAnyVehicle(ped)
	return _in(0x826AA586EDB9FEF8, ped, _r)
end

--- Detect if ped is sitting in the specified vehicle
-- [True/False]
function Global.IsPedSittingInVehicle(ped, vehicle)
	return _in(0xA808AA1D79230FC2, ped, vehicle, _r)
end

--- IS_PED_SPRINTING
function Global.IsPedSprinting(ped)
	return _in(0x57E457CD2C0FC168, ped, _r)
end

--- IS_PED_STILL
function Global.IsPedStill(ped)
	return _in(0xAC29253EEF8F0180, ped, _r)
end

--- Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
function Global.IsPedStopped(ped)
	return _in(0x530944F6F4B8A214, ped, _r)
end

--- What's strafing?
function Global.IsPedStrafing(ped)
	return _in(0xE45B7F222DE47E09, ped, _r)
end

--- _IS_PED_SWAPPING_WEAPON
function Global.IsPedSwappingWeapon(Ped)
	return _in(0x3795688A307E1EB6, Ped, _r)
end
Global.N_0x3795688a307e1eb6 = Global.IsPedSwappingWeapon

--- IS_PED_SWIMMING
function Global.IsPedSwimming(ped)
	return _in(0x9DE327631295B4C2, ped, _r)
end

--- IS_PED_SWIMMING_UNDER_WATER
function Global.IsPedSwimmingUnderWater(ped)
	return _in(0xC024869A53992F34, ped, _r)
end

--- IS_PED_TAKING_OFF_HELMET
function Global.IsPedTakingOffHelmet(ped)
	return _in(0x14590DDBEDB1EC85, ped, _r)
end
Global.N_0x14590ddbedb1ec85 = Global.IsPedTakingOffHelmet

--- IS_PED_TRACKED
function Global.IsPedTracked(ped)
	return _in(0x4C5E1F087CD10BB7, ped, _r)
end

--- If the ped is attempting to enter a locked vehicle.
-- @param ped Ped index.
function Global.IsPedTryingToEnterALockedVehicle(ped)
	return _in(0x44D28D5DDFE5F68C, ped, _r)
end

--- IS_PED_USING_ACTION_MODE
function Global.IsPedUsingActionMode(ped)
	return _in(0x00E73468D085F745, ped, _r)
end

--- IS_PED_USING_ANY_SCENARIO
function Global.IsPedUsingAnyScenario(ped)
	return _in(0x57AB4A3080F85143, ped, _r)
end

--- IS_PED_USING_SCENARIO
function Global.IsPedUsingScenario(ped, scenario)
	return _in(0x1BF094736DD62C2E, ped, _ts(scenario), _r)
end

--- IS_PED_VAULTING
function Global.IsPedVaulting(ped)
	return _in(0x117C70D1F5730B5E, ped, _r)
end

--- IS_PED_WALKING
function Global.IsPedWalking(ped)
	return _in(0xDE4C184B2B9B071A, ped, _r)
end

--- IS_PED_WEAPON_COMPONENT_ACTIVE
function Global.IsPedWeaponComponentActive(ped, weaponHash, componentHash)
	return _in(0x0D78DE0572D3969E, ped, _ch(weaponHash), _ch(componentHash), _r)
end

--- IS_PED_WEAPON_READY_TO_SHOOT
function Global.IsPedWeaponReadyToShoot(ped)
	return _in(0xB80CA294F2F26749, ped, _r)
end

--- Returns true if the ped passed through the parenthesis is wearing a helmet.
function Global.IsPedWearingHelmet(ped)
	return _in(0xF33BDFE19B309B19, ped, _r)
end

--- IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE
function Global.IsPedheadshotImgUploadAvailable()
	return _in(0xEBB376779A760AA8, _r)
end
Global.N_0xebb376779a760aa8 = Global.IsPedheadshotImgUploadAvailable

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.IsPedheadshotReady(id)
	return _in(0x7085228842B13A67, id, _r)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.IsPedheadshotValid(id)
	return _in(0xA0A9668F158129A2, id, _r)
end

--- IS_PICKUP_WEAPON_OBJECT_VALID
function Global.IsPickupWeaponObjectValid(object)
	return _in(0x11D1E53A726891FE, object, _r)
end
Global.N_0x11d1e53a726891fe = Global.IsPickupWeaponObjectValid

--- IS_PLANE_LANDING_GEAR_INTACT
function Global.IsPlaneLandingGearIntact(plane)
	return _in(0x4198AB0022B15F87, plane, _r)
end
Global.N_0x4198ab0022b15f87 = Global.IsPlaneLandingGearIntact
Global.VehicleHasLandingGear = Global.IsPlaneLandingGearIntact

--- IS_PLAYBACK_GOING_ON_FOR_VEHICLE
function Global.IsPlaybackGoingOnForVehicle(vehicle)
	return _in(0x1C8A4C2C19E68EEC, vehicle, _r)
end

--- IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE
function Global.IsPlaybackUsingAiGoingOnForVehicle(vehicle)
	return _in(0xAEA8FD591FAD4106, vehicle, _r)
end

--- Returns true if an unk value is greater than 0.0f
function Global.IsPlayerBattleAware(player)
	return _in(0x38D28DA81E4E9BF9, player, _r)
end
Global.N_0x38d28da81e4e9bf9 = Global.IsPlayerBattleAware

--- Return true while player is being arrested / busted.
-- If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
-- If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
function Global.IsPlayerBeingArrested(player, atArresting)
	return _in(0x388A47C51ABDAC8E, player, atArresting, _r)
end

--- IS_PLAYER_BLUETOOTH_ENABLE
function Global.IsPlayerBluetoothEnable(player)
	return _in(0x65FAEE425DE637B0, player, _r)
end
Global.N_0x65faee425de637b0 = Global.IsPlayerBluetoothEnable

--- Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
-- Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
function Global.IsPlayerCamControlDisabled()
	return _in(0x7C814D2FB49F40C0, _r)
end
Global.N_0x7c814d2fb49f40c0 = Global.IsPlayerCamControlDisabled

--- Returns TRUE if the player ('s ped) is climbing at the moment.
function Global.IsPlayerClimbing(player)
	return _in(0x95E8F73DC65EFB9C, player, _r)
end

--- Can the player control himself, used to disable controls for player for things like a cutscene.
-- ---
-- You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
function Global.IsPlayerControlOn(player)
	return _in(0x49C32D60007AFA47, player, _r)
end

--- IS_PLAYER_DEAD
function Global.IsPlayerDead(player)
	return _in(0x424D4687FA1E5652, player, _r)
end

--- Violation types:
-- ```
-- enum eViolationType {
-- VT_PAVED_PEDESTRIAN_AREAS = 0,
-- VT_RUNNING_REDS,
-- VT_AGAINST_TRAFFIC
-- };
-- ```
-- Checks if a player is performing a certain type of traffic violation.
-- *   Type 0: Checks if the player is driving outside designated road areas pedestrians would walk on (specifically paved sidewalks).
-- *   Type 1: Checks if the player is running through reds, takes some time to return true.
-- *   Type 2: Checks if the player is driving on the wrong side of the road (against traffic).
-- Used solely in "Al Di Napoli" with type 2 for a voiceline.
-- @param player Player ID
-- @param type A violation type from 0 to 2 (`eViolationType`).
-- @return Whether or not the player is actively performing a certain type of traffic violation.
function Global.IsPlayerDrivingDangerously(player, type)
	return _in(0xF10B44FD479D69F3, player, type, _r)
end
Global.N_0xf10b44fd479d69f3 = Global.IsPlayerDrivingDangerously

--- IS_PLAYER_ENTIRELY_INSIDE_GARAGE
function Global.IsPlayerEntirelyInsideGarage(garageHash, player, p2, p3)
	return _in(0x024A60DEB0EA69F0, _ch(garageHash), player, p2, p3, _r)
end
Global.N_0x024a60deb0ea69f0 = Global.IsPlayerEntirelyInsideGarage

--- Gets a value indicating whether the specified player is currently aiming freely.
function Global.IsPlayerFreeAiming(player)
	return _in(0x2E397FD2ECD37C87, player, _r)
end

--- Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
function Global.IsPlayerFreeAimingAtEntity(player, entity)
	return _in(0x3C06B5C839B38F7B, player, entity, _r)
end

--- IS_PLAYER_FREE_FOR_AMBIENT_TASK
function Global.IsPlayerFreeForAmbientTask(player)
	return _in(0xDCCFD3F106C36AB4, player, _r)
end

--- IS_PLAYER_IN_CUTSCENE
function Global.IsPlayerInCutscene(player)
	return _in(0xE73092F4157CD126, player, _r)
end

--- this function is hard-coded to always return 0.
function Global.IsPlayerLoggingInNp()
	return _in(0x74556E1420867ECA, _r)
end

--- It returns true if the player is online, suggesting they are also logged in locally. Note that this is an alias for `NETWORK_IS_SIGNED_ONLINE`.
-- @return It provides a true value if the game is in online mode and false if it's in offline mode.
function Global.IsPlayerOnline()
	return _in(0xF25D331DC2627BBC, _r)
end

--- IS_PLAYER_PARTIALLY_INSIDE_GARAGE
function Global.IsPlayerPartiallyInsideGarage(garageHash, player, p2)
	return _in(0x1761DC5D8471CBAA, _ch(garageHash), player, p2, _r)
end
Global.N_0x1761dc5d8471cbaa = Global.IsPlayerPartiallyInsideGarage

--- Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
function Global.IsPlayerPlaying(player)
	return _in(0x5E9564D8246B909A, player, _r)
end

--- IS_PLAYER_PRESSING_HORN
function Global.IsPlayerPressingHorn(player)
	return _in(0xFA1E2BF8B10598F9, player, _r)
end

--- IS_PLAYER_READY_FOR_CUTSCENE
function Global.IsPlayerReadyForCutscene(player)
	return _in(0x908CBECC2CAA3690, player, _r)
end

--- Returns true if the player is riding a train.
function Global.IsPlayerRidingTrain(player)
	return _in(0x4EC12697209F2196, player, _r)
end

--- IS_PLAYER_SCRIPT_CONTROL_ON
function Global.IsPlayerScriptControlOn(player)
	return _in(0x8A876A65283DD7D7, player, _r)
end

--- Returns true if the player is currently switching, false otherwise.
-- (When the camera is in the sky moving from Trevor to Franklin for example)
function Global.IsPlayerSwitchInProgress()
	return _in(0xD9D2CFFF49FAB35F, _r)
end
Global.N_0xd9d2cfff49fab35f = Global.IsPlayerSwitchInProgress

--- IS_PLAYER_TARGETTING_ANYTHING
function Global.IsPlayerTargettingAnything(player)
	return _in(0x78CFE51896B6B8A4, player, _r)
end

--- IS_PLAYER_TARGETTING_ENTITY
function Global.IsPlayerTargettingEntity(player, entity)
	return _in(0x7912F7FC4F6264B6, player, entity, _r)
end

--- IS_PLAYER_TELEPORT_ACTIVE
function Global.IsPlayerTeleportActive()
	return _in(0x02B15662D7F8886F, _r)
end

--- IS_PLAYER_VEH_RADIO_ENABLE
function Global.IsPlayerVehRadioEnable()
	return _in(0x5F43D83FD6738741, _r)
end
Global.N_0x5f43d83fd6738741 = Global.IsPlayerVehRadioEnable
Global.IsPlayerVehicleRadioEnabled = Global.IsPlayerVehRadioEnable

--- IS_PLAYER_WANTED_LEVEL_GREATER
function Global.IsPlayerWantedLevelGreater(player, wantedLevel)
	return _in(0x238DB2A2C23EE9EF, player, wantedLevel, _r)
end

--- IS_PLAYING_PHONE_GESTURE_ANIM
function Global.IsPlayingPhoneGestureAnim(ped)
	return _in(0xB8EBB1E9D3588C10, ped, _r)
end

--- NativeDB Introduced: v1604
function Global.IsPlaylistUnk(tvChannel, p1)
	return _in(0x1F710BFF7DAE6261, tvChannel, p1, _r)
end

--- An **angled area** is an X-Z oriented rectangle with three parameters:
-- 1.  **origin**: the mid-point along a base edge of the rectangle;
-- 2.  **extent**: the mid-point of opposite base edge on the other Z;
-- 3.  **width**: the length of the base edge; (named derived from logging strings `CNetworkRoadNodeWorldStateData`).
-- The oriented rectangle can then be derived from the direction of the two points (`norm(origin - extent)`), its orthonormal, and the width, e.g:
-- 1.  [golf_mp](https://i.imgur.com/JhsQAK9.png)
-- 2.  [am_taxi](https://i.imgur.com/TJWCZaT.jpg)
-- @param xPos The x coordinate.
-- @param yPos The y coordinate.
-- @param zPos The z coordinate.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
-- @param p10 a debug flag invoking functions in the same path as `DRAW_MARKER`
-- @param includez If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
function Global.IsPointInAngledArea(xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, p10, includez)
	return _in(0x2A70BAE8883E4C81, xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, p10, includez, _r)
end

--- IS_POINT_OBSCURED_BY_A_MISSION_ENTITY
function Global.IsPointObscuredByAMissionEntity(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xE54E209C35FFA18D, p0, p1, p2, p3, p4, p5, p6, _r)
end

--- Gets a value indicating whether the specified position is on a road.
-- The vehicle parameter is not implemented (ignored).
function Global.IsPointOnRoad(x, y, z, vehicle)
	return _in(0x125BF4ABFC536B09, x, y, z, vehicle, _r)
end

--- NativeDB Introduced: v1290
function Global.IsPopMultiplierAreaUnk(id)
	return _in(0x1312F4B242609CE3, id, _r)
end

--- The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
-- @param x X coordinate of the position to check.
-- @param y Y coordinate of the position to check.
-- @param z Z coordinate of the position to check.
-- @param range The range, seems to not be very accurate during testing.
-- @param p4 Unknown, when set to true it seems to always return true no matter what I try.
-- @param checkVehicles Check for any vehicles in that area.
-- @param checkPeds Check for any peds in that area.
-- @param p7 Unknown.
-- @param p8 Unknown.
-- @param ignoreEntity This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
-- @param p10 Unknown.
-- @return Returns true if there is anything in that location matching the provided parameters.
function Global.IsPositionOccupied(x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10)
	return _in(0xADCDE75E1C60F32D, x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10, _r)
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function Global.IsPrevWeatherType(weatherType)
	return _in(0x44F28F86433B10A9, _ts(weatherType), _r)
end

--- IS_PRINCIPAL_ACE_ALLOWED
function Global.IsPrincipalAceAllowed(principal, object)
	return _in(0x37cf52ce, _ts(principal), _ts(object), _r)
end

--- Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
-- ownedByPlayer = only projectiles fired by the player will be detected.
function Global.IsProjectileInArea(x1, y1, z1, x2, y2, z2, ownedByPlayer)
	return _in(0x5270A8FBC098C3F8, x1, y1, z1, x2, y2, z2, ownedByPlayer, _r)
end

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- ```
-- NativeDB Removed Parameter 7: float p7
-- ```
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.IsProjectileTypeInAngledArea(x1, y1, z1, x2, y2, z2, width, p7, weaponHash, ownedByPlayer)
	return _in(0xF0BC12401061DEA0, x1, y1, z1, x2, y2, z2, width, p7, _ch(weaponHash), ownedByPlayer, _r)
end

--- Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
function Global.IsProjectileTypeInArea(x1, y1, z1, x2, y2, z2, type, ownedByPlayer)
	return _in(0x2E0DC353342C4A6D, x1, y1, z1, x2, y2, z2, type, ownedByPlayer, _r)
end

--- IS_PROJECTILE_TYPE_WITHIN_DISTANCE
function Global.IsProjectileTypeWithinDistance(x, y, z, projHash, radius, ownedByPlayer)
	return _in(0x34318593248C8FB2, x, y, z, _ch(projHash), radius, ownedByPlayer, _r)
end
Global.N_0x34318593248c8fb2 = Global.IsProjectileTypeWithinDistance
Global.IsProjectileTypeInRadius = Global.IsProjectileTypeWithinDistance

--- IS_PS3_VERSION
-- @return Hard-coded to always return 0.
function Global.IsPs3Version()
	return _in(0xCCA1072C29D096C2, _r)
end

--- IS_RADAR_HIDDEN
function Global.IsRadarHidden()
	return _in(0x157F93B036700462, _r)
end

--- IS_RADAR_PREFERENCE_SWITCHED_ON
function Global.IsRadarPreferenceSwitchedOn()
	return _in(0x9EB6522EA68F22FE, _r)
end

--- IS_RADIO_FADED_OUT
-- @return Returns true if the radio is currently faded out
function Global.IsRadioFadedOut()
	return _in(0x0626A247D2405330, _r)
end
Global.N_0x0626a247d2405330 = Global.IsRadioFadedOut

--- IS_RADIO_RETUNING
-- @return Returns true if the radio is tuning to a station
function Global.IsRadioRetuning()
	return _in(0xA151A7394A214E65, _r)
end

--- IS_RADIO_STATION_FAVOURITED
-- @return Returns whether a radio station is a favourite.
function Global.IsRadioStationFavourited(radioStation)
	return _in(0x2B1784DB08AFEA79, _ts(radioStation), _r)
end
Global.IsRadioStationVisible = Global.IsRadioStationFavourited

--- Checks if you're recording.
-- @return Whether recording is currently running, true when you start recording (F1) or turn on action replay (F2)
function Global.IsRecording()
	return _in(0x1897CA71995A90B4, _r)
end

--- IS_REPORTUGC_MENU_OPEN
function Global.IsReportugcMenuOpen()
	return _in(0x9135584D09A3437E, _r)
end
Global.N_0x9135584d09a3437e = Global.IsReportugcMenuOpen

--- _IS_ROCKSTAR_MESSAGE_READY_FOR_SCRIPT
function Global.IsRockstarMessageReadyForScript()
	return _in(0xBC1CC91205EC8D6E, _r)
end
Global.N_0xbc1cc91205ec8d6e = Global.IsRockstarMessageReadyForScript

--- NativeDB Introduced: v1290
-- @param scaleformIndex Scaleform index returned by [`REQUEST_SCALEFORM_MOVIE`](#\_0x11FE353CF9733E6F) (or similar natives).
-- @return Returns true if a scaleform movie is being deleted from streaming memory (After it has been marked as no longer needed with [`SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED`](#\_0x1D132D614DD86811).
function Global.IsScaleformMovieDeleting(scaleformIndex)
	return _in(0x86255B1FC929E33E, scaleformIndex, _r)
end
Global.N_0x86255b1fc929e33e = Global.IsScaleformMovieDeleting

--- methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
-- Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns true if the return value of a scaleform function is ready to be collected
function Global.IsScaleformMovieMethodReturnValueReady(method_return)
	return _in(0x768FF8961BA904D6, method_return, _r)
end
Global.N_0x768ff8961ba904d6 = Global.IsScaleformMovieMethodReturnValueReady
Global.GetScaleformMovieFunctionReturnBool = Global.IsScaleformMovieMethodReturnValueReady

--- Occurrences in the b617d scripts:
-- "ARMY_GUARD",
-- "ARMY_HELI",
-- "BLIMP",
-- "Cinema_Downtown",
-- "Cinema_Morningwood",
-- "Cinema_Textile",
-- "City_Banks",
-- "Countryside_Banks",
-- "DEALERSHIP",
-- "KORTZ_SECURITY",
-- "LSA_Planes",
-- "MP_POLICE",
-- "Observatory_Bikers",
-- "POLICE_POUND1",
-- "POLICE_POUND2",
-- "POLICE_POUND3",
-- "POLICE_POUND4",
-- "POLICE_POUND5",
-- "Rampage1",
-- "SANDY_PLANES",
-- "SCRAP_SECURITY",
-- "SEW_MACHINE",
-- "SOLOMON_GATE"
-- Sometimes used with DOES_SCENARIO_GROUP_EXIST:
-- if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
-- else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
function Global.IsScenarioGroupEnabled(scenarioGroup)
	return _in(0x367A09DED4E05B99, _ts(scenarioGroup), _r)
end

--- IS_SCENARIO_OCCUPIED
function Global.IsScenarioOccupied(p0, p1, p2, p3, p4)
	return _in(0x788756D73AC2E07C, p0, p1, p2, p3, p4, _r)
end

--- Occurrences in the b617d scripts:
-- "PROP_HUMAN_SEAT_CHAIR",
-- "WORLD_HUMAN_DRINKING",
-- "WORLD_HUMAN_HANG_OUT_STREET",
-- "WORLD_HUMAN_SMOKING",
-- "WORLD_MOUNTAIN_LION_WANDER",
-- "WORLD_HUMAN_DRINKING"
-- Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.
-- scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
function Global.IsScenarioTypeEnabled(scenarioType)
	return _in(0x3A815DB3EA088722, _ts(scenarioType), _r)
end

--- IS_SCREEN_FADED_IN
function Global.IsScreenFadedIn()
	return _in(0x5A859503B0C08678, _r)
end

--- IS_SCREEN_FADED_OUT
function Global.IsScreenFadedOut()
	return _in(0xB16FCE9DDC7BA182, _r)
end

--- IS_SCREEN_FADING_IN
function Global.IsScreenFadingIn()
	return _in(0x5C544BC6C57AC575, _r)
end

--- IS_SCREEN_FADING_OUT
function Global.IsScreenFadingOut()
	return _in(0x797AC7CB535BA28F, _r)
end

--- Returns whether screen transition to blur/from blur is running.
function Global.IsScreenblurFadeRunning()
	return _in(0x7B226C785A52A0A9, _r)
end
Global.N_0x7b226c785a52a0a9 = Global.IsScreenblurFadeRunning

--- Determines if a global camera shake is currently active. You can stop the currently active global camera shake using [STOP_SCRIPT_GLOBAL_SHAKING](#\_0x1C9D7949FA533490).
-- ```
-- NativeDB Introduced: v323
-- ```
-- @return Returns `true` if a scripted global camera shake is currently in effect, otherwise `false`.
function Global.IsScriptGlobalShaking()
	return _in(0xC912AF078AF19212, _r)
end
Global.N_0xc912af078af19212 = Global.IsScriptGlobalShaking

--- IS_SCRIPTED_CONVERSATION_LOADED
-- @return Returns true if the first batch of lines for the currently requested conversation have loaded successfully.
function Global.IsScriptedConversationLoaded()
	return _in(0xDF0D54BE7A776737, _r)
end

--- IS_SCRIPTED_CONVERSATION_ONGOING
function Global.IsScriptedConversationOngoing()
	return _in(0x16754C556D2EDE3D, _r)
end

--- IS_SCRIPTED_HUD_COMPONENT_ACTIVE
function Global.IsScriptedHudComponentActive(id)
	return _in(0xDD100EB17A94FF65, id, _r)
end

--- IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME
function Global.IsScriptedHudComponentHiddenThisFrame(id)
	return _in(0x09C0403ED9A751C2, id, _r)
end
Global.N_0x09c0403ed9a751c2 = Global.IsScriptedHudComponentHiddenThisFrame

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.IsScriptedScenarioPedUsingConditionalAnim(ped, animDict, anim)
	return _in(0x6EC47A344923E1ED, ped, _ts(animDict), _ts(anim), _r)
end

--- IS_SCRIPTED_SPEECH_PLAYING
-- @return Returns true if scripted speech is currently playing from the given ped.
function Global.IsScriptedSpeechPlaying(ped)
	return _in(0xCC9AA18DCC7084F4, ped, _r)
end

--- NativeDB Introduced: v1493
function Global.IsScubaGearLightEnabled(ped)
	return _in(0x88274C11CF0D866D, ped, _r)
end

--- IS_SEAT_WARP_ONLY
-- @param vehicle The vehicle to check.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.IsSeatWarpOnly(vehicle, seatIndex)
	return _in(0xF7F203E31F96F6A1, vehicle, seatIndex, _r)
end
Global.N_0xf7f203e31f96f6a1 = Global.IsSeatWarpOnly

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function Global.IsShockingEventInSphere(eventType, x, y, z, radius)
	return _in(0x1374ABB7C15BAB92, eventType, x, y, z, radius, _r)
end

--- Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
function Global.IsSniperBulletInArea(x1, y1, z1, x2, y2, z2)
	return _in(0xFEFCF11B01287125, x1, y1, z1, x2, y2, z2, _r)
end

--- This function is hard-coded to always return 0.
function Global.IsSniperInverted()
	return _in(0x61A23B7EDA9BDA24, _r)
end

--- IS_SOCIAL_CLUB_ACTIVE
function Global.IsSocialClubActive()
	return _in(0xC406BE343FC4B9AF, _r)
end
Global.N_0xc406be343fc4b9af = Global.IsSocialClubActive

--- NativeDB Added Parameter 2: Any p1
function Global.IsSpecialAbilityActive(player)
	return _in(0x3E5F7FC85D854E15, player, _r)
end

--- NativeDB Added Parameter 2: Any p1
function Global.IsSpecialAbilityEnabled(player)
	return _in(0xB1D200FE26AEF3CB, player, _r)
end

--- NativeDB Added Parameter 2: Any p1
function Global.IsSpecialAbilityMeterFull(player)
	return _in(0x05A1FE504B7F2587, player, _r)
end

--- IS_SPECIAL_ABILITY_UNLOCKED
function Global.IsSpecialAbilityUnlocked(playerModel)
	return _in(0xC6017F6A6CDFA694, _ch(playerModel), _r)
end

--- IS_SPHERE_VISIBLE
function Global.IsSphereVisible(x, y, z, radius)
	return _in(0xE33D59DA70B58FDF, x, y, z, radius, _r)
end

--- IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE
function Global.IsSphereVisibleToAnotherMachine(p0, p1, p2, p3)
	return _in(0xD82CF8E64C8729D8, p0, p1, p2, p3, _r)
end

--- IS_SPHERE_VISIBLE_TO_PLAYER
function Global.IsSphereVisibleToPlayer(p0, p1, p2, p3, p4)
	return _in(0xDC3A310219E5DA62, p0, p1, p2, p3, p4, _r)
end

--- Returns true when the srl from BEGIN_SRL is loaded.
-- @return *   A boolean once BeginSrl srl is loaded.
function Global.IsSrlLoaded()
	return _in(0xD0263801A4C5B0BB, _r)
end

--- IS_STORE_AVAILABLE_TO_USER
function Global.IsStoreAvailableToUser()
	return _in(0x883D79C4071E18B3, _r)
end
Global.N_0x883d79c4071e18b3 = Global.IsStoreAvailableToUser

--- IS_STREAM_PLAYING
-- @return Returns true if the script is currently playing a stream.
function Global.IsStreamPlaying()
	return _in(0xD11FA52EB849D978, _r)
end

--- IS_STREAMING_ADDITIONAL_TEXT
function Global.IsStreamingAdditionalText(p0)
	return _in(0x8B6817B71B85EBF0, p0, _r)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Returns whether an asynchronous streaming file registration completed.
-- @param registerAs The file name to check, for example `asset.ydr`.
-- @return Whether or not the streaming file has been registered.
function Global.IsStreamingFileReady(registerAs)
	return _in(0xa194934d, _ts(registerAs), _r)
end

--- IS_STREAMVOL_ACTIVE
function Global.IsStreamvolActive()
	return _in(0xBC9823AB80A3DCAC, _r)
end
Global.N_0xbc9823ab80a3dcac = Global.IsStreamvolActive

--- IS_STRING_NULL
function Global.IsStringNull(string)
	return _in(0xF22B6C47C6EAB066, _ts(string), _r)
end

--- IS_STRING_NULL_OR_EMPTY
function Global.IsStringNullOrEmpty(string)
	return _in(0xCA042B6957743895, _ts(string), _r)
end

--- IS_STUNT_JUMP_IN_PROGRESS
function Global.IsStuntJumpInProgress()
	return _in(0x7A3F19700A4D0525, _r)
end

--- IS_STUNT_JUMP_MESSAGE_SHOWING
function Global.IsStuntJumpMessageShowing()
	return _in(0x2272B0A1343129F4, _r)
end
Global.N_0x2272b0a1343129f4 = Global.IsStuntJumpMessageShowing

--- IS_SUBTITLE_PREFERENCE_SWITCHED_ON
function Global.IsSubtitlePreferenceSwitchedOn()
	return _in(0xAD6DACA4BA53E0A4, _r)
end

--- IS_SWITCH_READY_FOR_DESCENT
function Global.IsSwitchReadyForDescent()
	return _in(0xDFA80CB25D0A19B3, _r)
end
Global.N_0xdfa80cb25d0a19b3 = Global.IsSwitchReadyForDescent

--- IS_SWITCH_SKIPPING_DESCENT
function Global.IsSwitchSkippingDescent()
	return _in(0x5B74EA8CFD5E3E7E, _r)
end
Global.DestroyPlayerInPauseMenu = Global.IsSwitchSkippingDescent

--- IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME
function Global.IsSynchronizedSceneHoldLastFrame(sceneID)
	return _in(0x7F2F4F13AC5257EF, sceneID, _r)
end
Global.N_0x7f2f4f13ac5257ef = Global.IsSynchronizedSceneHoldLastFrame

--- IS_SYNCHRONIZED_SCENE_LOOPED
function Global.IsSynchronizedSceneLooped(sceneID)
	return _in(0x62522002E0C391BA, sceneID, _r)
end

--- Returns true if a synchronized scene is running
function Global.IsSynchronizedSceneRunning(sceneId)
	return _in(0x25D39B935A038A26, sceneId, _r)
end

--- IS_SYSTEM_UI_BEING_DISPLAYED
function Global.IsSystemUiBeingDisplayed()
	return _in(0x5D511E3867C87139, _r)
end

--- IS_TASK_MOVE_NETWORK_ACTIVE
function Global.IsTaskMoveNetworkActive(ped)
	return _in(0x921CE12C489C4C41, ped, _r)
end
Global.N_0x921ce12c489c4c41 = Global.IsTaskMoveNetworkActive

--- IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION
function Global.IsTaskMoveNetworkReadyForTransition(ped)
	return _in(0x30ED88D5E0C56A37, ped, _r)
end
Global.N_0x30ed88d5e0c56a37 = Global.IsTaskMoveNetworkReadyForTransition

--- IS_TAXI_LIGHT_ON
function Global.IsTaxiLightOn(vehicle)
	return _in(0x7504C0F113AB50FC, vehicle, _r)
end

--- IS_TENNIS_MODE
function Global.IsTennisMode(ped)
	return _in(0x5D5479D115290C3F, ped, _r)
end

--- IS_THIS_A_MINIGAME_SCRIPT
function Global.IsThisAMinigameScript()
	return _in(0x7B30F65D7B710098, _r)
end

--- IS_THIS_MODEL_A_BICYCLE
function Global.IsThisModelABicycle(model)
	return _in(0xBF94DD42F63BDED2, _ch(model), _r)
end

--- IS_THIS_MODEL_A_BIKE
function Global.IsThisModelABike(model)
	return _in(0xB50C0B0CEDC6CE84, _ch(model), _r)
end

--- IS_THIS_MODEL_A_BOAT
function Global.IsThisModelABoat(model)
	return _in(0x45A9187928F4B9E3, _ch(model), _r)
end

--- To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)
function Global.IsThisModelACar(model)
	return _in(0x7F6DB52EEFC96DF8, _ch(model), _r)
end

--- IS_THIS_MODEL_A_HELI
function Global.IsThisModelAHeli(model)
	return _in(0xDCE4334788AF94EA, _ch(model), _r)
end

--- Checks if model is a boat, then checks for FLAG_IS_JETSKI.
function Global.IsThisModelAJetski(model)
	return _in(0x9537097412CF75FE, _ch(model), _r)
end
Global.IsThisModelASubmersible = Global.IsThisModelAJetski
Global.IsThisModelAnEmergencyBoat = Global.IsThisModelAJetski

--- IS_THIS_MODEL_A_PLANE
function Global.IsThisModelAPlane(model)
	return _in(0xA0948AB42D7BA0DE, _ch(model), _r)
end

--- IS_THIS_MODEL_A_QUADBIKE
function Global.IsThisModelAQuadbike(model)
	return _in(0x39DAC362EE65FA28, _ch(model), _r)
end

--- IS_THIS_MODEL_A_TRAIN
function Global.IsThisModelATrain(model)
	return _in(0xAB935175B22E822B, _ch(model), _r)
end

--- _IS_THIS_MODEL_AN_AMPHIBIOUS_CAR
function Global.IsThisModelAnAmphibiousCar(model)
	return _in(0x633F6F44A537EBB6, _ch(model), _r)
end

--- _IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE
function Global.IsThisModelAnAmphibiousQuadbike(model)
	return _in(0xA1A9FC1C76A6730D, _ch(model), _r)
end
Global.N_0xa1a9fc1c76a6730d = Global.IsThisModelAnAmphibiousQuadbike

--- IS_THREAD_ACTIVE
function Global.IsThreadActive(threadId)
	return _in(0x46E9AE36D8FA6417, threadId, _r)
end

--- Returns true if the two times are equal; otherwise returns false.
function Global.IsTimeEqualTo(timeA, timeB)
	return _in(0xF5BC95857BD6D512, timeA, timeB, _r)
end
Global.AreIntegersEqual = Global.IsTimeEqualTo

--- Subtracts the second argument from the first, then returns whether the result is negative.
function Global.IsTimeLessThan(timeA, timeB)
	return _in(0xCB2CF5148012C8D0, timeA, timeB, _r)
end
Global.SubtractBFromAAndCheckIfNegative = Global.IsTimeLessThan

--- Subtracts the first argument from the second, then returns whether the result is negative.
function Global.IsTimeMoreThan(timeA, timeB)
	return _in(0xDE350F8651E4346C, timeA, timeB, _r)
end
Global.SubtractAFromBAndCheckIfNegative = Global.IsTimeMoreThan

--- IS_TOGGLE_MOD_ON
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.IsToggleModOn(vehicle, modType)
	return _in(0x84B233A8C8FC8AE7, vehicle, modType, _r)
end

--- returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
-- Target needs to be tracked.. won't work otherwise.
function Global.IsTrackedPedVisible(ped)
	return _in(0x91C8E617F64188AC, ped, _r)
end

--- IS_TRACKED_POINT_VISIBLE
function Global.IsTrackedPointVisible(point)
	return _in(0xC45CCDAAC9221CA8, point, _r)
end

--- IS_TURRET_SEAT
-- @param vehicle The vehicle to check.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.IsTurretSeat(vehicle, seatIndex)
	return _in(0xE33FFA906CE74880, vehicle, seatIndex, _r)
end
Global.N_0xe33ffa906ce74880 = Global.IsTurretSeat

--- IS_*
function Global.IsTvPlaylistItemPlaying(videoCliphash)
	return _in(0x0AD973CA1E077B60, _ch(videoCliphash), _r)
end
Global.N_0x0ad973ca1e077b60 = Global.IsTvPlaylistItemPlaying
Global.LoadTvChannel = Global.IsTvPlaylistItemPlaying

--- _IS_USING_KEYBOARD
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.IsUsingKeyboard(padIndex)
	return _in(0xA571D46727E2B718, padIndex, _r)
end
Global.GetLastInputMethod = Global.IsUsingKeyboard
Global.IsInputDisabled = Global.IsUsingKeyboard

--- _IS_USING_KEYBOARD_2
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.IsUsingKeyboard_2(padIndex)
	return _in(0x13337B38DB572509, padIndex, _r)
end
Global.N_0x13337b38db572509 = Global.IsUsingKeyboard_2
Global.IsInputJustDisabled = Global.IsUsingKeyboard_2

--- IS_VALID_INTERIOR
function Global.IsValidInterior(interior)
	return _in(0x26B0E73D7EAAF4D3, interior, _r)
end

--- IS_*
function Global.IsValidMpGamerTagMovie(gamerTagId)
	return _in(0xEB709A36958ABE0D, gamerTagId, _r)
end
Global.N_0xeb709a36958abe0d = Global.IsValidMpGamerTagMovie
Global.HasMpGamerTag_2 = Global.IsValidMpGamerTagMovie
Global.HasMpGamerTagCrewFlagsSet = Global.IsValidMpGamerTagMovie

--- p1 is false almost always.
-- However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF
function Global.IsVehicleAConvertible(vehicle, p1)
	return _in(0x52F357A30698BCCE, vehicle, p1, _r)
end

--- IS_VEHICLE_ALARM_ACTIVATED
function Global.IsVehicleAlarmActivated(vehicle)
	return _in(0x4319E335B71FFF34, vehicle, _r)
end

--- IS_VEHICLE_ALARM_SET
function Global.IsVehicleAlarmSet(vehicle)
	return _in(0xdc921211, vehicle, _r)
end

--- IS_VEHICLE_ATTACHED_TO_CARGOBOB
function Global.IsVehicleAttachedToCargobob(cargobob, vehicleAttached)
	return _in(0xD40148F22E81A1D9, cargobob, vehicleAttached, _r)
end

--- Scripts verify that towTruck is the first parameter, not the second.
function Global.IsVehicleAttachedToTowTruck(towTruck, vehicle)
	return _in(0x146DF9EC4C4B9FD4, towTruck, vehicle, _r)
end

--- IS_VEHICLE_ATTACHED_TO_TRAILER
function Global.IsVehicleAttachedToTrailer(vehicle)
	return _in(0xE7CF3C4F9F489F0C, vehicle, _r)
end

--- IS_VEHICLE_AUDIBLY_DAMAGED
-- @return Returns true if the vehicle has any audible damage effects applied to it.
function Global.IsVehicleAudiblyDamaged(vehicle)
	return _in(0x5DB8010EE71FDEF2, vehicle, _r)
end
Global.N_0x5db8010ee71fdef2 = Global.IsVehicleAudiblyDamaged

--- Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
-- _IS_VEHICLE_*
-- ```
-- ```
-- NativeDB Introduced: v1493
function Global.IsVehicleBeingHalted(vehicle)
	return _in(0xC69BB1D832A710EF, vehicle, _r)
end
Global.N_0xc69bb1d832a710ef = Global.IsVehicleBeingHalted

--- IS_VEHICLE_BUMPER_BOUNCING
function Global.IsVehicleBumperBouncing(vehicle, frontBumper)
	return _in(0x27B926779DEB502D, vehicle, frontBumper, _r)
end
Global.N_0x27b926779deb502d = Global.IsVehicleBumperBouncing

--- IS_VEHICLE_BUMPER_BROKEN_OFF
function Global.IsVehicleBumperBrokenOff(vehicle, front)
	return _in(0x468056A6BB6F3846, vehicle, front, _r)
end

--- Appears to return true if the vehicle has any damage, including cosmetically.
-- GET_*
function Global.IsVehicleDamaged(vehicle)
	return _in(0xBCDC5017D3CE1E9E, vehicle, _r)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.IsVehicleDoorDamaged(veh, doorID)
	return _in(0xB8E181E559464527, veh, doorID, _r)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle The vehicle to check.
-- @param doorIndex The index of the door to check.
-- @return A bool indiciating if the specified door is fully open on the specified vehicle.
function Global.IsVehicleDoorFullyOpen(vehicle, doorIndex)
	return _in(0x3E933CFF7B111C22, vehicle, doorIndex, _r)
end

--- p1 is always 0 in the scripts.
-- p1 = check if vehicle is on fire
function Global.IsVehicleDriveable(vehicle, isOnFireCheck)
	return _in(0x4C241E39B23DF959, vehicle, isOnFireCheck, _r)
end

--- Only ever used once in decompiled scripts: **am_pi_menu**:
-- Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it **has been** on fire.
-- It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.
-- This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
-- @param vehicle The vehicle to check.
-- @return Returns true when the engine of your vehicle is on fire. Returns false if it's not on fire.
function Global.IsVehicleEngineOnFire(vehicle)
	return _in(0xEC69ADF931AAE0C3, vehicle, _r)
end
Global.N_0xec69adf931aae0c3 = Global.IsVehicleEngineOnFire

--- IS_VEHICLE_ENGINE_STARTING
function Global.IsVehicleEngineStarting(vehicle)
	return _in(0xbb340d04, vehicle, _r)
end

--- IS_VEHICLE_EXTRA_TURNED_ON
function Global.IsVehicleExtraTurnedOn(vehicle, extraId)
	return _in(0xD2E6822DBFD6C8BD, vehicle, extraId, _r)
end

--- IS_VEHICLE_HIGH_DETAIL
function Global.IsVehicleHighDetail(vehicle)
	return _in(0x1F25887F3C104278, vehicle, _r)
end

--- Returns whether the specified vehicle is currently in a burnout.
-- vb.net
-- Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
-- End Function
function Global.IsVehicleInBurnout(vehicle)
	return _in(0x1297A88E081430EB, vehicle, _r)
end

--- garageName example "Michael - Beverly Hills"
function Global.IsVehicleInGarageArea(garageName, vehicle)
	return _in(0xCEE4490CD57BB3C2, _ts(garageName), vehicle, _r)
end

--- NativeDB Introduced: v1290
function Global.IsVehicleInSubmarineMode(vehicle)
	return _in(0xA77DC70BD689A1E5, vehicle, _r)
end
Global.GetIsSubmarineVehicleTransformed = Global.IsVehicleInSubmarineMode

--- IS_VEHICLE_INTERIOR_LIGHT_ON
function Global.IsVehicleInteriorLightOn(vehicle)
	return _in(0xa411f72c, vehicle, _r)
end

--- mpsum2_g9ec
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.IsVehicleModHswExclusive(vehicle, modType, modIndex)
	return _in(0x00834EAC4A96E010, vehicle, modType, modIndex, _r)
end

--- IS_VEHICLE_MODEL
function Global.IsVehicleModel(vehicle, model)
	return _in(0x423E8DE37D934D89, vehicle, _ch(model), _r)
end

--- IS_VEHICLE_NEEDS_TO_BE_HOTWIRED
function Global.IsVehicleNeedsToBeHotwired(vehicle)
	return _in(0xf9933bf4, vehicle, _r)
end

--- indices:
-- 0 = Left
-- 1 = Right
-- 2 = Front
-- 3 = Back
function Global.IsVehicleNeonLightEnabled(vehicle, index)
	return _in(0x8C4B92553E4766A5, vehicle, index, _r)
end

--- Returns true if the id is non zero.
function Global.IsVehicleNodeIdValid(vehicleNodeId)
	return _in(0x1EAF30FCFBF5AF74, vehicleNodeId, _r)
end

--- Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
-- End Function
function Global.IsVehicleOnAllWheels(vehicle)
	return _in(0xB104CD1BABF302E2, vehicle, _r)
end

--- Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
function Global.IsVehicleParachuteActive(vehicle)
	return _in(0x3DE51E9C80B116CF, vehicle, _r)
end
Global.N_0x3de51e9c80b116cf = Global.IsVehicleParachuteActive

--- IS_VEHICLE_PREVIOUSLY_OWNED_BY_PLAYER
function Global.IsVehiclePreviouslyOwnedByPlayer(vehicle)
	return _in(0xf849ed67, vehicle, _r)
end

--- IS_VEHICLE_RADIO_ON
-- @param vehicle The vehicle to check
-- @return Returns true if the given vehicle's radio on
function Global.IsVehicleRadioOn(vehicle)
	return _in(0x0BE4BE946463F917, vehicle, _r)
end
Global.N_0x0be4be946463f917 = Global.IsVehicleRadioOn
Global.IsVehicleRadioEnabled = Global.IsVehicleRadioOn

--- _IS_VEHICLE_ROCKET_BOOST_ACTIVE
function Global.IsVehicleRocketBoostActive(vehicle)
	return _in(0x3D34E80EED4AE3BE, vehicle, _r)
end

--- Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
function Global.IsVehicleSearchlightOn(vehicle)
	return _in(0xC0F97FCE55094987, vehicle, _r)
end

--- Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
-- side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
-- onEnter = check if you can enter (true) or exit (false) a vehicle.
-- @param vehicle The vehicle to check.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.IsVehicleSeatAccessible(ped, vehicle, seatIndex, side, onEnter)
	return _in(0x639431E895B9AA57, ped, vehicle, seatIndex, side, onEnter, _r)
end
Global.N_0x639431e895b9aa57 = Global.IsVehicleSeatAccessible

--- Seat indices range from -1 to [`GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS`](#\_0xA7C4F2C6E744A550) minus one.
-- ```cpp
-- // CTaskExitVehicleSeat::eSeatPosition - 1
-- enum eSeatPosition
-- {
-- SF_FrontDriverSide = -1,
-- SF_FrontPassengerSide = 0,
-- SF_BackDriverSide = 1,
-- SF_BackPassengerSide = 2,
-- SF_AltFrontDriverSide = 3,
-- SF_AltFrontPassengerSide = 4,
-- SF_AltBackDriverSide = 5,
-- SF_AltBackPassengerSide = 6,
-- };
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL isTaskRunning
-- isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
-- ```
-- @param vehicle The vehicle to check.
-- @param seatIndex The eSeatPosition or -2 for **any** vehicle seat.
function Global.IsVehicleSeatFree(vehicle, seatIndex)
	return _in(0x22AC59A870E6A669, vehicle, seatIndex, _r)
end

--- IS_VEHICLE_SIREN_AUDIO_ON
function Global.IsVehicleSirenAudioOn(vehicle)
	return _in(0xB5CC40FBCB586380, vehicle, _r)
end
Global.N_0xb5cc40fbcb586380 = Global.IsVehicleSirenAudioOn
Global.IsVehicleSirenSoundOn = Global.IsVehicleSirenAudioOn

--- Returns whether the vehicle's lights and sirens are on.
-- @return Returns false if siren and lights are disabled or true if they are enabled.
function Global.IsVehicleSirenOn(vehicle)
	return _in(0x4C9BF537BE2634B2, vehicle, _r)
end

--- _IS_VEHICLE_SLIPSTREAM_LEADER
-- @return True if the vehicle is being slipstreamed by another vehicle
function Global.IsVehicleSlipstreamLeader(vehicle)
	return _in(0x48C633E94A8142A7, vehicle, _r)
end
Global.N_0x48c633e94a8142a7 = Global.IsVehicleSlipstreamLeader

--- Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
function Global.IsVehicleSprayable(vehicle)
	return _in(0x8D474C8FAEFF6CDE, vehicle, _r)
end
Global.N_0x8d474c8faeff6cde = Global.IsVehicleSprayable
Global.IsVehicleShopResprayAllowed = Global.IsVehicleSprayable

--- IS_VEHICLE_STOLEN
function Global.IsVehicleStolen(vehicle)
	return _in(0x4AF9BD80EEBEB453, vehicle, _r)
end

--- Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
-- For some vehicles it returns true if the current speed is <= 0.00039999999.
-- @return True if the vehicle's speed is equal to, or less than 0.02 meters per second, or 0.05 meters per second, if the vehicle's handbrake is engaged.
function Global.IsVehicleStopped(vehicle)
	return _in(0x5721B434AD84D57A, vehicle, _r)
end

--- Is this for red lights only?  more testing required.
function Global.IsVehicleStoppedAtTrafficLights(vehicle)
	return _in(0x2959F696AE390A99, vehicle, _r)
end

--- IS_VEHICLE_STUCK_ON_ROOF
function Global.IsVehicleStuckOnRoof(vehicle)
	return _in(0xB497F06B288DCFDF, vehicle, _r)
end

--- p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
function Global.IsVehicleStuckTimerUp(vehicle, p1, p2)
	return _in(0x679BE1DAF71DA874, vehicle, p1, p2, _r)
end

--- wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
-- completely - is to check if tire completely gone from rim.
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function Global.IsVehicleTyreBurst(vehicle, wheelID, completely)
	return _in(0xBA291848A0815CA9, vehicle, wheelID, completely, _r)
end

--- IS_VEHICLE_VISIBLE
function Global.IsVehicleVisible(vehicle)
	return _in(0xAA0A52D24FB98293, vehicle, _r)
end

--- IS_VEHICLE_WANTED
function Global.IsVehicleWanted(vehicle)
	return _in(0xa7daf7c, vehicle, _r)
end

--- _IS_VEHICLE_WEAPON_DISABLED
function Global.IsVehicleWeaponDisabled(weaponHash, vehicle, owner)
	return _in(0x563B65A643ED072E, _ch(weaponHash), vehicle, owner, _r)
end
Global.N_0x563b65a643ed072e = Global.IsVehicleWeaponDisabled

--- cpp
-- enum eWindowId {
-- VEH_EXT_WINDOW_LF = 0,
-- VEH_EXT_WINDOW_RF = 1,
-- VEH_EXT_WINDOW_LR = 2,
-- VEH_EXT_WINDOW_RR = 3,
-- VEH_EXT_WINDOW_LM = 4,
-- VEH_EXT_WINDOW_RM = 5,
-- VEH_EXT_WINDSCREEN = 6,
-- VEH_EXT_WINDSCREEN_R = 7,
-- }
-- @param vehicle The vehicle handle
-- @param windowIndex The index of the window
function Global.IsVehicleWindowIntact(vehicle, windowIndex)
	return _in(0x46E571A0E20D01F1, vehicle, windowIndex, _r)
end

--- Returns true if a Warning Message or ReportUGC menu is active.
function Global.IsWarningMessageActive()
	return _in(0xE18B138FABC53103, _r)
end
Global.IsMedicalDisabled = Global.IsWarningMessageActive

--- IS_WARNING_MESSAGE_*
function Global.IsWarningMessageActive_2()
	return _in(0xAF42195A42C63BBA, _r)
end
Global.N_0xaf42195a42c63bba = Global.IsWarningMessageActive_2

--- IS_WAYPOINT_ACTIVE
function Global.IsWaypointActive()
	return _in(0x1DD1F58F493F1DA5, _r)
end

--- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED
function Global.IsWaypointPlaybackGoingOnForPed(p0)
	return _in(0xE03B3F2D3DC59B64, p0, _r)
end

--- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE
function Global.IsWaypointPlaybackGoingOnForVehicle(vehicle)
	return _in(0xF5134943EA29868C, vehicle, _r)
end

--- IS_WEAPON_VALID
function Global.IsWeaponValid(weaponHash)
	return _in(0x937C71165CF334B3, _ch(weaponHash), _r)
end

--- Gets whether the world point the calling script is registered to is within desired range of the player.
function Global.IsWorldPointWithinBrainActivationRange()
	return _in(0xC5042CC6F5E3D450, _r)
end

--- IS_XBOX360_VERSION
-- @return Hard-coded to always return 0.
function Global.IsXbox360Version()
	return _in(0xF6201B4DAF662A9D, _r)
end

--- KNOCK_OFF_PED_PROP
function Global.KnockOffPedProp(ped, p1, p2, p3, p4)
	return _in(0x6FD7816A36615F48, ped, p1, p2, p3, p4)
end

--- KNOCK_PED_OFF_VEHICLE
function Global.KnockPedOffVehicle(ped)
	return _in(0x45BBCBA77C29A841, ped)
end

--- Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
function Global.LandingMenuIsActive()
	return _in(0x3BBBD13E5041A79E, _r)
end
Global.N_0x3bbbd13e5041a79e = Global.LandingMenuIsActive

--- LEADERBOARDS2_READ_BY_HANDLE
function Global.Leaderboards2ReadByHandle()
	return _in(0xC30713A383BFBF0E, _i, _i, _r)
end

--- _LEADERBOARDS2_READ_BY_PLATFORM
function Global.Leaderboards2ReadByPlatform(gamerHandleCsv, platformName)
	return _in(0xF1AE5DCDBFCA2721, _i, _ts(gamerHandleCsv), _ts(platformName), _r)
end
Global.N_0xf1ae5dcdbfca2721 = Global.Leaderboards2ReadByPlatform

--- LEADERBOARDS2_READ_BY_RADIUS
function Global.Leaderboards2ReadByRadius(p1)
	return _in(0x5CE587FB5A42C8C4, _i, p1, _i, _r)
end

--- LEADERBOARDS2_READ_BY_RANK
function Global.Leaderboards2ReadByRank(p1, p2)
	return _in(0xBA2C7DB0C129449A, _i, p1, p2, _r)
end

--- LEADERBOARDS2_READ_BY_ROW
function Global.Leaderboards2ReadByRow(p2, p4, p6)
	return _in(0xA9CDB1E3F0A49883, _i, _i, p2, _i, p4, _i, p6, _r)
end

--- LEADERBOARDS2_READ_BY_SCORE_FLOAT
function Global.Leaderboards2ReadByScoreFloat(p1, p2)
	return _in(0xE662C8B759D08F3C, _i, p1, p2, _r)
end

--- LEADERBOARDS2_READ_BY_SCORE_INT
function Global.Leaderboards2ReadByScoreInt(p1, p2)
	return _in(0x7EEC7E4F6984A16A, _i, p1, p2, _r)
end

--- LEADERBOARDS2_READ_FRIENDS_BY_ROW
function Global.Leaderboards2ReadFriendsByRow(p2, p3, p4, p5)
	return _in(0x918B101666F9CB83, _i, _i, p2, p3, p4, p5, _r)
end

--- LEADERBOARDS2_READ_RANK_PREDICTION
function Global.Leaderboards2ReadRankPrediction()
	return _in(0xC38DC1E90D22547C, _i, _i, _i, _r)
end
Global.N_0xc38dc1e90d22547c = Global.Leaderboards2ReadRankPrediction

--- LEADERBOARDS2_WRITE_DATA
function Global.Leaderboards2WriteData(p0)
	return _in(0xAE2206545888AE49, _ii(p0) --[[ may be optional ]], _r)
end

--- LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE
function Global.Leaderboards2WriteDataForEventType()
	return _in(0xC980E62E33DF1D5C, _i, _i, _r)
end
Global.N_0xc980e62e33df1d5c = Global.Leaderboards2WriteDataForEventType

--- LEADERBOARDS_CACHE_DATA_ROW
function Global.LeaderboardsCacheDataRow(p0)
	return _in(0xB9BB18E2C40142ED, _ii(p0) --[[ may be optional ]], _r)
end

--- LEADERBOARDS_CLEAR_CACHE_DATA
function Global.LeaderboardsClearCacheData()
	return _in(0xD4B02A6B476E1FDC)
end

--- _LEADERBOARDS_DEATHS
function Global.LeaderboardsDeaths(statName, value)
	return _in(0x428EAF89E24F6C36, _ch(statName), value)
end
Global.N_0x428eaf89e24f6c36 = Global.LeaderboardsDeaths

--- LEADERBOARDS_GET_CACHE_DATA_ROW
function Global.LeaderboardsGetCacheDataRow(p0, p1, p2)
	return _in(0x9120E8DBA3D69273, p0, p1, _ii(p2) --[[ may be optional ]], _r)
end

--- LEADERBOARDS_GET_CACHE_EXISTS
function Global.LeaderboardsGetCacheExists(p0)
	return _in(0x9C51349BE6CDFE2C, p0, _r)
end

--- LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS
function Global.LeaderboardsGetCacheNumberOfRows(p0)
	return _in(0x58A651CD201D89AD, p0, _ri)
end
Global.N_0x58a651cd201d89ad = Global.LeaderboardsGetCacheNumberOfRows

--- LEADERBOARDS_GET_CACHE_TIME
function Global.LeaderboardsGetCacheTime(p0)
	return _in(0xF04C1C27DA35F6C8, p0, _ri)
end

--- LEADERBOARDS_GET_COLUMN_ID
function Global.LeaderboardsGetColumnId(p0, p1, p2)
	return _in(0xC4B5467A1886EA7E, p0, p1, p2, _ri)
end

--- LEADERBOARDS_GET_COLUMN_TYPE
function Global.LeaderboardsGetColumnType(p0, p1, p2)
	return _in(0xBF4FEF46DB7894D3, p0, p1, p2, _ri)
end

--- LEADERBOARDS_GET_NUMBER_OF_COLUMNS
function Global.LeaderboardsGetNumberOfColumns(p0, p1)
	return _in(0x117B45156D7EFF2E, p0, p1, _ri)
end

--- LEADERBOARDS_READ_ANY_PENDING
function Global.LeaderboardsReadAnyPending()
	return _in(0xA31FD15197B192BD, _r)
end
Global.N_0xa31fd15197b192bd = Global.LeaderboardsReadAnyPending

--- LEADERBOARDS_READ_CLEAR
function Global.LeaderboardsReadClear(p0, p1, p2)
	return _in(0x7CCE5C737A665701, p0, p1, p2, _ri)
end

--- LEADERBOARDS_READ_CLEAR_ALL
function Global.LeaderboardsReadClearAll()
	return _in(0xA34CB6E6F0DF4A0B, _ri)
end

--- LEADERBOARDS_READ_PENDING
function Global.LeaderboardsReadPending(p0, p1, p2)
	return _in(0xAC392C8483342AC2, p0, p1, p2, _r)
end

--- LEADERBOARDS_READ_SUCCESSFUL
function Global.LeaderboardsReadSuccessful(p0, p1, p2)
	return _in(0x2FB19228983E832C, p0, p1, p2, _r)
end

--- LEADERBOARDS_WRITE_ADD_COLUMN
function Global.LeaderboardsWriteAddColumn(p0, p1, p2)
	return _in(0x0BCA1D2C47B0D269, p0, p1, p2)
end
Global.N_0x0bca1d2c47b0d269 = Global.LeaderboardsWriteAddColumn

--- LEADERBOARDS_WRITE_ADD_COLUMN_LONG
function Global.LeaderboardsWriteAddColumnLong(p0, p1, p2)
	return _in(0x2E65248609523599, p0, p1, p2)
end
Global.N_0x2e65248609523599 = Global.LeaderboardsWriteAddColumnLong

--- Leaves cursor mode. This function supports SDK infrastructure and is not intended to be used directly from your code.
function Global.LeaveCursorMode()
	return _in(0xadecf19e)
end

--- LINK_NAMED_RENDERTARGET
function Global.LinkNamedRendertarget(modelHash)
	return _in(0xF6C09E276AEB3F2D, _ch(modelHash))
end

--- Links a static emitter to the given entity
function Global.LinkStaticEmitterToEntity(emitterName, entity)
	return _in(0x651D3228960D08AF, _ts(emitterName), entity)
end
Global.N_0x651d3228960d08af = Global.LinkStaticEmitterToEntity
Global.LinkStaticEmitterToEntity = Global.LinkStaticEmitterToEntity

--- LOAD_ALL_OBJECTS_NOW
function Global.LoadAllObjectsNow()
	return _in(0xBD6E84632DD4CB3F)
end

--- This native has been removed in v1180.
-- @param keepInMemory if true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit.
function Global.LoadAllPathNodes(keepInMemory)
	return _in(0x80E4A6EDDB0BE8D9, keepInMemory, _r)
end

--- The following cloudhats are useable:
-- altostratus
-- Cirrus
-- cirrocumulus
-- Clear 01
-- Cloudy 01
-- Contrails
-- Horizon
-- horizonband1
-- horizonband2
-- horizonband3
-- horsey
-- Nimbus
-- Puffs
-- RAIN
-- Snowy 01
-- Stormy 01
-- stratoscumulus
-- Stripey
-- shower
-- Wispy
function Global.LoadCloudHat(name, transitionTime)
	return _in(0xFC4842A34657BFCB, _ts(name), transitionTime)
end
Global.SetCloudHatTransition = Global.LoadCloudHat

--- From fm_deathmatch_creator and fm_race_creator:
-- FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
-- FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
-- NativeDB Introduced: v1604
function Global.LoadContentChangeSetGroup(hash)
	return _in(0x6BEDF5769AC2DC07, _ch(hash))
end

--- 0 - default
-- 1 - HeistIsland
-- ```
-- NativeDB Introduced: v2189
-- ```
function Global.LoadGlobalWaterType(waterType)
	return _in(0x7E3F55ED251B76D3, waterType)
end

--- LOAD_MISSION_CREATOR_PHOTO
function Global.LoadMissionCreatorPhoto(p0, p3)
	return _in(0x4862437A486F91B0, _ts(p0), _i, _i, p3, _r)
end
Global.N_0x4862437a486f91b0 = Global.LoadMissionCreatorPhoto

--- LOAD_MOVIE_MESH_SET
function Global.LoadMovieMeshSet(movieMeshSetName)
	return _in(0xB66064452270E8F1, _ts(movieMeshSetName), _ri)
end

--- Reads the contents of a text file in a specified resource.
-- If executed on the client, this file has to be included in `files` in the resource manifest.
-- Example: `local data = LoadResourceFile("devtools", "data.json")`
-- @param resourceName The resource name.
-- @param fileName The file in the resource.
-- @return The file contents
function Global.LoadResourceFile(resourceName, fileName)
	return _in(0x76a9ee1f, _ts(resourceName), _ts(fileName), _s)
end

--- Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
function Global.LoadRopeData(ropeId, rope_preset)
	return _in(0xCBB203C04D1ABD27, ropeId, _ts(rope_preset))
end

--- LOAD_SCENE
function Global.LoadScene(x, y, z)
	return _in(0x4448EB75B4904BDB, x, y, z)
end

--- Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
-- Names for the streams can be found [here](https://gist.github.com/4mmonium/2bd2c9c54d6ca5cbdb7b156a82a3a85a), the list will be updated as more are found.
-- @param soundSet an optional sound set, default is null
function Global.LoadStream(streamName, soundSet)
	return _in(0x1F1F957154EC51DF, _ts(streamName), _ts(soundSet), _r)
end

--- Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
function Global.LoadStreamWithStartOffset(streamName, startOffset, soundSet)
	return _in(0x59C16B79F53B3712, _ts(streamName), startOffset, _ts(soundSet), _r)
end

--- Define the xml in a resources fxmanifest, under the file(s) section.
-- @param resourceName The name of the resource containing your modified water definition
-- @param fileName The name of the file
-- @return Returns true on success.
function Global.LoadWaterFromPath(resourceName, fileName)
	return _in(0xf5102568, _ts(resourceName), _ts(fileName), _r)
end

--- _LOADINGSCREEN_GET_LOAD_FREEMODE
function Global.LoadingscreenGetLoadFreemode()
	return _in(0xEF7D17BC6C85264C, _r)
end
Global.N_0xef7d17bc6c85264c = Global.LoadingscreenGetLoadFreemode

--- _LOADINGSCREEN_GET_LOAD_FREEMODE_WITH_EVENT_NAME
function Global.LoadingscreenGetLoadFreemodeWithEventName()
	return _in(0x8AA464D4E0F6ACCD, _r)
end
Global.N_0x8aa464d4e0f6accd = Global.LoadingscreenGetLoadFreemodeWithEventName

--- _LOADINGSCREEN_IS_LOADING_FREEMODE
function Global.LoadingscreenIsLoadingFreemode()
	return _in(0xC6DC823253FBB366, _r)
end
Global.N_0xc6dc823253fbb366 = Global.LoadingscreenIsLoadingFreemode
Global.IsUiLoadingMultiplayer = Global.LoadingscreenIsLoadingFreemode

--- _LOADINGSCREEN_SET_IS_LOADING_FREEMODE
function Global.LoadingscreenSetIsLoadingFreemode(toggle)
	return _in(0xC7E7181C09F33B69, toggle)
end
Global.N_0xc7e7181c09f33b69 = Global.LoadingscreenSetIsLoadingFreemode

--- _LOADINGSCREEN_SET_LOAD_FREEMODE
function Global.LoadingscreenSetLoadFreemode(toggle)
	return _in(0xB0C56BD3D808D863, toggle)
end
Global.GetBroadcastFinshedLosSound = Global.LoadingscreenSetLoadFreemode
Global.N_0xb0c56bd3d808d863 = Global.LoadingscreenSetLoadFreemode

--- Only occurrence was false, in maintransition.
function Global.LoadingscreenSetLoadFreemodeWithEventName(toggle)
	return _in(0xFC309E94546FCDB5, toggle)
end
Global.N_0xfc309e94546fcdb5 = Global.LoadingscreenSetLoadFreemodeWithEventName
Global.IsInLoadingScreen = Global.LoadingscreenSetLoadFreemodeWithEventName

--- Possible return values: 0, 1, 2
function Global.LocalizationGetSystemDateFormat()
	return _in(0xA8AE43AEC1A61314, _ri)
end
Global.GetUserLanguageId = Global.LocalizationGetSystemDateFormat

--- Same return values as GET_CURRENT_LANGUAGE
function Global.LocalizationGetSystemLanguage()
	return _in(0x497420E022796B3F, _ri)
end
Global.N_0x497420e022796b3f = Global.LocalizationGetSystemLanguage

--- Updates the display of the MP/SP loading buttons, and locks the state so that other options are not displayed or changed. This can only be done once.
function Global.LockLoadingScreenButtons()
	return _in(0xB1577667C3708F9B)
end
Global.N_0xb1577667c3708f9b = Global.LockLoadingScreenButtons

--- Locks the minimap to the specified angle in integer degrees.
-- angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
function Global.LockMinimapAngle(angle)
	return _in(0x299FAEBB108AE05B, angle)
end

--- Locks the minimap to the specified world position.
function Global.LockMinimapPosition(x, y)
	return _in(0x1279E861A329E73F, x, y)
end

--- This disables the radio station completely - it won't be selectable on the radio wheel or ever be heard coming from a vehicle/ambient emitter
-- ```
-- NativeDB Introduced: v1493
-- ```
function Global.LockRadioStation(radioStationName, toggle)
	return _in(0x477D9DB48F889591, _ts(radioStationName), toggle)
end
Global.N_0x94f2e83ead7e6b82 = Global.LockRadioStation
Global.SetRadioStationDisabled = Global.LockRadioStation
Global.LockRadioStation = Global.LockRadioStation

--- LOCK_RADIO_STATION_TRACK_LIST
function Global.LockRadioStationTrackList(radioStation, trackListName)
	return _in(0xFF5E5EA2DCEEACF3, _ts(radioStation), _ts(trackListName))
end

--- NativeDB Introduced: v1604
function Global.Log10(value)
	return _in(0xE816E655DE37FE20, value, _rf)
end

--- Not present in retail version of the game, actual definiton seems to be
-- _LOG_DEBUG_INFO(const char* category, const char* debugText);
function Global.LogDebugInfo(p0)
	return _in(0x2162C446DFDF38FD, _ts(p0))
end
Global.N_0x2162c446dfdf38fd = Global.LogDebugInfo

--- LOWER_CONVERTIBLE_ROOF
function Global.LowerConvertibleRoof(vehicle, instantlyLower)
	return _in(0xDED51F703D0FA83D, vehicle, instantlyLower)
end

--- _LOWER_RETRACTABLE_WHEELS
function Global.LowerRetractableWheels(vehicle)
	return _in(0x5335BE58C083E74E, vehicle)
end
Global.N_0x5335be58c083e74e = Global.LowerRetractableWheels

--- Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
function Global.MakePedReload(ped)
	return _in(0x20AE33F3AC9C0033, ped, _r)
end

--- is this like setting is as no longer needed?
function Global.MarkObjectForDeletion(object)
	return _in(0xADBE4809F19F927A, object)
end

--- MODIFY_VEHICLE_TOP_SPEED
function Global.ModifyVehicleTopSpeed(vehicle, value)
	return _in(0x93A3996368C94158, vehicle, value)
end
Global.SetVehicleEnginePowerMultiplier = Global.ModifyVehicleTopSpeed

--- Sets the water height for a given position and radius.
function Global.ModifyWater(x, y, height, radius)
	return _in(0xC443FD757C3BA637, x, y, height, radius)
end

--- MOVE_VEHICLE_DECALS
function Global.MoveVehicleDecals(p0, p1)
	return _in(0x84C8D7C2D30D3280, p0, p1)
end

--- Starts listening to the specified channel, when available.
-- @param channel A game voice channel ID.
function Global.MumbleAddVoiceChannelListen(channel)
	return _in(0xc79f44bf, channel)
end

--- Adds the specified channel to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param channel A game voice channel ID.
function Global.MumbleAddVoiceTargetChannel(targetId, channel)
	return _in(0x4d386c9e, targetId, channel)
end

--- Adds the specified player to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param player A game player index.
function Global.MumbleAddVoiceTargetPlayer(targetId, player)
	return _in(0x32c5355a, targetId, player)
end

--- Adds the specified player to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param serverId The player's server id.
function Global.MumbleAddVoiceTargetPlayerByServerId(targetId, serverId)
	return _in(0x25f2b65f, targetId, serverId)
end

--- MUMBLE_CLEAR_VOICE_CHANNEL
function Global.MumbleClearVoiceChannel()
	return _in(0xbf847807)
end

--- Clears the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function Global.MumbleClearVoiceTarget(targetId)
	return _in(0x8555dcba, targetId)
end

--- Clears channels from the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function Global.MumbleClearVoiceTargetChannels(targetId)
	return _in(0x5ea72e76, targetId)
end

--- Clears players from the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function Global.MumbleClearVoiceTargetPlayers(targetId)
	return _in(0x912e21da, targetId)
end

--- MUMBLE_GET_TALKER_PROXIMITY
-- @return Talker proximity value.
function Global.MumbleGetTalkerProximity()
	return _in(0x84e02a32, _rf)
end

--- Returns the mumble voice channel from a player's server id.
-- @param serverId The player's server id.
-- @return Int representing the identifier of the voice channel.
function Global.MumbleGetVoiceChannelFromServerId(serverId)
	return _in(0x221c09f1, serverId, _ri)
end

--- MUMBLE_IS_ACTIVE
-- @return True if the player has enabled voice chat.
function Global.MumbleIsActive()
	return _in(0xe820bc10, _r)
end

--- This native will return true if the user succesfully connected to the voice server.
-- If the user disabled the voice-chat setting it will return false.
-- @return True if the player is connected to a mumble server.
function Global.MumbleIsConnected()
	return _in(0xb816370a, _r)
end

--- MUMBLE_IS_PLAYER_TALKING
-- @param player The target player.
-- @return Whether or not the player is talking.
function Global.MumbleIsPlayerTalking(player)
	return _in(0x33eef97f, player, _r)
end

--- Stops listening to the specified channel.
-- @param channel A game voice channel ID.
function Global.MumbleRemoveVoiceChannelListen(channel)
	return _in(0x231523b7, channel)
end

--- Removes the specified voice channel from the user's voice targets.
-- Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_CHANNEL](#\_0x4D386C9E)
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param channel The game voice channel ID to remove from the target.
function Global.MumbleRemoveVoiceTargetChannel(targetId, channel)
	return _in(0x268db867, targetId, channel)
end

--- Removes the specified player from the user's voice targets.
-- Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_PLAYER](#\_0x32C5355A)
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param player The player index to remove from the target.
function Global.MumbleRemoveVoiceTargetPlayer(targetId, player)
	return _in(0x88cd646f, targetId, player)
end

--- Removes the specified player from the user's voice targets.
-- Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_PLAYER_BY_SERVER_ID](#\_0x25F2B65F)
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param serverId The player's server id to remove from the target.
function Global.MumbleRemoveVoiceTargetPlayerByServerId(targetId, serverId)
	return _in(0x930bd34b, targetId, serverId)
end

--- MUMBLE_SET_ACTIVE
-- @param state Voice chat state.
function Global.MumbleSetActive(state)
	return _in(0xd932a3f3, state)
end

--- Sets the current input distance. The player will be able to talk to other players within this distance.
-- @param distance The input distance.
function Global.MumbleSetAudioInputDistance(distance)
	return _in(0x1b1052e2, distance)
end

--- Use this native to disable noise suppression and high pass filters.
-- The possible intents for this are as follows (backticks are used to represent hashes):
-- | Index | Description |
-- |-|-|
-- | \`speech\` | Default intent |
-- | \`music\` | Disable noise suppression and high pass filter |
-- @param intentHash The intent hash.
function Global.MumbleSetAudioInputIntent(intentHash)
	return _in(0x6383526b, _ch(intentHash))
end

--- Sets the current output distance. The player will be able to hear other players talking within this distance.
-- @param distance The output distance.
function Global.MumbleSetAudioOutputDistance(distance)
	return _in(0x74c597d9, distance)
end

--- Changes the Mumble server address to connect to, and reconnects to the new address.
-- @param address The address of the mumble server.
-- @param port The port of the mumble server.
function Global.MumbleSetServerAddress(address, port)
	return _in(0xe6eb2cd8, _ts(address), port)
end

--- Sets the audio submix ID for a specified player using Mumble 'Native Audio' functionality.
-- @param serverId The player's server ID.
-- @param submixId The submix ID.
function Global.MumbleSetSubmixForServerId(serverId, submixId)
	return _in(0xfe3a3054, serverId, submixId)
end

--- MUMBLE_SET_TALKER_PROXIMITY
-- @param value Proximity value.
function Global.MumbleSetTalkerProximity(value)
	return _in(0x74e927b0, value)
end

--- MUMBLE_SET_VOICE_CHANNEL
-- @param channel A game voice channel ID.
function Global.MumbleSetVoiceChannel(channel)
	return _in(0x8737eee8, channel)
end

--- Sets the current Mumble voice target ID to broadcast voice to.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive). 0 disables voice targets, and 31 is server loopback.
function Global.MumbleSetVoiceTarget(targetId)
	return _in(0x960a4a95, targetId)
end

--- Overrides the output volume for a particular player on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
-- Set to -1.0 to reset the Volume override.
-- @param player A game player index.
-- @param volume The volume, ranging from 0.0 to 1.0 (or above).
function Global.MumbleSetVolumeOverride(player, volume)
	return _in(0x61c309e3, player, volume)
end

--- Overrides the output volume for a particular player with the specified server id and player name on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
-- @param serverId The player's server id.
-- @param volume The volume, ranging from 0.0 to 1.0 (or above).
function Global.MumbleSetVolumeOverrideByServerId(serverId, volume)
	return _in(0xce8e25b4, serverId, volume)
end

--- 2 matches in 1 script - am_hold_up
-- Used in multiplayer scripts?
function Global.N_0x0032a6dba562c518()
	return _in(0x0032A6DBA562C518)
end

--- NativeDB Introduced: v1868
function Global.N_0x006e4b040ed37ec3(p0)
	return _in(0x006E4B040ED37EC3, p0)
end

--- NativeDB Introduced: v1868
function Global.N_0x0077f15613d36993(p0, p1, p2, p3)
	return _in(0x0077F15613D36993, p0, p1, p2, p3)
end

--- 0x011883F41211432A
function Global.N_0x011883f41211432a(x1, y1, z1, x2, y2, z2, p6)
	return _in(0x011883F41211432A, x1, y1, z1, x2, y2, z2, p6)
end

--- 0x0150B6FF25A9E2E5
function Global.N_0x0150b6ff25a9e2e5()
	return _in(0x0150B6FF25A9E2E5)
end

--- 0x015B03EE1C43E6EC
function Global.N_0x015b03ee1c43e6ec(p0)
	return _in(0x015B03EE1C43E6EC, p0)
end

--- NativeDB Introduced: v1290
function Global.N_0x0205f5365292d2eb(vehicle, p1)
	return _in(0x0205F5365292D2EB, vehicle, p1)
end

--- 0x0218BA067D249DEA
function Global.N_0x0218ba067d249dea()
	return _in(0x0218BA067D249DEA)
end

--- some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799
function Global.N_0x0225778816fdc28c(p0)
	return _in(0x0225778816FDC28C, p0)
end

--- DISABLE_S*
function Global.N_0x02369d5c8a51fdcf(toggle)
	return _in(0x02369D5C8A51FDCF, toggle)
end

--- NativeDB Introduced: v1493
function Global.N_0x023acab2dc9dc4a4()
	return _in(0x023ACAB2DC9DC4A4, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x02e93c796abd3a97(p0)
	return _in(0x02E93C796ABD3A97, p0)
end

--- 0x03300B57FCAC6DDB
function Global.N_0x03300b57fcac6ddb(p0)
	return _in(0x03300B57FCAC6DDB, p0)
end

--- 0x0395CB47B022E62C
function Global.N_0x0395cb47b022e62c(p0)
	return _in(0x0395CB47B022E62C, _ii(p0) --[[ may be optional ]], _r)
end

--- 0x03C2EEBB04B3FB72
function Global.N_0x03c2eebb04b3fb72(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x03C2EEBB04B3FB72, p0, p1, p2, p3, p4, p5, p6)
end

--- 0x03EA03AF85A85CB7
function Global.N_0x03ea03af85a85cb7(ped, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x03EA03AF85A85CB7, ped, p1, p2, p3, p4, p5, p6, p7, p8, _r)
end

--- 0x03F1A106BDA7DD3E
function Global.N_0x03f1a106bda7dd3e()
	return _in(0x03F1A106BDA7DD3E)
end

--- 0x0419B167EE128F33
function Global.N_0x0419b167ee128f33(p0, p1)
	return _in(0x0419B167EE128F33, p0, p1, _ri)
end

--- 0x041C7F2A6C9894E6
function Global.N_0x041c7f2a6c9894e6(p0, p1, p2)
	return _in(0x041C7F2A6C9894E6, p0, p1, p2, _ri)
end

--- SET_*
function Global.N_0x04655f9d075d0ae5(toggle)
	return _in(0x04655F9D075D0AE5, toggle)
end

--- 0x04918A41BC9B8157
function Global.N_0x04918a41bc9b8157(p0, p1, p2)
	return _in(0x04918A41BC9B8157, p0, p1, p2, _ri)
end

--- 0x0581730AB9380412
function Global.N_0x0581730ab9380412(p0, p1, p2, p3, p4, p5)
	return _in(0x0581730AB9380412, p0, p1, p2, p3, p4, p5)
end

--- 0x0596843B34B95CE5
function Global.N_0x0596843b34b95ce5(p0, p1)
	return _in(0x0596843B34B95CE5, p0, p1)
end

--- 0x06087579E7AA85A9
function Global.N_0x06087579e7aa85a9(p0, p1, p2, p3, p4, p5)
	return _in(0x06087579E7AA85A9, p0, p1, p2, p3, p4, p5, _r)
end

--- 0x061CB768363D6424
function Global.N_0x061cb768363d6424(ped, toggle)
	return _in(0x061CB768363D6424, ped, toggle)
end

--- A vehicle recording playback flag only used in jewelry_heist
function Global.N_0x063ae2b2cc273588(vehicle, p1)
	return _in(0x063AE2B2CC273588, vehicle, p1)
end

--- CLEAR_*
function Global.N_0x06462a961e94b67c()
	return _in(0x06462A961E94B67C)
end

--- 0x065D03A9D6B2C6B5
function Global.N_0x065d03a9d6b2c6b5(p0, p1)
	return _in(0x065D03A9D6B2C6B5, p0, p1)
end

--- 0x06EAF70AE066441E
function Global.N_0x06eaf70ae066441e(p0)
	return _in(0x06EAF70AE066441E, p0)
end

--- 0x06EE9048FD080382
function Global.N_0x06ee9048fd080382(p0)
	return _in(0x06EE9048FD080382, p0)
end

--- 0x07DBD622D9533857
function Global.N_0x07dbd622d9533857(p0)
	return _in(0x07DBD622D9533857, p0, _ri)
end

--- 0x07EAB372C8841D99
function Global.N_0x07eab372c8841d99(p0, p1, p2)
	return _in(0x07EAB372C8841D99, p0, p1, p2, _ri)
end

--- 0x0811381EF5062FEC
function Global.N_0x0811381ef5062fec(p0)
	return _in(0x0811381EF5062FEC, p0)
end

--- Returns false if amount > wallet balance or daily transfer limit has been hit.
-- NativeDB Introduced: v323
function Global.N_0x08e8eeadfd0dc4a0(amount)
	return _in(0x08E8EEADFD0DC4A0, amount, _r)
end

--- 0x0A9C7F36E5D7B683
function Global.N_0x0a9c7f36e5d7b683(p0)
	return _in(0x0A9C7F36E5D7B683, p0)
end

--- 0x0AA27680A0BD43FA
function Global.N_0x0aa27680a0bd43fa()
	return _in(0x0AA27680A0BD43FA)
end

--- 0x0AE73D8DF3A762B2
function Global.N_0x0ae73d8df3a762b2(p0)
	return _in(0x0AE73D8DF3A762B2, p0)
end

--- 0x0B3E35AC043707D9
function Global.N_0x0b3e35ac043707d9(p0, p1)
	return _in(0x0B3E35AC043707D9, p0, p1)
end

--- 0x0B40ED49D7D6FF84
function Global.N_0x0b40ed49d7d6ff84()
	return _in(0x0B40ED49D7D6FF84)
end

--- 0x0B565B0AAE56A0E8
function Global.N_0x0b565b0aae56a0e8(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x0B565B0AAE56A0E8, p0, p1, p2, p3, p4, p5, p6)
end

--- 0x0B8B7F74BF061C6D
function Global.N_0x0b8b7f74bf061c6d()
	return _in(0x0B8B7F74BF061C6D, _ri)
end

--- NativeDB Introduced: v1180
function Global.N_0x0c698d8f099174c7(p0)
	return _in(0x0C698D8F099174C7, p0)
end

--- 0x0CF54F20DE43879C
function Global.N_0x0cf54f20de43879c(p0)
	return _in(0x0CF54F20DE43879C, p0)
end

--- NativeDB Introduced: v1180
function Global.N_0x0cf6cc51aa18f0f8(p0, p1, p2)
	return _in(0x0CF6CC51AA18F0F8, p0, p1, p2, _ri)
end

--- 0x0D01D20616FC73FB
function Global.N_0x0d01d20616fc73fb(p0, p1)
	return _in(0x0D01D20616FC73FB, p0, p1)
end

--- 0x0D30EB83668E63C5
function Global.N_0x0d30eb83668e63c5(p0, p1, p2, p3)
	return _in(0x0D30EB83668E63C5, p0, p1, p2, p3)
end

--- NETWORK_SET_*
function Global.N_0x0d77a82dc2d0da59()
	return _in(0x0D77A82DC2D0DA59, _i, _i)
end

--- NativeDB Introduced: v1868
function Global.N_0x0dd362f14f18942a(amount, p1, p2)
	return _in(0x0DD362F14F18942A, amount, p1, p2)
end

--- 0x0E4299C549F0D1F1
function Global.N_0x0e4299c549f0d1f1(toggle)
	return _in(0x0E4299C549F0D1F1, toggle)
end

--- 0x0EDE326D47CD0F3E
function Global.N_0x0ede326d47cd0f3e(ped, player)
	return _in(0x0EDE326D47CD0F3E, ped, player, _r)
end

--- NativeDB Introduced: v2189
function Global.N_0x0f1a4b45b7693b95(p0, p1)
	return _in(0x0F1A4B45B7693B95, p0, p1)
end

--- 0x0F62619393661D6E
function Global.N_0x0f62619393661d6e(p0, p1, p2)
	return _in(0x0F62619393661D6E, p0, p1, p2)
end

--- BG_*
-- NativeDB Introduced: v323
function Global.N_0x0f6f1ebbc4e1d5e6(scriptIndex, p1)
	return _in(0x0F6F1EBBC4E1D5E6, scriptIndex, _ts(p1), _r)
end

--- Doesn't actually return anything.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.N_0x0ffb3c758e8c07b9(ped, p1)
	return _in(0x0FFB3C758E8C07B9, ped, p1, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0x107a473d7a6647a9(vehicle)
	return _in(0x107A473D7A6647A9, vehicle)
end

--- UI3DSCENE_*
function Global.N_0x108be26959a9d9bb(toggle)
	return _in(0x108BE26959A9D9BB, toggle)
end

--- In agency_heist3b.c4, its like this 90% of the time:
-- PED::_110F526AB784111F(ped, 0.099);
-- PED::SET_PED_ENVEFF_SCALE(ped, 1.0);
-- PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);
-- PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
-- and its like this 10% of the time:
-- PED::_110F526AB784111F(ped, 0.2);
-- PED::SET_PED_ENVEFF_SCALE(ped, 0.65);
-- PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);
-- PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
function Global.N_0x110f526ab784111f(ped, p1)
	return _in(0x110F526AB784111F, ped, p1)
end

--- 0x112209CE0290C03A
function Global.N_0x112209ce0290c03a(p0, p1, p2, p3)
	return _in(0x112209CE0290C03A, p0, p1, p2, p3)
end

--- 0x1153FA02A659051C
function Global.N_0x1153fa02a659051c()
	return _in(0x1153FA02A659051C)
end

--- 0x11579D940949C49E
function Global.N_0x11579d940949c49e(p0)
	return _in(0x11579D940949C49E, p0)
end

--- 0x116FB94DC4B79F17
function Global.N_0x116fb94dc4b79f17(p0)
	return _in(0x116FB94DC4B79F17, _ts(p0))
end

--- 0x1171A97A3D3981B6
function Global.N_0x1171a97a3d3981b6(p2, p3)
	return _in(0x1171A97A3D3981B6, _i, _i, p2, p3, _r)
end

--- NativeDB Introduced: v2189
function Global.N_0x1178e104409fe58c(p0, p1)
	return _in(0x1178E104409FE58C, p0, p1)
end

--- SET_TEXT_??? - Used in golf and golf_mp
function Global.N_0x1185a8087587322c(p0)
	return _in(0x1185A8087587322C, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x1216e0bfa72cc703(p0, p1)
	return _in(0x1216E0BFA72CC703, p0, p1)
end

--- Hardcoded to only work in multiplayer.
function Global.N_0x12ded8ca53d47ea5(p0)
	return _in(0x12DED8CA53D47EA5, p0)
end

--- 0x1312DDD8385AEE4E
function Global.N_0x1312ddd8385aee4e(p0, p1)
	return _in(0x1312DDD8385AEE4E, p0, p1)
end

--- 0x1398582B7F72B3ED
function Global.N_0x1398582b7f72b3ed(p0)
	return _in(0x1398582B7F72B3ED, p0)
end

--- 0x13B350B8AD0EEE10
function Global.N_0x13b350b8ad0eee10()
	return _in(0x13B350B8AD0EEE10)
end

--- SET_NETWORK_*
function Global.N_0x13f1fcb111b820b0(p0)
	return _in(0x13F1FCB111B820B0, p0)
end

--- 0x140E6A44870A11CE
function Global.N_0x140e6a44870a11ce()
	return _in(0x140E6A44870A11CE)
end

--- 0x144DA052257AE7D8
function Global.N_0x144da052257ae7d8(p0)
	return _in(0x144DA052257AE7D8, p0)
end

--- NETWORK_IS_*
function Global.N_0x14922ed3e38761f0()
	return _in(0x14922ED3E38761F0, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x14d29bb12d47f68c(p0, p1, p2, p3, p4)
	return _in(0x14D29BB12D47F68C, p0, p1, p2, p3, p4)
end

--- 0x14E0B2D1AD1044E0
function Global.N_0x14e0b2d1ad1044e0()
	return _in(0x14E0B2D1AD1044E0, _i, _i, _i, _i)
end

--- 0x14EDA9EE27BD1626
function Global.N_0x14eda9ee27bd1626(p0)
	return _in(0x14EDA9EE27BD1626, p0)
end

--- 0x14FC5833464340A8
function Global.N_0x14fc5833464340a8()
	return _in(0x14FC5833464340A8)
end

--- Checks some commerce stuff
-- NativeDB Introduced: v1290
function Global.N_0x155467aca0f55705()
	return _in(0x155467ACA0F55705, _ri)
end

--- 0x159B7318403A1CD8
function Global.N_0x159b7318403a1cd8(p0)
	return _in(0x159B7318403A1CD8, p0)
end

--- 0x1612C45F9E3E0D44
function Global.N_0x1612c45f9e3e0d44()
	return _in(0x1612C45F9E3E0D44)
end

--- 0x162C23CA83ED0A62
function Global.N_0x162c23ca83ed0a62(p0)
	return _in(0x162C23CA83ED0A62, p0, _r)
end

--- 0x164C5FF663790845
function Global.N_0x164c5ff663790845(p0)
	return _in(0x164C5FF663790845, p0)
end

--- 0x16DA8172459434AA
function Global.N_0x16da8172459434aa()
	return _in(0x16DA8172459434AA, _ri)
end

--- 0x170910093218C8B9
function Global.N_0x170910093218c8b9(p0)
	return _in(0x170910093218C8B9, _ii(p0) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v2060
function Global.N_0x17c9e241111a674d(p0, p1)
	return _in(0x17C9E241111A674D, p0, p1)
end

--- 0x17FCA7199A530203
function Global.N_0x17fca7199a530203()
	return _in(0x17FCA7199A530203)
end

--- 0x182F266C2D9E2BEB
function Global.N_0x182f266c2d9e2beb(vehicle, p1)
	return _in(0x182F266C2D9E2BEB, vehicle, p1)
end

--- 0x19853B5B17D77BCA
function Global.N_0x19853b5b17d77bca(p0, p1)
	return _in(0x19853B5B17D77BCA, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- 0x19AF7ED9B9D23058
function Global.N_0x19af7ed9b9d23058()
	return _in(0x19AF7ED9B9D23058)
end

--- GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing
function Global.N_0x19bfed045c647c49(ped)
	return _in(0x19BFED045C647C49, ped, _r)
end

--- SET_ENTITY_*
function Global.N_0x1a092bb0c3808b96(entity, p1)
	return _in(0x1A092BB0C3808B96, entity, p1)
end

--- Only appears in lamar1 script.
function Global.N_0x1a330d297aac6bc1(ped, p1)
	return _in(0x1A330D297AAC6BC1, ped, p1)
end

--- NativeDB Introduced: v1604
function Global.N_0x1a6cbb06e2d0d79d(p0, p1)
	return _in(0x1A6CBB06E2D0D79D, p0, p1)
end

--- 0x1A7CE7CD3E653485
function Global.N_0x1a7ce7cd3e653485(p0)
	return _in(0x1A7CE7CD3E653485, p0)
end

--- 0x1A8EA222F9C67DBB
function Global.N_0x1a8ea222f9c67dbb(p0)
	return _in(0x1A8EA222F9C67DBB, _fi(p0) --[[ may be optional ]], _ri)
end

--- 0x1BBC135A4D25EDDE
function Global.N_0x1bbc135a4d25edde(p0)
	return _in(0x1BBC135A4D25EDDE, p0)
end

--- NativeDB Introduced: v1604
function Global.N_0x1c57c94a6446492a(p0, p1)
	return _in(0x1C57C94A6446492A, p0, p1)
end

--- SET_TRA*
function Global.N_0x1cba05ae7bd7ee05(p0)
	return _in(0x1CBA05AE7BD7EE05, p0)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Added Parameter 3: char* p2
-- NativeDB Introduced: v323
function Global.N_0x1d12a56fc95be92e()
	return _in(0x1D12A56FC95BE92E, _r)
end

--- IS_COMMERCE_*
function Global.N_0x1d4dc17c38feaff0()
	return _in(0x1D4DC17C38FEAFF0, _r)
end

--- 0x1D610EB0FEA716D9
function Global.N_0x1d610eb0fea716d9(p0)
	return _in(0x1D610EB0FEA716D9, p0, _r)
end

--- NativeDB Introduced: v1493
function Global.N_0x1dc9b749e7ae282b(p0, p1, p2, p3)
	return _in(0x1DC9B749E7AE282B, p0, p1, p2, p3)
end

--- 0x1E3F1B1B891A2AAA
function Global.N_0x1e3f1b1b891a2aaa(p0, p1)
	return _in(0x1E3F1B1B891A2AAA, p0, p1)
end

--- GET_*
function Global.N_0x1e77fa7a62ee6c4c(p0)
	return _in(0x1E77FA7A62EE6C4C, p0, _ri)
end

--- 0x1E9057A74FD73E23
function Global.N_0x1e9057a74fd73e23()
	return _in(0x1E9057A74FD73E23)
end

--- 0x1F2300CB7FA7B7F6
function Global.N_0x1f2300cb7fa7b7f6()
	return _in(0x1F2300CB7FA7B7F6, _ri)
end

--- 0x1F351CF1C6475734
function Global.N_0x1f351cf1c6475734(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x1F351CF1C6475734, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- NativeDB Introduced: v1180
function Global.N_0x1f7bc3539f9e0224()
	return _in(0x1F7BC3539F9E0224)
end

--- 0x1F8E00FB18239600
function Global.N_0x1f8e00fb18239600(p0)
	return _in(0x1F8E00FB18239600, p0)
end

--- SET_PED_STE*
function Global.N_0x2016c603d6b8987c(ped, toggle)
	return _in(0x2016C603D6B8987C, ped, toggle)
end

--- NativeDB Introduced: v2189
function Global.N_0x202a5ed9ce01d6e7(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x202A5ED9CE01D6E7, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end

--- 0x20746F7B1032A3C7
function Global.N_0x20746f7b1032a3c7(p0, p1, p2, p3)
	return _in(0x20746F7B1032A3C7, p0, p1, p2, p3)
end

--- -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
-- first one seems to be a string of a mission name, second one seems to be a bool/toggle
-- p1 was always 0.
function Global.N_0x208784099002bc30(missionNameLabel, p1)
	return _in(0x208784099002BC30, _ts(missionNameLabel), p1)
end

--- 0x20C6C7E4EB082A7F
function Global.N_0x20c6c7e4eb082a7f(p0)
	return _in(0x20C6C7E4EB082A7F, p0)
end

--- HAS_*
function Global.N_0x2107a3773771186d()
	return _in(0x2107A3773771186D, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x211c4ef450086857()
	return _in(0x211C4EF450086857)
end

--- HAS_S*
function Global.N_0x214cd562a939246a()
	return _in(0x214CD562A939246A, _r)
end

--- GET_C*
function Global.N_0x21c235bc64831e5a(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x21C235BC64831E5A, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _rv)
end

--- 0x225798743970412B
function Global.N_0x225798743970412b(p0)
	return _in(0x225798743970412B, _ii(p0) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1493
function Global.N_0x226c284c830d0ca8(p0, p1, p2, p3)
	return _in(0x226C284C830D0CA8, p0, p1, p2, p3)
end

--- BG_*
-- NativeDB Introduced: v323
function Global.N_0x22e21fbcfc88c149(scriptIndex, p1)
	return _in(0x22E21FBCFC88C149, scriptIndex, _ts(p1), _ri)
end

--- 0x2302C0264EA58D31
function Global.N_0x2302c0264ea58d31()
	return _in(0x2302C0264EA58D31)
end

--- NativeDB Introduced: v2372
function Global.N_0x2310a8f9421ebf43(p0)
	return _in(0x2310A8F9421EBF43, p0)
end

--- 0x2311DD7159F00582
function Global.N_0x2311dd7159f00582(vehicle, p1)
	return _in(0x2311DD7159F00582, vehicle, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x23227df0b2115469()
	return _in(0x23227DF0B2115469)
end

--- NativeDB Introduced: v1290
function Global.N_0x237440e46d918649(p0)
	return _in(0x237440E46D918649, p0)
end

--- 0x2382AB11450AE7BA
function Global.N_0x2382ab11450ae7ba(p0, p1)
	return _in(0x2382AB11450AE7BA, p0, p1)
end

--- Hardcoded to return false.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.N_0x23f09eadc01449d6(padIndex)
	return _in(0x23F09EADC01449D6, padIndex, _r)
end

--- Only used once in scripts, in maintransition.
-- maintransition.c4, line ~82432:
-- if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {
-- g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
-- return 1;
-- }
-- Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
-- Most likely ARE_*
function Global.N_0x241fca5b1aa14f75()
	return _in(0x241FCA5B1AA14F75, _r)
end

--- NativeDB Introduced: v2060
function Global.N_0x243296a510b562b6()
	return _in(0x243296A510B562B6)
end

--- 0x247ACBC4ABBC9D1C
function Global.N_0x247acbc4abbc9d1c(p0)
	return _in(0x247ACBC4ABBC9D1C, p0)
end

--- 0x24A49BEAF468DC90
function Global.N_0x24a49beaf468dc90(p0, p2, p3, p4)
	return _in(0x24A49BEAF468DC90, p0, _i, p2, p3, p4, _r)
end

--- NativeDB Introduced: v1868
function Global.N_0x24c024ba8379a70a(p0, p1)
	return _in(0x24C024BA8379A70A, p0, p1)
end

--- 0x24E4E51FC16305F9
function Global.N_0x24e4e51fc16305f9()
	return _in(0x24E4E51FC16305F9, _ri)
end

--- 0x25361A96E0F7E419
function Global.N_0x25361a96e0f7e419(p0, p1, p2, p3)
	return _in(0x25361A96E0F7E419, p0, p1, p2, p3, _ri)
end

--- NativeDB Introduced: v1180
function Global.N_0x2542269291c6ac84(p0)
	return _in(0x2542269291C6AC84, p0, _ri)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0x2555cf7da5473794()
	return _in(0x2555CF7DA5473794)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: float* p1
-- NativeDB Added Parameter 3: char* p2
-- NativeDB Introduced: v323
function Global.N_0x2570e26be63964e3()
	return _in(0x2570E26BE63964E3, _r)
end

--- 0x259BA6D4E6F808F1
function Global.N_0x259ba6d4e6f808f1(p0)
	return _in(0x259BA6D4E6F808F1, p0)
end

--- NativeDB Introduced: v1365
function Global.N_0x25aaa32bdc98f2a3()
	return _in(0x25AAA32BDC98F2A3, _ri)
end

--- 0x25D990F8E0E3F13C
function Global.N_0x25d990f8e0e3f13c()
	return _in(0x25D990F8E0E3F13C)
end

--- 0x25FC3E33A31AD0C9
function Global.N_0x25fc3e33a31ad0c9(p0)
	return _in(0x25FC3E33A31AD0C9, p0)
end

--- 0x261E97AD7BCF3D40
function Global.N_0x261e97ad7bcf3d40(p0)
	return _in(0x261E97AD7BCF3D40, p0)
end

--- 0x265559DA40B3F327
function Global.N_0x265559da40b3f327(p0)
	return _in(0x265559DA40B3F327, p0)
end

--- 0x265635150FB0D82E
function Global.N_0x265635150fb0d82e()
	return _in(0x265635150FB0D82E)
end

--- STATS::0x343B27E2(0);
-- STATS::0x343B27E2(1);
-- STATS::0x343B27E2(2);
-- STATS::0x343B27E2(3);
-- STATS::0x343B27E2(4);
-- STATS::0x343B27E2(5);
-- STATS::0x343B27E2(6);
-- STATS::0x343B27E2(7);
-- Identical in ingamehud & maintransition.
function Global.N_0x26d7399b9587fe89(p0)
	return _in(0x26D7399B9587FE89, p0)
end

--- 0x26F07DD83A5F7F98
function Global.N_0x26f07dd83a5f7f98()
	return _in(0x26F07DD83A5F7F98, _ri)
end

--- 0x271017B9BA825366
function Global.N_0x271017b9ba825366(p0, p1)
	return _in(0x271017B9BA825366, p0, p1)
end

--- 0x271401846BD26E92
function Global.N_0x271401846bd26e92(p0, p1)
	return _in(0x271401846BD26E92, p0, p1)
end

--- 0x2735233A786B1BEF
function Global.N_0x2735233a786b1bef(ped, p1)
	return _in(0x2735233A786B1BEF, ped, p1)
end

--- SET_F*
function Global.N_0x2790f4b17d098e26(toggle)
	return _in(0x2790F4B17D098E26, toggle)
end

--- 0x27AA1C973CACFE63
function Global.N_0x27aa1c973cacfe63(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x27AA1C973CACFE63, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- 0x27CFB1B1E078CB2D
function Global.N_0x27cfb1b1e078cb2d()
	return _in(0x27CFB1B1E078CB2D)
end

--- NativeDB Introduced: v2372
function Global.N_0x27f248c3febfaad3(p0, p1)
	return _in(0x27F248C3FEBFAAD3, p0, p1)
end

--- 0x27FEB5254759CDE3
function Global.N_0x27feb5254759cde3(textureDict, p1)
	return _in(0x27FEB5254759CDE3, _ts(textureDict), p1, _r)
end

--- NativeDB Introduced: v2189
function Global.N_0x2818ff6638cb09de(p0)
	return _in(0x2818FF6638CB09DE, p0)
end

--- 0x282B6739644F4347
function Global.N_0x282b6739644f4347(p0)
	return _in(0x282B6739644F4347, p0)
end

--- 0x283B6062A2C01E9B
function Global.N_0x283b6062a2c01e9b()
	return _in(0x283B6062A2C01E9B)
end

--- [`SET_VEHICLE_STEER_BIAS`](#\_0x42A8EC77D5150CBE) for peds, e.g., `_SET_PED_STEER_BIAS`.
function Global.N_0x288df530c92dad6f(ped, value)
	return _in(0x288DF530C92DAD6F, ped, value)
end

--- F\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x28b022a17b068a3a(p0, p1)
	return _in(0x28B022A17B068A3A, p0, p1)
end

--- 0x28ECB8AC2F607DB2
function Global.N_0x28ecb8ac2f607db2(p0, p1, p2, p3, p4)
	return _in(0x28ECB8AC2F607DB2, p0, p1, p2, p3, p4)
end

--- 0x293220DA1B46CEBC
function Global.N_0x293220da1b46cebc(p0, p1, p2)
	return _in(0x293220DA1B46CEBC, p0, p1, p2)
end

--- NativeDB Introduced: v1868
function Global.N_0x29682e2ccf21e9b5(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0x29682E2CCF21E9B5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- NativeDB Introduced: v323
function Global.N_0x2a251aa48b2b46db()
	return _in(0x2A251AA48B2B46DB)
end

--- NativeDB Introduced: v1290
function Global.N_0x2a7cec72c3443bcc(p0, p1, p2)
	return _in(0x2A7CEC72C3443BCC, p0, p1, p2)
end

--- NativeDB Introduced: v1493
function Global.N_0x2a93c46aab1eacc9(p0, p1, p2, p3)
	return _in(0x2A93C46AAB1EACC9, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function Global.N_0x2acabed337622df2(p0)
	return _in(0x2ACABED337622DF2, _ts(p0))
end

--- 0x2AFC2D19B50797F2
function Global.N_0x2afc2d19b50797f2(p0, p1, p2, p3)
	return _in(0x2AFC2D19B50797F2, p0, p1, p2, p3)
end

--- 0x2B1C623823DB0D9D
function Global.N_0x2b1c623823db0d9d(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2B1C623823DB0D9D, p0, p1, p2, p3, p4, p5, p6, _ri)
end

--- 0x2B40A97646381508
function Global.N_0x2b40a97646381508(p0)
	return _in(0x2B40A97646381508, p0)
end

--- 0x2B51EDBEFC301339
function Global.N_0x2b51edbefc301339(p0, p1)
	return _in(0x2B51EDBEFC301339, p0, _ts(p1), _r)
end

--- 0x2B694AFCF64E6994
function Global.N_0x2b694afcf64e6994(ped, p1)
	return _in(0x2B694AFCF64E6994, ped, p1)
end

--- 0x2BF66D2E7414F686
function Global.N_0x2bf66d2e7414f686()
	return _in(0x2BF66D2E7414F686, _ri)
end

--- GET_BLIP_\*
-- Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0.
-- @param blip The blip to check.
-- @return Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0.
function Global.N_0x2c173ae2bdb9385e(blip)
	return _in(0x2C173AE2BDB9385E, blip, _ri)
end

--- 0x2C42340F916C5930
function Global.N_0x2c42340f916c5930(p0)
	return _in(0x2C42340F916C5930, p0, _ri)
end

--- SET_VEHICLE_W* (next character is either H or I)
function Global.N_0x2c4a1590abf43e8b(vehicle, p1)
	return _in(0x2C4A1590ABF43E8B, vehicle, p1)
end

--- Correct native name lies between SET_BLIP_SPRITE and SET_RADIUS_BLIP_EDGE alphabetically.
function Global.N_0x2c9f302398e13141(blip, p1)
	return _in(0x2C9F302398E13141, blip, p1)
end

--- 0x2CD90358F67D0AA8
function Global.N_0x2cd90358f67d0aa8(p0)
	return _in(0x2CD90358F67D0AA8, p0)
end

--- 0x2CE9D95E4051AECD
function Global.N_0x2ce9d95e4051aecd(p0)
	return _in(0x2CE9D95E4051AECD, p0)
end

--- Used in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)
-- NativeDB Introduced: v1290
-- @param textureDict inside script_txds.rpf, browse it with OpenIV
-- @param textureName textureName
-- @param x x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
-- @param y y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
-- @param width width 0.0 - 1.0 is the reasonable amount generally
-- @param height height 0.0 - 1.0 is the reasonable amount generally
-- @param p6 almost always 0.0
-- @param red red color
-- @param green green color
-- @param blue blue color
-- @param alpha alpha
function Global.N_0x2d3b147afad49de0(textureDict, textureName, x, y, width, height, p6, red, green, blue, alpha, p11)
	return _in(0x2D3B147AFAD49DE0, _ts(textureDict), _ts(textureName), x, y, width, height, p6, red, green, blue, alpha, p11)
end

--- 0x2D5DC831176D0114
function Global.N_0x2d5dc831176d0114(p0)
	return _in(0x2D5DC831176D0114, p0, _r)
end

--- NativeDB Introduced: v1493
function Global.N_0x2d7a9b577e72385e(p0)
	return _in(0x2D7A9B577E72385E, p0)
end

--- NativeDB Introduced: v323
function Global.N_0x2d874d4ae612a65f()
	return _in(0x2D874D4AE612A65F, _ri)
end

--- 0x2DA41ED6E1FCD7A5
function Global.N_0x2da41ed6e1fcd7a5(p0, TypeOfWeapon)
	return _in(0x2DA41ED6E1FCD7A5, p0, _ii(TypeOfWeapon) --[[ may be optional ]], _ri)
end

--- NativeDB Introduced: v463
function Global.N_0x2dd39bf3e2f9c47f()
	return _in(0x2DD39BF3E2F9C47F, _ri)
end

--- 0x2DFC81C9B9608549
function Global.N_0x2dfc81c9b9608549(ped, p1)
	return _in(0x2DFC81C9B9608549, ped, _ii(p1) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1868
function Global.N_0x2e0259babc27a327(p0)
	return _in(0x2E0259BABC27A327, p0)
end

--- 0x2E0BF682CC778D49
function Global.N_0x2e0bf682cc778d49(p0)
	return _in(0x2E0BF682CC778D49, p0, _r)
end

--- 0x2E22FEFA0100275E
function Global.N_0x2e22fefa0100275e()
	return _in(0x2E22FEFA0100275E, _r)
end

--- 0x2E4C123D1C8A710E
function Global.N_0x2e4c123d1c8a710e(p2, p3, p4, p5, p6)
	return _in(0x2E4C123D1C8A710E, _i, _i, p2, p3, p4, p5, p6, _ri)
end

--- Appears to return whether the player is using the pause menu store. Can't be sure though.
function Global.N_0x2f057596f2bd0061()
	return _in(0x2F057596F2BD0061, _r)
end

--- 0x2F074C904D85129E
function Global.N_0x2f074c904d85129e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2F074C904D85129E, p0, p1, p2, p3, p4, p5, p6)
end

--- 0x2F137B508DE238F2
function Global.N_0x2f137b508de238f2(p0)
	return _in(0x2F137B508DE238F2, p0)
end

--- 0x2F3C3D9F50681DE4
function Global.N_0x2f3c3d9f50681de4(p0, p1)
	return _in(0x2F3C3D9F50681DE4, p0, p1)
end

--- 0x2F41A3BAE005E5FA
function Global.N_0x2f41a3bae005e5fa(p0, p1)
	return _in(0x2F41A3BAE005E5FA, p0, p1)
end

--- Used with radios:
-- void sub_cf383(auto _a0) {
-- if ((a_0)==1) {
-- if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
-- PLAYER::_2F7CEB6520288061(0);
-- AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);
-- AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
-- AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);
-- }
-- sub_cf3f6(1);
-- } else {
-- if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
-- PLAYER::_2F7CEB6520288061(1);
-- AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);
-- AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
-- AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);
-- }
-- sub_cf3f6(0);
-- }
-- }
-- SET_PLAYER_S*
function Global.N_0x2f7ceb6520288061(p0)
	return _in(0x2F7CEB6520288061, p0)
end

--- 0x2F7F2B26DD3F18EE
function Global.N_0x2f7f2b26dd3f18ee(p0, p1)
	return _in(0x2F7F2B26DD3F18EE, p0, p1)
end

--- 0x2FA2494B47FDD009
function Global.N_0x2fa2494b47fdd009(p0, p1)
	return _in(0x2FA2494B47FDD009, p0, p1)
end

--- NativeDB Introduced: v2189
function Global.N_0x2fa3173480008493(p0, p1, p2, p3, p4)
	return _in(0x2FA3173480008493, p0, p1, p2, p3, p4)
end

--- 0x2FAB6614CE22E196
function Global.N_0x2fab6614ce22e196(p0, p1, p2, p3)
	return _in(0x2FAB6614CE22E196, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function Global.N_0x2fcb133ca50a49eb(p0)
	return _in(0x2FCB133CA50A49EB, p0, _ri)
end

--- 0x3001BEF2FECA3680
function Global.N_0x3001bef2feca3680()
	return _in(0x3001BEF2FECA3680, _r)
end

--- GET_CURRENT_*
-- NativeDB Introduced: v1493
function Global.N_0x30432a0118736e00()
	return _in(0x30432A0118736E00, _ri)
end

--- 0x3044240D2E0FA842
function Global.N_0x3044240d2e0fa842()
	return _in(0x3044240D2E0FA842, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x31125fd509d9043f(p0)
	return _in(0x31125FD509D9043F, _ii(p0) --[[ may be optional ]])
end

--- NativeDB Introduced: v2189
function Global.N_0x31574b1b41268673(p0, p1)
	return _in(0x31574B1B41268673, p0, p1)
end

--- NativeDB Introduced: v1493
function Global.N_0x316db59cd14c1774(p0)
	return _in(0x316DB59CD14C1774, p0)
end

--- NativeDB Introduced: v1180
function Global.N_0x31ba138f6304fb9f(p0, p1)
	return _in(0x31BA138F6304FB9F, p0, p1)
end

--- 0x31E90B8873A4CD3B
function Global.N_0x31e90b8873a4cd3b(player, p1)
	return _in(0x31E90B8873A4CD3B, player, p1)
end

--- 0x31F924B53EADDF65
function Global.N_0x31f924b53eaddf65(p0)
	return _in(0x31F924B53EADDF65, p0)
end

--- NativeDB Introduced: v323
function Global.N_0x324c5aa411da7737(p0)
	return _in(0x324C5AA411DA7737, p0)
end

--- 0x32CAC93C9DE73D32
function Global.N_0x32cac93c9de73d32()
	return _in(0x32CAC93C9DE73D32, _ri)
end

--- 0x32EBD154CB6B8B99
function Global.N_0x32ebd154cb6b8b99(p0, p1, p2)
	return _in(0x32EBD154CB6B8B99, p0, p1, p2)
end

--- 0x32F34FF7F617643B
function Global.N_0x32f34ff7f617643b(p0, p1)
	return _in(0x32F34FF7F617643B, p0, p1)
end

--- 0x336B3D200AB007CB
function Global.N_0x336b3d200ab007cb(p0, p1, p2, p3, p4)
	return _in(0x336B3D200AB007CB, p0, p1, p2, p3, p4, _ri)
end

--- 0x33D47E85B476ABCD
function Global.N_0x33d47e85b476abcd(p0)
	return _in(0x33D47E85B476ABCD, p0, _r)
end

--- 0x33D72899E24C3365
function Global.N_0x33d72899e24c3365(p0, p1)
	return _in(0x33D72899E24C3365, p0, p1, _ri)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Introduced: v323
function Global.N_0x33df47cc0642061b()
	return _in(0x33DF47CC0642061B, _r)
end

--- 0x3441CAD2F2231923
function Global.N_0x3441cad2f2231923(vehicle, p1)
	return _in(0x3441CAD2F2231923, vehicle, p1)
end

--- 0x346EF3ECAAAB149E
function Global.N_0x346ef3ecaaab149e()
	return _in(0x346EF3ECAAAB149E)
end

--- 0x34770B9CE0E03B91
function Global.N_0x34770b9ce0e03b91(p0, p1)
	return _in(0x34770B9CE0E03B91, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- 0x352E2B5CF420BF3B
function Global.N_0x352e2b5cf420bf3b(p0, p1)
	return _in(0x352E2B5CF420BF3B, p0, p1)
end

--- 0x357B152EF96C30B6
function Global.N_0x357b152ef96c30b6()
	return _in(0x357B152EF96C30B6, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0x35a3cd97b2c0a6d2(blip)
	return _in(0x35A3CD97B2C0A6D2, blip)
end

--- 0x35BB21DE06784373
function Global.N_0x35bb21de06784373(p0, p1)
	return _in(0x35BB21DE06784373, p0, p1)
end

--- 0x35E0654F4BAD7971
function Global.N_0x35e0654f4bad7971(p0)
	return _in(0x35E0654F4BAD7971, p0)
end

--- 0x36391F397731595D
function Global.N_0x36391f397731595d(p0)
	return _in(0x36391F397731595D, p0, _ri)
end

--- 0x367EF5E2F439B4C6
function Global.N_0x367ef5e2f439b4c6(p0)
	return _in(0x367EF5E2F439B4C6, p0)
end

--- ROPE_*
function Global.N_0x36ccb9be67b970fd(ropeId, p1)
	return _in(0x36CCB9BE67B970FD, ropeId, p1)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
function Global.N_0x36de109527a2c0c4(toggle)
	return _in(0x36DE109527A2C0C4, toggle)
end

--- 0x36F1B38855F2A8DF
function Global.N_0x36f1b38855f2a8df(player)
	return _in(0x36F1B38855F2A8DF, player)
end

--- 0x36F32DE87082343E
function Global.N_0x36f32de87082343e(p0, p1)
	return _in(0x36F32DE87082343E, p0, p1)
end

--- 0x36F6626459D91457
function Global.N_0x36f6626459d91457(p0)
	return _in(0x36F6626459D91457, p0)
end

--- I've had this return the player's ped handle sometimes, but also other random entities.
-- Whatever p0 is, it's at least not synced to other players.
-- At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
-- But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
-- @param p0 unknown.
-- @return Returns an entity handle or -1, value changes based on p0's value.
function Global.N_0x37d5f739fd494675(p0)
	return _in(0x37D5F739FD494675, p0, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0x380b4968d1e09e55()
	return _in(0x380B4968D1E09E55)
end

--- 0x38491439B6BA7F7D
function Global.N_0x38491439b6ba7f7d(p0, p1)
	return _in(0x38491439B6BA7F7D, p0, p1, _rf)
end

--- 0x3855FB5EB2C5E8B2
function Global.N_0x3855fb5eb2c5e8b2(p0)
	return _in(0x3855FB5EB2C5E8B2, p0, _ri)
end

--- NativeDB Introduced: v1734
function Global.N_0x38b7c51ab1edc7d8(entity, toggle)
	return _in(0x38B7C51AB1EDC7D8, entity, toggle)
end

--- Sets profile setting 934
function Global.N_0x38baaa5dd4c9d19f(value)
	return _in(0x38BAAA5DD4C9D19F, value)
end

--- NativeDB Introduced: v1493
function Global.N_0x38c1cb1cb119a016(p0, p1)
	return _in(0x38C1CB1CB119A016, p0, p1)
end

--- 0x393BD2275CEB7793
function Global.N_0x393bd2275ceb7793()
	return _in(0x393BD2275CEB7793, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0x39455bf4f4f55186(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0x39455BF4F4F55186, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, _ri)
end

--- 0x394CD08E31313C28
function Global.N_0x394cd08e31313c28()
	return _in(0x394CD08E31313C28)
end

--- 0x397BAA01068BAA96
function Global.N_0x397baa01068baa96()
	return _in(0x397BAA01068BAA96, _ri)
end

--- 0x39917E1B4CB0F911
function Global.N_0x39917e1b4cb0f911(p0)
	return _in(0x39917E1B4CB0F911, p0)
end

--- 0x39A5FB7EAF150840
function Global.N_0x39a5fb7eaf150840(p0, p1)
	return _in(0x39A5FB7EAF150840, p0, p1)
end

--- NativeDB Removed Parameter 3: int R
-- NativeDB Removed Parameter 4: int G
-- NativeDB Removed Parameter 5: int B
-- NativeDB Introduced: v757
function Global.N_0x3b2fd68db5f8331c(object, toggle, R, G, B)
	return _in(0x3B2FD68DB5F8331C, object, toggle, R, G, B)
end
Global.SetObjectColour = Global.N_0x3b2fd68db5f8331c

--- Usually used alongside other vehicle door natives.
function Global.N_0x3b458ddb57038f08(vehicle, doorIndex, toggle)
	return _in(0x3B458DDB57038F08, vehicle, doorIndex, toggle)
end

--- NativeDB Introduced: v1604
function Global.N_0x3bd770d281982db5(p0, p1)
	return _in(0x3BD770D281982DB5, p0, p1, _ri)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function Global.N_0x3c5c1e2c2ff814b1(toggle)
	return _in(0x3C5C1E2C2FF814B1, toggle)
end

--- ```
-- NativeDB Introduced: v1180
-- ```
-- Sets the given checkpoint target to the new coords
-- @param checkpointHandle the handle of a created checkpoint
function Global.N_0x3c788e7f6438754d(checkpointHandle, x, y, z)
	return _in(0x3C788E7F6438754D, checkpointHandle, x, y, z)
end

--- 0x3DE3AA516FB126A4
function Global.N_0x3de3aa516fb126a4(p0)
	return _in(0x3DE3AA516FB126A4, p0)
end

--- IS_*
function Global.N_0x3e38e28a1d80ddf6(ped)
	return _in(0x3E38E28A1D80DDF6, ped, _r)
end

--- 0x3E9679C1DFCF422C
function Global.N_0x3e9679c1dfcf422c(p0, p1)
	return _in(0x3E9679C1DFCF422C, p0, p1)
end

--- 0x3EBEAC6C3F81F6BD
function Global.N_0x3ebeac6c3f81f6bd(p0)
	return _in(0x3EBEAC6C3F81F6BD, p0)
end

--- 0x3FA36981311FA4FF
function Global.N_0x3fa36981311fa4ff(netId, state)
	return _in(0x3FA36981311FA4FF, netId, state)
end

--- nullsub, doesn't do anything
-- ```
-- NativeDB Introduced: v1868
-- ```
function Global.N_0x3fc795691834481d(p0, p1)
	return _in(0x3FC795691834481D, p0, p1)
end

--- 0x4008EDF7D6E48175
function Global.N_0x4008edf7d6e48175(p0)
	return _in(0x4008EDF7D6E48175, p0)
end

--- Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
function Global.N_0x405dc2aef6af95b9(roomHashKey)
	return _in(0x405DC2AEF6AF95B9, _ch(roomHashKey))
end

--- NativeDB Introduced: v1493
function Global.N_0x407dc5e97db1a4d3(p0, p1)
	return _in(0x407DC5E97DB1A4D3, p0, p1)
end

--- 0x4128464231E3CA0B
function Global.N_0x4128464231e3ca0b(p0, p1, p2, p3)
	return _in(0x4128464231E3CA0B, p0, p1, p2, p3)
end

--- 0x41290B40FA63E6DA
function Global.N_0x41290b40fa63e6da(p0)
	return _in(0x41290B40FA63E6DA, p0)
end

--- 0x412F1364FA066CFB
function Global.N_0x412f1364fa066cfb(p0)
	return _in(0x412F1364FA066CFB, p0, _ri)
end

--- 0x41350B4FC28E3941
function Global.N_0x41350b4fc28e3941(p0)
	return _in(0x41350B4FC28E3941, p0)
end

--- 0x419615486BBF1956
function Global.N_0x419615486bbf1956(p0)
	return _in(0x419615486BBF1956, p0)
end

--- 0x4237E822315D8BA9
function Global.N_0x4237e822315d8ba9()
	return _in(0x4237E822315D8BA9, _r)
end

--- 0x425AECF167663F48
function Global.N_0x425aecf167663f48(ped, p1)
	return _in(0x425AECF167663F48, ped, p1)
end

--- 0x4282E08174868BE3
function Global.N_0x4282e08174868be3()
	return _in(0x4282E08174868BE3, _ri)
end

--- SET_*
function Global.N_0x428ad3e26c8d9eb0(vehicle, x, y, z, p4)
	return _in(0x428AD3E26C8D9EB0, vehicle, x, y, z, p4)
end

--- NativeDB Introduced: v1180
function Global.N_0x430a7631a84c9be7(p0)
	return _in(0x430A7631A84C9BE7, p0)
end

--- 0x4348BFDA56023A2F
function Global.N_0x4348bfda56023a2f(p0, p1)
	return _in(0x4348BFDA56023A2F, p0, p1, _ri)
end

--- 0x43FA0DFC5DF87815
function Global.N_0x43fa0dfc5df87815(vehicle, p1)
	return _in(0x43FA0DFC5DF87815, vehicle, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0x43fa7cbe20dab219(p0)
	return _in(0x43FA7CBE20DAB219, p0)
end

--- CLEAR_VEHICLE_*
function Global.N_0x4419966c9936071a(vehicle)
	return _in(0x4419966C9936071A, vehicle)
end

--- related to:
-- NETWORK_BAIL
-- NETWORK_BAIL_TRANSITION
-- NETWORK_JOIN_GROUP_ACTIVITY
-- NETWORK_JOIN_TRANSITION
-- NETWORK_LAUNCH_TRANSITION
-- NETWORK_SESSION_HOST
-- NETWORK_SESSION_HOST_CLOSED
-- NETWORK_SESSION_HOST_FRIENDS_ONLY
-- NETWORK_SESSION_HOST_SINGLE_PLAYER
-- NETWORK_SESSION_VOICE_LEAVE
function Global.N_0x444c4525ece0a4b9()
	return _in(0x444C4525ECE0A4B9)
end

--- 0x44919CC079BB60BF
function Global.N_0x44919cc079bb60bf(p0)
	return _in(0x44919CC079BB60BF, p0)
end

--- 0x44ACA259D67651DB
function Global.N_0x44aca259d67651db(p1)
	return _in(0x44ACA259D67651DB, _i, p1)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Introduced: v323
function Global.N_0x450819d8cf90c416()
	return _in(0x450819D8CF90C416, _r)
end

--- 0x45E816772E93A9DB
function Global.N_0x45e816772e93a9db()
	return _in(0x45E816772E93A9DB, _ri)
end

--- This has been found in use in the decompiled files.
function Global.N_0x4669b3ed80f24b4e(player)
	return _in(0x4669B3ED80F24B4E, player)
end

--- 0x469F2ECDEC046337
function Global.N_0x469f2ecdec046337(p0)
	return _in(0x469F2ECDEC046337, p0)
end

--- Checks if the specified unknown flag is set in the ped's model.
-- The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).
-- Game scripts exclusively check for flags 1 and 4.
function Global.N_0x46b05bcae43856b0(ped, flag)
	return _in(0x46B05BCAE43856B0, ped, flag, _r)
end

--- 0x46D1A61A21F566FC
function Global.N_0x46d1a61a21f566fc(p0)
	return _in(0x46D1A61A21F566FC, p0)
end

--- 0x46F3ADD1E2D5BAF2
function Global.N_0x46f3add1e2d5baf2(p0, p1)
	return _in(0x46F3ADD1E2D5BAF2, p0, p1)
end

--- 0x472397322E92A856
function Global.N_0x472397322e92a856()
	return _in(0x472397322E92A856)
end

--- 0x4737980E8A283806
function Global.N_0x4737980e8a283806(p0, p1)
	return _in(0x4737980E8A283806, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- 0x4811BBAC21C5FCD5
function Global.N_0x4811bbac21c5fcd5(p0)
	return _in(0x4811BBAC21C5FCD5, p0)
end

--- 0x483ACA1176CA93F1
function Global.N_0x483aca1176ca93f1()
	return _in(0x483ACA1176CA93F1)
end

--- 0x48621C9FCA3EBD28
function Global.N_0x48621c9fca3ebd28(p0)
	return _in(0x48621C9FCA3EBD28, p0)
end

--- 0x487912FD248EFDDF
function Global.N_0x487912fd248efddf(p0, p1)
	return _in(0x487912FD248EFDDF, p0, p1, _r)
end

--- A*
function Global.N_0x4879e4fe39074cdf()
	return _in(0x4879E4FE39074CDF, _r)
end

--- Only found 3 times in decompiled scripts. Not a whole lot to go off of.
-- MISC::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");
-- MISC::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");
-- MISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
function Global.N_0x48f069265a0e4bec(name)
	return _in(0x48F069265A0E4BEC, _i, _ts(name))
end

--- Does nothing (essentially a nullsub).
function Global.N_0x490861b88f4fd846(p0)
	return _in(0x490861B88F4FD846, p0)
end

--- SET_PED_ALLOW*
function Global.N_0x49e50bdb8ba4dab2(ped, toggle)
	return _in(0x49E50BDB8BA4DAB2, ped, toggle)
end

--- 0x4A7D6E727F941747
function Global.N_0x4a7d6e727f941747(p0)
	return _in(0x4A7D6E727F941747, _ii(p0) --[[ may be optional ]], _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x4a9fde3a5a6d0437(toggle)
	return _in(0x4A9FDE3A5A6D0437, toggle)
end

--- NativeDB Introduced: v1868
function Global.N_0x4ad280eb48b2d8e6(vehicle, togle)
	return _in(0x4AD280EB48B2D8E6, vehicle, togle)
end

--- 0x4AD490AE1536933B
function Global.N_0x4ad490ae1536933b(p0, p1)
	return _in(0x4AD490AE1536933B, p0, p1, _ri)
end

--- 0x4AF92ACD3141D96C
function Global.N_0x4af92acd3141d96c()
	return _in(0x4AF92ACD3141D96C)
end

--- NativeDB Introduced: v1868
function Global.N_0x4aff7e02e485e92b()
	return _in(0x4AFF7E02E485E92B)
end

--- 0x4B5B620C9B59ED34
function Global.N_0x4b5b620c9b59ed34(p0, p1)
	return _in(0x4B5B620C9B59ED34, p0, p1)
end

--- NativeDB Introduced: v1180
function Global.N_0x4c134b4df76025d0(p0, p1)
	return _in(0x4C134B4DF76025D0, p0, p1)
end

--- Only used once in the entire game scripts.
-- Does not actually return anything.
function Global.N_0x4c2330e61d3deb56(interior)
	return _in(0x4C2330E61D3DEB56, interior, _ri)
end

--- 0x4C2A9FDC22377075
function Global.N_0x4c2a9fdc22377075()
	return _in(0x4C2A9FDC22377075)
end

--- NativeDB Introduced: v1868
function Global.N_0x4c3b75694f7e0d9c(p0, p1, p2)
	return _in(0x4C3B75694F7E0D9C, p0, p1, p2)
end

--- 0x4C89FE2BDEB3F169
function Global.N_0x4c89fe2bdeb3f169()
	return _in(0x4C89FE2BDEB3F169, _ri)
end

--- NativeDB Introduced: v2060
function Global.N_0x4c9034162368e206()
	return _in(0x4C9034162368E206, _ri)
end

--- This function is hard-coded to always return 1.
function Global.N_0x4cebc1ed31e8925e(cutsceneName)
	return _in(0x4CEBC1ED31E8925E, _ts(cutsceneName), _r)
end

--- 0x4D02279C83BE69FE
function Global.N_0x4d02279c83be69fe()
	return _in(0x4D02279C83BE69FE, _ri)
end

--- Something like flush_all_scripts
-- Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()
function Global.N_0x4d953df78ebf8158()
	return _in(0x4D953DF78EBF8158)
end

--- 0x4D9D109F63FEE1D4
function Global.N_0x4d9d109f63fee1d4(p0, p1)
	return _in(0x4D9D109F63FEE1D4, p0, p1)
end

--- NativeDB Introduced: v2189
function Global.N_0x4dc416f246a41fc8(p0, p1, p2, p3, p4)
	return _in(0x4DC416F246A41FC8, p0, p1, p2, p3, p4)
end

--- 0x4DF7CFFF471A7FB1
function Global.N_0x4df7cfff471a7fb1(p0)
	return _in(0x4DF7CFFF471A7FB1, p0, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x4e52e752c76e7e7a(p0)
	return _in(0x4E52E752C76E7E7A, p0)
end

--- NativeDB Introduced: v323
function Global.N_0x4ed9c8d6da297639()
	return _in(0x4ED9C8D6DA297639, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0x4fcd976da686580c(p0)
	return _in(0x4FCD976DA686580C, p0, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0x4fcdbd3f0a813c25(p0, p1)
	return _in(0x4FCDBD3F0A813C25, p0, p1)
end

--- Related to the ped's weapon - flag used when disabling ped vehicle weapon
-- SET_PED_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x50276ef8172f5f12(ped)
	return _in(0x50276EF8172F5F12, ped)
end

--- 0x5068F488DDB54DD8
function Global.N_0x5068f488ddb54dd8()
	return _in(0x5068F488DDB54DD8, _ri)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: float* p1
-- NativeDB Introduced: v323
function Global.N_0x50a8a36201dbf83e()
	return _in(0x50A8A36201DBF83E, _r)
end

--- GET_*
function Global.N_0x511f1a683387c7e2(ped)
	return _in(0x511F1A683387C7E2, ped, _ri)
end

--- 0x51DB102F4A3BA5E0
function Global.N_0x51db102f4a3ba5e0(toggle)
	return _in(0x51DB102F4A3BA5E0, toggle)
end

--- Usex in decompiled scripts in combination with [`_GET_VEHICLE_SUSPENSION_BOUNDS`](#\_0xDF7E3EEB29642C38).
-- NativeDB Introduced: v1180
-- ```
-- // Example from fm_bj_race_controller.c
-- if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))
-- {
-- VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);
-- VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);
-- fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);
-- uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);
-- if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))
-- {
-- uParam0->f_12.f_3 = { uParam0->f_6 };
-- uParam0->f_12 = { uParam0->f_9 };
-- }
-- }
-- ```
-- @param vehicle the target vehicle
-- @param x vehicle location
-- @param y vehicle location
-- @param z vehicle location
-- @param rotX some kind of vehicle rotation value
-- @param rotY some kind of vehicle rotation value
-- @param rotZ some kind of vehicle rotation value
-- @param p7 usually 2
-- @param p8 usually 1
-- @return A BOOL value, purpose unknown.
function Global.N_0x51f30db60626a20e(vehicle, x, y, z, rotX, rotY, rotZ, p7, p8)
	return _in(0x51F30DB60626A20E, vehicle, x, y, z, rotX, rotY, rotZ, p7, p8, _r)
end

--- 0x5324A0E3E4CE3570
function Global.N_0x5324a0e3e4ce3570(p0, p1)
	return _in(0x5324A0E3E4CE3570, p0, p1, _i, _i, _r)
end

--- 0x53C10C8BD774F2C9
function Global.N_0x53c10c8bd774f2c9()
	return _in(0x53C10C8BD774F2C9, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0x53c31853ec9531ff(p0)
	return _in(0x53C31853EC9531FF, p0)
end

--- 0x53CAE13E9B426993
function Global.N_0x53cae13e9b426993(p0)
	return _in(0x53CAE13E9B426993, p0)
end

--- Related to [`_CLEAR_VEHICLE_TASKS`](#\_0xDBBC7A2432524127) and requires more research (e.g., \_CLEAR_VEHICLE_SECONDARY_TASKS).
-- ```
-- CLEAR_*
-- NativeDB Introduced: v1290
-- ```
-- @param vehicle The vehicle to have tasks cleared
function Global.N_0x53ddc75bc3ac0a90(vehicle)
	return _in(0x53DDC75BC3AC0A90, vehicle)
end

--- 0x5407B7288D0478B7
function Global.N_0x5407b7288d0478b7(p0)
	return _in(0x5407B7288D0478B7, p0, _ri)
end

--- 0x547237AA71AB44DE
function Global.N_0x547237aa71ab44de(p0)
	return _in(0x547237AA71AB44DE, p0)
end

--- 0x54E22EA2C1956A8D
function Global.N_0x54e22ea2c1956a8d(p0)
	return _in(0x54E22EA2C1956A8D, p0)
end

--- From the scripts:
-- MISC::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);
-- Related to tennis mode.
-- SET_*
function Global.N_0x54f157e0336a3822(ped, p1, p2)
	return _in(0x54F157E0336A3822, ped, _ts(p1), p2)
end

--- Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION
function Global.N_0x5501b7a5cdb79d37(player)
	return _in(0x5501B7A5CDB79D37, player)
end

--- Sets profile setting 935
function Global.N_0x55384438fc55ad8e(value)
	return _in(0x55384438FC55AD8E, value)
end

--- 0x5539C3EBF104A53A
function Global.N_0x5539c3ebf104a53a(p0)
	return _in(0x5539C3EBF104A53A, p0)
end

--- NativeDB Introduced: v1868
function Global.N_0x5574637681911fda(p0, p1, p2, p3)
	return _in(0x5574637681911FDA, p0, p1, p2, p3)
end

--- _NETWORK_CAN_VIEW_* - _NETWORK_CAN_SESSION*
-- NETWORK_CAN_PLAY_GAMER_USER_CONTENT?
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.N_0x559ebf901a8c68e0(gamerHandle)
	return _in(0x559EBF901A8C68E0, _ii(gamerHandle) --[[ may be optional ]], _r)
end

--- 0x55A1E095DB052FA5
function Global.N_0x55a1e095db052fa5(p0, p1)
	return _in(0x55A1E095DB052FA5, p0, p1)
end

--- 0x55A8BECAF28A4EB7
function Global.N_0x55a8becaf28a4eb7()
	return _in(0x55A8BECAF28A4EB7, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0x55ecf4d13d9903b0(p0, p1, p2, p3)
	return _in(0x55ECF4D13D9903B0, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1180
function Global.N_0x55f5a5f07134de60()
	return _in(0x55F5A5F07134DE60)
end

--- 0x55FCC0C390620314
function Global.N_0x55fcc0c390620314(player1, player2, toggle)
	return _in(0x55FCC0C390620314, player1, player2, toggle)
end

--- NativeDB Introduced: v1604
function Global.N_0x560b423d73015e77(p0)
	return _in(0x560B423D73015E77, p0, _ri)
end

--- STAT_SET_*
function Global.N_0x5688585e6d563cd8(p0)
	return _in(0x5688585E6D563CD8, p0)
end

--- 0x56EB5E94318D3FB6
function Global.N_0x56eb5e94318d3fb6(vehicle, p1)
	return _in(0x56EB5E94318D3FB6, vehicle, p1)
end

--- 0x577599CCED639CA2
function Global.N_0x577599cced639ca2(p0)
	return _in(0x577599CCED639CA2, p0)
end

--- FORCE_*
function Global.N_0x57d760d55f54e071(p0)
	return _in(0x57D760D55F54E071, p0)
end

--- 0x583DF8E3D4AFBD98
function Global.N_0x583df8e3d4afbd98()
	return _in(0x583DF8E3D4AFBD98, _ri)
end

--- 0x5845066D8A1EA7F7
function Global.N_0x5845066d8a1ea7f7(vehicle, x, y, z, p4)
	return _in(0x5845066D8A1EA7F7, vehicle, x, y, z, p4)
end

--- 0x584770794D758C18
function Global.N_0x584770794d758c18(p0, p1)
	return _in(0x584770794D758C18, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- 0x58BB377BEC7CD5F4
function Global.N_0x58bb377bec7cd5f4(p0, p1)
	return _in(0x58BB377BEC7CD5F4, p0, p1)
end

--- IS_*
function Global.N_0x59328eb08c5ceb2b()
	return _in(0x59328EB08C5CEB2B, _r)
end

--- 0x593FEAE1F73392D4
function Global.N_0x593feae1f73392d4()
	return _in(0x593FEAE1F73392D4, _ri)
end

--- 0x59424BD75174C9B1
function Global.N_0x59424bd75174c9b1()
	return _in(0x59424BD75174C9B1)
end

--- NativeDB Introduced: v1493
function Global.N_0x59c3757b3b7408e8(vehicle, toggle, p2)
	return _in(0x59C3757B3B7408E8, vehicle, toggle, p2)
end

--- 0x59D421683D31835A
function Global.N_0x59d421683d31835a(p0)
	return _in(0x59D421683D31835A, p0)
end

--- 0x5A34CD9C3C5BEC44
function Global.N_0x5a34cd9c3c5bec44(p0)
	return _in(0x5A34CD9C3C5BEC44, p0, _r)
end

--- 0x5A43C76F7FC7BA5F
function Global.N_0x5a43c76f7fc7ba5f()
	return _in(0x5A43C76F7FC7BA5F)
end

--- 0x5A556B229A169402
function Global.N_0x5a556b229a169402()
	return _in(0x5A556B229A169402, _r)
end

--- 0x5A7F62FDA59759BD
function Global.N_0x5a7f62fda59759bd()
	return _in(0x5A7F62FDA59759BD)
end

--- Disables some other rendering (internal)
function Global.N_0x5ad3932daeb1e5d3()
	return _in(0x5AD3932DAEB1E5D3)
end

--- 0x5B0316762AFD4A64
function Global.N_0x5b0316762afd4a64()
	return _in(0x5B0316762AFD4A64, _ri)
end

--- 0x5B1F2E327B6B6FE1
function Global.N_0x5b1f2e327b6b6fe1()
	return _in(0x5B1F2E327B6B6FE1, _ri)
end

--- 0x5B6010B3CBC29095
function Global.N_0x5b6010b3cbc29095(p0, p1)
	return _in(0x5B6010B3CBC29095, p0, p1)
end

--- 0x5B73C77D9EB66E24
function Global.N_0x5b73c77d9eb66e24(p0)
	return _in(0x5B73C77D9EB66E24, p0)
end

--- 0x5B9853296731E88D
function Global.N_0x5b9853296731e88d(p0, p1, p2, p3, p4, p5)
	return _in(0x5B9853296731E88D, p0, p1, p2, p3, p4, p5)
end

--- 0x5BA68A0840D546AC
function Global.N_0x5ba68a0840d546ac(p0, p1)
	return _in(0x5BA68A0840D546AC, p0, p1, _ri)
end

--- NativeDB Introduced: v1604
function Global.N_0x5bbcf35bf6e456f7(toggle)
	return _in(0x5BBCF35BF6E456F7, toggle)
end

--- 0x5BD5F255321C4AAF
function Global.N_0x5bd5f255321c4aaf(p0)
	return _in(0x5BD5F255321C4AAF, p0, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0x5bf29846c6527c54(p0, p1, p2, p3, p4)
	return _in(0x5BF29846C6527C54, p0, p1, p2, p3, p4)
end

--- Only called once in the scripts.
-- Related to weapon objects.
function Global.N_0x5c3b791d580e0bc2(entity, p1)
	return _in(0x5C3B791D580E0BC2, entity, p1)
end

--- 0x5C41E6BABC9E2112
function Global.N_0x5c41e6babc9e2112(p0)
	return _in(0x5C41E6BABC9E2112, p0)
end

--- W*
function Global.N_0x5c48a1d6e3b33179(cam)
	return _in(0x5C48A1D6E3B33179, cam, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x5c497525f803486b()
	return _in(0x5C497525F803486B)
end

--- NativeDB Introduced: v1868
function Global.N_0x5cdaed54b34b0ed0(p0)
	return _in(0x5CDAED54B34B0ED0, p0)
end

--- p1: 0..16
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.N_0x5d96cfb59da076a0(vehicle, p1, p2)
	return _in(0x5D96CFB59DA076A0, vehicle, p1, p2)
end

--- 0x5DBF05DB5926D089
function Global.N_0x5dbf05db5926d089(p0)
	return _in(0x5DBF05DB5926D089, p0)
end

--- 0x5DEBD9C4DC995692
function Global.N_0x5debd9c4dc995692()
	return _in(0x5DEBD9C4DC995692)
end

--- 0x5E3AA4CA2B6FB0EE
function Global.N_0x5e3aa4ca2b6fb0ee(p0)
	return _in(0x5E3AA4CA2B6FB0EE, p0)
end

--- 0x5E569EC46EC21CAE
function Global.N_0x5e569ec46ec21cae(vehicle, toggle)
	return _in(0x5E569EC46EC21CAE, vehicle, toggle)
end

--- example from completionpercentage_controller.ysc.c4
-- if (STATS::_5EAD2BF6484852E4()) {
-- MISC::SET_BIT(g_17b95._f20df._ff10, 15);
-- STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
-- }
function Global.N_0x5ead2bf6484852e4()
	return _in(0x5EAD2BF6484852E4, _r)
end

--- 0x5ECD378EE64450AB
function Global.N_0x5ecd378ee64450ab(p0)
	return _in(0x5ECD378EE64450AB, p0)
end

--- 0x5EDEF0CF8C1DAB3C
function Global.N_0x5edef0cf8c1dab3c()
	return _in(0x5EDEF0CF8C1DAB3C, _r)
end

--- Sets some health value. Looks like it's used for helis.
function Global.N_0x5ee5632f47ae9695(vehicle, health)
	return _in(0x5EE5632F47AE9695, vehicle, health)
end

--- 0x5F456788B05FAEAC
function Global.N_0x5f456788b05faeac(p0, p1, p2)
	return _in(0x5F456788B05FAEAC, p0, p1, p2)
end

--- DISABLE_*
function Global.N_0x5f6df3d92271e8a1(toggle)
	return _in(0x5F6DF3D92271E8A1, toggle)
end
Global.SetParticleFxBloodScale = Global.N_0x5f6df3d92271e8a1

--- Appears once in "re_dealgonewrong"
function Global.N_0x5fc472c501ccadb3(player)
	return _in(0x5FC472C501CCADB3, player, _r)
end

--- 0x5FF2C33B13A02A11
function Global.N_0x5ff2c33b13a02a11(p0)
	return _in(0x5FF2C33B13A02A11, p0)
end

--- 0x600F8CB31C7AAB6E
function Global.N_0x600f8cb31c7aab6e(p0)
	return _in(0x600F8CB31C7AAB6E, p0)
end

--- Returns true if profile setting 901 is set to true and sets it to false.
-- NETWORK_C*
function Global.N_0x60edd13eb3ac1ff3()
	return _in(0x60EDD13EB3AC1FF3, _r)
end

--- 0x60EEDC12AF66E846
function Global.N_0x60eedc12af66e846(p0)
	return _in(0x60EEDC12AF66E846, p0)
end

--- NativeDB Introduced: v2189
function Global.N_0x6100b3cefd43452e(p0)
	return _in(0x6100B3CEFD43452E, p0)
end

--- 0x613F125BA3BD2EB9
function Global.N_0x613f125ba3bd2eb9()
	return _in(0x613F125BA3BD2EB9, _r)
end

--- Unknown. Called after creating a checkpoint (type: 51) in the creators.
function Global.N_0x615d3925e87a3b26(checkpoint)
	return _in(0x615D3925E87A3B26, checkpoint)
end

--- NETWORK_GET_NUM_*
function Global.N_0x617f49c2668e6155()
	return _in(0x617F49C2668E6155, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x61f95e5bb3e0a8c6(p0)
	return _in(0x61F95E5BB3E0A8C6, p0)
end

--- 0x62374889A4D59F72
function Global.N_0x62374889a4d59f72()
	return _in(0x62374889A4D59F72)
end

--- 0x62454A641B41F3C5
function Global.N_0x62454a641b41f3c5(p0)
	return _in(0x62454A641B41F3C5, p0)
end

--- 0x629526ABA383BCAA
function Global.N_0x629526aba383bcaa()
	return _in(0x629526ABA383BCAA)
end

--- 0x62E849B7EB28E770
function Global.N_0x62e849b7eb28e770(p0)
	return _in(0x62E849B7EB28E770, p0)
end

--- 0x62ECFCFDEE7885D6
function Global.N_0x62ecfcfdee7885d6()
	return _in(0x62ECFCFDEE7885D6)
end

--- 0x63B406D7884BFA95
function Global.N_0x63b406d7884bfa95()
	return _in(0x63B406D7884BFA95, _ri)
end

--- 0x63EB2B972A218CAC
function Global.N_0x63eb2b972a218cac()
	return _in(0x63EB2B972A218CAC)
end

--- NativeDB Introduced: v1365
function Global.N_0x63ecf581bc70e363(p0, p1)
	return _in(0x63ECF581BC70E363, p0, p1)
end

--- 0x641F272B52E2F0F8
function Global.N_0x641f272b52e2f0f8(p0, p1)
	return _in(0x641F272B52E2F0F8, p0, p1)
end

--- 0x6483C25849031C4F
function Global.N_0x6483c25849031c4f(p0, p1, p2, p3)
	return _in(0x6483C25849031C4F, p0, p1, p2, _ii(p3) --[[ may be optional ]])
end

--- 0x649C97D52332341A
function Global.N_0x649c97d52332341a(p0)
	return _in(0x649C97D52332341A, p0)
end

--- NETWORK_GET_*
function Global.N_0x64d779659bc37b19(entity)
	return _in(0x64D779659BC37B19, entity, _rv)
end

--- Hardcoded to return false.
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x64e5c4cc82847b73()
	return _in(0x64E5C4CC82847B73, _r)
end

--- 0x6501129C9E0FFA05
function Global.N_0x6501129c9e0ffa05(p0, p1)
	return _in(0x6501129C9E0FFA05, p0, p1)
end

--- NativeDB Introduced: v1493
function Global.N_0x65482bfd0923c8a1(p0, p1, p2, p3, p4, p5)
	return _in(0x65482BFD0923C8A1, p0, p1, p2, p3, p4, p5)
end

--- 0x6551B1F7F6CD46EA
function Global.N_0x6551b1f7f6cd46ea(p0)
	return _in(0x6551B1F7F6CD46EA, p0)
end

--- NativeDB Introduced: v1290
function Global.N_0x659f9d71f52843f8(p0, p1)
	return _in(0x659F9D71F52843F8, p0, p1)
end

--- 0x65B080555EA48149
function Global.N_0x65b080555ea48149(p0)
	return _in(0x65B080555EA48149, p0)
end

--- Sets GtaThread+0x14A
-- SET_S*
function Global.N_0x65d2ebb47e1cec21(toggle)
	return _in(0x65D2EBB47E1CEC21, toggle)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x66972397e0757e7a(p0, p1, p2)
	return _in(0x66972397E0757E7A, p0, p1, p2)
end

--- 0x66A49D021870FE88
function Global.N_0x66a49d021870fe88()
	return _in(0x66A49D021870FE88)
end

--- 0x66E3AAFACE2D1EB8
function Global.N_0x66e3aaface2d1eb8(p0, p1, p2)
	return _in(0x66E3AAFACE2D1EB8, p0, p1, p2)
end

--- 0x66E7CB63C97B7D20
function Global.N_0x66e7cb63c97b7d20()
	return _in(0x66E7CB63C97B7D20, _ri)
end

--- 0x675721C9F644D161
function Global.N_0x675721c9f644d161()
	return _in(0x675721C9F644D161)
end

--- 0x675D19C6067CAE08
function Global.N_0x675d19c6067cae08(p0, p1, p2, p3)
	return _in(0x675D19C6067CAE08, p0, p1, p2, p3)
end

--- 0x678F86D8FC040BDB
function Global.N_0x678f86d8fc040bdb(p0)
	return _in(0x678F86D8FC040BDB, p0)
end

--- 0x67FC09BC554A75E5
-- @return Hard-coded to always return 0.
function Global.N_0x67fc09bc554a75e5()
	return _in(0x67FC09BC554A75E5, _ri)
end

--- 0x68103E2247887242
function Global.N_0x68103e2247887242()
	return _in(0x68103E2247887242)
end

--- NativeDB Introduced: v1180
function Global.N_0x68b562e124cc0aef(p0, p1)
	return _in(0x68B562E124CC0AEF, p0, p1)
end

--- IS_*
function Global.N_0x690a61a6d13583f6(player)
	return _in(0x690A61A6D13583F6, player, _r)
end

--- NativeDB Introduced: v2372
function Global.N_0x690b76bd2763e068()
	return _in(0x690B76BD2763E068, _ri)
end

--- 0x692D58DF40657E8C
function Global.N_0x692d58df40657e8c(p0, p1, p2, p4, p5)
	return _in(0x692D58DF40657E8C, p0, p1, p2, _i, p4, p5, _r)
end

--- 0x693478ACBD7F18E7
function Global.N_0x693478acbd7f18e7()
	return _in(0x693478ACBD7F18E7)
end

--- SET_ENTITY_R*
function Global.N_0x694e00132f2823ed(entity, toggle)
	return _in(0x694E00132F2823ED, entity, toggle)
end

--- 0x699E4A5C8C893A18
function Global.N_0x699e4a5c8c893a18(p0, p1, p2)
	return _in(0x699E4A5C8C893A18, p0, _ts(p1), _ii(p2) --[[ may be optional ]], _r)
end

--- 0x69EF772B192614C1
function Global.N_0x69ef772b192614c1(p0, p1, p2, p3)
	return _in(0x69EF772B192614C1, p0, p1, p2, p3)
end

--- SET_F*
function Global.N_0x6a51f78772175a51(toggle)
	return _in(0x6A51F78772175A51, toggle)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function Global.N_0x6a5d89d7769a40d8(toggle)
	return _in(0x6A5D89D7769A40D8, toggle)
end

--- 0x6A60E43998228229
function Global.N_0x6a60e43998228229(p0)
	return _in(0x6A60E43998228229, p0)
end

--- NativeDB Introduced: v2060
function Global.N_0x6a7f19756f1a9016()
	return _in(0x6A7F19756F1A9016, _r)
end

--- NativeDB Introduced: v1604
function Global.N_0x6a973569ba094650(vehicle, p1)
	return _in(0x6A973569BA094650, vehicle, p1)
end

--- NativeDB Introduced: v2189
function Global.N_0x6ad0bd5e087866cb(p0)
	return _in(0x6AD0BD5E087866CB, p0)
end

--- NativeDB Introduced: v1180
function Global.N_0x6b7e4fb50d5f3d65(p0, p1, p2, p3, p4)
	return _in(0x6B7E4FB50D5F3D65, p0, p1, p2, p3, p4)
end

--- 0x6BC0ACD0673ACEBE
function Global.N_0x6bc0acd0673acebe(p0)
	return _in(0x6BC0ACD0673ACEBE, p0, _i, _i)
end

--- 0x6BCCF9948492FD85
function Global.N_0x6bccf9948492fd85(p0, p1, p2, p3, p4)
	return _in(0x6BCCF9948492FD85, p0, p1, p2, p3, p4)
end

--- 0x6BFB12CE158E3DD4
function Global.N_0x6bfb12ce158e3dd4(p0)
	return _in(0x6BFB12CE158E3DD4, p0, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x6bff5f84102df80a(player)
	return _in(0x6BFF5F84102DF80A, player)
end

--- 0x6CD79468A1E595C6
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.N_0x6cd79468a1e595c6(padIndex)
	return _in(0x6CD79468A1E595C6, padIndex, _r)
end

--- 0x6CE50E47F5543D0C
function Global.N_0x6ce50e47f5543d0c()
	return _in(0x6CE50E47F5543D0C)
end

--- Returns some sort of index/offset for props.
-- Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
-- ```
-- NativeDB Introduced: v2189
-- ```
function Global.N_0x6cebe002e58dee97(componentHash)
	return _in(0x6CEBE002E58DEE97, _ch(componentHash), _ri)
end

--- Possible values:
-- act_cinema
-- am_mp_carwash_launch
-- am_mp_carwash_control
-- am_mp_property_ext
-- chop
-- fairgroundHub
-- launcher_BasejumpHeli
-- launcher_BasejumpPack
-- launcher_CarWash
-- launcher_golf
-- launcher_Hunting_Ambient
-- launcher_MrsPhilips
-- launcher_OffroadRacing
-- launcher_pilotschool
-- launcher_Racing
-- launcher_rampage
-- launcher_rampage
-- launcher_range
-- launcher_stunts
-- launcher_stunts
-- launcher_tennis
-- launcher_Tonya
-- launcher_Triathlon
-- launcher_Yoga
-- ob_mp_bed_low
-- ob_mp_bed_med
function Global.N_0x6d6840cee8845831(action)
	return _in(0x6D6840CEE8845831, _ts(action))
end

--- 0x6DEE77AFF8C21BD1
function Global.N_0x6dee77aff8c21bd1()
	return _in(0x6DEE77AFF8C21BD1, _i, _i, _r)
end

--- 0x6E0A5253375C4584
function Global.N_0x6e0a5253375c4584()
	return _in(0x6E0A5253375C4584, _ri)
end

--- 0x6E4361FF3E8CD7CA
function Global.N_0x6e4361ff3e8cd7ca(p0)
	return _in(0x6E4361FF3E8CD7CA, p0, _ri)
end

--- Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
-- Here are possible values of argument -
-- "ob_tv"
-- "launcher_Darts"
function Global.N_0x6e91b04e08773030(action)
	return _in(0x6E91B04E08773030, _ts(action))
end

--- 0x6EAAEFC76ACC311F
function Global.N_0x6eaaefc76acc311f(p0)
	return _in(0x6EAAEFC76ACC311F, p0, _ri)
end

--- 0x6EBFB22D646FFC18
function Global.N_0x6ebfb22d646ffc18(vehicle, p1)
	return _in(0x6EBFB22D646FFC18, vehicle, p1)
end

--- Sets bit 3 in GtaThread+0x150
-- SET_T*
function Global.N_0x6f2135b6129620c1(toggle)
	return _in(0x6F2135B6129620C1, toggle)
end

--- 0x6F361B8889A792A3
function Global.N_0x6f361b8889a792a3()
	return _in(0x6F361B8889A792A3)
end

--- 0x6FB7BB3607D27FA2
-- @return Hard-coded to always return 0.
function Global.N_0x6fb7bb3607d27fa2()
	return _in(0x6FB7BB3607D27FA2, _ri)
end

--- This function is hard-coded to always return 1.
function Global.N_0x6fcf8ddea146c45b(p0)
	return _in(0x6FCF8DDEA146C45B, p0, _r)
end

--- 0x6FD97159FE3C971A
function Global.N_0x6fd97159fe3c971a(p0, p1, p2, p3)
	return _in(0x6FD97159FE3C971A, p0, p1, p2, p3)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0x6fd992c4a1c1b986()
	return _in(0x6FD992C4A1C1B986)
end

--- HAS_*
-- Probably something like "has game been started for the first time".
function Global.N_0x6fddf453c0c756ec()
	return _in(0x6FDDF453C0C756EC, _r)
end

--- Clears the fields sets by [N\_0xc7f29ca00f46350e](#\_0xC7F29CA00F46350E) (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
-- Related to its "Pre-networked state"?
function Global.N_0x701fda1e82076ba4()
	return _in(0x701FDA1E82076BA4)
end

--- 0x702BC4D605522539
function Global.N_0x702bc4d605522539(p0)
	return _in(0x702BC4D605522539, p0)
end

--- 0x7033EEFD9B28088E
function Global.N_0x7033eefd9b28088e(p0)
	return _in(0x7033EEFD9B28088E, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x703cc7f60cbb2b57(p0)
	return _in(0x703CC7F60CBB2B57, p0)
end

--- 0x705A276EBFF3133D
function Global.N_0x705a276ebff3133d()
	return _in(0x705A276EBFF3133D, _r)
end

--- NativeDB Introduced: v1604
function Global.N_0x70a382adec069dd3(coordX, coordY, coordZ)
	return _in(0x70A382ADEC069DD3, coordX, coordY, coordZ)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: int* p1
-- NativeDB Introduced: v323
function Global.N_0x710bcda8071eded1()
	return _in(0x710BCDA8071EDED1, _r)
end

--- 0x711794453CFD692B
function Global.N_0x711794453cfd692b(p0, p1)
	return _in(0x711794453CFD692B, p0, p1)
end

--- NativeDB Introduced: v1604
function Global.N_0x7148e0f43d11f0d9()
	return _in(0x7148E0F43D11F0D9)
end

--- 0x71B008056E5692D6
function Global.N_0x71b008056e5692d6()
	return _in(0x71B008056E5692D6)
end

--- 0x71E7B2E657449AAD
function Global.N_0x71e7b2e657449aad()
	return _in(0x71E7B2E657449AAD, _ri)
end

--- 0x723C1CE13FBFDB67
function Global.N_0x723c1ce13fbfdb67(p0, p1)
	return _in(0x723C1CE13FBFDB67, p0, p1)
end

--- Jenkins hash _might_ be 0xFC227584.
function Global.N_0x7241ccb7d020db69(entity, toggle)
	return _in(0x7241CCB7D020DB69, entity, toggle)
end

--- Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`.
-- Unknown what it does, couldn't find good examples in the decompiled scripts.
function Global.N_0x725012a415dba050(p0, p2)
	return _in(0x725012A415DBA050, p0, _i, p2, _ri)
end

--- _RESET_*
-- _RESET_GAMEPLAY_CAM_RELATIVE_ORBIT_HOLD_TIME?
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.N_0x7295c203dd659dfe()
	return _in(0x7295C203DD659DFE)
end

--- 0x72BECCF4B829522E
function Global.N_0x72beccf4b829522e(p0, p1)
	return _in(0x72BECCF4B829522E, p0, p1)
end

--- 0x72EB7BA9B69BF6AB
function Global.N_0x72eb7ba9b69bf6ab()
	return _in(0x72EB7BA9B69BF6AB, _r)
end

--- 0x73001E34F85137F8
function Global.N_0x73001e34f85137f8(p0)
	return _in(0x73001E34F85137F8, p0)
end

--- 0x733C87D4CE22BEA2
function Global.N_0x733c87d4ce22bea2(ped)
	return _in(0x733C87D4CE22BEA2, ped)
end

--- NativeDB Introduced: v1604
function Global.N_0x734e1714d077da9a(p0, p1)
	return _in(0x734E1714D077DA9A, p0, p1)
end

--- 0x73561D4425A021A2
function Global.N_0x73561d4425a021a2(p0, p1)
	return _in(0x73561D4425A021A2, p0, p1)
end

--- 0x737E398138550FFF
function Global.N_0x737e398138550fff(vehicle, toggle)
	return _in(0x737E398138550FFF, vehicle, toggle)
end

--- Has something to do with a host request.
-- NETWORK_RE*
function Global.N_0x741a3d8380319a81()
	return _in(0x741A3D8380319A81)
end

--- 0x742B58F723233ED9
function Global.N_0x742b58f723233ed9(p0)
	return _in(0x742B58F723233ED9, p0, _ri)
end

--- NET_GAMESERVER_*
function Global.N_0x74a0fd0688f1ee45(p0)
	return _in(0x74A0FD0688F1EE45, p0, _ri)
end

--- Hardcoded to return zero.
-- ==== PS4 specific info ====
-- Returns some sort of unavailable reason:
-- -1 = REASON_INVALID
-- 0 = REASON_OTHER
-- 1 = REASON_SYSTEM_UPDATE
-- 2 = REASON_GAME_UPDATE
-- 3 = REASON_SIGNED_OUT
-- 4 = REASON_AGE
-- 5 = REASON_CONNECTION
-- =================================
-- @return Hard-coded to always return 0.
function Global.N_0x74fb3e29e6d10fa9()
	return _in(0x74FB3E29E6D10FA9, _ri)
end

--- Checks some commerce stuff
-- NativeDB Introduced: v1290
function Global.N_0x754615490a029508()
	return _in(0x754615490A029508, _ri)
end

--- 0x759650634F07B6B4
function Global.N_0x759650634f07b6b4(p0)
	return _in(0x759650634F07B6B4, p0, _r)
end

--- REQUEST_*
function Global.N_0x75ba1cb3b7d40caf(ped, p1)
	return _in(0x75BA1CB3B7D40CAF, ped, p1)
end

--- Sets bit 1 in GtaThread+0x154
-- BG_*
-- NativeDB Introduced: v323
function Global.N_0x760910b49d2b98ea()
	return _in(0x760910B49D2B98EA)
end

--- 0x762DB2D380B48D04
function Global.N_0x762db2d380b48d04(p0)
	return _in(0x762DB2D380B48D04, p0)
end

--- NativeDB Introduced: v2189
function Global.N_0x76b3f29d3f967692(p0, p1)
	return _in(0x76B3F29D3F967692, p0, p1)
end

--- SET_VEHICLE_*
function Global.N_0x76d26a22750e849e(vehicle)
	return _in(0x76D26A22750E849E, vehicle)
end

--- 0x77FADDCBE3499DF7
function Global.N_0x77faddcbe3499df7(p0)
	return _in(0x77FADDCBE3499DF7, p0)
end

--- 0x7808619F31FF22DB
-- @return Hard-coded to always return 1.
function Global.N_0x7808619f31ff22db()
	return _in(0x7808619F31FF22DB, _ri)
end

--- SET_PICKUP_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x7813e8b8c4ae4799(pickup)
	return _in(0x7813E8B8C4AE4799, pickup)
end

--- 0x78321BEA235FD8CD
function Global.N_0x78321bea235fd8cd(p0, p1)
	return _in(0x78321BEA235FD8CD, p0, p1, _r)
end

--- 0x78CEEE41F49F421F
function Global.N_0x78ceee41f49f421f(p0, p1)
	return _in(0x78CEEE41F49F421F, p0, p1)
end

--- Related to cutscene entities. Unsure about the use.
-- SET_ENTITY_*
function Global.N_0x78e8e3a640178255(entity)
	return _in(0x78E8E3A640178255, entity)
end

--- 0x793FF272D5B365F4
function Global.N_0x793ff272d5b365f4()
	return _in(0x793FF272D5B365F4, _ri)
end

--- 0x796A877E459B99EA
function Global.N_0x796a877e459b99ea(p0, p1, p2, p3)
	return _in(0x796A877E459B99EA, p0, p1, p2, p3)
end

--- Sets profile setting 940 and 941
-- _SET_F* - _SET_G*
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.N_0x79d310a861697cc9(profileSetting, settingValue)
	return _in(0x79D310A861697CC9, profileSetting, settingValue)
end

--- NET_GAMESERVER_*
-- Checks if the transaction status is equal to 3.
-- NativeDB Introduced: v1365
function Global.N_0x79edac677ca62f81(transactionId)
	return _in(0x79EDAC677CA62F81, transactionId, _r)
end

--- UI3DSCENE_*
function Global.N_0x7a42b2e236e71415()
	return _in(0x7A42B2E236E71415)
end

--- 0x7AC24EAB6D74118D
function Global.N_0x7ac24eab6d74118d(p0)
	return _in(0x7AC24EAB6D74118D, p0, _r)
end

--- 0x7B18DA61F6BAE9D5
function Global.N_0x7b18da61f6bae9d5(p0)
	return _in(0x7B18DA61F6BAE9D5, p0)
end

--- 0x7B8A361C1813FBEF
function Global.N_0x7b8a361c1813fbef()
	return _in(0x7B8A361C1813FBEF)
end

--- NativeDB Introduced: v1290
function Global.N_0x7bae68775557ae0b(p0, p1, p2, p3, p4, p5)
	return _in(0x7BAE68775557AE0B, p0, p1, p2, p3, p4, p5)
end

--- 0x7BBE7FF626A591FE
function Global.N_0x7bbe7ff626a591fe(p0)
	return _in(0x7BBE7FF626A591FE, p0)
end

--- 0x7C226D5346D4D10A
function Global.N_0x7c226d5346d4d10a(p0)
	return _in(0x7C226D5346D4D10A, p0)
end

--- 0x7C4FCCD2E4DEB394
function Global.N_0x7c4fccd2e4deb394()
	return _in(0x7C4FCCD2E4DEB394, _r)
end

--- 0x7D36291161859389
function Global.N_0x7d36291161859389(p0)
	return _in(0x7D36291161859389, p0)
end

--- 0x7D395EA61622E116
function Global.N_0x7d395ea61622e116(p0)
	return _in(0x7D395EA61622E116, p0)
end

--- SET_VEHICLE_AL*
function Global.N_0x7d6f9a3ef26136a0(vehicle, toggle, p2)
	return _in(0x7D6F9A3EF26136A0, vehicle, toggle, p2)
end

--- 0x7D8BA05688AD64C7
function Global.N_0x7d8ba05688ad64c7(p0)
	return _in(0x7D8BA05688AD64C7, p0)
end

--- 0x7DB18CA8CAD5B098
function Global.N_0x7db18ca8cad5b098()
	return _in(0x7DB18CA8CAD5B098, _ri)
end

--- 0x7DB53B37A2F211A0
function Global.N_0x7db53b37a2f211a0()
	return _in(0x7DB53B37A2F211A0, _ri)
end

--- 0x7E07C78925D5FD96
function Global.N_0x7e07c78925d5fd96(p0)
	return _in(0x7E07C78925D5FD96, p0, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Something to do with phone cameras.
-- startup.c4:
-- void sub_2a3d() {
-- UNK2::_7E2BD3EF6C205F09("No_Filter", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);
-- }
-- ```
function Global.N_0x7e2bd3ef6c205f09(p0, p1)
	return _in(0x7E2BD3EF6C205F09, _ts(p0), p1)
end

--- 0x7E6946F68A38B74F
function Global.N_0x7e6946f68a38b74f(p0)
	return _in(0x7E6946F68A38B74F, p0, _r)
end

--- Possibly used to clear scenario points.
-- CLEAR_*
function Global.N_0x7ec6f9a478a6a512()
	return _in(0x7EC6F9A478A6A512)
end

--- NativeDB Introduced: v1604
function Global.N_0x7ecdf98587e92dec(p0)
	return _in(0x7ECDF98587E92DEC, p0)
end

--- _PLAYSTATS_ROB_ARMOURD_TRUCK
function Global.N_0x7eec2a316c250073(p0, p1, p2)
	return _in(0x7EEC2A316C250073, p0, p1, p2)
end

--- IS_*
function Global.N_0x7ef7649b64d7ff10(entity)
	return _in(0x7EF7649B64D7FF10, entity, _r)
end

--- 0x7F2C4CDF2E82DF4C
function Global.N_0x7f2c4cdf2e82df4c(p0)
	return _in(0x7F2C4CDF2E82DF4C, p0, _r)
end

--- 0x7F8F6405F4777AF6
function Global.N_0x7f8f6405f4777af6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x7F8F6405F4777AF6, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _rf)
end

--- SET_VEHICLE_*
function Global.N_0x7f96f23fa9b73327(modelHash)
	return _in(0x7F96F23FA9B73327, _ch(modelHash))
end

--- 0x7FA5D82B8F58EC06
function Global.N_0x7fa5d82b8f58ec06()
	return _in(0x7FA5D82B8F58EC06, _r)
end

--- 0x7FCC39C46C3C03BD
function Global.N_0x7fcc39c46c3c03bd(p0)
	return _in(0x7FCC39C46C3C03BD, p0, _r)
end

--- NativeDB Introduced: v323
function Global.N_0x7ffcbfee44ecfabf()
	return _in(0x7FFCBFEE44ECFABF, _ri)
end

--- CLEAR_PED_*
function Global.N_0x80054d7fcc70eec6(ped)
	return _in(0x80054D7FCC70EEC6, ped)
end

--- IS_*
function Global.N_0x801879a9b4f4b2fb()
	return _in(0x801879A9B4F4B2FB, _r)
end

--- 0x80E3357FDEF45C21
function Global.N_0x80e3357fdef45c21(vehicle, toggle)
	return _in(0x80E3357FDEF45C21, vehicle, toggle)
end

--- NativeDB Introduced: v1868
function Global.N_0x810b5fcc52ec7ff0(p0, p1, p2, p3)
	return _in(0x810B5FCC52EC7FF0, p0, p1, p2, p3)
end

--- 0x814AF7DCAACC597B
function Global.N_0x814af7dcaacc597b(p0)
	return _in(0x814AF7DCAACC597B, p0)
end

--- UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);
function Global.N_0x817b86108eb94e51(p0)
	return _in(0x817B86108EB94E51, p0, _i, _i, _i, _i, _i, _i, _i, _i)
end

--- 0x81CBAE94390F9F89
function Global.N_0x81cbae94390f9f89()
	return _in(0x81CBAE94390F9F89)
end

--- 0x820E9892A77E97CD
function Global.N_0x820e9892a77e97cd(p0, p1)
	return _in(0x820E9892A77E97CD, p0, p1)
end

--- NativeDB Introduced: v1180
function Global.N_0x8235f1bead557629(vehicle, toggle)
	return _in(0x8235F1BEAD557629, vehicle, toggle)
end

--- NativeDB Introduced: v2060
function Global.N_0x823ec8e82ba45986(p0)
	return _in(0x823EC8E82BA45986, p0)
end

--- Only found 2 times in decompiled scripts. Not a whole lot to go off of.
-- MISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
-- MISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
function Global.N_0x8269816f6cfd40f8(name)
	return _in(0x8269816F6CFD40F8, _i, _ts(name))
end

--- 0x826D1EE4D1CAFC78
function Global.N_0x826d1ee4d1cafc78(p0, p1)
	return _in(0x826D1EE4D1CAFC78, p0, p1)
end

--- BG_*
-- NativeDB Introduced: v323
function Global.N_0x829cd22e043a2577(p0)
	return _in(0x829CD22E043A2577, _ch(p0), _ri)
end

--- 0x82ACC484FFA3B05F
function Global.N_0x82acc484ffa3b05f(p0)
	return _in(0x82ACC484FFA3B05F, p0, _ri)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
function Global.N_0x82e0ac411e41a5b4(toggle)
	return _in(0x82E0AC411E41A5B4, toggle)
end

--- 0x82EBB79E258FA2B7
function Global.N_0x82ebb79e258fa2b7(entity, interiorID)
	return _in(0x82EBB79E258FA2B7, entity, interiorID)
end

--- NativeDB Introduced: v1493
function Global.N_0x830c3a44eb3f2cf9(p0)
	return _in(0x830C3A44EB3F2CF9, p0)
end

--- NativeDB Introduced: v2372
function Global.N_0x834344a414c7c85d(p0, p1)
	return _in(0x834344A414C7C85D, p0, p1)
end

--- 0x83660B734994124D
function Global.N_0x83660b734994124d(p0, p1, damageDealt)
	return _in(0x83660B734994124D, p0, p1, _ii(damageDealt) --[[ may be optional ]], _ri)
end

--- Returns true if bit 0 in GtaThread+0x154 is set.
-- BG_*
-- NativeDB Introduced: v323
function Global.N_0x836b62713e0534ca()
	return _in(0x836B62713E0534CA, _r)
end

--- 0x83FE8D7229593017
function Global.N_0x83fe8d7229593017()
	return _in(0x83FE8D7229593017)
end

--- NativeDB Introduced: v1290
function Global.N_0x8410c5e0cd847b9d()
	return _in(0x8410C5E0CD847B9D)
end

--- NativeDB Introduced: v1493
function Global.N_0x8423541e8b3a1589(p0, p1, p2)
	return _in(0x8423541E8B3A1589, p0, p1, p2)
end

--- 0x84A810B375E69C0E
function Global.N_0x84a810b375e69c0e()
	return _in(0x84A810B375E69C0E, _ri)
end

--- NativeDB Introduced: v2372
function Global.N_0x84b418e93894ac1c()
	return _in(0x84B418E93894AC1C, _ri)
end

--- 0x84DE3B5FB3E666F0
function Global.N_0x84de3b5fb3e666f0(ropeId)
	return _in(0x84DE3B5FB3E666F0, _ii(ropeId) --[[ may be optional ]], _r)
end

--- 0x84DFC579C2FC214C
function Global.N_0x84dfc579c2fc214c(p0)
	return _in(0x84DFC579C2FC214C, p0)
end

--- 0x851CD923176EBA7C
function Global.N_0x851cd923176eba7c()
	return _in(0x851CD923176EBA7C)
end

--- 0x8533CAFDE1F0F336
function Global.N_0x8533cafde1f0f336(p0)
	return _in(0x8533CAFDE1F0F336, p0, _ri)
end

--- 0x858EC9FD25DE04AA
function Global.N_0x858ec9fd25de04aa(p0, p1)
	return _in(0x858EC9FD25DE04AA, p0, p1)
end

--- 0x85F6C9ABA1DE2BCF
function Global.N_0x85f6c9aba1de2bcf()
	return _in(0x85F6C9ABA1DE2BCF, _ri)
end

--- NativeDB Introduced: v1493
function Global.N_0x8634cef2522d987b(ped, p1, value)
	return _in(0x8634CEF2522D987B, ped, _ts(p1), value)
end

--- NativeDB Introduced: v2189
function Global.N_0x8664170ef165c4a6(p0, p1)
	return _in(0x8664170EF165C4A6, p0, p1)
end

--- NativeDB Introduced: v1868
function Global.N_0x870289a558348378(p0, p1, p2, p3)
	return _in(0x870289A558348378, p0, p1, p2, p3)
end

--- 0x870B8B7A766615C8
function Global.N_0x870b8b7a766615c8(p0, p1, p2)
	return _in(0x870B8B7A766615C8, p0, p1, p2)
end

--- SET_A*
function Global.N_0x87ddeb611b329a9c(multiplier)
	return _in(0x87DDEB611B329A9C, multiplier)
end

--- 0x88087EE1F28024AE
function Global.N_0x88087ee1f28024ae(p0)
	return _in(0x88087EE1F28024AE, p0)
end

--- NativeDB Introduced: v1290
function Global.N_0x8821196d91fa2de5(vehicle, toggle)
	return _in(0x8821196D91FA2DE5, vehicle, toggle)
end

--- 0x88578F6EC36B4A3A
function Global.N_0x88578f6ec36b4a3a(p0, p1)
	return _in(0x88578F6EC36B4A3A, p0, p1, _ri)
end

--- NativeDB Introduced: v1365
function Global.N_0x887fa38787de8c72(vehicle)
	return _in(0x887FA38787DE8C72, vehicle)
end

--- NativeDB Added Parameter 2: Any p1
function Global.N_0x8881c98a31117998(p0)
	return _in(0x8881C98A31117998, p0)
end
Global.N_0xa90e7227a9303fa9 = Global.N_0x8881c98a31117998

--- 0x88B588B41FF7868E
-- @return Hard-coded to always return 0.
function Global.N_0x88b588b41ff7868e()
	return _in(0x88B588B41FF7868E, _ri)
end

--- 0x88BC673CA9E0AE99
function Global.N_0x88bc673ca9e0ae99(vehicle, p1)
	return _in(0x88BC673CA9E0AE99, vehicle, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x8951eb9c6906d3c8()
	return _in(0x8951EB9C6906D3C8)
end

--- 0x8989CBD7B4E82534
function Global.N_0x8989cbd7b4e82534(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x8989CBD7B4E82534, p0, p1, p2, p3, p4, p5, p6)
end

--- NativeDB Introduced: v1290
function Global.N_0x8a4416c0db05fa66(newsStoryData)
	return _in(0x8A4416C0DB05FA66, _ii(newsStoryData) --[[ may be optional ]], _r)
end

--- 0x8B0C2964BA471961
-- @return Hard-coded to always return 0.
function Global.N_0x8b0c2964ba471961()
	return _in(0x8B0C2964BA471961, _ri)
end

--- 0x8B4FFC790CA131EF
function Global.N_0x8b4ffc790ca131ef(p0, p1, p2, p3)
	return _in(0x8B4FFC790CA131EF, p0, p1, p2, p3, _ri)
end

--- 0x8B9CDBD6C566C38C
function Global.N_0x8b9cdbd6c566c38c()
	return _in(0x8B9CDBD6C566C38C, _ri)
end

--- 0x8BF907833BE275DE
function Global.N_0x8bf907833be275de(p0, p1)
	return _in(0x8BF907833BE275DE, p0, p1)
end

--- 0x8C8D2739BA44AF0F
function Global.N_0x8c8d2739ba44af0f(p0)
	return _in(0x8C8D2739BA44AF0F, p0, _r)
end

--- 0x8C9D11605E59D955
function Global.N_0x8c9d11605e59d955(p0)
	return _in(0x8C9D11605E59D955, p0)
end

--- 0x8CAAB2BD3EA58BD4
function Global.N_0x8caab2bd3ea58bd4(p0)
	return _in(0x8CAAB2BD3EA58BD4, p0)
end

--- 0x8CC469AB4D349B7C
function Global.N_0x8cc469ab4d349b7c(p0, p1, p2)
	return _in(0x8CC469AB4D349B7C, p0, _ts(p1), _ii(p2) --[[ may be optional ]], _r)
end

--- Used only once in the scripts (taxi_clowncar)
-- SET_PARTICLE_FX_*
function Global.N_0x8cde909a0370bb3a(toggle)
	return _in(0x8CDE909A0370BB3A, toggle)
end

--- NativeDB Introduced: v757
function Global.N_0x8cff648fbd7330f1(p0)
	return _in(0x8CFF648FBD7330F1, p0)
end

--- I*
function Global.N_0x8d74e26f54b4e5c3(p0)
	return _in(0x8D74E26F54B4E5C3, _ts(p0))
end

--- SET_PLAYER_MAX_*
function Global.N_0x8d768602adef2245(player, p1)
	return _in(0x8D768602ADEF2245, player, p1)
end

--- 0x8D8ADB562F09A245
function Global.N_0x8d8adb562f09a245(p0)
	return _in(0x8D8ADB562F09A245, p0)
end

--- SET_SCRIPT_*
-- Sets the cutscene's owning thread ID.
function Global.N_0x8d9df6eca8768583(threadId)
	return _in(0x8D9DF6ECA8768583, threadId)
end

--- NativeDB Introduced: v1180
function Global.N_0x8dca505a5c196f05(p0, p1)
	return _in(0x8DCA505A5C196F05, p0, p1)
end

--- 0x8E243837643D9583
function Global.N_0x8e243837643d9583(p0, p1, p2, p3)
	return _in(0x8E243837643D9583, p0, p1, p2, p3)
end

--- 0x8EC74CEB042E7CFF
function Global.N_0x8ec74ceb042e7cff(p0)
	return _in(0x8EC74CEB042E7CFF, p0)
end

--- NETWORK_SET_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x8ef52acaecc51d9c(toggle)
	return _in(0x8EF52ACAECC51D9C, toggle)
end

--- 0x8F08017F9D7C47BD
function Global.N_0x8f08017f9d7c47bd(p0, p2)
	return _in(0x8F08017F9D7C47BD, p0, _i, p2, _r)
end

--- NativeDB Introduced: v1604
function Global.N_0x8f0d5ba1c2cc91d7(toggle)
	return _in(0x8F0D5BA1C2CC91D7, toggle)
end

--- NativeDB Introduced: v1493
function Global.N_0x906ca41a4b74eca4()
	return _in(0x906CA41A4B74ECA4, _ri)
end

--- NativeDB Introduced: v323
function Global.N_0x908311265d42a820(p0)
	return _in(0x908311265D42A820, p0)
end

--- ADD_\*
-- ```
-- NativeDB Introduced: v1868
-- ```
function Global.N_0x9097eb6d4bb9a12a(player, entity)
	return _in(0x9097EB6D4BB9A12A, player, entity)
end

--- NativeDB Introduced: v2189
function Global.N_0x90cd7c6871fbf1b4(p0, p1, p2, p3)
	return _in(0x90CD7C6871FBF1B4, p0, p1, p2, p3)
end

--- Does nothing (it's a nullsub). Seems to be PS4 specific.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.N_0x916ca67d26fd1e37(p0)
	return _in(0x916CA67D26FD1E37, _ts(p0))
end

--- 0x91EF6EE6419E5B97
function Global.N_0x91ef6ee6419e5b97(p0)
	return _in(0x91EF6EE6419E5B97, p0)
end

--- 0x9237E334F6E43156
function Global.N_0x9237e334f6e43156(p0)
	return _in(0x9237E334F6E43156, p0, _ri)
end

--- 0x92DA6E70EF249BD1
function Global.N_0x92da6e70ef249bd1(p0, p1)
	return _in(0x92DA6E70EF249BD1, _ts(p0), _ii(p1) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1868
function Global.N_0x92fc0eedfac04a14(p0, p1, p2, p3, p4, p5)
	return _in(0x92FC0EEDFAC04A14, p0, p1, p2, p3, p4, p5)
end

--- 0x930F504203F561C9
function Global.N_0x930f504203f561c9(p0)
	return _in(0x930F504203F561C9, p0)
end

--- Probably IS_SWITCH_*
function Global.N_0x933bbeeb8c61b5f4()
	return _in(0x933BBEEB8C61B5F4, _r)
end

--- 0x94538037EE44F5CF
function Global.N_0x94538037ee44f5cf(p0)
	return _in(0x94538037EE44F5CF, p0)
end

--- 0x9465E683B12D3F6B
function Global.N_0x9465e683b12d3f6b()
	return _in(0x9465E683B12D3F6B)
end

--- 0x9489659372A81585
-- @return Hard-coded to always return 0.
function Global.N_0x9489659372a81585()
	return _in(0x9489659372A81585, _r)
end

--- 0x949F397A288B28B3
function Global.N_0x949f397a288b28b3(p0)
	return _in(0x949F397A288B28B3, p0)
end

--- 0x95A7DABDDBB78AE7
function Global.N_0x95a7dabddbb78ae7(iplName1, iplName2)
	return _in(0x95A7DABDDBB78AE7, _ts(iplName1), _ts(iplName2))
end

--- NativeDB Introduced: v1604
function Global.N_0x95baf97c82464629(p0, p1)
	return _in(0x95BAF97C82464629, p0, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0x9640e30a7f395e4b(vehicle, p1, p2, p3, p4)
	return _in(0x9640E30A7F395E4B, vehicle, p1, p2, p3, p4)
end

--- 0x9641588DAB93B4B5
function Global.N_0x9641588dab93b4b5(p0)
	return _in(0x9641588DAB93B4B5, p0)
end

--- Returns some sort of index/offset for components.
-- Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
-- ```
-- NativeDB Introduced: v2189
-- ```
function Global.N_0x96e2929292a4db77(componentHash)
	return _in(0x96E2929292A4DB77, _ch(componentHash), _ri)
end

--- 0x96E6D5150DBF1C09
function Global.N_0x96e6d5150dbf1c09(p0, p1, p2)
	return _in(0x96E6D5150DBF1C09, p0, p1, p2)
end

--- 0x973D76AA760A6CB6
function Global.N_0x973d76aa760a6cb6(p0)
	return _in(0x973D76AA760A6CB6, p0)
end

--- SET_WEAPON_OBJECT_*
function Global.N_0x977ca98939e82e4b(weaponObject, p1)
	return _in(0x977CA98939E82E4B, weaponObject, p1)
end

--- NativeDB Introduced: v1180
function Global.N_0x97841634ef7df1d6(vehicle, toggle)
	return _in(0x97841634EF7DF1D6, vehicle, toggle)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x97e7e2c04245115b(p0)
	return _in(0x97E7E2C04245115B, p0)
end

--- NativeDB Introduced: v2372
function Global.N_0x97ffb4adeed08066(p0, p1)
	return _in(0x97FFB4ADEED08066, p0, p1)
end

--- NativeDB Introduced: v1604
function Global.N_0x9849de24fcf23ccc(vehicle, toggle)
	return _in(0x9849DE24FCF23CCC, vehicle, toggle)
end

--- GET_F*
function Global.N_0x98c3cf913d895111(string, length)
	return _in(0x98C3CF913D895111, _ts(string), length, _s)
end

--- NativeDB Introduced: v1493
function Global.N_0x98d18905bf723b99()
	return _in(0x98D18905BF723B99, _ri)
end

--- 0x98E2BC1CA26287C3
function Global.N_0x98e2bc1ca26287c3()
	return _in(0x98E2BC1CA26287C3)
end

--- REQUEST_*
function Global.N_0x98edf76a7271e4f2()
	return _in(0x98EDF76A7271E4F2)
end

--- 0x9911F4A24485F653
function Global.N_0x9911f4a24485f653(p0)
	return _in(0x9911F4A24485F653, p0)
end

--- 0x998E18CEB44487FC
function Global.N_0x998e18ceb44487fc(p0, p1, p2, p3)
	return _in(0x998E18CEB44487FC, p0, p1, p2, p3)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
function Global.N_0x99a05839c46ce316(toggle)
	return _in(0x99A05839C46CE316, toggle)
end

--- 0x99CAD8E7AFDB60FA
function Global.N_0x99cad8e7afdb60fa(vehicle, p1, p2)
	return _in(0x99CAD8E7AFDB60FA, vehicle, p1, p2)
end

--- 0x9A62EC95AE10E011
function Global.N_0x9a62ec95ae10e011()
	return _in(0x9A62EC95AE10E011, _ri)
end

--- 0x9A77DFD295E29B09
function Global.N_0x9a77dfd295e29b09(ped, toggle)
	return _in(0x9A77DFD295E29B09, ped, toggle)
end

--- 0x9AC92EED5E4793AB
function Global.N_0x9ac92eed5e4793ab()
	return _in(0x9AC92EED5E4793AB)
end

--- FORCE_*
function Global.N_0x9b079e5221d984d3(p0)
	return _in(0x9B079E5221D984D3, p0)
end

--- 0x9B4BD21D69B1E609
function Global.N_0x9b4bd21d69b1e609()
	return _in(0x9B4BD21D69B1E609)
end

--- Hardcoded to return 0.
-- NativeDB Introduced: v323
function Global.N_0x9b5016a6433a68c5()
	return _in(0x9B5016A6433A68C5, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0x9bd7bd55e4533183(p0, p1, p2)
	return _in(0x9BD7BD55E4533183, p0, p1, p2)
end

--- 0x9BDDC73CC6A115D4
function Global.N_0x9bddc73cc6a115d4(vehicle, p1, p2)
	return _in(0x9BDDC73CC6A115D4, vehicle, p1, p2)
end

--- 0x9BECD4B9FEF3F8A6
function Global.N_0x9becd4b9fef3f8a6(vehicle, p1)
	return _in(0x9BECD4B9FEF3F8A6, vehicle, p1)
end

--- 0x9C6A6C19B6C0C496
function Global.N_0x9c6a6c19b6c0c496(ped, p1)
	return _in(0x9C6A6C19B6C0C496, ped, _ii(p1) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1868
function Global.N_0x9d252648778160df(p0)
	return _in(0x9D252648778160DF, p0, _ri)
end

--- 0x9D30687C57BAA0BB
function Global.N_0x9d30687c57baa0bb(p0)
	return _in(0x9D30687C57BAA0BB, p0)
end

--- SET_H*
function Global.N_0x9d3af56e94c9ae98(vehicle, p1)
	return _in(0x9D3AF56E94C9AE98, vehicle, p1)
end

--- NativeDB Introduced: v2189
function Global.N_0x9d724b400a7e8ffc(p0, p1)
	return _in(0x9D724B400A7E8FFC, p0, p1)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function Global.N_0x9d7afcbf21c51712(toggle)
	return _in(0x9D7AFCBF21C51712, toggle)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Introduced: v323
function Global.N_0x9de5d2f723575ed0()
	return _in(0x9DE5D2F723575ED0, _r)
end

--- SET_FOLLOW_*
function Global.N_0x9dfe13ecdc1ec196(p0, p1)
	return _in(0x9DFE13ECDC1EC196, p0, p1)
end
Global.SetTimeIdleDrop = Global.N_0x9dfe13ecdc1ec196

--- 0x9E30E91FB03A2CAF
function Global.N_0x9e30e91fb03a2caf()
	return _in(0x9E30E91FB03A2CAF, _i, _i, _r)
end

--- DISABLE_*
function Global.N_0x9e6542f0ce8e70a3(toggle)
	return _in(0x9E6542F0CE8E70A3, toggle)
end

--- SET_*
function Global.N_0x9ebd751e5787baf2(p0)
	return _in(0x9EBD751E5787BAF2, p0)
end

--- 0x9EC8858184CD253A
function Global.N_0x9ec8858184cd253a()
	return _in(0x9EC8858184CD253A, _ri)
end

--- 0x9EDD76E87D5D51BA
function Global.N_0x9edd76e87d5d51ba(player)
	return _in(0x9EDD76E87D5D51BA, player)
end

--- REMOVE_\*
-- ```
-- NativeDB Introduced: v1868
-- ```
function Global.N_0x9f260bfb59adbca3(player, entity)
	return _in(0x9F260BFB59ADBCA3, player, entity)
end

--- 0x9F3F689B814F2599
function Global.N_0x9f3f689b814f2599(vehicle, p1)
	return _in(0x9F3F689B814F2599, vehicle, p1)
end

--- B\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x9f97da93681f87ea()
	return _in(0x9F97DA93681F87EA)
end

--- SET_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0x9fcb3cbfb3ead69a(p0, p1)
	return _in(0x9FCB3CBFB3EAD69A, p0, p1)
end

--- 0x9FEDF86898F100E9
function Global.N_0x9fedf86898f100e9()
	return _in(0x9FEDF86898F100E9, _ri)
end

--- Gets hash related to task happening with seat index
-- Native name: GET_I\*
function Global.N_0xa01bc64dd4bfbbac(vehicle, seatIndex)
	return _in(0xA01BC64DD4BFBBAC, vehicle, seatIndex, _ri)
end

--- 0xA08FE5E49BDC39DD
function Global.N_0xa08fe5e49bdc39dd(p0, p1, p2)
	return _in(0xA08FE5E49BDC39DD, p0, p1, p2)
end

--- NativeDB Introduced: v2189
function Global.N_0xa0ad167e4b39d9a2(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xA0AD167E4B39D9A2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, _ri)
end

--- 0xA0CEFCEA390AAB9B
function Global.N_0xa0cefcea390aab9b(p0)
	return _in(0xA0CEFCEA390AAB9B, p0)
end

--- 0xA0F93D5465B3094D
function Global.N_0xa0f93d5465b3094d(p0)
	return _in(0xA0F93D5465B3094D, _ii(p0) --[[ may be optional ]], _r)
end

--- 0xA0FA4EC6A05DA44E
-- @return Hard-coded to always return 0.
function Global.N_0xa0fa4ec6a05da44e()
	return _in(0xA0FA4EC6A05DA44E, _ri)
end

--- 0xA0FE76168A189DDB
function Global.N_0xa0fe76168a189ddb()
	return _in(0xA0FE76168A189DDB, _ri)
end

--- 0xA12D3A5A3753CC23
function Global.N_0xa12d3a5a3753cc23()
	return _in(0xA12D3A5A3753CC23, _ri)
end

--- 0xA17784FCA9548D15
function Global.N_0xa17784fca9548d15(p0, p1, p2)
	return _in(0xA17784FCA9548D15, p0, p1, p2)
end

--- ROPE_\*
-- ```
-- NativeDB Introduced: v1868
-- ```
function Global.N_0xa1ae736541b0fca3(p1)
	return _in(0xA1AE736541B0FCA3, _i, p1)
end

--- 0xA213B11DFF526300
-- @return Hard-coded to always return 1.
function Global.N_0xa213b11dff526300()
	return _in(0xA213B11DFF526300, _r)
end

--- 0xA238192F33110615
function Global.N_0xa238192f33110615()
	return _in(0xA238192F33110615, _i, _i, _i, _r)
end

--- 0xA247F9EF01D8082E
function Global.N_0xa247f9ef01d8082e(p0)
	return _in(0xA247F9EF01D8082E, p0)
end

--- 0xA2767257A320FC82
function Global.N_0xa2767257a320fc82(p0, p1)
	return _in(0xA2767257A320FC82, p0, p1)
end

--- CLEAR_*
function Global.N_0xa2c1f5e92afe49ed()
	return _in(0xA2C1F5E92AFE49ED)
end

--- 0xA2C9AC24B4061285
function Global.N_0xa2c9ac24b4061285(ped, weaponHash)
	return _in(0xA2C9AC24B4061285, ped, _ch(weaponHash), _ri)
end

--- Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
-- Example (XBOX 360):
-- // check current filter selection
-- if (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)
-- {
-- MOBILE::_0xC273BB4D(0); // FALSE
-- }
-- else
-- {
-- MOBILE::_0xC273BB4D(1); // TRUE
-- }
function Global.N_0xa2ccbe62cd4c91a4(toggle)
	return _in(0xA2CCBE62CD4C91A4, _ii(toggle) --[[ may be optional ]])
end

--- Appears to set whether a transition should be started when the session is migrating.
-- NETWORK_SET_*
function Global.N_0xa2e9c1ab8a92e8cd(toggle)
	return _in(0xA2E9C1AB8A92E8CD, toggle)
end

--- 0xA306F470D1660581
function Global.N_0xa306f470d1660581()
	return _in(0xA306F470D1660581, _ri)
end

--- 0xA3C53804BDB68ED2
function Global.N_0xa3c53804bdb68ed2(p0, p1)
	return _in(0xA3C53804BDB68ED2, p0, p1)
end

--- Only called once in the scripts:
-- if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {
-- if (sub_52e3("RESNA_CELLR", 0)) {
-- PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
-- PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
-- PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
-- l_184 += 1;
-- }
-- }
-- Checks something related to the mobile phone task.
-- IS_*
function Global.N_0xa3f3564a5b3646c0(ped)
	return _in(0xA3F3564A5B3646C0, ped, _r)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Introduced: v323
function Global.N_0xa468e0be12b12c70()
	return _in(0xA468E0BE12B12C70, _r)
end

--- 0xA46B73FAA3460AE1
function Global.N_0xa46b73faa3460ae1(p0)
	return _in(0xA46B73FAA3460AE1, p0)
end

--- 0xA4822F1CF23F4810
function Global.N_0xa4822f1cf23f4810(p3, p4, p5, p6, p7, p8)
	return _in(0xA4822F1CF23F4810, _v, _v, _v, p3, p4, p5, p6, p7, p8, _r)
end

--- GET_SAVE_*
-- GET_SAVE_UNLESS_CUSTOM_DOT ?
function Global.N_0xa4a0065e39c9f25c()
	return _in(0xA4A0065E39C9F25C, _v, _f, _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- NativeDB Introduced: v1604
function Global.N_0xa4a9a4c40e615885(p0)
	return _in(0xA4A9A4C40E615885, p0)
end

--- NativeDB Introduced: v2189
function Global.N_0xa51338e0dccd4065(p0, p1, p2)
	return _in(0xA51338E0DCCD4065, p0, p1, p2)
end

--- 0xA51B086B0B2C0F7A
function Global.N_0xa51b086b0b2c0f7a(p0, p1, p2, p3)
	return _in(0xA51B086B0B2C0F7A, p0, p1, p2, p3)
end

--- 0xA52D5247A4227E14
function Global.N_0xa52d5247a4227e14(p0)
	return _in(0xA52D5247A4227E14, p0)
end

--- 0xA660FAF550EB37E5
function Global.N_0xa660faf550eb37e5(p0, p1)
	return _in(0xA660FAF550EB37E5, p0, p1)
end

--- NativeDB Introduced: v2189
function Global.N_0xa6eef01087181edd(p0, p1)
	return _in(0xA6EEF01087181EDD, p0, p1, _ri)
end

--- 0xA6F54BB2FFCA35EA
function Global.N_0xa6f54bb2ffca35ea(p0)
	return _in(0xA6F54BB2FFCA35EA, p0)
end

--- NativeDB Introduced: v1604
function Global.N_0xa6fceccf4721d679(p0)
	return _in(0xA6FCECCF4721D679, p0)
end

--- NativeDB Introduced: v2189
function Global.N_0xa7092afe81944852()
	return _in(0xA7092AFE81944852)
end

--- 0xA736CF7FB7C5BFF4
function Global.N_0xa736cf7fb7c5bff4()
	return _in(0xA736CF7FB7C5BFF4, _i, _i, _i, _i)
end

--- 0xA761D4AC6115623D
function Global.N_0xa761d4ac6115623d()
	return _in(0xA761D4AC6115623D, _ri)
end

--- 0xA7862BC5ED1DFD7E
function Global.N_0xa7862bc5ed1dfd7e(p0, p1)
	return _in(0xA7862BC5ED1DFD7E, p0, p1, _i, _i, _r)
end

--- STATS::0xE3247582(0);
-- STATS::0xE3247582(1);
-- STATS::0xE3247582(2);
-- STATS::0xE3247582(3);
-- STATS::0xE3247582(4);
-- STATS::0xE3247582(5);
-- STATS::0xE3247582(6);
function Global.N_0xa78b8fa58200da56(p0)
	return _in(0xA78B8FA58200DA56, p0)
end

--- 0xA7DCDF4DED40A8F4
function Global.N_0xa7dcdf4ded40a8f4(vehicle, p1)
	return _in(0xA7DCDF4DED40A8F4, vehicle, p1)
end

--- Some property related to gates. Native name between `DOOR_SYSTEM_SET_AUTOMATIC_RATE` and `DOOR_SYSTEM_SET_DOOR_STATE`.
function Global.N_0xa85a21582451e951(doorHash, p1)
	return _in(0xA85A21582451E951, _ch(doorHash), p1)
end

--- 0xA8733668D1047B51
function Global.N_0xa8733668d1047b51(p0)
	return _in(0xA8733668D1047B51, p0)
end

--- 0xA8ACB6459542A8C8
function Global.N_0xa8acb6459542a8c8()
	return _in(0xA8ACB6459542A8C8, _ri)
end

--- 0xA943FD1722E11EFD
function Global.N_0xa943fd1722e11efd()
	return _in(0xA943FD1722E11EFD, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0xa95cfb4e02390842(p0, p1, p2)
	return _in(0xA95CFB4E02390842, p0, p1, p2)
end

--- 0xA95F667A755725DA
function Global.N_0xa95f667a755725da(p0, p1, p2, p3)
	return _in(0xA95F667A755725DA, p0, p1, p2, p3)
end

--- 0xA9B61A329BFDCBEA
function Global.N_0xa9b61a329bfdcbea(p0, p1)
	return _in(0xA9B61A329BFDCBEA, p0, p1)
end

--- NativeDB Introduced: v1180
function Global.N_0xaa059c615de9dd03(p0, p1)
	return _in(0xAA059C615DE9DD03, p0, p1)
end

--- 0xAA525DFF66BB82F5
function Global.N_0xaa525dff66bb82f5(p0, p1, p2)
	return _in(0xAA525DFF66BB82F5, p0, p1, p2)
end

--- NativeDB Added Parameter 1: Entity entity
function Global.N_0xaa5fafcd2c5f5e47()
	return _in(0xAA5FAFCD2C5F5E47, _rv)
end

--- NativeDB Introduced: v1290
function Global.N_0xaa653ae61924b0a0(vehicle, toggle)
	return _in(0xAA653AE61924B0A0, vehicle, toggle)
end

--- 0xAA76052DDA9BFC3E
function Global.N_0xaa76052dda9bfc3e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xAA76052DDA9BFC3E, p0, p1, p2, p3, p4, p5, p6)
end

--- 0xAAA6A3698A69E048
function Global.N_0xaaa6a3698a69e048(p0)
	return _in(0xAAA6A3698A69E048, p0, _ri)
end

--- NativeDB Introduced: v2189
function Global.N_0xaabd62873ffb1a33(p0, p1)
	return _in(0xAABD62873FFB1A33, p0, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0xaae9be70ec7c69ab(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xAAE9BE70EC7C69AB, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- 0xAB04325045427AAE
function Global.N_0xab04325045427aae(vehicle, p1)
	return _in(0xAB04325045427AAE, vehicle, p1)
end

--- Used only once in the scripts (fm_mission_controller) like so:
-- TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");
-- SET_*
function Global.N_0xab13a5565480b6d9(ped, p1)
	return _in(0xAB13A5565480B6D9, ped, _ts(p1), _ri)
end

--- 0xAB31EF4DE6800CE9
function Global.N_0xab31ef4de6800ce9(p0, p1)
	return _in(0xAB31EF4DE6800CE9, p0, p1)
end

--- 0xAC2890471901861C
function Global.N_0xac2890471901861c(p0)
	return _in(0xAC2890471901861C, p0)
end

--- NativeDB Introduced: v1290
function Global.N_0xad27d957598e49e9(ped, p1, p2, hash, p4, p5)
	return _in(0xAD27D957598E49E9, ped, p1, p2, _ch(hash), p4, p5)
end

--- This has been found in use in the decompiled files.
function Global.N_0xad73ce5a09e42d12(player)
	return _in(0xAD73CE5A09E42D12, player)
end

--- gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.
-- Possibly waypoint?
function Global.N_0xadb57e5b663cca8b(p0)
	return _in(0xADB57E5B663CCA8B, p0, _f, _f)
end

--- NativeDB Introduced: v2189
function Global.N_0xadd6627c4d325458(p0)
	return _in(0xADD6627C4D325458, p0)
end

--- NativeDB Introduced: v1604
function Global.N_0xadf084fb8f075d06(p0)
	return _in(0xADF084FB8F075D06, p0, _r)
end

--- 0xAE3FEE8709B39DCB
function Global.N_0xae3fee8709b39dcb(vehicle)
	return _in(0xAE3FEE8709B39DCB, vehicle, _r)
end

--- 0xAE51BC858F32BA66
function Global.N_0xae51bc858f32ba66(p0, p1, p2, p3, p4)
	return _in(0xAE51BC858F32BA66, p0, p1, p2, p3, p4)
end

--- 0xAEAB987727C5A8A4
function Global.N_0xaeab987727c5a8a4(p0)
	return _in(0xAEAB987727C5A8A4, p0, _r)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0xaedf1bc1c133d6e3()
	return _in(0xAEDF1BC1C133D6E3)
end

--- Exemple of use(carmod_shop.c4)
-- INTERIOR::_AF348AFCB575A441("V_CarModRoom");
function Global.N_0xaf348afcb575a441(roomName)
	return _in(0xAF348AFCB575A441, _ts(roomName))
end

--- 0xAF60E6A2936F982A
function Global.N_0xaf60e6a2936f982a(p0, p1)
	return _in(0xAF60E6A2936F982A, p0, p1)
end

--- SET_PED_*
function Global.N_0xafc976fd0580c7b3(ped, toggle)
	return _in(0xAFC976FD0580C7B3, ped, toggle)
end

--- NativeDB Introduced: v1734
function Global.N_0xafe24e4d29249e4a(object, p1, p2, p3)
	return _in(0xAFE24E4D29249E4A, object, p1, p2, p3, _r)
end

--- 0xAFF47709F1D5DCCE
function Global.N_0xaff47709f1d5dcce()
	return _in(0xAFF47709F1D5DCCE, _ri)
end

--- NativeDB Introduced: v1180
function Global.N_0xb1381b97f70c7b30()
	return _in(0xB1381B97F70C7B30)
end

--- 0xB13E88E655E5A3BC
function Global.N_0xb13e88e655e5a3bc()
	return _in(0xB13E88E655E5A3BC)
end

--- 0xB17BC6453F6CF5AC
function Global.N_0xb17bc6453f6cf5ac(p0, p1)
	return _in(0xB17BC6453F6CF5AC, p0, p1)
end

--- 0xB1B6216CA2E7B55E
function Global.N_0xb1b6216ca2e7b55e(p0, p1, p2)
	return _in(0xB1B6216CA2E7B55E, p0, p1, p2)
end

--- 0xB1D2BB1E1631F5B1
function Global.N_0xb1d2bb1e1631f5b1()
	return _in(0xB1D2BB1E1631F5B1, _r)
end

--- NativeDB Added Parameter 2: Any p1
-- NativeDB Introduced: v1493
function Global.N_0xb26f670685631727(p0)
	return _in(0xB26F670685631727, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xb282749d5e028163(p0, p1)
	return _in(0xB282749D5E028163, p0, p1)
end

--- 0xB2D0BDE54F0E8E5A
function Global.N_0xb2d0bde54f0e8e5a(object, toggle)
	return _in(0xB2D0BDE54F0E8E5A, object, toggle)
end

--- SET_C*
function Global.N_0xb2e0c0d6922d31f2(vehicle, toggle)
	return _in(0xB2E0C0D6922D31F2, vehicle, toggle)
end

--- 0xB2EBE8CBC58B90E9
function Global.N_0xb2ebe8cbc58b90e9()
	return _in(0xB2EBE8CBC58B90E9, _ri)
end

--- 0xB309EBEA797E001F
function Global.N_0xb309ebea797e001f(p0)
	return _in(0xB309EBEA797E001F, p0, _ri)
end

--- _SET_PED_HEAD_* - _SET_PED_HEARING_*
-- _SET_PED_HEALTH_...
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.N_0xb3352e018d6f89df(toggle)
	return _in(0xB3352E018D6F89DF, toggle)
end

--- 0xB37E4E6A2388CA7B
function Global.N_0xb37e4e6a2388ca7b()
	return _in(0xB37E4E6A2388CA7B, _r)
end

--- Setter for 0xE59343E9E96529E7
-- SET_M*
function Global.N_0xb3c641f3630bf6da(p0)
	return _in(0xB3C641F3630BF6DA, p0)
end

--- This function is hard-coded to always return 1.
-- NETWORK_IS_*
function Global.N_0xb3da2606774a8e2d()
	return _in(0xB3DA2606774A8E2D, _r)
end

--- PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation
-- ***
-- In "am_hold_up.ysc" used once:
-- l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
-- PLAYER::_B45EFF719D8427A6((l_8d._f47));
function Global.N_0xb45eff719d8427a6(p0)
	return _in(0xB45EFF719D8427A6, p0)
end

--- 0xB4C2EC463672474E
function Global.N_0xb4c2ec463672474e(p0, p1, p2, p3)
	return _in(0xB4C2EC463672474E, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function Global.N_0xb4deae67f35e2acd(p0)
	return _in(0xB4DEAE67F35E2ACD, p0)
end

--- 0xB51B9AB9EF81868C
function Global.N_0xb51b9ab9ef81868c(toggle)
	return _in(0xB51B9AB9EF81868C, toggle)
end

--- 0xB542DE8C3D1CB210
function Global.N_0xb542de8c3d1cb210(p0)
	return _in(0xB542DE8C3D1CB210, p0)
end

--- 0xB552929B85FC27EC
function Global.N_0xb552929b85fc27ec(p0, p1)
	return _in(0xB552929B85FC27EC, p0, p1)
end

--- 0xB569F41F3E7E83A4
function Global.N_0xb569f41f3e7e83a4(p0)
	return _in(0xB569F41F3E7E83A4, p0)
end

--- NativeDB Introduced: v1868
function Global.N_0xb5b58e24868cb09e(p0, p1, p2, p3, p4)
	return _in(0xB5B58E24868CB09E, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
function Global.N_0xb5b7742424bd4445(p0, p1)
	return _in(0xB5B7742424BD4445, p0, p1)
end

--- 0xB5D3453C98456528
function Global.N_0xb5d3453c98456528()
	return _in(0xB5D3453C98456528, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xb606e6cc59664972(p0)
	return _in(0xB606E6CC59664972, p0)
end

--- NativeDB Introduced: v1290
function Global.N_0xb68cfaf83a02768d(vehicle, toggle)
	return _in(0xB68CFAF83A02768D, vehicle, toggle)
end

--- ROPE_*
function Global.N_0xb743f735c03d7810(ropeId, p1)
	return _in(0xB743F735C03D7810, ropeId, p1)
end

--- 0xB746D20B17F2A229
function Global.N_0xb746d20b17f2a229()
	return _in(0xB746D20B17F2A229, _i, _i, _r)
end

--- SET_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xb7b873520c84c118()
	return _in(0xB7B873520C84C118)
end

--- Clears all areas created by 0xD4A7A435B3710D05
-- CLEAR_*
-- NativeDB Introduced: v1290
function Global.N_0xb7c6d80fb371659a()
	return _in(0xB7C6D80FB371659A)
end

--- Disables something. Used only once in R* scripts (freemode.ysc).
-- DISABLE_PLAYER_*
function Global.N_0xb885852c39cc265d()
	return _in(0xB885852C39CC265D)
end

--- 0xB8B52E498014F5B0
function Global.N_0xb8b52e498014f5b0(ped)
	return _in(0xB8B52E498014F5B0, ped, _r)
end

--- NativeDB Introduced: v2060
function Global.N_0xb9351a07a0d458b1(p0)
	return _in(0xB9351A07A0D458B1, p0, _ri)
end

--- 0xB9562064627FF9DB
function Global.N_0xb9562064627ff9db(p0, p1)
	return _in(0xB9562064627FF9DB, p0, p1)
end

--- Returns profile setting 237.
-- GET_*
function Global.N_0xb9cf1f793a9f1bf1()
	return _in(0xB9CF1F793A9F1BF1, _r)
end

--- 0xBA0127DA25FD54C9
function Global.N_0xba0127da25fd54c9(p0, p1)
	return _in(0xBA0127DA25FD54C9, p0, p1)
end

--- SET_PARTICLE_FX_*
function Global.N_0xba3d194057c79a7b(p0)
	return _in(0xBA3D194057C79A7B, _ts(p0))
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xba4b8d83bdc75551(p0)
	return _in(0xBA4B8D83BDC75551, p0)
end

--- 0xBA7F0B77D80A4EB7
function Global.N_0xba7f0b77d80a4eb7(p0, p1)
	return _in(0xBA7F0B77D80A4EB7, p0, p1)
end

--- FORCE_*
function Global.N_0xba8d65c1c65702e5(toggle)
	return _in(0xBA8D65C1C65702E5, toggle)
end

--- 0xBA9749CC94C1FD85
function Global.N_0xba9749cc94c1fd85()
	return _in(0xBA9749CC94C1FD85, _ri)
end

--- 0xBAA2F0490E146BE8
function Global.N_0xbaa2f0490e146be8(p0)
	return _in(0xBAA2F0490E146BE8, p0)
end

--- 0xBB2333BB87DDD87F
function Global.N_0xbb2333bb87ddd87f(p0, p1)
	return _in(0xBB2333BB87DDD87F, p0, p1)
end

--- 0xBB90E12CAC1DAB25
function Global.N_0xbb90e12cac1dab25(p0)
	return _in(0xBB90E12CAC1DAB25, p0)
end

--- Most likely ROPE_ATTACH_*
function Global.N_0xbc0ce682d4d05650(ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xBC0CE682D4D05650, ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- Seems to only appear in scripts used in Singleplayer.
-- Always used like this in scripts
-- PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());
function Global.N_0xbc9490ca15aea8fb(player)
	return _in(0xBC9490CA15AEA8FB, player)
end

--- 0xBCEDB009461DA156
function Global.N_0xbcedb009461da156()
	return _in(0xBCEDB009461DA156, _ri)
end

--- 0xBD0EFB25CCA8F97A
function Global.N_0xbd0efb25cca8f97a(p0, p1, p2, p3)
	return _in(0xBD0EFB25CCA8F97A, p0, p1, p2, p3)
end

--- 0xBD545D44CCE70597
-- @return Hard-coded to always return 1.
function Global.N_0xbd545d44cce70597()
	return _in(0xBD545D44CCE70597, _r)
end

--- NETWORK_SESSION_IS_*
function Global.N_0xbdb6f89c729cf388()
	return _in(0xBDB6F89C729CF388, _r)
end

--- This function is hard-coded to always return 0.
function Global.N_0xbe197eaa669238f4(p0, p1, p2, p3)
	return _in(0xBE197EAA669238F4, p0, p1, p2, p3, _ri)
end

--- 0xBE3DB208333D9844
function Global.N_0xbe3db208333d9844()
	return _in(0xBE3DB208333D9844, _ri)
end

--- 0xBE5C1255A1830FF5
function Global.N_0xbe5c1255a1830ff5(vehicle, toggle)
	return _in(0xBE5C1255A1830FF5, vehicle, toggle)
end

--- 0xBEB2D9A1D9A8F55A
function Global.N_0xbeb2d9a1d9a8f55a(p0, p1, p2, p3)
	return _in(0xBEB2D9A1D9A8F55A, p0, p1, p2, p3)
end

--- 0xBED8CA5FF5E04113
function Global.N_0xbed8ca5ff5e04113(p0, p1, p2, p3)
	return _in(0xBED8CA5FF5E04113, p0, p1, p2, p3)
end

--- 0xBED9F5693F34ED17
function Global.N_0xbed9f5693f34ed17(statName, p1, outValue)
	return _in(0xBED9F5693F34ED17, _ch(statName), p1, _fi(outValue) --[[ may be optional ]], _r)
end

--- 0xBEF34B1D9624D5DD
function Global.N_0xbef34b1d9624d5dd(p0)
	return _in(0xBEF34B1D9624D5DD, p0)
end

--- 0xBF22E0F32968E967
function Global.N_0xbf22e0f32968e967(player, p1)
	return _in(0xBF22E0F32968E967, player, p1)
end

--- 0xBF371CD2B64212FD
function Global.N_0xbf371cd2b64212fd(p0)
	return _in(0xBF371CD2B64212FD, p0)
end

--- 0xBF4F34A85CA2970C
function Global.N_0xbf4f34a85ca2970c()
	return _in(0xBF4F34A85CA2970C)
end

--- 0xBF72910D0F26F025
function Global.N_0xbf72910d0f26f025()
	return _in(0xBF72910D0F26F025, _ri)
end

--- 0xBFAFDB5FAAA5C5AB
function Global.N_0xbfafdb5faaa5c5ab(p0)
	return _in(0xBFAFDB5FAAA5C5AB, p0)
end

--- NativeDB Introduced: v1290
function Global.N_0xbffe53ae7e67fcdc(p0, p1)
	return _in(0xBFFE53AE7E67FCDC, p0, p1)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- NativeDB Introduced: v2372
-- ```
function Global.N_0xc01d2470f22cde5a()
	return _in(0xC01D2470F22CDE5A)
end

--- NativeDB Introduced: v1868
function Global.N_0xc03fab2c2f92289b(p0)
	return _in(0xC03FAB2C2F92289B, p0)
end

--- GOLF_TRAIL_SET_*
function Global.N_0xc0416b061f2b7e5e(p0)
	return _in(0xC0416B061F2B7E5E, p0)
end

--- 0xC0E0D686DDFC6EAE
function Global.N_0xc0e0d686ddfc6eae()
	return _in(0xC0E0D686DDFC6EAE, _ri)
end

--- 0xC0ED6438E6D39BA8
function Global.N_0xc0ed6438e6d39ba8(p0, p1, p2)
	return _in(0xC0ED6438E6D39BA8, p0, p1, p2)
end

--- 0xC13C38E47EA5DF31
function Global.N_0xc13c38e47ea5df31(p0)
	return _in(0xC13C38E47EA5DF31, _ii(p0) --[[ may be optional ]], _r)
end

--- 0xC141B8917E0017EC
function Global.N_0xc141b8917e0017ec()
	return _in(0xC141B8917E0017EC)
end

--- NativeDB Added Parameter 2: Any p1
-- NativeDB Introduced: v1493
function Global.N_0xc14bd9f5337219b2(p0)
	return _in(0xC14BD9F5337219B2, p0)
end

--- SET_VEH*
function Global.N_0xc1805d05e6d4fe10(vehicle)
	return _in(0xC1805D05E6D4FE10, vehicle)
end

--- NativeDB Introduced: v2189
function Global.N_0xc1e963c58664b556(p0)
	return _in(0xC1E963C58664B556, p0)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Introduced: v323
function Global.N_0xc2c97ea97711d1ae()
	return _in(0xC2C97EA97711D1AE, _r)
end

--- Getter for 0xCD74233600C4EA6B
-- GET_*
function Global.N_0xc2d2ad9eaae265b8()
	return _in(0xC2D2AD9EAAE265B8, _r)
end

--- 0xC2EE020F5FB4DB53
function Global.N_0xc2ee020f5fb4db53(ped)
	return _in(0xC2EE020F5FB4DB53, ped)
end

--- NativeDB Introduced: v1868
function Global.N_0xc30bdaee47256c13(p0)
	return _in(0xC30BDAEE47256C13, p0, _ri)
end

--- 0xC32EA7A2F6CA7557
function Global.N_0xc32ea7a2f6ca7557()
	return _in(0xC32EA7A2F6CA7557, _ri)
end

--- - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
function Global.N_0xc3376f42b1faccc6(player)
	return _in(0xC3376F42B1FACCC6, player)
end
Global.SetAreasGeneratorOrientation = Global.N_0xc3376f42b1faccc6

--- SET_ENTITY_*
function Global.N_0xc34bc448da29f5e9(entity, toggle)
	return _in(0xC34BC448DA29F5E9, entity, toggle)
end

--- 0xC35A6D07C93802B2
function Global.N_0xc35a6d07c93802b2()
	return _in(0xC35A6D07C93802B2)
end

--- Vehicle must be a plane.
-- Native name is between SET_VEHICLE_BRAKE_LIGHTS and SET_VEHICLE_BULLDOZER_ARM_POSITION alphabetically.
function Global.N_0xc361aa040d6637a8(vehicle, p1)
	return _in(0xC361AA040D6637A8, vehicle, p1)
end

--- 0xC42DD763159F3461
function Global.N_0xc42dd763159f3461()
	return _in(0xC42DD763159F3461, _r)
end

--- 0xC434133D9BA52777
function Global.N_0xc434133d9ba52777(p0, TypeOfWeapon)
	return _in(0xC434133D9BA52777, p0, _ii(TypeOfWeapon) --[[ may be optional ]], _ri)
end

--- GET_IS_LOADING_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xc4637a6d03c24cc3()
	return _in(0xC4637A6D03C24CC3, _r)
end

--- 0xC4B3347BD68BD609
function Global.N_0xc4b3347bd68bd609(p0)
	return _in(0xC4B3347BD68BD609, p0)
end

--- SET_VEHICLE_LI*
function Global.N_0xc50ce861b55eab8b(vehicle, p1)
	return _in(0xC50CE861B55EAB8B, vehicle, p1)
end

--- 0xC56FBF2F228E1DAC
function Global.N_0xc56fbf2f228e1dac(modelHash, p1, p2)
	return _in(0xC56FBF2F228E1DAC, _ch(modelHash), p1, p2, _ri)
end

--- NETWORK_IS_TRANSITION_*
function Global.N_0xc571d0e77d8bbc29()
	return _in(0xC571D0E77D8BBC29, _r)
end

--- 0xC594B315EDF2D4AF
function Global.N_0xc594b315edf2d4af(ped)
	return _in(0xC594B315EDF2D4AF, ped)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Added Parameter 3: float* p2
-- NativeDB Introduced: v323
function Global.N_0xc5a35c73b68f3c49()
	return _in(0xC5A35C73B68F3C49, _r)
end

--- 0xC5C8F970D4EDFF71
function Global.N_0xc5c8f970d4edff71(p0)
	return _in(0xC5C8F970D4EDFF71, p0)
end

--- 0xC6033D32241F6FB5
function Global.N_0xc6033d32241f6fb5(object, toggle)
	return _in(0xC6033D32241F6FB5, object, toggle)
end

--- Toggles a value (bool) for cutscenes.
-- SET_*
function Global.N_0xc61b86c9f61eb404(toggle)
	return _in(0xC61B86C9F61EB404, toggle)
end

--- Sets profile setting 939
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xc67e2da1cbe759e2()
	return _in(0xC67E2DA1CBE759E2)
end

--- 0xC6E0E2616A7576BB
function Global.N_0xc6e0e2616a7576bb()
	return _in(0xC6E0E2616A7576BB, _ri)
end

--- NativeDB Introduced: v1493
function Global.N_0xc6e74cf8c884c880(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xC6E74CF8C884C880, p0, p1, p2, p3, p4, p5, p6)
end

--- See [`N_0x701fda1e82076ba4`](#\_0x701FDA1E82076BA4).
function Global.N_0xc7f29ca00f46350e(p0)
	return _in(0xC7F29CA00F46350E, p0)
end

--- NET_GAMESERVER_*
-- Checks if the transaction status is equal to 1.
-- NativeDB Introduced: v1365
function Global.N_0xc830417d630a50f9(transactionId)
	return _in(0xC830417D630A50F9, transactionId, _r)
end

--- 0xC8391C309684595A
function Global.N_0xc8391c309684595a()
	return _in(0xC8391C309684595A)
end

--- 0xC847B43F369AC0B5
function Global.N_0xc847b43f369ac0b5()
	return _in(0xC847B43F369AC0B5)
end

--- 0xC87E740D9F3872CC
function Global.N_0xc87e740d9f3872cc()
	return _in(0xC87E740D9F3872CC, _ri)
end

--- 0xC8B5C4A79CC18B94
function Global.N_0xc8b5c4a79cc18b94(cam)
	return _in(0xC8B5C4A79CC18B94, cam)
end

--- 0xC8E1071177A23BE5
function Global.N_0xc8e1071177a23be5()
	return _in(0xC8E1071177A23BE5, _i, _i, _i, _r)
end

--- 0xCA465D9CC0D231BA
function Global.N_0xca465d9cc0d231ba(p0)
	return _in(0xCA465D9CC0D231BA, p0)
end

--- 0xCA4AE345A153D573
function Global.N_0xca4ae345a153d573(p0)
	return _in(0xCA4AE345A153D573, p0)
end

--- 0xCA575C391FEA25CC
function Global.N_0xca575c391fea25cc(p0)
	return _in(0xCA575C391FEA25CC, p0)
end

--- NETWORK_S\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xca59ccae5d01e4ce()
	return _in(0xCA59CCAE5D01E4CE)
end

--- 0xCA6B2F7CE32AB653
function Global.N_0xca6b2f7ce32ab653(p0, p2)
	return _in(0xCA6B2F7CE32AB653, p0, _i, p2, _r)
end

--- Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".
function Global.N_0xcac57395b151135f(player, p1)
	return _in(0xCAC57395B151135F, player, p1)
end

--- 0xCB0360EFEFB2580D
function Global.N_0xcb0360efefb2580d(padIndex)
	return _in(0xCB0360EFEFB2580D, padIndex)
end

--- Returns profile setting 243.
-- GET_*
function Global.N_0xcb645e85e97ea48b()
	return _in(0xCB645E85E97EA48B, _r)
end

--- 0xCB82A0BF0E3E3265
function Global.N_0xcb82a0bf0e3e3265(p0)
	return _in(0xCB82A0BF0E3E3265, p0, _ri)
end

--- 0xCC25A4553DFBF9EA
function Global.N_0xcc25a4553dfbf9ea(p0, p1, p2, p3, p4)
	return _in(0xCC25A4553DFBF9EA, p0, p1, p2, p3, p4)
end

--- RESET_*
function Global.N_0xcc6e963682533882(object)
	return _in(0xCC6E963682533882, object)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xccd078c2665d2973(p0)
	return _in(0xCCD078C2665D2973, p0)
end

--- REQUEST_*
function Global.N_0xcd018c591f94cb43(ped, p1)
	return _in(0xCD018C591F94CB43, ped, p1)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0xcd0f5b5d932ae473()
	return _in(0xCD0F5B5D932AE473)
end

--- NativeDB Introduced: v2189
function Global.N_0xcd4d66b43b1dd28d(p0, p1, p2)
	return _in(0xCD4D66B43B1DD28D, p0, p1, p2)
end

--- Setter for 0xC2D2AD9EAAE265B8
-- SET_*
function Global.N_0xcd74233600c4ea6b(toggle)
	return _in(0xCD74233600C4EA6B, toggle)
end

--- 0xCEA7C8E1B48FF68C
function Global.N_0xcea7c8e1b48ff68c(p0, p1)
	return _in(0xCEA7C8E1B48FF68C, p0, p1)
end

--- 0xCED08CBE8EBB97C7
function Global.N_0xced08cbe8ebb97c7(p0, p1)
	return _in(0xCED08CBE8EBB97C7, p0, p1)
end

--- 0xCEDA60A74219D064
function Global.N_0xceda60a74219d064(p0, p1)
	return _in(0xCEDA60A74219D064, p0, p1)
end

--- 0xCF9159024555488C
function Global.N_0xcf9159024555488c(p0)
	return _in(0xCF9159024555488C, p0)
end

--- NativeDB Introduced: v2060
function Global.N_0xcfd16f0db5a3535c(toggle)
	return _in(0xCFD16F0DB5A3535C, toggle)
end

--- what does this do?
function Global.N_0xcfd778e7904c255e(vehicle)
	return _in(0xCFD778E7904C255E, vehicle)
end

--- 0xCFEB46DCD7D8D5EB
function Global.N_0xcfeb46dcd7d8d5eb(p0)
	return _in(0xCFEB46DCD7D8D5EB, p0)
end

--- NativeDB Introduced: v1180
function Global.N_0xd05a3241b9a86f19(p0, p1)
	return _in(0xD05A3241B9A86F19, p0, p1)
end

--- 0xD10282B6E3751BA0
function Global.N_0xd10282b6e3751ba0()
	return _in(0xD10282B6E3751BA0, _ri)
end

--- 0xD1942374085C8469
function Global.N_0xd1942374085c8469(p0)
	return _in(0xD1942374085C8469, p0)
end

--- 0xD1A1EE3B4FA8E760
function Global.N_0xd1a1ee3b4fa8e760(p0)
	return _in(0xD1A1EE3B4FA8E760, p0)
end

--- SET_TV_???
function Global.N_0xd1c55b110e4df534(p0)
	return _in(0xD1C55B110E4DF534, p0)
end

--- 0xD1C9B92BDD3F151D
function Global.N_0xd1c9b92bdd3f151d(p0, p1, p2)
	return _in(0xD1C9B92BDD3F151D, p0, p1, p2)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xd2049635deb9c375()
	return _in(0xD2049635DEB9C375)
end

--- NativeDB Introduced: v1868
function Global.N_0xd29334ed1a256dbf(p0, p1, p2, p3, p4)
	return _in(0xD29334ED1A256DBF, p0, p1, p2, p3, p4)
end

--- NETWORK_SESSION_IS_*
function Global.N_0xd313de83394af134()
	return _in(0xD313DE83394AF134, _r)
end

--- 0xD3301660A57C9272
function Global.N_0xd3301660a57c9272(p0)
	return _in(0xD3301660A57C9272, p0)
end

--- 0xD33DAA36272177C4
function Global.N_0xd33daa36272177c4(ped)
	return _in(0xD33DAA36272177C4, ped)
end

--- 0xD3E51C0AB8C26EEE
function Global.N_0xd3e51c0ab8c26eee(p0, p1)
	return _in(0xD3E51C0AB8C26EEE, p0, p1, _ri)
end

--- 0xD4196117AF7BB974
function Global.N_0xd4196117af7bb974(p0, p1)
	return _in(0xD4196117AF7BB974, p0, p1, _ri)
end

--- NativeDB Introduced: v2189
function Global.N_0xd4367d310f079db0(p0, p1, p2, p3)
	return _in(0xD4367D310F079DB0, p0, p1, p2, p3)
end

--- Adds an area that seems to be related to pickup physics behavior.
-- Max amount of areas is 10. Only works in multiplayer.
-- ADD_*
-- NativeDB Introduced: v1290
function Global.N_0xd4a7a435b3710d05(x, y, z, radius)
	return _in(0xD4A7A435B3710D05, x, y, z, radius)
end

--- 0xD558BEC0BBA7E8D2
function Global.N_0xd558bec0bba7e8d2(p0, p1, p2, p3, p4)
	return _in(0xD558BEC0BBA7E8D2, p0, p1, p2, p3, p4)
end

--- 0xD565F438137F0E10
function Global.N_0xd565f438137f0e10(p0, p1)
	return _in(0xD565F438137F0E10, p0, p1)
end

--- 0xD642319C54AADEB6
function Global.N_0xd642319c54aadeb6()
	return _in(0xD642319C54AADEB6, _ri)
end

--- NativeDB Introduced: v2189
function Global.N_0xd6ca58b3b53a0f22(p0)
	return _in(0xD6CA58B3B53A0F22, p0)
end

--- NativeDB Introduced: v1868
function Global.N_0xd6d7478ca62b8d41(p0, p1)
	return _in(0xD6D7478CA62B8D41, p0, p1)
end

--- 0xD7B6C73CAD419BCF
function Global.N_0xd7b6c73cad419bcf(p0)
	return _in(0xD7B6C73CAD419BCF, p0)
end

--- 0xD8122C407663B995
function Global.N_0xd8122c407663b995()
	return _in(0xD8122C407663B995, _ri)
end

--- 0xD821056B9ACF8052
function Global.N_0xd821056b9acf8052(player, p1)
	return _in(0xD821056B9ACF8052, player, p1)
end

--- 0xD9454B5752C857DC
function Global.N_0xd9454b5752c857dc()
	return _in(0xD9454B5752C857DC)
end

--- RESET_*
function Global.N_0xd9f692d349249528()
	return _in(0xD9F692D349249528)
end

--- 0xDAF80797FC534BEC
function Global.N_0xdaf80797fc534bec(p0)
	return _in(0xDAF80797FC534BEC, p0)
end

--- 0xDAF87174BE7454FF
function Global.N_0xdaf87174be7454ff(p0)
	return _in(0xDAF87174BE7454FF, p0, _r)
end

--- ```
-- NativeDB Introduced: v1180
-- ```
-- This native is used for the "larger" circular checkpoints, and sets the circle/ring around the checkpoint to point in the same direction as the inner arrow
-- @param checkpointHandle the handle of a created checkpoint
function Global.N_0xdb1ea9411c8911ec(checkpointHandle)
	return _in(0xDB1EA9411C8911EC, checkpointHandle)
end

--- 0xDB41D07A45A6D4B7
function Global.N_0xdb41d07a45a6d4b7(p0)
	return _in(0xDB41D07A45A6D4B7, p0, _ri)
end

--- NativeDB Introduced: v1734
function Global.N_0xdb663cc9ff3407a9(player)
	return _in(0xDB663CC9FF3407A9, player, _ri)
end

--- 0xDB90C6CCA48940F1
function Global.N_0xdb90c6cca48940f1(p0)
	return _in(0xDB90C6CCA48940F1, p0)
end

--- Related to locking the vehicle or something similar.
-- In the decompiled scripts, its always called after
-- VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);
function Global.N_0xdbc631f109350b8c(vehicle, p1)
	return _in(0xDBC631F109350B8C, vehicle, p1)
end

--- NativeDB Introduced: v2189
function Global.N_0xdbf860cf1db8e599(p0)
	return _in(0xDBF860CF1DB8E599, p0, _ri)
end

--- SET_*
-- Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
-- Ran after these 2 natives,
-- set_object_targettable(uParam0, 0);
-- set_entity_invincible(uParam0, 1);
function Global.N_0xdc6f8601faf2e893(entity, toggle)
	return _in(0xDC6F8601FAF2E893, entity, toggle)
end

--- Always returns false.
-- ```
-- NativeDB Introduced: v1868
-- ```
function Global.N_0xdcc07526b8ec45af(player)
	return _in(0xDCC07526B8EC45AF, player, _r)
end

--- NativeDB Added Parameter 1: Vehicle vehicle
-- NativeDB Added Parameter 2: Any p1
function Global.N_0xdce97bdf8a0eabc8()
	return _in(0xDCE97BDF8A0EABC8)
end

--- 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
function Global.N_0xdd2620b7b9d16ff1(player, p1)
	return _in(0xDD2620B7B9D16FF1, player, p1, _r)
end

--- Tune Backwards... ?
-- SET_RADIO_*
function Global.N_0xdd6bcf9e94425df9()
	return _in(0xDD6BCF9E94425DF9)
end

--- 0xDD79DF9F4D26E1C9
function Global.N_0xdd79df9f4d26e1c9()
	return _in(0xDD79DF9F4D26E1C9)
end

--- 0xDE03620F8703A9DF
function Global.N_0xde03620f8703a9df()
	return _in(0xDE03620F8703A9DF, _ri)
end

--- 0xDE45D1A1EF45EE61
function Global.N_0xde45d1a1ef45ee61(player, toggle)
	return _in(0xDE45D1A1EF45EE61, player, toggle)
end
Global.SetHudAnimStopLevel = Global.N_0xde45d1a1ef45ee61

--- NativeDB Introduced: v2060
function Global.N_0xde68e30d89f97132(amount, p1)
	return _in(0xDE68E30D89F97132, amount, p1)
end

--- 0xDEAAF77EB3687E97
function Global.N_0xdeaaf77eb3687e97(p0, p1)
	return _in(0xDEAAF77EB3687E97, p0, _ii(p1) --[[ may be optional ]], _ri)
end

--- 0xDF4B952F7D381B95
function Global.N_0xdf4b952f7d381b95()
	return _in(0xDF4B952F7D381B95, _ri)
end

--- NativeDB Introduced: v1868
function Global.N_0xdfbd93bf2943e29b(p0)
	return _in(0xDFBD93BF2943E29B, p0)
end

--- NativeDB Introduced: v2189
function Global.N_0xdfcdb14317a9b361(p0)
	return _in(0xDFCDB14317A9B361, p0)
end

--- NativeDB Introduced: v1180
function Global.N_0xdfe68c4b787e1bfb(ped)
	return _in(0xDFE68C4B787E1BFB, ped)
end

--- 0xE058175F8EAFE79A
function Global.N_0xe058175f8eafe79a(p0)
	return _in(0xE058175F8EAFE79A, p0)
end

--- 0xE05DD0E9707003A3
function Global.N_0xe05dd0e9707003a3(p0, p1)
	return _in(0xE05DD0E9707003A3, p0, p1)
end

--- NativeDB Introduced: v1180
function Global.N_0xe05f6aeefeb0bb02(p0, p1, p2)
	return _in(0xE05F6AEEFEB0BB02, p0, p1, p2)
end

--- NativeDB Introduced: v1493
function Global.N_0xe0f82d68c7039158(p0)
	return _in(0xE0F82D68C7039158, p0)
end

--- 0xE111A7C0D200CBC5
function Global.N_0xe111a7c0d200cbc5(p0, p1)
	return _in(0xE111A7C0D200CBC5, p0, p1)
end

--- This function is hard-coded to always return 1.
function Global.N_0xe154b48b68ef72bc(p0)
	return _in(0xE154B48B68EF72BC, p0, _r)
end

--- Used with IS_LOOK_INVERTED() and negates its affect.
-- --
-- Not sure how the person above got that description, but here's an actual example:
-- if (PAD::_GET_LAST_INPUT_METHOD(2)) {
-- if (a_5) {
-- if (PAD::IS_LOOK_INVERTED()) {
-- a_3 *= -1;
-- }
-- if (PAD::_E1615EC03B3BB4FD()) {
-- a_3 *= -1;
-- }
-- }
-- }
function Global.N_0xe1615ec03b3bb4fd()
	return _in(0xE1615EC03B3BB4FD, _r)
end

--- 0xE16AA70CE9BEEDC3
function Global.N_0xe16aa70ce9beedc3(p0)
	return _in(0xE16AA70CE9BEEDC3, p0, _ri)
end

--- 0xE23ADC6FCB1F29AE
function Global.N_0xe23adc6fcb1f29ae(p0, p1, p2)
	return _in(0xE23ADC6FCB1F29AE, p0, p1, p2)
end

--- 0xE2892E7E55D7073A
function Global.N_0xe2892e7e55d7073a(p0)
	return _in(0xE2892E7E55D7073A, p0)
end

--- NativeDB Introduced: v2189
function Global.N_0xe2bb399d90942091(p0, p1)
	return _in(0xE2BB399D90942091, p0, p1)
end

--- NativeDB Introduced: v2060
function Global.N_0xe2e244ab823b4483(amount, p1)
	return _in(0xE2E244AB823B4483, amount, p1)
end

--- RESET_*
-- Resets the effect of 0x428AD3E26C8D9EB0
function Global.N_0xe2f53f172b45ede1()
	return _in(0xE2F53F172B45EDE1)
end

--- 0xE3261D791EB44ACB
function Global.N_0xe3261d791eb44acb(p0)
	return _in(0xE3261D791EB44ACB, p0)
end

--- 0xE36A98D8AB3D3C66
function Global.N_0xe36a98d8ab3d3c66(p0)
	return _in(0xE36A98D8AB3D3C66, p0)
end

--- sets something to 1
function Global.N_0xe3d969d2785ffb5e()
	return _in(0xE3D969D2785FFB5E)
end

--- Sets an unknown value related to timecycles.
function Global.N_0xe3e2c1b4c59dbc77(unk)
	return _in(0xE3E2C1B4C59DBC77, unk)
end

--- 0xE3E5A7C64CA2C6ED
function Global.N_0xe3e5a7c64ca2c6ed()
	return _in(0xE3E5A7C64CA2C6ED, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0xe42d626eec94e5d9(p0, p1, p2, p3)
	return _in(0xE42D626EEC94E5D9, p0, p1, p2, p3, _i, _i, _i)
end

--- 0xE496A53BA5F50A56
function Global.N_0xe496a53ba5f50a56(p0)
	return _in(0xE496A53BA5F50A56, p0, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0xe4c3b169876d33d7(p0)
	return _in(0xE4C3B169876D33D7, p0)
end

--- 0xE4DCEC7FD5B739A5
function Global.N_0xe4dcec7fd5b739a5(ped)
	return _in(0xE4DCEC7FD5B739A5, ped)
end

--- NativeDB Introduced: v1290
function Global.N_0xe4f6e8d07a2f0f51(p0)
	return _in(0xE4F6E8D07A2F0F51, p0, _ri)
end

--- SET_*
function Global.N_0xe532ec1a63231b4f(p0, p1)
	return _in(0xE532EC1A63231B4F, p0, p1)
end

--- 0xE5810AC70602F2F5
function Global.N_0xe5810ac70602f2f5(vehicle, p1)
	return _in(0xE5810AC70602F2F5, vehicle, p1)
end

--- Getter for 0xB3C641F3630BF6DA
-- GET_M*
function Global.N_0xe59343e9e96529e7()
	return _in(0xE59343E9E96529E7, _rf)
end

--- NativeDB Introduced: v2372
function Global.N_0xe5e9746a66359f9d()
	return _in(0xE5E9746A66359F9D, _ri)
end

--- TOGGLE_*
function Global.N_0xe63d7c6eececb66b(toggle)
	return _in(0xE63D7C6EECECB66B, toggle)
end

--- SET_ENTITY_M\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xe66377cddada4810(entity, p1)
	return _in(0xE66377CDDADA4810, entity, p1)
end

--- 0xE6717E652B8C8D8A
function Global.N_0xe6717e652b8c8d8a(p0, p1)
	return _in(0xE6717E652B8C8D8A, p0, p1)
end

--- 0xE67C6DFD386EA5E7
function Global.N_0xe67c6dfd386ea5e7(p0)
	return _in(0xE67C6DFD386EA5E7, p0)
end

--- NativeDB Introduced: v2372
function Global.N_0xe6d2cedd370ff98e(p0, p1)
	return _in(0xE6D2CEDD370FF98E, p0, p1)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: int* p1
-- NativeDB Added Parameter 3: char* p2
-- NativeDB Introduced: v323
function Global.N_0xe75a4a2e5e316d86()
	return _in(0xE75A4A2E5E316D86, _r)
end

--- This function is hard-coded to always return 0.
function Global.N_0xe791df1f73ed2c8b(p0)
	return _in(0xE791DF1F73ED2C8B, p0, _ri)
end

--- 0xE851E480B814D4BA
function Global.N_0xe851e480b814d4ba(vehicle, p1)
	return _in(0xE851E480B814D4BA, vehicle, p1)
end

--- GET_H*
-- NativeDB Introduced: v1604
function Global.N_0xe8718faf591fd224(vehicle)
	return _in(0xE8718FAF591FD224, vehicle, _r)
end

--- 0xE8853FBCE7D8D0D6
function Global.N_0xe8853fbce7d8d0d6()
	return _in(0xE8853FBCE7D8D0D6, _ri)
end

--- 0xE906EC930F5FE7C8
function Global.N_0xe906ec930f5fe7c8(p0, p1)
	return _in(0xE906EC930F5FE7C8, p0, p1)
end

--- Related to tennis mode. Checks for `0x0FCED5ADF = swung`
function Global.N_0xe95b0c7d5ba3b96b(ped)
	return _in(0xE95B0C7D5BA3B96B, ped, _r)
end

--- NativeDB Introduced: v1868
function Global.N_0xea8c0ddb10e2822a(p0, p1)
	return _in(0xEA8C0DDB10E2822A, p0, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0xea95c0853a27888e()
	return _in(0xEA95C0853A27888E)
end

--- 0xEA9960D07DADCF10
function Global.N_0xea9960d07dadcf10(p0)
	return _in(0xEA9960D07DADCF10, p0, _ri)
end

--- 0xEAF0FA793D05C592
function Global.N_0xeaf0fa793d05c592()
	return _in(0xEAF0FA793D05C592, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xeb078ca2b5e82add(p0, p1)
	return _in(0xEB078CA2B5E82ADD, p0, p1)
end

--- 0xEB2104E905C6F2E9
function Global.N_0xeb2104e905c6f2e9()
	return _in(0xEB2104E905C6F2E9, _ri)
end

--- 0xEB6F1A9B5510A5D2
function Global.N_0xeb6f1a9b5510a5d2(p0, p1)
	return _in(0xEB6F1A9B5510A5D2, p0, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0xeb81a3dadd503187()
	return _in(0xEB81A3DADD503187)
end

--- 0xEBCAB9E5048434F4
-- @return Hard-coded to always return 1.
function Global.N_0xebcab9e5048434f4()
	return _in(0xEBCAB9E5048434F4, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xebd3205a207939ed(p0)
	return _in(0xEBD3205A207939ED, _ii(p0) --[[ may be optional ]])
end

--- 0xEBF8284D8CADEB53
function Global.N_0xebf8284d8cadeb53()
	return _in(0xEBF8284D8CADEB53)
end

--- 0xEBFA8D50ADDC54C4
function Global.N_0xebfa8d50addc54c4(p0)
	return _in(0xEBFA8D50ADDC54C4, p0, _r)
end

--- SET_PED_*
-- Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.
function Global.N_0xec4b4b3b9908052a(ped, unk)
	return _in(0xEC4B4B3B9908052A, ped, unk)
end

--- This function is hard-coded to always return 0.
function Global.N_0xec72c258667be5ea(p0)
	return _in(0xEC72C258667BE5EA, p0, _ri)
end

--- STAT_LOAD_*
function Global.N_0xecb41ac6ab754401()
	return _in(0xECB41AC6AB754401, _r)
end

--- FORCE_*
function Global.N_0xed3c76adfa6d07c4(ped)
	return _in(0xED3C76ADFA6D07C4, ped)
end

--- 0xED5EDE9E676643C9
function Global.N_0xed5ede9e676643c9(p0, p1)
	return _in(0xED5EDE9E676643C9, p0, p1)
end

--- 0xED5FD7AF10F5E262
function Global.N_0xed5fd7af10f5e262(p0, p1, p2, p3)
	return _in(0xED5FD7AF10F5E262, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function Global.N_0xed76d195e6e3bf7f(p0, p1, p2, p3)
	return _in(0xED76D195E6E3BF7F, p0, p1, p2, p3)
end

--- 0xEDBF6C9B0D2C65C8
function Global.N_0xedbf6c9b0d2c65c8(p0)
	return _in(0xEDBF6C9B0D2C65C8, p0)
end

--- Some kind of flags.
function Global.N_0xeebfc7a7efdc35b4(vehicle)
	return _in(0xEEBFC7A7EFDC35B4, vehicle, _ri)
end

--- 0xEF398BEEE4EF45F9
function Global.N_0xef398beee4ef45f9(p0)
	return _in(0xEF398BEEE4EF45F9, p0)
end

--- 0xEF39EE20C537E98C
function Global.N_0xef39ee20c537e98c(p0, p1, p2, p3, p4, p5)
	return _in(0xEF39EE20C537E98C, p0, p1, p2, p3, p4, p5)
end

--- Only used in R* Script fm_content_cargo
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.N_0xef9d388f8d377f44(vehicle, p1)
	return _in(0xEF9D388F8D377F44, vehicle, p1)
end

--- AD*
function Global.N_0xefabc7722293da7c()
	return _in(0xEFABC7722293DA7C)
end

--- GET_*
function Global.N_0xf033419d1b81fae8(p0)
	return _in(0xF033419D1B81FAE8, p0, _ri)
end

--- 0xF051D9BFB6BA39C0
function Global.N_0xf051d9bfb6ba39c0(p0)
	return _in(0xF051D9BFB6BA39C0, p0)
end

--- 0xF06A6F41CB445443
function Global.N_0xf06a6f41cb445443(p0)
	return _in(0xF06A6F41CB445443, p0)
end

--- NETWORK_RE*
function Global.N_0xf083835b70ba9bfe()
	return _in(0xF083835B70BA9BFE)
end

--- 0xF11F01D98113536A
function Global.N_0xf11f01d98113536a(p0)
	return _in(0xF11F01D98113536A, _fi(p0) --[[ may be optional ]], _ri)
end

--- 0xF13FE2A80C05C561
function Global.N_0xf13fe2a80c05c561()
	return _in(0xF13FE2A80C05C561, _r)
end

--- Sets profile setting 933
function Global.N_0xf1a1803d3476f215(value)
	return _in(0xF1A1803D3476F215, value)
end

--- 0xF22CA0FD74B80E7A
function Global.N_0xf22ca0fd74b80e7a(p0)
	return _in(0xF22CA0FD74B80E7A, p0, _r)
end

--- Initial guess of native: `_IS_PED_WEARING_MOTORCYCLE_HELMET`.
function Global.N_0xf2385935bffd4d92(ped)
	return _in(0xF2385935BFFD4D92, ped, _r)
end

--- 0xF239400E16C23E08
function Global.N_0xf239400e16c23e08(padIndex, p1)
	return _in(0xF239400E16C23E08, padIndex, p1)
end

--- 0xF25E02CB9C5818F8
function Global.N_0xf25e02cb9c5818f8()
	return _in(0xF25E02CB9C5818F8)
end

--- 0xF284AC67940C6812
function Global.N_0xf284ac67940c6812()
	return _in(0xF284AC67940C6812, _ri)
end

--- 0xF287F506767CC8A9
function Global.N_0xf287f506767cc8a9()
	return _in(0xF287F506767CC8A9, _ri)
end

--- SET_PED_ALLOW*
-- toggle was always false except in one instance (b678).
-- The one time this is set to true seems to do with when you fail the mission.
function Global.N_0xf2bebcdfafdaa19e(toggle)
	return _in(0xF2BEBCDFAFDAA19E, toggle)
end

--- 0xF2CA003F167E21D2
-- @return Hard-coded to always return 0.
function Global.N_0xf2ca003f167e21d2()
	return _in(0xF2CA003F167E21D2, _ri)
end
Global.ReturnZero = Global.N_0xf2ca003f167e21d2

--- 0xF2E07819EF1A5289
-- @return Hard-coded to always return 1.
function Global.N_0xf2e07819ef1a5289()
	return _in(0xF2E07819EF1A5289, _r)
end

--- SET_VEHICLE_*
function Global.N_0xf3365489e0dd50f9(vehicle, toggle)
	return _in(0xF3365489E0DD50F9, vehicle, toggle)
end

--- 0xF3B0E0AED097A3F5
function Global.N_0xf3b0e0aed097a3f5(p0, p1)
	return _in(0xF3B0E0AED097A3F5, p0, p1, _ri)
end

--- NativeDB Introduced: v1604
function Global.N_0xf3f776ada161e47d(p0, p1)
	return _in(0xF3F776ADA161E47D, p0, p1)
end

--- 0xF49ABC20D8552257
function Global.N_0xf49abc20d8552257(p0)
	return _in(0xF49ABC20D8552257, p0)
end

--- 0xF4A0DADB70F57FA6
function Global.N_0xf4a0dadb70f57fa6()
	return _in(0xF4A0DADB70F57FA6)
end

--- 0xF51D36185993515D
function Global.N_0xf51d36185993515d(checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
	return _in(0xF51D36185993515D, checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
end

--- 0xF534D94DFA2EAD26
function Global.N_0xf534d94dfa2ead26(p0, p1, p2, p3, p4)
	return _in(0xF534D94DFA2EAD26, p0, p1, p2, p3, p4)
end

--- 0xF55E4046F6F831DC
function Global.N_0xf55e4046f6f831dc(p0, p1)
	return _in(0xF55E4046F6F831DC, p0, p1)
end

--- 0xF6BAAAF762E1BF40
function Global.N_0xf6baaaf762e1bf40(p0, p1)
	return _in(0xF6BAAAF762E1BF40, _ts(p0), _ii(p1) --[[ may be optional ]], _r)
end

--- 0xF6F4383B7C92F11A
function Global.N_0xf6f4383b7c92f11a(p0)
	return _in(0xF6F4383B7C92F11A, p0)
end

--- 0xF78B803082D4386F
function Global.N_0xf78b803082d4386f(p0)
	return _in(0xF78B803082D4386F, p0)
end

--- 0xF814FEC6A19FD6E0
function Global.N_0xf814fec6a19fd6e0()
	return _in(0xF814FEC6A19FD6E0)
end

--- 0xF8155A7F03DDFC8E
function Global.N_0xf8155a7f03ddfc8e(p0)
	return _in(0xF8155A7F03DDFC8E, p0)
end

--- NativeDB Added Parameter 9: Any p8
-- NativeDB Introduced: v1290
function Global.N_0xf83d0febe75e62c9(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xF83D0FEBE75E62C9, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- 0xF854439EFBB3B583
function Global.N_0xf854439efbb3b583()
	return _in(0xF854439EFBB3B583)
end

--- NativeDB Introduced: v2060
function Global.N_0xf8b49f5ba7f850e7(vehicle, p1)
	return _in(0xF8B49F5BA7F850E7, vehicle, p1)
end

--- 0xF8C54A461C3E11DC
function Global.N_0xf8c54a461c3e11dc()
	return _in(0xF8C54A461C3E11DC, _i, _i, _i, _i)
end

--- NativeDB Introduced: v1868
function Global.N_0xf9096193df1f99d4(p0)
	return _in(0xF9096193DF1F99D4, p0)
end

--- 0xF92099527DB8E2A7
function Global.N_0xf92099527db8e2a7(p0, p1)
	return _in(0xF92099527DB8E2A7, p0, p1)
end

--- p1 was always 1 (true).
-- Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
-- Actual name begins with 'S'
function Global.N_0xf9acf4a08098ea25(ped, p1)
	return _in(0xF9ACF4A08098EA25, ped, p1)
end

--- 0xF9F2922717B819EC
function Global.N_0xf9f2922717b819ec()
	return _in(0xF9F2922717B819EC, _ri)
end

--- 0xFA07759E6FDDD7CF
function Global.N_0xfa07759e6fddd7cf(p0, p1, p2, p3)
	return _in(0xFA07759E6FDDD7CF, p0, p1, p2, p3)
end

--- 0xFA1E0E893D915215
function Global.N_0xfa1e0e893d915215(toggle)
	return _in(0xFA1E0E893D915215, toggle)
end

--- 0xFA2888E3833C8E96
function Global.N_0xfa2888e3833c8e96()
	return _in(0xFA2888E3833C8E96)
end

--- NativeDB Introduced: v2060
function Global.N_0xfa3ffb0eebc288a3(p0)
	return _in(0xFA3FFB0EEBC288A3, p0)
end

--- REMOVE_*
-- NativeDB Introduced: v1493
function Global.N_0xfa83ca6776038f64(x, y, z)
	return _in(0xFA83CA6776038F64, x, y, z)
end

--- Another unknown label type...
-- MISC::_FAA457EF263E8763(a_0, "Thumb_label");
-- MISC::_FAA457EF263E8763(&a_0._f10, "Photo_label");
-- MISC::_FAA457EF263E8763(a_0, "GXTlabel");
-- MISC::_FAA457EF263E8763(&a_0._f21, "StringComp");
-- MISC::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");
-- MISC::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");
-- MISC::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");
-- MISC::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
-- MISC::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");
-- MISC::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");
function Global.N_0xfaa457ef263e8763(name)
	return _in(0xFAA457EF263E8763, _i, _ts(name))
end

--- SET_A\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xfab944d4d481accb(ped, toggle)
	return _in(0xFAB944D4D481ACCB, ped, toggle)
end

--- NativeDB Introduced: v1180
function Global.N_0xfac18e7356bd3210()
	return _in(0xFAC18E7356BD3210)
end

--- 0xFAC75988A7D078D3
function Global.N_0xfac75988a7d078d3(player)
	return _in(0xFAC75988A7D078D3, player)
end

--- 0xFAE628F1E9ADB239
function Global.N_0xfae628f1e9adb239(p0, p1, p2)
	return _in(0xFAE628F1E9ADB239, _ch(p0), p1, _ch(p2))
end

--- 0xFAF2A78061FD9EF4
function Global.N_0xfaf2a78061fd9ef4(p0, p1, p2, p3)
	return _in(0xFAF2A78061FD9EF4, p0, p1, p2, p3)
end

--- 0xFB00CA71DA386228
function Global.N_0xfb00ca71da386228()
	return _in(0xFB00CA71DA386228)
end

--- 0xFB199266061F820A
function Global.N_0xfb199266061f820a()
	return _in(0xFB199266061F820A, _r)
end

--- p0 is always 0. p1 is pointing to a global.
function Global.N_0xfb1f9381e80fa13f(p0, p1)
	return _in(0xFB1F9381E80FA13F, p0, _ii(p1) --[[ may be optional ]], _ri)
end

--- 0xFB680D403909DC70
function Global.N_0xfb680d403909dc70(p0, p1)
	return _in(0xFB680D403909DC70, p0, p1)
end

--- 0xFCC228E07217FCAC
function Global.N_0xfcc228e07217fcac(p0)
	return _in(0xFCC228E07217FCAC, p0)
end

--- SET_CHECKPOINT_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xfcf6788fc4860cd4(checkpoint)
	return _in(0xFCF6788FC4860CD4, checkpoint)
end

--- 0xFD3151CD37EA2245
function Global.N_0xfd3151cd37ea2245(entity)
	return _in(0xFD3151CD37EA2245, entity)
end

--- 0xFD325494792302D7
function Global.N_0xfd325494792302d7(ped, toggle)
	return _in(0xFD325494792302D7, ped, toggle)
end
Global.SetTimeExclusiveDisplayTexture = Global.N_0xfd325494792302d7

--- 0xFD75DABC0957BF33
function Global.N_0xfd75dabc0957bf33(p0)
	return _in(0xFD75DABC0957BF33, p0)
end

--- A\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.N_0xfdc07c58e8aab715(pickupHash)
	return _in(0xFDC07C58E8AAB715, _ch(pickupHash))
end

--- 0xFE4C1D0D3B9CC17E
function Global.N_0xfe4c1d0d3b9cc17e(p0, p1)
	return _in(0xFE4C1D0D3B9CC17E, p0, p1, _r)
end

--- Native to check whether [`_SET_PED_SCUBA_GEAR_VARIATION`](#\_0x36c6984c3ed0c911) is enabled/actived.
function Global.N_0xfec9a3b1820f3331(ped)
	return _in(0xFEC9A3B1820F3331, ped, _r)
end

--- Tune Forward... ?
-- SET_RADIO_*
function Global.N_0xff266d1d0eb1195d()
	return _in(0xFF266D1D0EB1195D)
end

--- Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
function Global.N_0xff4803bc019852d9(p0, p1)
	return _in(0xFF4803BC019852D9, p0, p1)
end

--- 0xFF8F3A92B75ED67A
function Global.N_0xff8f3a92b75ed67a()
	return _in(0xFF8F3A92B75ED67A, _ri)
end

--- NativeDB Added Parameter 2: Any p1
function Global.N_0xffee8fa29ab9a18e(player)
	return _in(0xFFEE8FA29AB9A18E, player)
end

--- _NET_GAMESERVER_BASKET_ADD_ITEM
function Global.NetGameserverBasketAddItem(quantity)
	return _in(0xF30980718C8ED876, _i, quantity, _r)
end
Global.N_0xf30980718c8ed876 = Global.NetGameserverBasketAddItem
Global.NetworkShopBasketAddItem = Global.NetGameserverBasketAddItem

--- _NET_GAMESERVER_BASKET_APPLY_SERVER_DATA
function Global.NetGameserverBasketApplyServerData(p0, p1)
	return _in(0xE1A0450ED46A7812, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.N_0xe1a0450ed46a7812 = Global.NetGameserverBasketApplyServerData
Global.NetworkShopBasketApplyServerData = Global.NetGameserverBasketApplyServerData

--- NativeDB Introduced: v372
function Global.NetGameserverBasketDelete()
	return _in(0xFA336E7F40C0A0D0, _r)
end

--- _NET_GAMESERVER_BASKET_END
function Global.NetGameserverBasketEnd()
	return _in(0xA65568121DF2EA26, _r)
end
Global.N_0xa65568121df2ea26 = Global.NetGameserverBasketEnd
Global.N_0xe547e9114277098f = Global.NetGameserverBasketEnd
Global.NetworkShopBasketEnd = Global.NetGameserverBasketEnd

--- _NET_GAMESERVER_BASKET_IS_FULL
function Global.NetGameserverBasketIsFull()
	return _in(0x27F76CC6C55AD30E, _r)
end
Global.N_0x27f76cc6c55ad30e = Global.NetGameserverBasketIsFull
Global.NetworkShopBasketIsFull = Global.NetGameserverBasketIsFull

--- _NET_GAMESERVER_BASKET_START
function Global.NetGameserverBasketStart(categoryHash, actionHash, flags)
	return _in(0x279F08B1A4B29B7E, _i, _ch(categoryHash), _ch(actionHash), flags, _r)
end
Global.NetworkShopBasketStart = Global.NetGameserverBasketStart

--- _NET_GAMESERVER_BEGIN_SERVICE
function Global.NetGameserverBeginService(categoryHash, itemHash, actionTypeHash, value, flags)
	return _in(0x3C5FD37B5499582E, _i, _ch(categoryHash), _ch(itemHash), _ch(actionTypeHash), value, flags, _r)
end
Global.N_0x3c5fd37b5499582e = Global.NetGameserverBeginService
Global.NetworkShopBeginService = Global.NetGameserverBeginService

--- _NET_GAMESERVER_CATALOG_IS_READY
function Global.NetGameserverCatalogIsReady()
	return _in(0x3C4487461E9B0DCB, _r)
end
Global.N_0x3c4487461e9b0dcb = Global.NetGameserverCatalogIsReady

--- _NET_GAMESERVER_CATALOG_ITEM_EXISTS
function Global.NetGameserverCatalogItemExists(name)
	return _in(0xBD4D7EAF8A30F637, _ts(name), _r)
end
Global.N_0xbd4d7eaf8a30f637 = Global.NetGameserverCatalogItemExists
Global.NetworkShopIsItemUnlocked = Global.NetGameserverCatalogItemExists
Global.NetworkShopDoesItemExist = Global.NetGameserverCatalogItemExists

--- _NET_GAMESERVER_CATALOG_ITEM_EXISTS_HASH
function Global.NetGameserverCatalogItemExistsHash(hash)
	return _in(0x247F0F73A182EA0B, _ch(hash), _r)
end
Global.N_0x247f0f73a182ea0b = Global.NetGameserverCatalogItemExistsHash
Global.NetworkShopIsItemUnlockedHash = Global.NetGameserverCatalogItemExistsHash
Global.NetworkShopDoesItemExistHash = Global.NetGameserverCatalogItemExistsHash

--- _NET_GAMESERVER_CHECKOUT_START
function Global.NetGameserverCheckoutStart(transactionId)
	return _in(0x39BE7CEA8D9CC8E6, transactionId, _r)
end
Global.N_0x39be7cea8d9cc8e6 = Global.NetGameserverCheckoutStart
Global.NetworkShopCheckoutStart = Global.NetGameserverCheckoutStart

--- _NET_GAMESERVER_DELETE_CHARACTER_SLOT
function Global.NetGameserverDeleteCharacterSlot(slot, transfer, reason)
	return _in(0x51F1A8E48C3D2F6D, slot, transfer, _ch(reason), _r)
end
Global.N_0x51f1a8e48c3d2f6d = Global.NetGameserverDeleteCharacterSlot

--- _NET_GAMESERVER_DELETE_CHARACTER_SLOT_GET_STATUS
function Global.NetGameserverDeleteCharacterSlotGetStatus()
	return _in(0x0A6D923DFFC9BD89, _ri)
end
Global.N_0x0a6d923dffc9bd89 = Global.NetGameserverDeleteCharacterSlotGetStatus

--- _NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED
function Global.NetGameserverDeleteSetTelemetryNonceSeed()
	return _in(0x112CEF1615A1139F, _r)
end
Global.N_0x112cef1615a1139f = Global.NetGameserverDeleteSetTelemetryNonceSeed
Global.NetworkShopDeleteSetTelemetryNonceSeed = Global.NetGameserverDeleteSetTelemetryNonceSeed

--- _NET_GAMESERVER_END_SERVICE
function Global.NetGameserverEndService(transactionId)
	return _in(0xE2A99A9B524BEFFF, transactionId, _r)
end
Global.N_0xe2a99a9b524befff = Global.NetGameserverEndService
Global.NetworkShopEndService = Global.NetGameserverEndService
Global.NetworkShopTerminateService = Global.NetGameserverEndService

--- Note: only one of the arguments can be set to true at a time
function Global.NetGameserverGetBalance(inventory, playerbalance)
	return _in(0x35A1B3E1D1315CFA, inventory, playerbalance, _r)
end
Global.N_0x35a1b3e1d1315cfa = Global.NetGameserverGetBalance

--- _NET_GAMESERVER_GET_CATALOG_STATE
function Global.NetGameserverGetCatalogState(state)
	return _in(0xCF38DAFBB49EDE5E, _ii(state) --[[ may be optional ]], _r)
end
Global.N_0xcf38dafbb49ede5e = Global.NetGameserverGetCatalogState

--- bool is always true in game scripts
function Global.NetGameserverGetPrice(itemHash, categoryHash, p2)
	return _in(0xC27009422FCCA88D, _ch(itemHash), _ch(categoryHash), p2, _ri)
end
Global.NetworkShopGetPrice = Global.NetGameserverGetPrice

--- _NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA
function Global.NetGameserverGetTransactionManagerData()
	return _in(0x897433D292B44130, _i, _i --[[ actually bool ]], _r)
end
Global.N_0x897433d292b44130 = Global.NetGameserverGetTransactionManagerData

--- _NET_GAMESERVER_IS_CATALOG_VALID
function Global.NetGameserverIsCatalogValid()
	return _in(0x2B949A1E6AEC8F6A, _r)
end
Global.N_0x2b949a1e6aec8f6a = Global.NetGameserverIsCatalogValid

--- _NET_GAMESERVER_IS_SESSION_REFRESH_PENDING
function Global.NetGameserverIsSessionRefreshPending()
	return _in(0x810E8431C0614BF9, _r)
end
Global.N_0x810e8431c0614bf9 = Global.NetGameserverIsSessionRefreshPending
Global.NetworkShopGetTransactionsDisabled = Global.NetGameserverIsSessionRefreshPending

--- _NET_GAMESERVER_IS_SESSION_VALID
function Global.NetGameserverIsSessionValid(charSlot)
	return _in(0xB24F0944DA203D9E, charSlot, _r)
end
Global.N_0xb24f0944da203d9e = Global.NetGameserverIsSessionValid
Global.NetworkShopGetTransactionsEnabledForCharacter = Global.NetGameserverIsSessionValid

--- _NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA
function Global.NetGameserverSessionApplyReceivedData(charSlot)
	return _in(0x2F41D51BA3BCD1F1, charSlot, _r)
end
Global.N_0x2f41d51ba3bcd1f1 = Global.NetGameserverSessionApplyReceivedData
Global.NetworkShopSessionApplyReceivedData = Global.NetGameserverSessionApplyReceivedData

--- _NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED
function Global.NetGameserverSetTelemetryNonceSeed(p0)
	return _in(0x9507D4271988E1AE, p0, _r)
end
Global.N_0x9507d4271988e1ae = Global.NetGameserverSetTelemetryNonceSeed
Global.NetworkShopSetTelemetryNonceSeed = Global.NetGameserverSetTelemetryNonceSeed

--- _NET_GAMESERVER_START_SESSION
function Global.NetGameserverStartSession(charSlot)
	return _in(0xA135AC892A58FC07, charSlot, _r)
end
Global.N_0xa135ac892a58fc07 = Global.NetGameserverStartSession
Global.NetworkShopStartSession = Global.NetGameserverStartSession

--- _NET_GAMESERVER_TRANSFER_BANK_TO_WALLET
function Global.NetGameserverTransferBankToWallet(charSlot, amount)
	return _in(0xD47A2C1BA117471D, charSlot, amount, _r)
end
Global.N_0xd47a2c1ba117471d = Global.NetGameserverTransferBankToWallet
Global.NetworkTransferBankToWallet = Global.NetGameserverTransferBankToWallet

--- Same as 0x350AA5EBC03D3BD2
function Global.NetGameserverTransferCashGetStatus()
	return _in(0x23789E777D14CE44, _ri)
end
Global.N_0x23789e777d14ce44 = Global.NetGameserverTransferCashGetStatus

--- Same as 0x23789E777D14CE44
function Global.NetGameserverTransferCashGetStatus_2()
	return _in(0x350AA5EBC03D3BD2, _ri)
end
Global.N_0x350aa5ebc03d3bd2 = Global.NetGameserverTransferCashGetStatus_2

--- Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
function Global.NetGameserverTransferCashSetTelemetryNonceSeed()
	return _in(0x498C1E05CE5F7877, _r)
end
Global.N_0x498c1e05ce5f7877 = Global.NetGameserverTransferCashSetTelemetryNonceSeed
Global.NetworkShopCashTransferSetTelemetryNonceSeed = Global.NetGameserverTransferCashSetTelemetryNonceSeed

--- _NET_GAMESERVER_TRANSFER_WALLET_TO_BANK
function Global.NetGameserverTransferWalletToBank(charSlot, amount)
	return _in(0xC2F7FE5309181C7D, charSlot, amount, _r)
end
Global.N_0xc2f7fe5309181c7d = Global.NetGameserverTransferWalletToBank
Global.NetworkTransferWalletToBank = Global.NetGameserverTransferWalletToBank

--- NativeDB Introduced: v1290
function Global.NetGameserverUseServerTransactions()
	return _in(0x7D2708796355B20B, _r)
end

--- gets the entity id of a network id
function Global.NetToEnt(netHandle)
	return _in(0xBFFEAB45A9A9094A, netHandle, _ri)
end

--- gets the object id of a network id
function Global.NetToObj(netHandle)
	return _in(0xD8515F5FEA14CB3F, netHandle, _ri)
end

--- gets the ped id of a network id
function Global.NetToPed(netHandle)
	return _in(0xBDCD95FC216A8B3E, netHandle, _ri)
end

--- NET_TO_VEH
function Global.NetToVeh(netHandle)
	return _in(0x367B936610BA360C, netHandle, _ri)
end

--- NETWORK_RE*
-- Triggers a CEventNetworkInviteConfirmed event
function Global.NetworkAcceptInvite()
	return _in(0x62A0296C1BB1CEB3, _r)
end
Global.N_0x62a0296c1bb1ceb3 = Global.NetworkAcceptInvite

--- NETWORK_ACCEPT_PRESENCE_INVITE
function Global.NetworkAcceptPresenceInvite(p0)
	return _in(0xFA91550DF9318B22, p0, _r)
end

--- NETWORK_ACCESS_TUNABLE_BOOL
function Global.NetworkAccessTunableBool(tunableContext, tunableName)
	return _in(0xAA6A47A573ABB75A, _ts(tunableContext), _ts(tunableName), _r)
end
Global.N_0xaa6a47a573abb75a = Global.NetworkAccessTunableBool

--- NETWORK_ACCESS_TUNABLE_BOOL_HASH
function Global.NetworkAccessTunableBoolHash(tunableContext, tunableName)
	return _in(0xEA16B69D93D71A45, _ch(tunableContext), _ch(tunableName), _r)
end
Global.N_0xea16b69d93d71a45 = Global.NetworkAccessTunableBoolHash
Global.NetworkAccessTunableBoolHash = Global.NetworkAccessTunableBoolHash

--- NETWORK_ACCESS_TUNABLE_FLOAT
function Global.NetworkAccessTunableFloat(tunableContext, tunableName, value)
	return _in(0xE5608CA7BC163A5F, _ts(tunableContext), _ts(tunableName), _fi(value) --[[ may be optional ]], _r)
end
Global.N_0xe5608ca7bc163a5f = Global.NetworkAccessTunableFloat

--- NETWORK_ACCESS_TUNABLE_FLOAT_HASH
function Global.NetworkAccessTunableFloatHash(tunableContext, tunableName, value)
	return _in(0x972BC203BBC4C4D5, _ch(tunableContext), _ch(tunableName), _fi(value) --[[ may be optional ]], _r)
end
Global.N_0x972bc203bbc4c4d5 = Global.NetworkAccessTunableFloatHash
Global.NetworkAccessTunableFloatHash = Global.NetworkAccessTunableFloatHash

--- NETWORK_ACCESS_TUNABLE_INT
function Global.NetworkAccessTunableInt(tunableContext, tunableName, value)
	return _in(0x8BE1146DFD5D4468, _ts(tunableContext), _ts(tunableName), _ii(value) --[[ may be optional ]], _r)
end
Global.N_0x8be1146dfd5d4468 = Global.NetworkAccessTunableInt

--- NETWORK_ACCESS_TUNABLE_INT_HASH
function Global.NetworkAccessTunableIntHash(tunableContext, tunableName, value)
	return _in(0x40FCE03E50E8DBE8, _ch(tunableContext), _ch(tunableName), _ii(value) --[[ may be optional ]], _r)
end
Global.N_0x40fce03e50e8dbe8 = Global.NetworkAccessTunableIntHash
Global.NetworkAccessTunableIntHash = Global.NetworkAccessTunableIntHash

--- NETWORK_ACTION_FOLLOW_INVITE
function Global.NetworkActionFollowInvite()
	return _in(0xC88156EBB786F8D5, _ri)
end
Global.N_0xc88156ebb786f8d5 = Global.NetworkActionFollowInvite

--- To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.NetworkAddEntityAngledArea(x1, y1, z1, x2, y2, z2, width)
	return _in(0x376C6375BA60293A, x1, y1, z1, x2, y2, z2, width, _ri)
end
Global.N_0x376c6375ba60293a = Global.NetworkAddEntityAngledArea
Global.NetworkAddEntityAngledArea = Global.NetworkAddEntityAngledArea

--- NETWORK_ADD_ENTITY_AREA
function Global.NetworkAddEntityArea(p0, p1, p2, p3, p4, p5)
	return _in(0x494C8FB299290269, p0, p1, p2, p3, p4, p5, _ri)
end

--- NETWORK_ADD_ENTITY_DISPLAYED_BOUNDARIES
function Global.NetworkAddEntityDisplayedBoundaries(p0, p1, p2, p3, p4, p5)
	return _in(0x25B99872D588A101, p0, p1, p2, p3, p4, p5, _ri)
end
Global.N_0x25b99872d588a101 = Global.NetworkAddEntityDisplayedBoundaries

--- Adds an entity to a network synchronised scene.
-- @param entity Entity handle to add to the scene.
-- @param netScene Which network scene to add this entity to (Returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526))
-- @param animDict Animation dictionary to play on this entity.
-- @param animName Animation clip from the dictionary to play on this entity.
-- @param blendIn Blend in speed of the animation. Default is `8.0`.
-- @param blendOut Blend out speed of the animation. Default is `-8.0`.
-- @param flag Synchronized scene flags. See [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9) for more info.
function Global.NetworkAddEntityToSynchronisedScene(entity, netScene, animDict, animName, blendIn, blendOut, flag)
	return _in(0xF2404D68CBC855FA, entity, netScene, _ts(animDict), _ts(animName), blendIn, blendOut, flag)
end

--- ..
function Global.NetworkAddFollowers(p1)
	return _in(0x236406F60CF216D6, _i, p1)
end
Global.N_0x236406f60cf216d6 = Global.NetworkAddFollowers

--- NETWORK_ADD_FRIEND
function Global.NetworkAddFriend(message)
	return _in(0x8E02D73914064223, _i, _ts(message), _r)
end

--- Adds a map entity to a network synchronized scene. This native function is utilized only once as of game build 2944 within the casino_slots script.
-- Please note that it's only possible to add a single map entity to synchronised scenes.
-- It's advisable to initially locate the object and retrieve its actual coordinates using [`GET_CLOSEST_OBJECT_OF_TYPE`](#\_0xE143FA2249364369).
-- ```
-- NativeDB Introduced: v1734
-- ```
-- @param netScene Net scene ID returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526)
-- @param modelHash Model hash of the object the script should look for.
-- @param x Object X coord.
-- @param y Object Y coord.
-- @param z Object Z coord.
-- @param animDict Anim dictionary to play on this object.
-- @param animName Anim name to play on this object.
-- @param blendInSpeed Float representing how quickly the animation should be blended into. Default is `8.0`.
-- @param blendOutSpeed Float representing how quickly the animation should be blended out of. Default is `-8.0`
-- @param flags See [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).
function Global.NetworkAddMapEntityToSynchronisedScene(netScene, modelHash, x, y, z, animDict, animName, blendInSpeed, blendOutSpeed, flags)
	return _in(0x45F35C0EDC33B03B, netScene, _ch(modelHash), x, y, z, _ts(animDict), _ts(animName), blendInSpeed, blendOutSpeed, flags)
end
Global.N_0x45f35c0edc33b03b = Global.NetworkAddMapEntityToSynchronisedScene

--- Adds a ped to a networked synchronised scene.
-- Synchronized scene playback flags (Also works in other `NETWORK_ADD_*_TO_SYNCHRONISED_SCENE` natives):
-- |Value| Name | Notes |
-- |:----:|:------:| :--------: |
-- |`0`| None | No flag set. |
-- |`1`| USE_PHYSICS | Allows the ped to have physics during the scene. |
-- |`2`| TAG_SYNC_OUT | The task will do a tag synchronized blend out with the movement behaviour of the ped. |
-- |`4`| DONT_INTERRUPT | The scene will not be interrupted by external events. |
-- |`8`| ON_ABORT_STOP_SCENE | The scene will be stopped if the scripted task is aborted. |
-- |`16`| ABORT_ON_WEAPON_DAMAGE | The scene will be stopped if the ped is damaged by a weapon. |
-- |`32`| BLOCK_MOVER_UPDATE | The task will not update the mover. |
-- |`64`| LOOP_WITHIN_SCENE | Animations within this scene will be looped until the scene is finished. |
-- |`128`| PRESERVE_VELOCITY | The task will keep it's velocity when the scene is cleaned up/stopped. Do note that the `USE_PHYSICS` flag must also be present. |
-- |`256`| EXPAND_PED_CAPSULE_FROM_SKELETON | The task will apply the `ExpandPedCapsuleFromSkeleton` reset flag to the ped (See [`SET_PED_RESET_FLAG`](#\_0xC1E8A365BF3B29F2)). |
-- |`512`| ACTIVATE_RAGDOLL_ON_COLLISION | The ped will be ragdoll if it comes in contact with an object. |
-- |`1024`| HIDE_WEAPON | The ped's current weapon will be hidden during the scene. |
-- |`2048`| ABORT_ON_DEATH | The synchronised scene will be aborted if the ped dies. |
-- |`4096`| VEHICLE_ABORT_ON_LARGE_IMPACT | If the scene is running on a vehicle, then it will be aborted if the vehicle takes a heavy collision with another vehicle. |
-- |`16384`| PROCESS_ATTACHMENTS_ON_START | Attachments will be processed at the start of the scene. |
-- |`32768`| NET_ON_EARLY_NON_PED_STOP_RETURN_TO_START |  A non-ped entity will be returned to their starting position if the scene finishes early. |
-- |`65536`| SET_PED_OUT_OF_VEHICLE_AT_START | If the ped is in a vehicle when the scene starts, it will be set out of the vehicle. |
-- |`131072`| NET_DISREGARD_ATTACHMENT_CHECKS | Attachment checks will be disregarded when the scene is running. |
-- These flags can be combined with the `|` operator.
-- @param ped Ped handle to add.
-- @param netScene Network scene handle (Returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526))
-- @param animDict Dictionary of the animation that the ped will play. Network synchronised scenes don't require the animation dictionary to be loaded, unlike [`TASK_SYNCHRONIZED_SCENE`](#\_0xEEA929141F699854).
-- @param animClip Clip name from the anim dictionary that the ped will play.
-- @param blendInSpeed Blend in speed. The lower the value, the slower the blend in speed is. Default is `8.0`.
-- @param blendOutSpeed Blend out speed. This should be the negative value of `blendInSpeed`. Default is `-8.0`.
-- @param syncedSceneFlags Synchronized scene flags bit field from the above table.
-- @param ragdollFlags Ragdoll blocking flags. Default is `0`.
-- @param moverBlendInDelta Determines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is `1000.0`.
-- @param ikFlags Inverse kinematics flags. Default is `0`.
function Global.NetworkAddPedToSynchronisedScene(ped, netScene, animDict, animClip, blendInSpeed, blendOutSpeed, syncedSceneFlags, ragdollFlags, moverBlendInDelta, ikFlags)
	return _in(0x742A637471BCECD9, ped, netScene, _ts(animDict), _ts(animClip), blendInSpeed, blendOutSpeed, syncedSceneFlags, ragdollFlags, moverBlendInDelta, ikFlags)
end

--- Adds a ped to a networked synchronized scene but extends [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9) to support IK flags.
-- There is barely any difference between this and [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).
-- ```
-- NativeDB Introduced: v1290
-- ```
-- @param ped Index of the ped to add to the scene.
-- @param netSceneID Network scene ID returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526).
-- @param animDict Which anim dictionary to use on this ped.
-- @param animClip Which clip from the anim dictionary to use on this ped.
-- @param blendIn Blend in speed of the animation. Default is `8.0`.
-- @param blendOut Blend out speed of the animation. Default is `-8.0`.
-- @param sceneFlags Synchronized scene flags. See [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).
-- @param ragdollFlags Ragdoll blocking flags. Default is 0.
-- @param moverBlendInDelta Determines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is `1000.0`.
-- @param ikFlags Inverse kinematics flags. Default is `0`.
function Global.NetworkAddPedToSynchronisedSceneWithIk(ped, netSceneID, animDict, animClip, blendIn, blendOut, sceneFlags, ragdollFlags, moverBlendInDelta, ikFlags)
	return _in(0xA5EAFE473E45C442, ped, netSceneID, _ts(animDict), _ts(animClip), blendIn, blendOut, sceneFlags, ragdollFlags, moverBlendInDelta, ikFlags)
end
Global.N_0xa5eafe473e45c442 = Global.NetworkAddPedToSynchronisedSceneWithIk

--- NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA
function Global.NetworkAddSynchronisedSceneCamera(netScene, animDict, animName)
	return _in(0xCF8BD3B0BD6D42D7, netScene, _ts(animDict), _ts(animName))
end
Global.N_0xcf8bd3b0bd6d42d7 = Global.NetworkAddSynchronisedSceneCamera

--- _NETWORK_ALLOCATE_TUNABLES_REGISTRATION_DATA_MAP
function Global.NetworkAllocateTunablesRegistrationDataMap()
	return _in(0xFAFC23AEE23868DB, _r)
end
Global.N_0xfafc23aee23868db = Global.NetworkAllocateTunablesRegistrationDataMap

--- Allows scripts to use attachment commands on entities (eg. [`ATTACH_ENTITY_TO_ENTITY`](#\_0x6B9BBD38AB0796DF)) that are not controlled by the client.
-- **Note:** This is only local and does not affect entities on other machines. This is used by the ferris wheel script to sync players on carts.
-- @param entity Entity handle to allow remote attachment for.
-- @param toggle true/false.
function Global.NetworkAllowRemoteAttachmentModification(entity, toggle)
	return _in(0x267C78C60E806B9A, entity, toggle)
end
Global.N_0x267c78c60e806b9a = Global.NetworkAllowRemoteAttachmentModification
Global.NetworkAllowLocalEntityAttachment = Global.NetworkAllowRemoteAttachmentModification

--- NETWORK_AM_I_BLOCKED_BY_GAMER
function Global.NetworkAmIBlockedByGamer(networkHandle)
	return _in(0x15337C7C268A27B2, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_AM_I_BLOCKED_BY_PLAYER
function Global.NetworkAmIBlockedByPlayer(player)
	return _in(0x87F395D957D4353D, player, _r)
end

--- NETWORK_AM_I_MUTED_BY_GAMER
function Global.NetworkAmIMutedByGamer(networkHandle)
	return _in(0xDF02A2C93F1F26DA, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_AM_I_MUTED_BY_PLAYER
function Global.NetworkAmIMutedByPlayer(player)
	return _in(0x9D6981DFC91A8604, player, _r)
end

--- NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA
function Global.NetworkApplyCachedPlayerHeadBlendData(ped, player)
	return _in(0x99B72C7ABDE5C910, ped, player, _r)
end
Global.N_0x99b72c7abde5c910 = Global.NetworkApplyCachedPlayerHeadBlendData
Global.NetworkCopyPedBlendData = Global.NetworkApplyCachedPlayerHeadBlendData

--- NETWORK_APPLY_PED_SCAR_DATA
function Global.NetworkApplyPedScarData(ped, p1)
	return _in(0xE66C690248F11150, ped, p1)
end
Global.N_0xe66c690248f11150 = Global.NetworkApplyPedScarData

--- NETWORK_APPLY_TRANSITION_PARAMETER
function Global.NetworkApplyTransitionParameter(p0, p1)
	return _in(0x521638ADA1BA0D18, p0, p1)
end
Global.N_0x521638ada1ba0d18 = Global.NetworkApplyTransitionParameter

--- NETWORK_APPLY_TRANSITION_PARAMETER_STRING
function Global.NetworkApplyTransitionParameterString(p0, string, p2)
	return _in(0xEBEFC2E77084F599, p0, _ts(string), p2)
end
Global.N_0xebefc2e77084f599 = Global.NetworkApplyTransitionParameterString

--- NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE
function Global.NetworkApplyVoiceProximityOverride(x, y, z)
	return _in(0xDBD2056652689917, x, y, z)
end
Global.IsNetworkVehicleBeenDamagedByAnyObject = Global.NetworkApplyVoiceProximityOverride

--- Getter for SET_NETWORK_CUTSCENE_ENTITIES.
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.NetworkAreCutsceneEntities()
	return _in(0x66D6A5E9C511214A, _r)
end

--- NETWORK_ARE_HANDLES_THE_SAME
function Global.NetworkAreHandlesTheSame()
	return _in(0x57DBA049E110F217, _i, _i, _r)
end

--- NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT
function Global.NetworkAreSocialClubPoliciesCurrent()
	return _in(0xBA9775570DB788CF, _r)
end
Global.N_0xba9775570db788cf = Global.NetworkAreSocialClubPoliciesCurrent

--- NETWORK_ARE_TRANSITION_DETAILS_VALID
function Global.NetworkAreTransitionDetailsValid(p0)
	return _in(0x2615AA2A695930C1, p0, _r)
end
Global.N_0x2615aa2a695930c1 = Global.NetworkAreTransitionDetailsValid

--- NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY
function Global.NetworkAttachSynchronisedSceneToEntity(netScene, entity, bone)
	return _in(0x478DCBD2A98B705A, netScene, entity, bone)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int p2
function Global.NetworkBail()
	return _in(0x95914459A87EBA28)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int p2
function Global.NetworkBailTransition()
	return _in(0xEAA572036990CD1B)
end

--- NativeDB Introduced: v2699
function Global.NetworkBailTransitionQuickmatch()
	return _in(0x023782EFC70585EE)
end

--- NETWORK_BLOCK_INVITES
function Global.NetworkBlockInvites(toggle)
	return _in(0x34F9E9049454A7A0, toggle)
end

--- NETWORK_BLOCK_JOIN_QUEUE_INVITES
function Global.NetworkBlockJoinQueueInvites(toggle)
	return _in(0xCFEB8AF24FC1D0BB, toggle)
end
Global.N_0xcfeb8af24fc1d0bb = Global.NetworkBlockJoinQueueInvites
Global.NetworkBlockInvites_2 = Global.NetworkBlockJoinQueueInvites

--- _NETWORK_BLOCK_KICKED_PLAYERS
function Global.NetworkBlockKickedPlayers(p0)
	return _in(0x6B07B9CE4D390375, p0)
end
Global.N_0x6b07b9ce4d390375 = Global.NetworkBlockKickedPlayers

--- p1 = 0 (always)
-- p2 = 1 (always)
function Global.NetworkBuyAirstrike(cost, p1, p2)
	return _in(0x763B4BD305338F19, cost, p1, p2)
end

--- NativeDB Introduced: v323
function Global.NetworkBuyBackupGang(p0, p1, p2, p3)
	return _in(0xA3EDDAA42411D3B9, p0, p1, p2, p3)
end

--- p1 is just an assumption. p2 was false and p3 was true.
function Global.NetworkBuyBounty(amount, victim, p2, p3)
	return _in(0x7B718E197453F2D9, amount, victim, p2, p3)
end

--- _NETWORK_BUY_CONTRABAND
function Global.NetworkBuyContraband(p0, p1, p2, p3, p4)
	return _in(0x30FD873ECE50E9F6, p0, p1, _ch(p2), p3, p4)
end
Global.N_0x30fd873ece50e9f6 = Global.NetworkBuyContraband

--- The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
-- The last 3 parameters are,
-- 2,0,1 in the am_ferriswheel.c
-- 1,0,1 in the am_rollercoaster.c
function Global.NetworkBuyFairgroundRide(amountSpent, p1, p2, p3)
	return _in(0x8A7B3952DD64D2B5, amountSpent, p1, p2, p3)
end
Global.N_0x8a7b3952dd64d2b5 = Global.NetworkBuyFairgroundRide

--- NETWORK_BUY_HEALTHCARE
function Global.NetworkBuyHealthcare(cost, p1, p2)
	return _in(0xD9B067E55253E3DD, cost, p1, p2)
end

--- p1 = 0 (always)
-- p2 = 1 (always)
function Global.NetworkBuyHeliStrike(cost, p1, p2)
	return _in(0x81AA4610E3FD3A69, cost, p1, p2)
end

--- NETWORK_BUY_ITEM
function Global.NetworkBuyItem(amount, item, p2, p3, p4, item_name, p6, p7, p8, p9)
	return _in(0xF0077C797F66A355, amount, _ch(item), p2, p3, p4, _ts(item_name), p6, p7, p8, p9)
end

--- NativeDB Introduced: v323
function Global.NetworkBuyLotteryTicket(p0, p1, p2, p3)
	return _in(0xD987F2489969668C, p0, p1, p2, p3)
end

--- NETWORK_BUY_PROPERTY
function Global.NetworkBuyProperty(propertyCost, propertyName, p2, p3)
	return _in(0x650A08A280870AF6, propertyCost, _ch(propertyName), p2, p3)
end

--- NativeDB Introduced: v323
function Global.NetworkBuySmokes(p0, p1, p2)
	return _in(0x75AF80E61248EEBD, p0, p1, p2)
end

--- NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA
function Global.NetworkCacheLocalPlayerHeadBlendData()
	return _in(0xBD0BE0BFC927EAC1)
end
Global.N_0xbd0be0bfc927eac1 = Global.NetworkCacheLocalPlayerHeadBlendData

--- 11 - Need to download tunables.
-- 12 - Need to download background script.
-- Returns 1 if the multiplayer is loaded, otherwhise 0.
function Global.NetworkCanAccessMultiplayer(loadingState)
	return _in(0xAF50DA1A3F8B1BA4, _ii(loadingState) --[[ may be optional ]], _r)
end
Global.N_0xaf50da1a3f8b1ba4 = Global.NetworkCanAccessMultiplayer

--- NETWORK_CAN_BAIL
function Global.NetworkCanBail()
	return _in(0x580CE4438479CC61, _r)
end

--- NETWORK_CAN_BET
function Global.NetworkCanBet(amount)
	return _in(0x3A54E33660DED67F, amount, _r)
end
Global.N_0x3a54e33660ded67f = Global.NetworkCanBet

--- NativeDB Introduced: v323
function Global.NetworkCanBuyLotteryTicket(cost)
	return _in(0xC62DD18375C99130, cost, _r)
end

--- NETWORK_CAN_COMMUNICATE_WITH_GAMER
function Global.NetworkCanCommunicateWithGamer(networkHandle)
	return _in(0xA150A4F065806B1F, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
-- NETWORK_CAN_*
function Global.NetworkCanCommunicateWithGamer_2(networkHandle)
	return _in(0x8F5D1AD832AEB06C, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x8f5d1ad832aeb06c = Global.NetworkCanCommunicateWithGamer_2

--- NETWORK_CAN_ENTER_MULTIPLAYER
function Global.NetworkCanEnterMultiplayer()
	return _in(0x7E782A910C362C25, _r)
end

--- _NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME
function Global.NetworkCanGamerPlayMultiplayerWithMe(networkHandle)
	return _in(0x135F9B7B7ADD2185, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x135f9b7b7add2185 = Global.NetworkCanGamerPlayMultiplayerWithMe

--- _NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER
function Global.NetworkCanPlayMultiplayerWithGamer(networkHandle)
	return _in(0x07DD29D5E22763F1, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x07dd29d5e22763f1 = Global.NetworkCanPlayMultiplayerWithGamer

--- NETWORK_CAN_RECEIVE_PLAYER_CASH
function Global.NetworkCanReceivePlayerCash(p0, p1, p2, p3)
	return _in(0x5D17BE59D2123284, p0, p1, p2, p3, _r)
end

--- NETWORK_CAN_SESSION_END
function Global.NetworkCanSessionEnd()
	return _in(0x4EEBC3694E49C572, _r)
end

--- NETWORK_CAN_SET_WAYPOINT
function Global.NetworkCanSetWaypoint()
	return _in(0xC927EC229934AF60, _r)
end

--- NETWORK_CAN_SHARE_JOB_CASH
function Global.NetworkCanShareJobCash()
	return _in(0x1C2473301B1C66BA, _r)
end
Global.N_0x1c2473301b1c66ba = Global.NetworkCanShareJobCash

--- NativeDB Added Parameter 6: Any p5
function Global.NetworkCanSpendMoney(p0, p1, p2, p3, p4)
	return _in(0xAB3CAA6B422164DA, p0, p1, p2, p3, p4, _r)
end
Global.N_0xab3caa6b422164da = Global.NetworkCanSpendMoney

--- NETWORK_CAN_R??? or NETWORK_CAN_S???
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
function Global.NetworkCanSpendMoney_2(p0, p1, p2, p3, p5)
	return _in(0x7303E27CC6532080, p0, p1, p2, p3, _i, p5, _r)
end
Global.N_0x7303e27cc6532080 = Global.NetworkCanSpendMoney_2

--- _NETWORK_CAN_VIEW_GAMER_USER_CONTENT
function Global.NetworkCanViewGamerUserContent(networkHandle)
	return _in(0xB57A49545BA53CE7, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0xb57a49545ba53ce7 = Global.NetworkCanViewGamerUserContent

--- NETWORK_CANCEL_RESPAWN_SEARCH
function Global.NetworkCancelRespawnSearch()
	return _in(0xFB8F2A6F3DF08CBE)
end
Global.N_0xfb8f2a6f3df08cbe = Global.NetworkCancelRespawnSearch

--- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.NetworkCasinoCanGamble(p0)
	return _in(0xF62F6D9528358FE4, p0, _r)
end

--- Same as 0x8968D4D8C6C40C11.
-- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.NetworkCasinoCanPurchaseChipsWithPvc()
	return _in(0x394DCDB9E836B7A9, _r)
end

--- Same as 0x394DCDB9E836B7A9.
-- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.NetworkCasinoCanPurchaseChipsWithPvc_2()
	return _in(0x8968D4D8C6C40C11, _r)
end

--- GTAO_CASINO_HOUSE
-- GTAO_CASINO_INSIDETRACK
-- GTAO_CASINO_LUCKYWHEEL
-- GTAO_CASINO_BLACKJACK
-- GTAO_CASINO_ROULETTE
-- GTAO_CASINO_SLOTS
-- GTAO_CASINO_PURCHASE_CHIPS
-- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.NetworkCasinoCanUseGamblingType(hash)
	return _in(0x158C16F5E4CF41F8, _ch(hash), _r)
end

--- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.NetworkCasinoPurchaseChips(p0, p1)
	return _in(0x3BD101471C7F9EEC, p0, p1, _r)
end

--- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.NetworkCasinoSellChips(p0, p1)
	return _in(0xED44897CB336F480, p0, p1, _r)
end

--- NETWORK_CHANGE_TRANSITION_SLOTS
function Global.NetworkChangeTransitionSlots(p0, p1)
	return _in(0xEEEDA5E6D7080987, p0, p1)
end
Global.N_0xeeeda5e6d7080987 = Global.NetworkChangeTransitionSlots

--- NETWORK_CHECK_COMMUNICATION_PRIVILEGES
function Global.NetworkCheckCommunicationPrivileges(p0, p1, p2)
	return _in(0x83F28CE49FBBFFBA, p0, p1, p2, _r)
end
Global.N_0x83f28ce49fbbffba = Global.NetworkCheckCommunicationPrivileges

--- Checks if the friendDataIndex in the friend data manager contains the data for the specified networkHandle
function Global.NetworkCheckDataManagerSucceededForHandle(friendDataIndex, networkHandle)
	return _in(0x44B37CDCAE765AAE, friendDataIndex, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x44b37cdcae765aae = Global.NetworkCheckDataManagerSucceededForHandle

--- NETWORK_CHECK_USER_CONTENT_PRIVILEGES
function Global.NetworkCheckUserContentPrivileges(p0, p1, p2)
	return _in(0x595F028698072DD9, p0, p1, p2, _r)
end
Global.N_0x595f028698072dd9 = Global.NetworkCheckUserContentPrivileges

--- Only documented...
function Global.NetworkClanAnimation(animDict, animName)
	return _in(0x729E3401F0430686, _ts(animDict), _ts(animName), _r)
end
Global.N_0x729e3401f0430686 = Global.NetworkClanAnimation

--- NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING
-- @return True if there are any pending downloads, false otherwise.
function Global.NetworkClanAnyDownloadMembershipPending()
	return _in(0xB3F64A6A91432477, _r)
end
Global.N_0xb3f64a6a91432477 = Global.NetworkClanAnyDownloadMembershipPending
Global.NetworkIsClanMembershipFinishedDownloading = Global.NetworkClanAnyDownloadMembershipPending

--- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP
function Global.NetworkClanDownloadMembership(networkHandle)
	return _in(0xA989044E70010ABE, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING
function Global.NetworkClanDownloadMembershipPending(p0)
	return _in(0x5B9E023DC6EBEDC0, _ii(p0) --[[ may be optional ]], _r)
end

--- NETWORK_CLAN_GET_EMBLEM_TXD_NAME
function Global.NetworkClanGetEmblemTxdName(txdName)
	return _in(0x5835D9CD92E83184, _i, _ts(txdName), _r)
end
Global.N_0x5835d9cd92e83184 = Global.NetworkClanGetEmblemTxdName
Global.NetworkGetPlayerCrewEmblemTxdName = Global.NetworkClanGetEmblemTxdName

--- NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT
function Global.NetworkClanGetLocalMembershipsCount()
	return _in(0x1F471B79ACC90BEF, _ri)
end
Global.N_0x1f471b79acc90bef = Global.NetworkClanGetLocalMembershipsCount
Global.GetNumMembershipDesc = Global.NetworkClanGetLocalMembershipsCount
Global.NetworkClanGetNumMembershipDesc = Global.NetworkClanGetLocalMembershipsCount

--- Retrieves a membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP).
-- Test C++ code:
-- https://pastebin.com/CD8wni4C
-- @param networkHandle A player network handle.
-- @param clanMembership Output buffer for the membership data. Also known as "desc".
-- @param membershipIndex If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
-- @return Returns true on success, false otherwise.
function Global.NetworkClanGetMembership(membershipIndex)
	return _in(0xC8BC2011F67B3411, _i, _i, membershipIndex, _r)
end

--- NETWORK_CLAN_GET_MEMBERSHIP_COUNT
function Global.NetworkClanGetMembershipCount(p0)
	return _in(0xAAB11F6C4ADBC2C1, _ii(p0) --[[ may be optional ]], _ri)
end

--- NETWORK_CLAN_GET_MEMBERSHIP_DESC
function Global.NetworkClanGetMembershipDesc(p1)
	return _in(0x48DE78AF2C8885B8, _i, p1, _r)
end

--- Checks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid.
-- @param networkHandle A player network handle.
-- @param membershipIndex If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
-- @return Returns true if valid, false otherwise.
function Global.NetworkClanGetMembershipValid(membershipIndex)
	return _in(0x48A59CF88D43DF0E, _i, membershipIndex, _r)
end

--- bufferSize is 35 in the scripts.
function Global.NetworkClanGetUiFormattedTag(bufferSize, formattedTag)
	return _in(0xF45352426FF3A4F0, _i, bufferSize, _ts(formattedTag))
end
Global.N_0xf45352426ff3a4f0 = Global.NetworkClanGetUiFormattedTag

--- NETWORK_CLAN_IS_EMBLEM_READY
function Global.NetworkClanIsEmblemReady(p0, p1)
	return _in(0xA134777FF7F33331, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.N_0xa134777ff7f33331 = Global.NetworkClanIsEmblemReady

--- bufferSize is 35 in the scripts.
function Global.NetworkClanIsRockstarClan(bufferSize)
	return _in(0x7543BB439F63792B, _i, bufferSize, _r)
end
Global.N_0x7543bb439f63792b = Global.NetworkClanIsRockstarClan

--- NETWORK_CLAN_JOIN
function Global.NetworkClanJoin(clanDesc)
	return _in(0x9FAAA4F4FC71F87F, clanDesc, _r)
end

--- bufferSize is 35 in the scripts.
-- bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.
-- the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
-- pastebin.com/cSZniHak
function Global.NetworkClanPlayerGetDesc(bufferSize)
	return _in(0xEEE6EACBE8874FBA, _i, bufferSize, _i, _r)
end

--- NETWORK_CLAN_PLAYER_IS_ACTIVE
function Global.NetworkClanPlayerIsActive(networkHandle)
	return _in(0xB124B57F571D8F18, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_CLAN_RELEASE_EMBLEM
function Global.NetworkClanReleaseEmblem(p0)
	return _in(0x113E6E3E50E286B0, p0)
end
Global.N_0x113e6e3e50e286b0 = Global.NetworkClanReleaseEmblem

--- NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE
function Global.NetworkClanRemoteMembershipsAreInCache(p0)
	return _in(0xBB6E6FEE99D866B2, _ii(p0) --[[ may be optional ]], _r)
end

--- NETWORK_CLAN_REQUEST_EMBLEM
function Global.NetworkClanRequestEmblem(p0)
	return _in(0x13518FF1C6B28938, p0, _r)
end
Global.N_0x13518ff1c6b28938 = Global.NetworkClanRequestEmblem

--- NETWORK_CLAN_SERVICE_IS_VALID
function Global.NetworkClanServiceIsValid()
	return _in(0x579CCED0265D4896, _r)
end
Global.NetworkPlayerIsInClan = Global.NetworkClanServiceIsValid

--- NETWORK_CLEAR_CHARACTER_WALLET
function Global.NetworkClearCharacterWallet(characterSlot)
	return _in(0xA921DED15FDF28F5, characterSlot)
end
Global.N_0xa921ded15fdf28f5 = Global.NetworkClearCharacterWallet

--- NETWORK_CLEAR_CLOCK_TIME_OVERRIDE
function Global.NetworkClearClockTimeOverride()
	return _in(0xD972DF67326F966E)
end
Global.N_0xd972df67326f966e = Global.NetworkClearClockTimeOverride

--- NETWORK_CLEAR_FOLLOW_INVITE
function Global.NetworkClearFollowInvite()
	return _in(0x439BFDE3CD0610F6, _ri)
end
Global.N_0x439bfde3cd0610f6 = Global.NetworkClearFollowInvite

--- NETWORK_CLEAR_FOLLOWERS
function Global.NetworkClearFollowers()
	return _in(0x058F43EC59A8631A)
end
Global.N_0x058f43ec59a8631a = Global.NetworkClearFollowers

--- NETWORK_CLEAR_FOUND_GAMERS
function Global.NetworkClearFoundGamers()
	return _in(0x6D14CCEE1B40381A)
end

--- NETWORK_CLEAR_GET_GAMER_STATUS
function Global.NetworkClearGetGamerStatus()
	return _in(0x86E0660E4F5C956D)
end
Global.N_0x86e0660e4f5c956d = Global.NetworkClearGetGamerStatus

--- NETWORK_CLEAR_GROUP_ACTIVITY
function Global.NetworkClearGroupActivity()
	return _in(0x1888694923EF4591)
end
Global.N_0x1888694923ef4591 = Global.NetworkClearGroupActivity

--- NETWORK_CLEAR_PROPERTY_ID
function Global.NetworkClearPropertyId()
	return _in(0xC2B82527CA77053E)
end
Global.N_0xc2b82527ca77053e = Global.NetworkClearPropertyId

--- NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE
function Global.NetworkClearTransitionCreatorHandle()
	return _in(0xFB3272229A82C759)
end

--- NETWORK_CLEAR_VOICE_CHANNEL
function Global.NetworkClearVoiceChannel()
	return _in(0xE036A705F989E049)
end
Global.N_0xe036a705f989e049 = Global.NetworkClearVoiceChannel

--- NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE
function Global.NetworkClearVoiceProximityOverride()
	return _in(0xF03755696450470C)
end
Global.N_0xf03755696450470c = Global.NetworkClearVoiceProximityOverride

--- NETWORK_CLOSE_TRANSITION_MATCHMAKING
function Global.NetworkCloseTransitionMatchmaking()
	return _in(0x43F4DBA69710E01E)
end
Global.N_0x43f4dba69710e01e = Global.NetworkCloseTransitionMatchmaking

--- _NETWORK_CONCEAL_ENTITY
function Global.NetworkConcealEntity(entity, toggle)
	return _in(0x1632BE0AC1E62876, entity, toggle)
end

--- This is what R\* uses to hide players in MP interiors.
function Global.NetworkConcealPlayer(player, toggle, p2)
	return _in(0xBBDF066252829606, player, toggle, p2)
end

--- Creates a networked synchronized scene.
-- Be sure to actually start the scene with [`NETWORK_START_SYNCHRONISED_SCENE`](#\_0x9A1B3FCDB36C8697) after you're done adding peds or entities to the scene.
-- @param x X coord of the scene position (If the scene is for an object, the position should be of the object's coordinates most of the time)
-- @param y Y coord of the scene position.
-- @param z Z coord of the scene position.
-- @param xRot Value x of the scene rotation.
-- @param yRot Value y of the scene rotation.
-- @param zRot Value z of the scene rotation (It's heading).
-- @param rotationOrder Rotation order. Default is 2.
-- @param holdLastFrame If true, the scene stays on the last frame once it finishes, making `GetSynchronizedScenePhase` keep returning `1.0`. Script is expected to clean up it's memory and stop the animation if this is passed as true and the phase reaches `1.0`.
-- @param looped If true, the scene will be looped and `holdLastFrame` will be disregarded.
-- @param phaseToStopScene Which phase (from `0.0` to `1.0` to stop the scene. Default is `1.0`)
-- @param phaseToStartScene Which phase (from `0.0` to `1.0` to start the scene. Default is `0.0`)
-- @param animSpeed Speed of the animation. Default is `1.0`
-- @return Returns the network synchronized scene's handle. You can get information regarding the phase, rate etc of this synchronised scene by using local synchronized scene natives (e.g [`GET_SYNCHRONIZED_SCENE_PHASE`](#\_0xE4A310B1D7FA73CC)).
-- 		Do note that you need to get the local scene handle from the network scene handle (using [`NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID`](#\_0x02C40BF885C567B6)) and then pass the returned value to the local synchronized scene info natives.
function Global.NetworkCreateSynchronisedScene(x, y, z, xRot, yRot, zRot, rotationOrder, holdLastFrame, looped, phaseToStopScene, phaseToStartScene, animSpeed)
	return _in(0x7CD6BC4C2BBDD526, x, y, z, xRot, yRot, zRot, rotationOrder, holdLastFrame, looped, phaseToStopScene, phaseToStartScene, animSpeed, _ri)
end

--- NativeDB Introduced: v323
function Global.NetworkDeductCash(amount, p1, p2, p3, p4, p5)
	return _in(0x18B7AE224B087E26, amount, _ts(p1), _ts(p2), p3, p4, p5)
end

--- Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
function Global.NetworkDeleteCharacter(characterSlot, p1, p2)
	return _in(0x05A50AF38947EB8D, characterSlot, p1, p2)
end

--- NETWORK_DID_FIND_GAMERS_SUCCEED
function Global.NetworkDidFindGamersSucceed()
	return _in(0xF9B83B77929D8863, _r)
end
Global.N_0xf9b83b77929d8863 = Global.NetworkDidFindGamersSucceed

--- NETWORK_DID_GET_GAMER_STATUS_SUCCEED
function Global.NetworkDidGetGamerStatusSucceed()
	return _in(0x5AE17C6B0134B7F1, _r)
end
Global.N_0x5ae17c6b0134b7f1 = Global.NetworkDidGetGamerStatusSucceed

--- NETWORK_DISABLE_INVINCIBLE_FLASHING
function Global.NetworkDisableInvincibleFlashing(player, toggle)
	return _in(0x9DD368BF06983221, player, toggle)
end
Global.N_0x9dd368bf06983221 = Global.NetworkDisableInvincibleFlashing

--- NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND
function Global.NetworkDisableLeaveRemotePedBehind(toggle)
	return _in(0xC505036A35AFD01B, toggle)
end
Global.N_0xc505036a35afd01b = Global.NetworkDisableLeaveRemotePedBehind

--- NETWORK_DISABLE_PROXIMITY_MIGRATION
function Global.NetworkDisableProximityMigration(netID)
	return _in(0x407091CF6037118E, netID)
end
Global.N_0x407091cf6037118e = Global.NetworkDisableProximityMigration

--- Hardcoded to return -1.
function Global.NetworkDisplaynamesFromHandlesStart(p1)
	return _in(0xD66C9E72B3CC4982, _i, p1, _ri)
end
Global.N_0xd66c9e72b3cc4982 = Global.NetworkDisplaynamesFromHandlesStart

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.NetworkDoTransitionQuickmatch(p0, p1, p2, p3)
	return _in(0x71FB0EBCD4915D56, p0, p1, p2, p3, _r)
end
Global.N_0x71fb0ebcd4915d56 = Global.NetworkDoTransitionQuickmatch

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.NetworkDoTransitionQuickmatchAsync(p0, p1, p2, p3)
	return _in(0xA091A5E44F0072E5, p0, p1, p2, p3, _r)
end
Global.N_0xa091a5e44f0072e5 = Global.NetworkDoTransitionQuickmatchAsync

--- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function Global.NetworkDoTransitionQuickmatchWithGroup(p0, p1, p2, p3, p5)
	return _in(0x9C4AB58491FDC98A, p0, p1, p2, p3, _i, p5, _r)
end

--- p2 is true 3/4 of the occurrences I found.
-- 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
function Global.NetworkDoTransitionToFreemode(p1, p2, players, p4)
	return _in(0x3AAD8B2FCA1E289F, _i, p1, p2, players, p4, _r)
end

--- NETWORK_DO_TRANSITION_TO_GAME
function Global.NetworkDoTransitionToGame(p0, maxPlayers)
	return _in(0x3E9BB38102A589B0, p0, maxPlayers, _r)
end

--- NETWORK_DO_TRANSITION_TO_NEW_FREEMODE
function Global.NetworkDoTransitionToNewFreemode(players, p3, p4, p5)
	return _in(0x9E80A5BA8109F974, _i, _i, players, p3, p4, p5, _r)
end

--- NETWORK_DO_TRANSITION_TO_NEW_GAME
function Global.NetworkDoTransitionToNewGame(p0, maxPlayers, p2)
	return _in(0x4665F51EFED00034, p0, maxPlayers, p2, _r)
end

--- NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID
function Global.NetworkDoesEntityExistWithNetworkId(netId)
	return _in(0x18A47D074708FD68, netId, _r)
end

--- NETWORK_DOES_NETWORK_ID_EXIST
function Global.NetworkDoesNetworkIdExist(netId)
	return _in(0x38CE16C96BD11344, netId, _r)
end

--- NETWORK_DOES_TUNABLE_EXIST
function Global.NetworkDoesTunableExist(tunableContext, tunableName)
	return _in(0x85E5F8B9B898B20A, _ts(tunableContext), _ts(tunableName), _r)
end

--- NETWORK_DOES_TUNABLE_EXIST_HASH
function Global.NetworkDoesTunableExistHash(tunableContext, tunableName)
	return _in(0xE4E53E1419D81127, _ch(tunableContext), _ch(tunableName), _r)
end
Global.N_0xe4e53e1419d81127 = Global.NetworkDoesTunableExistHash
Global.NetworkDoesTunableExistHash = Global.NetworkDoesTunableExistHash

--- _NETWORK_EARN_BOSS
function Global.NetworkEarnBoss(p0, p1, p2)
	return _in(0x08B0CA7A6AB3AC32, p0, p1, p2)
end
Global.N_0x08b0ca7a6ab3ac32 = Global.NetworkEarnBoss

--- _NETWORK_EARN_BOSS_AGENCY
function Global.NetworkEarnBossAgency(p0, p1, p2, p3)
	return _in(0x0CB1BE0633C024A8, p0, p1, p2, p3)
end
Global.N_0x0cb1be0633c024a8 = Global.NetworkEarnBossAgency

--- NativeDB Introduced: v1493
function Global.NetworkEarnBountyHunterReward(p0)
	return _in(0xF6B170F9A02E9E87, p0)
end
Global.N_0xf6b170f9a02e9e87 = Global.NetworkEarnBountyHunterReward

--- NativeDB Introduced: v1868
function Global.NetworkEarnCasinoHeist(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x72E7C7B9615FA3C3, p0, p1, p2, p3, p4, p5, p6)
end

--- NativeDB Introduced: v1868
function Global.NetworkEarnCasinoHeistBonus(p0, p1, p2, p3, p4)
	return _in(0x3EC7471E6909798A, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v2060
function Global.NetworkEarnCollectableCompletedCollection(amount, p1)
	return _in(0x5C9B198AF5A54FA6, amount, p1)
end

--- NativeDB Introduced: v1493
function Global.NetworkEarnFmbbWageBonus(p0)
	return _in(0xFFFBA1B1F7C0B6F4, p0)
end
Global.N_0xfffba1b1f7c0b6f4 = Global.NetworkEarnFmbbWageBonus

--- DSPORT
function Global.NetworkEarnFromAiTargetKill(p0, p1)
	return _in(0x515B4A22E4D3C6D7, p0, p1)
end
Global.N_0x515b4a22e4d3c6d7 = Global.NetworkEarnFromAiTargetKill

--- Example for p1: "AM_DISTRACT_COPS"
function Global.NetworkEarnFromAmbientJob(p0, p1, p2)
	return _in(0xFB6DB092FBAE29E6, p0, _ts(p1), _ii(p2) --[[ may be optional ]])
end
Global.N_0xfb6db092fbae29e6 = Global.NetworkEarnFromAmbientJob
Global.NetworkEarnFromAmbientJob = Global.NetworkEarnFromAmbientJob

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromArenaCareerProgression(amount, p1)
	return _in(0x0F99F70C61F14619, amount, p1)
end

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromArenaSkillLevelProgression(amount, p1)
	return _in(0xE08256F972C7BB2C, amount, p1)
end

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromArenaWar(amount, p1, p2, p3)
	return _in(0x631F1CB8FB4130AA, amount, p1, p2, p3)
end

--- For the money bags that drop a max of $40,000. Often called 40k bags.
-- Most likely NETWORK_EARN_FROM_ROB***
function Global.NetworkEarnFromArmourTruck(amount)
	return _in(0xF514621E8EA463D0, amount)
end
Global.N_0xf514621e8ea463d0 = Global.NetworkEarnFromArmourTruck

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromAssassinateTargetKilled(amount)
	return _in(0xFA700D8A9905F78A, amount)
end

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromAssassinateTargetKilled_2(amount)
	return _in(0x5E7AE8AABE8B7C0D, amount)
end

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromAutoshopBusiness(p0, p1)
	return _in(0x36A7FD5A7194B03E, p0, p1)
end
Global.N_0x36a7fd5a7194b03e = Global.NetworkEarnFromAutoshopBusiness

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromAutoshopIncome(p0)
	return _in(0xC66D1CF99ED7FE25, p0)
end
Global.N_0xc66d1cf99ed7fe25 = Global.NetworkEarnFromAutoshopIncome

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromBbEventBonus(amount)
	return _in(0xFDD8D2440DAF1590, amount)
end

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromBbEventCargo(amount)
	return _in(0xA82959062361B259, amount)
end

--- NETWORK_EARN_FROM_BEND_JOB
function Global.NetworkEarnFromBendJob(amount, heistHash)
	return _in(0x61326EE6DF15B0CA, amount, _ts(heistHash))
end
Global.N_0x61326ee6df15b0ca = Global.NetworkEarnFromBendJob
Global.NetworkEarnFromMissionH = Global.NetworkEarnFromBendJob

--- NETWORK_EARN_FROM_BETTING
function Global.NetworkEarnFromBetting(amount, p1)
	return _in(0x827A5BA1A44ACA6D, amount, _ts(p1))
end

--- NativeDB Introduced: v2699
function Global.NetworkEarnFromBikeShopBusiness(p0, p1)
	return _in(0x2C5809EB9DF57257, p0, p1)
end

--- NativeDB Introduced: v2699
function Global.NetworkEarnFromBikerIncome(p0)
	return _in(0x71BEC32FA466E105, p0)
end

--- NETWORK_EARN_FROM_BOUNTY
function Global.NetworkEarnFromBounty(amount, p3)
	return _in(0x131BB5DA15453ACF, amount, _i, _i, p3)
end

--- NativeDB Introduced: v1493
function Global.NetworkEarnFromBusinessBattle(p0)
	return _in(0x42FCE14F50F27291, p0)
end
Global.N_0x42fce14f50f27291 = Global.NetworkEarnFromBusinessBattle

--- NativeDB Introduced: v1493
function Global.NetworkEarnFromBusinessHubSell(p0, p1, p2)
	return _in(0x0B39CF0D53F1C883, p0, p1, p2)
end
Global.N_0x0b39cf0d53f1c883 = Global.NetworkEarnFromBusinessHubSell

--- NativeDB Introduced: v2699
function Global.NetworkEarnFromBusinessHubSource(p0, p1, p2, p3)
	return _in(0x59498BC8B1C8B15C, p0, p1, p2, p3)
end

--- _NETWORK_EARN_FROM_BUSINESS_PRODUCT
function Global.NetworkEarnFromBusinessProduct(amount, p1, p2, p3)
	return _in(0x8586789730B10CAF, amount, p1, p2, p3)
end
Global.N_0x8586789730b10caf = Global.NetworkEarnFromBusinessProduct

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromCarclubMembership(p0)
	return _in(0xBC6227792A188E2E, p0)
end
Global.N_0xbc6227792a188e2e = Global.NetworkEarnFromCarclubMembership

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromCashingOut(amount)
	return _in(0xEFE9C9A1651B81E6, amount)
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCasinoAward(amount, hash)
	return _in(0x973A9781A34F8DEB, amount, _ch(hash))
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCasinoMissionParticipation(amount)
	return _in(0x09E8F18641BE2575, amount)
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCasinoMissionReward(amount)
	return _in(0x566FD402B25787DE, amount)
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCasinoStoryMissionReward(amount)
	return _in(0xAC95ED552157E092, amount)
end

--- NETWORK_EARN_FROM_CHALLENGE_WIN
function Global.NetworkEarnFromChallengeWin(p0, p2)
	return _in(0x2B171E6B2F64D8DF, p0, _i, p2)
end
Global.N_0x2b171e6b2f64d8df = Global.NetworkEarnFromChallengeWin

--- NativeDB Introduced: v1493
function Global.NetworkEarnFromClubManagementParticipation(p0)
	return _in(0xA75EAC69F59E96E7, p0)
end
Global.N_0xa75eac69f59e96e7 = Global.NetworkEarnFromClubManagementParticipation

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCollectablesActionFigures(amount)
	return _in(0x5517F90043466049, amount)
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCollectionItem(amount, p1)
	return _in(0x84FF63BD4966F33D, amount, p1)
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromCompleteCollection(amount)
	return _in(0x83AD64F53F4E9483, amount)
end

--- _NETWORK_EARN_FROM_CONTRABAND
function Global.NetworkEarnFromContraband(amount, p1)
	return _in(0xECA658CE2A4E5A72, amount, p1)
end
Global.N_0xeca658ce2a4e5a72 = Global.NetworkEarnFromContraband

--- NETWORK_EARN_FROM_CRATE_DROP
function Global.NetworkEarnFromCrateDrop(amount)
	return _in(0xB1CC1B9EC3007A2A, amount)
end
Global.N_0xb1cc1b9ec3007a2a = Global.NetworkEarnFromCrateDrop

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromCriminalMastermindBonus(p0, p1, p2)
	return _in(0xFA009A62990671D4, p0, p1, p2)
end
Global.N_0xd20d79671a598594 = Global.NetworkEarnFromCriminalMastermindBonus

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromDailyObjectiveEvent(amount)
	return _in(0x5128DF14A5BB86FC, amount)
end

--- NETWORK_EARN_FROM_DAILY_OBJECTIVES
function Global.NetworkEarnFromDailyObjectives(p0, p1, p2)
	return _in(0x6EA318C91C1A8786, p0, _ts(p1), p2)
end
Global.N_0x6ea318c91c1a8786 = Global.NetworkEarnFromDailyObjectives
Global.NetworkEarnFromDailyObjective = Global.NetworkEarnFromDailyObjectives

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromDarChallenge(amount, p1)
	return _in(0xCAC672087B4A24AB, amount, p1)
end

--- _NETWORK_EARN_FROM_DESTROYING_CONTRABAND
function Global.NetworkEarnFromDestroyingContraband(p0)
	return _in(0x84C0116D012E8FC2, p0)
end
Global.N_0x84c0116d012e8fc2 = Global.NetworkEarnFromDestroyingContraband

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromDoomsdayFinaleBonus(amount, vehicleHash)
	return _in(0x128A747F4A230952, amount, _ch(vehicleHash))
end

--- NativeDB Introduced: v1493
function Global.NetworkEarnFromFmbbBossWork(p0)
	return _in(0x1FDA0AA679C9919B, p0)
end
Global.N_0x1fda0aa679c9919b = Global.NetworkEarnFromFmbbBossWork

--- NativeDB Introduced: v1493
function Global.NetworkEarnFromFmbbPhonecallMission(p0)
	return _in(0xC5156361F26E2212, p0)
end
Global.N_0xc5156361f26e2212 = Global.NetworkEarnFromFmbbPhonecallMission

--- _NETWORK_EARN_FROM_GANG_PICKUP
function Global.NetworkEarnFromGangPickup(amount)
	return _in(0xA03D4ACE0A3284CE, amount)
end
Global.N_0xa03d4ace0a3284ce = Global.NetworkEarnFromGangPickup

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsAwards(amount, unk, p2)
	return _in(0xA9A31475F530DFDA, amount, _ts(unk), p2)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsElite(amount, unk, actIndex)
	return _in(0x2597A0D4A4FC2C77, amount, _ts(unk), actIndex)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsJobsFinale(amount, unk)
	return _in(0x1C121FC9545E0D52, amount, _ts(unk))
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsJobsPrepParticipation(amount)
	return _in(0xED26584F6BDCBBFD, amount)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsJobsSetup(amount, unk)
	return _in(0xA9160796D47A2CF8, amount, _ts(unk))
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsWages(amount, p1)
	return _in(0x2DCB19ABAB0380A8, amount, p1)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromGangopsWagesBonus(amount, p1)
	return _in(0x15BB2A5C757EB91F, amount, p1)
end

--- NativeDB Introduced: v1493
function Global.NetworkEarnFromHackerTruckMission(p0, amount, p2, p3)
	return _in(0xE8815FE993896AD3, p0, amount, p2, p3)
end

--- NETWORK_EARN_FROM_HOLDUPS
function Global.NetworkEarnFromHoldups(amount)
	return _in(0x45B8154E077D9E4D, amount)
end

--- NETWORK_EARN_FROM_IMPORT_EXPORT
function Global.NetworkEarnFromImportExport(amount, modelHash)
	return _in(0xF92A014A634442D6, amount, _ch(modelHash))
end

--- NETWORK_EARN_FROM_JOB
function Global.NetworkEarnFromJob(amount, p1)
	return _in(0xB2CC4836834E8A98, amount, _ts(p1))
end

--- NativeDB Introduced: v323
function Global.NetworkEarnFromJobBonus(p0)
	return _in(0x6816FB4416760775, p0, _i, _i)
end
Global.N_0x6816fb4416760775 = Global.NetworkEarnFromJobBonus
Global.NetworkEarnFromJobBonus = Global.NetworkEarnFromJobBonus

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromJobX2(amount, p1)
	return _in(0xDEBBF584665411D0, amount, _ts(p1))
end

--- NETWORK_EARN_FROM_NOT_BADSPORT
function Global.NetworkEarnFromNotBadsport(amount)
	return _in(0x4337511FA8221D36, amount)
end
Global.N_0x4337511fa8221d36 = Global.NetworkEarnFromNotBadsport

--- NETWORK_EARN_FROM_PERSONAL_VEHICLE
function Global.NetworkEarnFromPersonalVehicle(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x3F4D00167E41E0AD, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
Global.N_0x3f4d00167e41e0ad = Global.NetworkEarnFromPersonalVehicle

--- NETWORK_EARN_FROM_PICKUP
function Global.NetworkEarnFromPickup(amount)
	return _in(0xED1517D3AF17C698, amount)
end

--- _NETWORK_EARN_FROM_PREMIUM_JOB
function Global.NetworkEarnFromPremiumJob(amount, p1)
	return _in(0xC8407624CEF2354B, amount, _ts(p1))
end
Global.N_0xc8407624cef2354b = Global.NetworkEarnFromPremiumJob

--- NETWORK_EARN_FROM_PROPERTY
function Global.NetworkEarnFromProperty(amount, propertyName)
	return _in(0x849648349D77F5C5, amount, _ch(propertyName))
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromRcTimeTrial(amount)
	return _in(0xDFF49EE984E7AAE8, amount)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromRdrBonus(amount, p1)
	return _in(0x7A5349B773584675, amount, p1)
end

--- NETWORK_EARN_FROM_ROCKSTAR
function Global.NetworkEarnFromRockstar(amount)
	return _in(0x02CE1D6AC0FC73EA, amount)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromSellBase(amount, baseNameHash)
	return _in(0x0E1E2FF3F4EC11AA, amount, _ch(baseNameHash))
end

--- _NETWORK_EARN_FROM_SELL_BUNKER
function Global.NetworkEarnFromSellBunker(amount, bunkerHash)
	return _in(0x9251B6ABF2D0A5B4, amount, _ch(bunkerHash))
end
Global.N_0x9251b6abf2d0a5b4 = Global.NetworkEarnFromSellBunker

--- NativeDB Added Parameter 2: Any p1
-- NativeDB Added Parameter 3: Any p2
-- NativeDB Introduced: v1734
function Global.NetworkEarnFromSellingVehicle(amount)
	return _in(0x8BCB27A057DF7B7F, amount)
end

--- NativeDB Introduced: v2699
function Global.NetworkEarnFromSightseeing(p0, p1, p2, p3)
	return _in(0x45087AE480B233AC, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1180
function Global.NetworkEarnFromSmuggling(amount, p1, p2, p3)
	return _in(0xDEE612F2D71B0308, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1604
function Global.NetworkEarnFromSpinTheWheelCash(amount)
	return _in(0x676C48776CACBB5A, amount)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnFromTargetRefund(amount, p1)
	return _in(0x5B669CF2299A271F, amount, p1)
end

--- NativeDB Introduced: v1734
function Global.NetworkEarnFromTimeTrialWin(amount)
	return _in(0x0819DB99FD2FBBD8, amount)
end

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromTunerAward(p0, p1, p2)
	return _in(0xB846F547D3792DF6, p0, p1, p2)
end
Global.N_0xb846f547d3792df6 = Global.NetworkEarnFromTunerAward

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromTunerFinale(p0, p1, p2, p3, p4)
	return _in(0xBCB266247193AC61, p0, p1, p2, p3, p4)
end
Global.N_0xbcb266247193ac61 = Global.NetworkEarnFromTunerFinale

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromUpgradeAutoshopLocation(p0, p1)
	return _in(0xC10322A8D3E061EE, p0, p1)
end
Global.N_0xc10322a8d3e061ee = Global.NetworkEarnFromUpgradeAutoshopLocation

--- NETWORK_EARN_FROM_VEHICLE
function Global.NetworkEarnFromVehicle(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xB539BD8A4C1EECF8, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromVehicleAutoshop(p0, p1)
	return _in(0x533073E8A596008C, p0, p1)
end
Global.N_0x533073e8a596008c = Global.NetworkEarnFromVehicleAutoshop

--- NativeDB Introduced: v2372
function Global.NetworkEarnFromVehicleAutoshopBonus(p0)
	return _in(0xFE65AFE7308E32B2, p0)
end
Global.N_0xfe65afe7308e32b2 = Global.NetworkEarnFromVehicleAutoshopBonus

--- _NETWORK_EARN_FROM_VEHICLE_EXPORT
function Global.NetworkEarnFromVehicleExport(amount, p1, p2)
	return _in(0xEDEAD9A91EC768B3, amount, p1, p2)
end
Global.N_0xedead9a91ec768b3 = Global.NetworkEarnFromVehicleExport

--- NativeDB Introduced: v1180
function Global.NetworkEarnFromWagePayment(amount)
	return _in(0x35F8DA0E8A31EF1B, amount)
end

--- NativeDB Introduced: v1180
function Global.NetworkEarnFromWagePaymentBonus(amount)
	return _in(0x005ACA7100BD101D, amount)
end

--- NativeDB Added Parameter 1: int amount
-- NativeDB Added Parameter 2: int id
function Global.NetworkEarnFromWarehouse()
	return _in(0x3E4ADAFF1830F146)
end
Global.N_0x3e4adaff1830f146 = Global.NetworkEarnFromWarehouse

--- _NETWORK_EARN_GOON
function Global.NetworkEarnGoon(p0, p1, p2)
	return _in(0xCDA1C62BE2777802, p0, p1, p2)
end
Global.N_0xcda1c62be2777802 = Global.NetworkEarnGoon

--- NativeDB Introduced: v2189
function Global.NetworkEarnIslandHeist(p0, p1, p2, p3, p4, p5)
	return _in(0xD21D111C46BA9F15, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Introduced: v1290
function Global.NetworkEarnJobBonusFirstTimeBonus(p0, p1, p2)
	return _in(0x11B0A20C493F7E36, p0, p1, p2)
end
Global.N_0x11b0a20c493f7e36 = Global.NetworkEarnJobBonusFirstTimeBonus

--- NativeDB Introduced: v1290
function Global.NetworkEarnJobBonusHeistAward(p0, p1, p2)
	return _in(0x9D4FDBB035229669, p0, p1, p2)
end
Global.N_0x9d4fdbb035229669 = Global.NetworkEarnJobBonusHeistAward

--- NETWORK_END_TUTORIAL_SESSION
function Global.NetworkEndTutorialSession()
	return _in(0xD0AFAFF5A51D72F7)
end

--- NETWORK_ENTITY_AREA_DOES_EXIST
function Global.NetworkEntityAreaDoesExist(areaHandle)
	return _in(0xE64A3CA08DFA37A9, areaHandle, _r)
end
Global.N_0xe64a3ca08dfa37a9 = Global.NetworkEntityAreaDoesExist

--- NETWORK_ENTITY_AREA_IS_OCCUPIED
function Global.NetworkEntityAreaIsOccupied(areaHandle)
	return _in(0x4A2D4E8BF4265B0F, areaHandle, _r)
end
Global.N_0x4a2d4e8bf4265b0f = Global.NetworkEntityAreaIsOccupied

--- NETWORK_EXPLODE_HELI
-- @param heli Heli to explode
function Global.NetworkExplodeHeli(heli, isAudible, isInvisible, netScriptEntityId)
	return _in(0x2A5E0621DD815A9A, heli, isAudible, isInvisible, netScriptEntityId)
end
Global.N_0x2a5e0621dd815a9a = Global.NetworkExplodeHeli

--- In the console script dumps, this is only referenced once.
-- NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);
-- ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
-- Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
-- am_plane_takedown.c
-- network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
-- armenian2.c
-- network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
-- fm_horde_controler.c
-- network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
-- fm_mission_controller.c, has 6 hits so not going to list them.
-- Side note, setting the first parameter to 0 seems to mute sound or so?
-- Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
function Global.NetworkExplodeVehicle(vehicle, isAudible, isInvisible, p3)
	return _in(0x301A42153C9AD707, vehicle, isAudible, isInvisible, p3)
end

--- state - 0 does 5 fades
-- state - 1 does 6 fades
-- native is missing third argument, also boolean, setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL slow
function Global.NetworkFadeInEntity(entity, state)
	return _in(0x1F4ED342ACEFE62D, entity, state)
end

--- normal - transition like when your coming out of LSC
-- slow - transition like when you walk into a mission
function Global.NetworkFadeOutEntity(entity, normal, slow)
	return _in(0xDE564951F95E09ED, entity, normal, slow)
end

--- NETWORK_FIND_GAMERS_IN_CREW
function Global.NetworkFindGamersInCrew(p0)
	return _in(0xE532D6811B3A4D2A, p0, _r)
end
Global.N_0xe532d6811b3a4d2a = Global.NetworkFindGamersInCrew
Global.NetworkXAffectsGamers = Global.NetworkFindGamersInCrew

--- NETWORK_FIND_MATCHED_GAMERS
function Global.NetworkFindMatchedGamers(p0, p1, p2, p3)
	return _in(0xF7B2CFDE5C9F700D, p0, p1, p2, p3, _r)
end
Global.N_0xf7b2cfde5c9f700d = Global.NetworkFindMatchedGamers

--- NETWORK_FINISH_BROADCASTING_DATA
function Global.NetworkFinishBroadcastingData()
	return _in(0x64F62AFB081E260D)
end
Global.N_0x64f62afb081e260d = Global.NetworkFinishBroadcastingData

--- NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA
function Global.NetworkForceLocalUseOfSyncedSceneCamera(sceneId)
	return _in(0xC9B43A33D09CADA7, sceneId)
end
Global.N_0xc9b43a33d09cada7 = Global.NetworkForceLocalUseOfSyncedSceneCamera

--- NETWORK_GAMER_HAS_HEADSET
function Global.NetworkGamerHasHeadset(networkHandle)
	return _in(0xF2FD55CB574BCC55, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_GAMERTAG_FROM_HANDLE_PENDING
function Global.NetworkGamertagFromHandlePending()
	return _in(0xB071E27958EF4CF0, _r)
end

--- NETWORK_GAMERTAG_FROM_HANDLE_START
function Global.NetworkGamertagFromHandleStart(networkHandle)
	return _in(0x9F0C0A981D73FA56, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED
function Global.NetworkGamertagFromHandleSucceeded()
	return _in(0xFD00798DBA7523DD, _r)
end

--- NETWORK_GET_ACTIVITY_PLAYER_NUM
function Global.NetworkGetActivityPlayerNum(p0)
	return _in(0x73E2B500410DA5A2, p0, _ri)
end

--- NETWORK_GET_AGE_GROUP
function Global.NetworkGetAgeGroup()
	return _in(0x9614B71F8ADB982B, _ri)
end
Global.N_0x9614b71f8adb982b = Global.NetworkGetAgeGroup

--- NativeDB Introduced: v323
function Global.NetworkGetAverageLatencyForPlayer(player)
	return _in(0xD414BE129BB81B32, player, _rf)
end
Global.N_0xd414be129bb81b32 = Global.NetworkGetAverageLatencyForPlayer

--- Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
-- ```
-- ```
-- NativeDB Introduced: v323
function Global.NetworkGetAverageLatencyForPlayer_2(player)
	return _in(0x0E3A041ED6AC2B45, player, _rf)
end
Global.N_0x0e3a041ed6ac2b45 = Global.NetworkGetAverageLatencyForPlayer_2

--- NETWORK_GET_*
-- NativeDB Introduced: v323
function Global.NetworkGetAveragePacketLossForPlayer(player)
	return _in(0x350C23949E43686C, player, _rf)
end
Global.N_0x350c23949e43686c = Global.NetworkGetAveragePacketLossForPlayer

--- NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS
function Global.NetworkGetBackgroundLoadingRecipients(p0, p1)
	return _in(0x97A770BEEF227E2B, p0, p1, _i, _i, _r)
end
Global.N_0x97a770beef227e2b = Global.NetworkGetBackgroundLoadingRecipients

--- Return the content modifier id (the tunables context if you want) of a specific content.
-- It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
-- The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
-- 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
function Global.NetworkGetContentModifierListId(contentHash)
	return _in(0x187382F8A3E0A6C3, _ch(contentHash), _ri)
end
Global.N_0x187382f8a3e0a6c3 = Global.NetworkGetContentModifierListId
Global.GetTunablesContentModifierId = Global.NetworkGetContentModifierListId

--- NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU
function Global.NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(p0)
	return _in(0x74881E6BCAE2327C, _ii(p0) --[[ may be optional ]], _r)
end

--- _NETWORK_GET_DESTROYER_OF_ENTITY
function Global.NetworkGetDestroyerOfEntity(p0, p1, weaponHash)
	return _in(0x4CACA84440FA26F6, p0, p1, _ii(weaponHash) --[[ may be optional ]], _r)
end
Global.N_0x4caca84440fa26f6 = Global.NetworkGetDestroyerOfEntity
Global.NetworkGetDesroyerOfEntity = Global.NetworkGetDestroyerOfEntity

--- NETWORK_GET_DESTROYER_OF_NETWORK_ID
function Global.NetworkGetDestroyerOfNetworkId(netId, weaponHash)
	return _in(0x7A1ADEEF01740A24, netId, _ii(weaponHash) --[[ may be optional ]], _ri)
end

--- _NETWORK_GET_DISPLAYNAMES_FROM_HANDLES
-- @return Hard-coded to always return 0.
function Global.NetworkGetDisplaynamesFromHandles(p0, p1, p2)
	return _in(0x58CC181719256197, p0, p1, p2, _ri)
end
Global.N_0x58cc181719256197 = Global.NetworkGetDisplaynamesFromHandles

--- Get the local entity handle of the given network id
-- Through this native you can get back the entity that you previously converted to netid with [NetworkGetNetworkIdFromEntity](#\_0x9E35DAB6) or with the `ToNet` natives
-- @param netId the network id of the entity
-- @return The local entity handle of the network id
function Global.NetworkGetEntityFromNetworkId(netId)
	return _in(0xCE4E5D9B0A4FF560, netId, _ri)
end

--- NETWORK_GET_ENTITY_IS_LOCAL
function Global.NetworkGetEntityIsLocal(entity)
	return _in(0x0991549DE4D64762, entity, _r)
end

--- NETWORK_GET_ENTITY_IS_NETWORKED
function Global.NetworkGetEntityIsNetworked(entity)
	return _in(0xC7827959479DCC78, entity, _r)
end
Global.N_0xc7827959479dcc78 = Global.NetworkGetEntityIsNetworked

--- NETWORK_GET_ENTITY_KILLER_OF_PLAYER
function Global.NetworkGetEntityKillerOfPlayer(player, weaponHash)
	return _in(0x42B2DAA6B596F5F8, player, _ii(weaponHash) --[[ may be optional ]], _ri)
end

--- _NETWORK_GET_ENTITY_NET_SCRIPT_ID
function Global.NetworkGetEntityNetScriptId(entity)
	return _in(0x815F18AD865F057F, entity, _ri)
end
Global.N_0x815f18ad865f057f = Global.NetworkGetEntityNetScriptId

--- Returns the owner ID of the specified entity.
-- @param entity The entity to get the owner for.
-- @return On the server, the server ID of the entity owner. On the client, returns the player/slot ID of the entity owner.
function Global.NetworkGetEntityOwner(entity)
	return _in(0x526fee31, entity, _ri)
end

--- NativeDB Introduced: v323
function Global.NetworkGetEvcBalance()
	return _in(0x5D1E75F91C07DEE5, _ri)
end

--- NETWORK_GET_FOUND_GAMER
function Global.NetworkGetFoundGamer(p1)
	return _in(0x9DCFF2AFB68B3476, _i, p1, _r)
end

--- NETWORK_GET_FRIEND_COUNT
function Global.NetworkGetFriendCount()
	return _in(0x203F1CFD823B27A4, _ri)
end

--- NETWORK_GET_FRIEND_NAME
function Global.NetworkGetFriendName(friendIndex)
	return _in(0xE11EBBB2A783FE8B, friendIndex, _s)
end

--- _NETWORK_GET_FRIEND_NAME_FROM_INDEX
function Global.NetworkGetFriendNameFromIndex(friendIndex)
	return _in(0x4164F227D052E293, friendIndex, _s)
end

--- NETWORK_GET_GAMER_STATUS_FROM_QUEUE
function Global.NetworkGetGamerStatusFromQueue()
	return _in(0x2CC848A861D01493, _r)
end
Global.N_0x2cc848a861d01493 = Global.NetworkGetGamerStatusFromQueue

--- NETWORK_GET_GAMER_STATUS_RESULT
function Global.NetworkGetGamerStatusResult(p1)
	return _in(0x02A8BEC6FD9AF660, _i, p1, _r)
end
Global.N_0x02a8bec6fd9af660 = Global.NetworkGetGamerStatusResult

--- NETWORK_GET_GAMERTAG_FROM_HANDLE
function Global.NetworkGetGamertagFromHandle(networkHandle)
	return _in(0x426141162EBE5CDB, _ii(networkHandle) --[[ may be optional ]], _s)
end

--- NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK
function Global.NetworkGetGlobalMultiplayerClock()
	return _in(0x6D03BFBD643B2A02, _i, _i, _i)
end
Global.N_0x6d03bfbd643b2a02 = Global.NetworkGetGlobalMultiplayerClock
Global.NetworkGetServerTime = Global.NetworkGetGlobalMultiplayerClock

--- scriptName examples:
-- "freemode", "AM_CR_SecurityVan", ...
-- Most of the time, these values are used:
-- p1 = -1
-- p2 = 0
function Global.NetworkGetHostOfScript(scriptName, p1, p2)
	return _in(0x1D6A14F1F9A736FC, _ts(scriptName), p1, p2, _ri)
end

--- NETWORK_GET_HOST_OF_THIS_SCRIPT
function Global.NetworkGetHostOfThisScript()
	return _in(0xC7B4D79B01FA7A5C, _ri)
end

--- NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT
function Global.NetworkGetInstanceIdOfThisScript()
	return _in(0x638A3A81733086DB, _ri)
end
Global.N_0x638a3a81733086db = Global.NetworkGetInstanceIdOfThisScript

--- NativeDB Introduced: v323
function Global.NetworkGetIsHighEarner()
	return _in(0xFB2456B2040A6A67, _r)
end

--- Used by NetBlender
function Global.NetworkGetLastVelocityReceived(entity)
	return _in(0x33DE49EDF4DDE77A, entity, _rv)
end
Global.N_0x33de49edf4dde77a = Global.NetworkGetLastVelocityReceived

--- Retrieves the local player's NetworkHandle* and stores it in the given buffer.
-- * Currently unknown struct
function Global.NetworkGetLocalHandle(bufferSize)
	return _in(0xE86051786B66CD8E, _i, bufferSize)
end

--- Returns a local synchronized scene handle of a networked synchronised scene.
-- @param netSceneId Network synchronised scene ID (returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526)).
-- @return Local synchronized scene ID. This value can be used with natives such as: [`GET_SYNCHRONIZED_SCENE_PHASE`](#\_0xE4A310B1D7FA73CC), [`GET_SYNCHRONIZED_SCENE_RATE`](#\_0xD80932D577274D40), [`IS_SYNCHRONIZED_SCENE_RUNNING`](#\_0x25D39B935A038A26) and more.
function Global.NetworkGetLocalSceneFromNetworkId(netSceneId)
	return _in(0x02C40BF885C567B6, netSceneId, _ri)
end
Global.N_0x02c40bf885c567b6 = Global.NetworkGetLocalSceneFromNetworkId
Global.NetworkUnlinkNetworkedSynchronisedScene = Global.NetworkGetLocalSceneFromNetworkId
Global.NetworkConvertSynchronisedSceneToSynchronizedScene = Global.NetworkGetLocalSceneFromNetworkId

--- NETWORK_GET_MAX_FRIENDS
function Global.NetworkGetMaxFriends()
	return _in(0xAFEBB0D5D8F687D2, _ri)
end

--- Seems to always return 0, but it's used in quite a few loops.
-- for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
-- {
-- if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
-- {
-- var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
function Global.NetworkGetMaxNumParticipants()
	return _in(0xA6C90FBC38E395EE, _ri)
end
Global.NetworkGetNumParticipantsHost = Global.NetworkGetMaxNumParticipants

--- Get the network id of the given entity
-- An entity network id represents a given entity for other clients, it's a handle shared between clients, can be reconverted to a client entity handle.\
-- These (entity network IDs) can and will be reused, the network id will not change.
-- If you need to refer to an entity across machines (clients, or the server), you should use its network id.
-- Read more at [Network and local IDs](https://docs.fivem.net/docs/scripting-manual/networking/ids/)
-- @param entity the handle of the entity from which the network id should be taken
-- @return The network id of the given entity
function Global.NetworkGetNetworkIdFromEntity(entity)
	return _in(0xA11700682F3AD45C, entity, _ri)
end

--- _NETWORK_GET_NUM_BODY_TRACKERS
function Global.NetworkGetNumBodyTrackers()
	return _in(0xD38C4A6D047C019D, _ri)
end
Global.N_0xd38c4a6d047c019d = Global.NetworkGetNumBodyTrackers

--- Returns the amount of players connected in the current session. Only works when connected to a session/server.
function Global.NetworkGetNumConnectedPlayers()
	return _in(0xA4A79DD2D9600654, _ri)
end

--- NETWORK_GET_NUM_FOUND_GAMERS
function Global.NetworkGetNumFoundGamers()
	return _in(0xA1B043EE79A916FB, _ri)
end

--- NETWORK_GET_NUM_PARTICIPANTS
function Global.NetworkGetNumParticipants()
	return _in(0x18D0456E86604654, _ri)
end

--- NETWORK_GET_NUM_PRESENCE_INVITES
function Global.NetworkGetNumPresenceInvites()
	return _in(0xCEFA968912D0F78D, _ri)
end
Global.N_0xcefa968912d0f78d = Global.NetworkGetNumPresenceInvites

--- NETWORK_GET_NUM_SCRIPT_PARTICIPANTS
function Global.NetworkGetNumScriptParticipants(p1, p2)
	return _in(0x3658E8CD94FC121A, _i, p1, p2, _ri)
end
Global.N_0x3658e8cd94fc121a = Global.NetworkGetNumScriptParticipants

--- NativeDB Introduced: v323
function Global.NetworkGetNumUnackedForPlayer(player)
	return _in(0xFF8FCF9FFC458A1C, player, _ri)
end

--- NETWORK_GET_*
-- NativeDB Introduced: v323
function Global.NetworkGetOldestResendCountForPlayer(player)
	return _in(0x52C1EADAF7B10302, player, _ri)
end

--- NETWORK_GET_PARTICIPANT_INDEX
function Global.NetworkGetParticipantIndex(index)
	return _in(0x1B84DF6AF2A46938, index, _ri)
end

--- NETWORK_GET_PLATFORM_PARTY_MEMBERS
function Global.NetworkGetPlatformPartyMembers(dataSize)
	return _in(0x120364DE2845DAF8, _i, dataSize, _ri)
end
Global.N_0x120364de2845daf8 = Global.NetworkGetPlatformPartyMembers

--- _NETWORK_GET_PLATFORM_PARTY_UNK
function Global.NetworkGetPlatformPartyUnk()
	return _in(0x01ABCE5E7CBDA196, _ri)
end
Global.N_0x01abce5e7cbda196 = Global.NetworkGetPlatformPartyUnk

--- Returns the coordinates of another player.
-- Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
-- @param player The player id, MUST be another player.
-- @return A Vector3 containing the coordinates of another player.
function Global.NetworkGetPlayerCoords(player)
	return _in(0x125E6D638B8605D4, player, _rv)
end
Global.N_0x125e6d638b8605d4 = Global.NetworkGetPlayerCoords

--- NETWORK_GET_PLAYER_FROM_GAMER_HANDLE
function Global.NetworkGetPlayerFromGamerHandle(networkHandle)
	return _in(0xCE5F689CF5A0A49D, _ii(networkHandle) --[[ may be optional ]], _ri)
end

--- NETWORK_GET_PLAYER_INDEX
function Global.NetworkGetPlayerIndex(player)
	return _in(0x24FB80D107371267, player, _ri)
end

--- Returns the Player associated to a given Ped when in an online session.
function Global.NetworkGetPlayerIndexFromPed(ped)
	return _in(0x6C0E2E0125610278, ped, _ri)
end
Global.N_0x6c0e2e0125610278 = Global.NetworkGetPlayerIndexFromPed

--- NETWORK_GET_PLAYER_LOUDNESS
function Global.NetworkGetPlayerLoudness(player)
	return _in(0x21A1684A25C2867F, player, _rf)
end

--- NETWORK_GET_PLAYER_OWNS_WAYPOINT
function Global.NetworkGetPlayerOwnsWaypoint(player)
	return _in(0x82377B65E943F72D, player, _r)
end
Global.N_0x82377b65e943f72d = Global.NetworkGetPlayerOwnsWaypoint

--- NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE
function Global.NetworkGetPlayerTutorialSessionInstance(player)
	return _in(0x3B39236746714134, player, _ri)
end
Global.N_0x3b39236746714134 = Global.NetworkGetPlayerTutorialSessionInstance

--- NativeDB Introduced: v2372
function Global.NetworkGetPositionHashOfThisScript()
	return _in(0x257ED0FADF750BCF, _ri)
end
Global.N_0x257ed0fadf750bcf = Global.NetworkGetPositionHashOfThisScript

--- NETWORK_GET_PRESENCE_INVITE_CONTENT_ID
function Global.NetworkGetPresenceInviteContentId(p0)
	return _in(0x24409FC4C55CB22D, p0, _s)
end
Global.N_0x24409fc4c55cb22d = Global.NetworkGetPresenceInviteContentId

--- NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN
function Global.NetworkGetPresenceInviteFromAdmin(p0)
	return _in(0x3DBF2DF0AEB7D289, p0, _r)
end
Global.N_0x3dbf2df0aeb7d289 = Global.NetworkGetPresenceInviteFromAdmin

--- NETWORK_GET_PRESENCE_INVITE_HANDLE
function Global.NetworkGetPresenceInviteHandle(p0, p1)
	return _in(0x38D5B0FEBB086F75, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- NETWORK_GET_PRESENCE_INVITE_ID
function Global.NetworkGetPresenceInviteId(p0)
	return _in(0xDFF09646E12EC386, p0, _ri)
end
Global.N_0xdff09646e12ec386 = Global.NetworkGetPresenceInviteId

--- Returns the Name of the inviter of the specific selected Invite.
-- @return The Name of the inviter.
function Global.NetworkGetPresenceInviteInviter(inviteIndex)
	return _in(0x4962CC4AA2F345B7, inviteIndex, _s)
end
Global.N_0x4962cc4aa2f345b7 = Global.NetworkGetPresenceInviteInviter

--- NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT
function Global.NetworkGetPresenceInviteIsTournament(p0)
	return _in(0x8806CEBFABD3CE05, p0, _r)
end
Global.N_0x8806cebfabd3ce05 = Global.NetworkGetPresenceInviteIsTournament

--- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT
function Global.NetworkGetPresenceInvitePlaylistCurrent(p0)
	return _in(0x728C4CC7920CD102, p0, _ri)
end
Global.N_0x728c4cc7920cd102 = Global.NetworkGetPresenceInvitePlaylistCurrent

--- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH
function Global.NetworkGetPresenceInvitePlaylistLength(p0)
	return _in(0xD39B3FFF8FFDD5BF, p0, _ri)
end
Global.N_0xd39b3fff8ffdd5bf = Global.NetworkGetPresenceInvitePlaylistLength

--- The Native returns a hash of the session id as string from the specific invite index!
-- @return A hash of the session id.
function Global.NetworkGetPresenceInviteSessionId(inviteIndex)
	return _in(0x26E1CD96B0903D60, inviteIndex, _ri)
end
Global.N_0x26e1cd96b0903d60 = Global.NetworkGetPresenceInviteSessionId

--- NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL
function Global.NetworkGetPrimaryClanDataCancel()
	return _in(0x042E4B70B93E6054)
end
Global.N_0x042e4b70b93e6054 = Global.NetworkGetPrimaryClanDataCancel

--- NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR
function Global.NetworkGetPrimaryClanDataClear()
	return _in(0x9AA46BADAD0E27ED, _ri)
end
Global.N_0x9aa46badad0e27ed = Global.NetworkGetPrimaryClanDataClear

--- NETWORK_GET_PRIMARY_CLAN_DATA_NEW
function Global.NetworkGetPrimaryClanDataNew()
	return _in(0xC080FF658B2E41DA, _i, _i, _r)
end

--- NETWORK_GET_PRIMARY_CLAN_DATA_PENDING
function Global.NetworkGetPrimaryClanDataPending()
	return _in(0xB5074DB804E28CE7, _ri)
end
Global.N_0xb5074db804e28ce7 = Global.NetworkGetPrimaryClanDataPending

--- NETWORK_GET_PRIMARY_CLAN_DATA_START
function Global.NetworkGetPrimaryClanDataStart(p1)
	return _in(0xCE86D8191B762107, _i, p1, _r)
end

--- NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS
function Global.NetworkGetPrimaryClanDataSuccess()
	return _in(0x5B4F04F19376A0BA, _ri)
end
Global.N_0x5b4f04f19376a0ba = Global.NetworkGetPrimaryClanDataSuccess

--- NativeDB Introduced: v323
function Global.NetworkGetPvcBalance()
	return _in(0x4F54F3B6C202FB4E, _ri)
end

--- Same as 0xEA560AC9EEB1E19B.
-- ```
-- ```
-- Same as 0xEA560AC9EEB1E19B.
-- NativeDB Introduced: v323
function Global.NetworkGetPvcTransferBalance()
	return _in(0x13A8DE2FD77D04F3, _ri)
end
Global.NetworkGetRemainingVcDailyTransfers = Global.NetworkGetPvcTransferBalance

--- NETWORK_GET_RANDOM_INT
function Global.NetworkGetRandomInt()
	return _in(0x599E4FA1F87EB5FF, _ri)
end
Global.N_0x599e4fa1f87eb5ff = Global.NetworkGetRandomInt

--- Same as GET_RANDOM_INT_IN_RANGE
function Global.NetworkGetRandomIntRanged(rangeStart, rangeEnd)
	return _in(0xE30CF56F1EFA5F43, rangeStart, rangeEnd, _ri)
end
Global.N_0xe30cf56f1efa5f43 = Global.NetworkGetRandomIntRanged
Global.NetworkGetRandomIntInRange = Global.NetworkGetRandomIntRanged

--- Same as 0x13A8DE2FD77D04F3.
-- NativeDB Introduced: v323
function Global.NetworkGetRemainingTransferBalance()
	return _in(0xEA560AC9EEB1E19B, _ri)
end
Global.NetworkGetRemainingVcDailyTransfers_2 = Global.NetworkGetRemainingTransferBalance

--- Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
function Global.NetworkGetRespawnResult(randomInt)
	return _in(0x371EA43692861CF1, randomInt, _v, _f)
end

--- NETWORK_GET_RESPAWN_RESULT_FLAGS
function Global.NetworkGetRespawnResultFlags(p0)
	return _in(0x6C34F1208B8923FD, p0, _ri)
end
Global.N_0x6c34f1208b8923fd = Global.NetworkGetRespawnResultFlags

--- _NETWORK_GET_ROS_PRIVILEGE_24
function Global.NetworkGetRosPrivilege_24()
	return _in(0x593570C289A77688, _r)
end
Global.N_0x593570c289a77688 = Global.NetworkGetRosPrivilege_24

--- _NETWORK_GET_ROS_PRIVILEGE_25
function Global.NetworkGetRosPrivilege_25()
	return _in(0x91B87C55093DE351, _r)
end
Global.N_0x91b87c55093de351 = Global.NetworkGetRosPrivilege_25

--- _NETWORK_GET_ROS_PRIVILEGE_9
function Global.NetworkGetRosPrivilege_9()
	return _in(0x66B59CFFD78467AF, _r)
end
Global.N_0x66b59cffd78467af = Global.NetworkGetRosPrivilege_9

--- NETWORK_GET_SCRIPT_STATUS
function Global.NetworkGetScriptStatus()
	return _in(0x57D158647A6BFABF, _ri)
end

--- NETWORK_GET_STRING_BANK_BALANCE
function Global.NetworkGetStringBankBalance()
	return _in(0xA6FA3979BED01B81, _s)
end
Global.N_0xa6fa3979bed01b81 = Global.NetworkGetStringBankBalance
Global.NetworkGetBankBalanceString = Global.NetworkGetStringBankBalance

--- NativeDB Introduced: v323
function Global.NetworkGetStringBankWalletBalance()
	return _in(0x700AF71AE615E6DD, _s)
end

--- NativeDB Introduced: v323
function Global.NetworkGetStringWalletBalance(characterSlot)
	return _in(0xF9B10B529DCFB33B, characterSlot, _s)
end

--- NETWORK_GET_TALKER_PROXIMITY
function Global.NetworkGetTalkerProximity()
	return _in(0x84F0F13120B4E098, _rf)
end

--- _NETWORK_GET_TARGETING_MODE
function Global.NetworkGetTargetingMode()
	return _in(0xDFFA5BE8381C3314, _ri)
end
Global.N_0xdffa5be8381c3314 = Global.NetworkGetTargetingMode

--- NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT
function Global.NetworkGetThisScriptIsNetworkScript()
	return _in(0x2910669969E9535E, _r)
end

--- NETWORK_GET_TIMEOUT_TIME
function Global.NetworkGetTimeoutTime()
	return _in(0x5ED0356A0CE3A34F, _ri)
end
Global.N_0x5ed0356a0ce3a34f = Global.NetworkGetTimeoutTime

--- NETWORK_GET_TOTAL_NUM_PLAYERS
function Global.NetworkGetTotalNumPlayers()
	return _in(0xCF61D4B4702EE9EB, _ri)
end
Global.N_0xcf61d4b4702ee9eb = Global.NetworkGetTotalNumPlayers

--- NETWORK_GET_TRANSITION_HOST
function Global.NetworkGetTransitionHost(networkHandle)
	return _in(0x65042B9774C4435E, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- Returns count.
function Global.NetworkGetTransitionMembers(dataCount)
	return _in(0x73B000F7FBC55829, _i, dataCount, _ri)
end

--- Actually returns the version (TUNABLE_VERSION)
function Global.NetworkGetTunableCloudCrc()
	return _in(0x10BD227A753B0D84, _ri)
end
Global.N_0x10bd227a753b0d84 = Global.NetworkGetTunableCloudCrc
Global.NetworkGetTunablesVersion = Global.NetworkGetTunableCloudCrc

--- NETWORK_*
-- NativeDB Introduced: v323
function Global.NetworkGetUnreliableResendCountForPlayer(player)
	return _in(0x3765C3A3E8192E10, player, _ri)
end
Global.N_0x3765c3a3e8192e10 = Global.NetworkGetUnreliableResendCountForPlayer

--- NETWORK_GET_VC_BALANCE
function Global.NetworkGetVcBalance()
	return _in(0x5CBAD97E059E1B94, _ri)
end
Global.N_0x5cbad97e059e1b94 = Global.NetworkGetVcBalance

--- NETWORK_GET_VC_BANK_BALANCE
function Global.NetworkGetVcBankBalance()
	return _in(0x76EF28DA05EA395A, _ri)
end
Global.N_0x76ef28da05ea395a = Global.NetworkGetVcBankBalance

--- Returns true if bank balance >= amount.
-- NativeDB Introduced: v323
function Global.NetworkGetVcBankBalanceIsNotLessThan(amount)
	return _in(0xA31FD6A0865B6D14, amount, _r)
end

--- Returns true if bank balance + wallet balance >= amount.
function Global.NetworkGetVcBankWalletBalanceIsNotLessThan(amount, characterSlot)
	return _in(0xDC18531D7019A535, amount, characterSlot, _r)
end
Global.N_0xdc18531d7019a535 = Global.NetworkGetVcBankWalletBalanceIsNotLessThan

--- NETWORK_GET_VC_WALLET_BALANCE
function Global.NetworkGetVcWalletBalance(characterSlot)
	return _in(0xA40F9C2623F6A8B5, characterSlot, _ri)
end
Global.N_0xa40f9c2623f6a8b5 = Global.NetworkGetVcWalletBalance

--- Returns true if wallet balance >= amount.
-- NativeDB Introduced: v323
function Global.NetworkGetVcWalletBalanceIsNotLessThan(amount, characterSlot)
	return _in(0xED5AB8860415BABA, amount, characterSlot, _r)
end

--- NETWORK_GIVE_PLAYER_JOBSHARE_CASH
function Global.NetworkGivePlayerJobshareCash(amount, networkHandle)
	return _in(0xFB18DF9CB95E0105, amount, _ii(networkHandle) --[[ may be optional ]])
end

--- NETWORK_HANDLE_FROM_FRIEND
function Global.NetworkHandleFromFriend(friendIndex, bufferSize)
	return _in(0xD45CB817D7E177D2, friendIndex, _i, bufferSize)
end

--- Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.
-- * Currently unknown struct
function Global.NetworkHandleFromMemberId(memberId, bufferSize)
	return _in(0xA0FD21BED61E5C4C, _ts(memberId), _i, bufferSize)
end

--- Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.
-- * Currently unknown struct
-- Example:
-- std::vector<UINT64> GetPlayerNetworkHandle(Player player) {
-- const int size = 13;
-- uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();
-- NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);
-- for (int i = 0; i < size; i++) {
-- Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);
-- }
-- std::vector<UINT64> result(buffer, buffer + sizeof(buffer));
-- return result;
-- }
function Global.NetworkHandleFromPlayer(player, bufferSize)
	return _in(0x388EB2B86C73B6B3, player, _i, bufferSize)
end

--- Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.
-- * Currently unknown struct
function Global.NetworkHandleFromUserId(userId, bufferSize)
	return _in(0xDCD51DD8F87AEC5C, _ts(userId), _i, bufferSize)
end

--- _NETWORK_HAS_AGE_RESTRICTED_PROFILE
function Global.NetworkHasAgeRestrictedProfile()
	return _in(0x1353F87E89946207, _r)
end
Global.N_0x1353f87e89946207 = Global.NetworkHasAgeRestrictedProfile

--- NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA
function Global.NetworkHasCachedPlayerHeadBlendData(player)
	return _in(0x237D5336A9A54108, player, _r)
end
Global.N_0x237d5336a9a54108 = Global.NetworkHasCachedPlayerHeadBlendData

--- NETWORK_HAS_CONTROL_OF_DOOR
function Global.NetworkHasControlOfDoor(doorHash)
	return _in(0xCB3C68ADB06195DF, _ch(doorHash), _r)
end

--- NETWORK_HAS_CONTROL_OF_ENTITY
function Global.NetworkHasControlOfEntity(entity)
	return _in(0x01BF60A500E28887, entity, _r)
end

--- NETWORK_HAS_CONTROL_OF_NETWORK_ID
function Global.NetworkHasControlOfNetworkId(netId)
	return _in(0x4D36070FE0215186, netId, _r)
end

--- NETWORK_HAS_CONTROL_OF_PICKUP
function Global.NetworkHasControlOfPickup(pickup)
	return _in(0x5BC9495F0B3B6FA6, pickup, _r)
end

--- NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD
function Global.NetworkHasEntityBeenRegisteredWithThisThread(entity)
	return _in(0xB07D3185E11657A5, entity, _r)
end
Global.N_0xb07d3185e11657a5 = Global.NetworkHasEntityBeenRegisteredWithThisThread

--- NETWORK_HAS_FOLLOW_INVITE
function Global.NetworkHasFollowInvite()
	return _in(0x76D9B976C4C09FDE, _r)
end
Global.N_0x76d9b976c4c09fde = Global.NetworkHasFollowInvite

--- Returns true if dinput8.dll is present in the game directory.
-- You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
function Global.NetworkHasGameBeenAltered()
	return _in(0x659CF2EF7F550C4F, _r)
end
Global.N_0x659cf2ef7f550c4f = Global.NetworkHasGameBeenAltered

--- NETWORK_HAS_HEADSET
function Global.NetworkHasHeadset()
	return _in(0xE870F9F1F7B4F1FA, _r)
end

--- NETWORK_HAS_INVITE_BEEN_ACKED
function Global.NetworkHasInviteBeenAcked(networkHandle)
	return _in(0x71DC455F5CD1C2B1, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x71dc455f5cd1c2b1 = Global.NetworkHasInviteBeenAcked

--- NETWORK_HAS_INVITED_GAMER
function Global.NetworkHasInvitedGamer(p0)
	return _in(0x4D86CD31E8976ECE, _ii(p0) --[[ may be optional ]], _r)
end

--- NETWORK_HAS_INVITED_GAMER_TO_TRANSITION
function Global.NetworkHasInvitedGamerToTransition(p0)
	return _in(0x7284A47B3540E6CF, _ii(p0) --[[ may be optional ]], _r)
end

--- NETWORK_HAS_PENDING_INVITE
function Global.NetworkHasPendingInvite()
	return _in(0xAC8C7B9B88C4A668, _r)
end

--- NETWORK_HAS_PLAYER_STARTED_TRANSITION
function Global.NetworkHasPlayerStartedTransition(player)
	return _in(0x9AC9CCBFA8C29795, player, _r)
end

--- NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA
function Global.NetworkHasReceivedHostBroadcastData()
	return _in(0x5D10B3795F3FC886, _r)
end
Global.N_0x5d10b3795f3fc886 = Global.NetworkHasReceivedHostBroadcastData

--- index is always 18 in scripts
function Global.NetworkHasRosPrivilege(index)
	return _in(0xA699957E60D80214, index, _r)
end
Global.N_0xa699957e60d80214 = Global.NetworkHasRosPrivilege

--- NETWORK_HAS_ROS_PRIVILEGE_END_DATE
function Global.NetworkHasRosPrivilegeEndDate(privilege)
	return _in(0xC22912B1D85F26B1, privilege, _i, _v, _r)
end
Global.N_0xc22912b1d85f26b1 = Global.NetworkHasRosPrivilegeEndDate
Global.NetworkGetBanData = Global.NetworkHasRosPrivilegeEndDate

--- NETWORK_HAS_SOCIAL_CLUB_ACCOUNT
function Global.NetworkHasSocialClubAccount()
	return _in(0x67A5589628E0CFF6, _r)
end
Global.N_0x67a5589628e0cff6 = Global.NetworkHasSocialClubAccount

--- NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV
function Global.NetworkHasSocialNetworkingSharingPriv()
	return _in(0x76BF03FADBF154F5, _r)
end
Global.N_0x76bf03fadbf154f5 = Global.NetworkHasSocialNetworkingSharingPriv

--- NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED
function Global.NetworkHasTransitionInviteBeenAcked(networkHandle)
	return _in(0x3F9990BF5F22759C, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x3f9990bf5f22759c = Global.NetworkHasTransitionInviteBeenAcked

--- Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
function Global.NetworkHasValidRosCredentials()
	return _in(0x85443FF4C328F53B, _r)
end
Global.N_0x85443ff4c328f53b = Global.NetworkHasValidRosCredentials
Global.NetworkAreRosAvailable = Global.NetworkHasValidRosCredentials
Global.NetworkHaveJustUploadLater = Global.NetworkHasValidRosCredentials

--- _NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT
function Global.NetworkHasViewGamerUserContentResult(networkHandle)
	return _in(0xCCA4318E1AB03F1F, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0xcca4318e1ab03f1f = Global.NetworkHasViewGamerUserContentResult

--- NETWORK_HASH_FROM_GAMER_HANDLE
function Global.NetworkHashFromGamerHandle(networkHandle)
	return _in(0x58575AC3CF2CA8EC, _ii(networkHandle) --[[ may be optional ]], _ri)
end
Global.N_0x58575ac3cf2ca8ec = Global.NetworkHashFromGamerHandle
Global.NetworkHashFromGamerHandle = Global.NetworkHashFromGamerHandle

--- NETWORK_HASH_FROM_PLAYER_HANDLE
function Global.NetworkHashFromPlayerHandle(player)
	return _in(0xBC1D768F2F5D6C05, player, _ri)
end
Global.N_0xbc1d768f2f5d6c05 = Global.NetworkHashFromPlayerHandle
Global.NetworkHashFromPlayerHandle = Global.NetworkHashFromPlayerHandle

--- NETWORK_HAVE_COMMUNICATION_PRIVILEGES
function Global.NetworkHaveCommunicationPrivileges(p0, player)
	return _in(0xAEEF48CDF5B6CE7C, p0, player, _r)
end
Global.N_0xaeef48cdf5b6ce7c = Global.NetworkHaveCommunicationPrivileges

--- _NETWORK_HAVE_ONLINE_PRIVILEGE_2
function Global.NetworkHaveOnlinePrivilege_2()
	return _in(0x5EA784D197556507, _r)
end
Global.N_0x5ea784d197556507 = Global.NetworkHaveOnlinePrivilege_2

--- NETWORK_HAVE_ONLINE_PRIVILEGES
function Global.NetworkHaveOnlinePrivileges()
	return _in(0x25CB5A9F37BFD063, _r)
end

--- NETWORK_HAVE_ROS_BANNED_PRIV
function Global.NetworkHaveRosBannedPriv()
	return _in(0x8020A73847E0CA7D, _r)
end
Global.IsRockstarBanned = Global.NetworkHaveRosBannedPriv
Global.NetworkHasPlayerBeenBanned = Global.NetworkHaveRosBannedPriv

--- NETWORK_HAVE_ROS_CREATE_TICKET_PRIV
function Global.NetworkHaveRosCreateTicketPriv()
	return _in(0xA0AD7E2AF5349F61, _r)
end
Global.IsSocialclubBanned = Global.NetworkHaveRosCreateTicketPriv
Global.NetworkHaveSocialClubPrivilege = Global.NetworkHaveRosCreateTicketPriv

--- NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV
function Global.NetworkHaveRosLeaderboardWritePriv()
	return _in(0x422D396F80A96547, _r)
end
Global.N_0x422d396f80a96547 = Global.NetworkHaveRosLeaderboardWritePriv
Global.NetworkGetRosPrivilege_4 = Global.NetworkHaveRosLeaderboardWritePriv

--- NETWORK_HAVE_ROS_MULTIPLAYER_PRIV
function Global.NetworkHaveRosMultiplayerPriv()
	return _in(0x5F91D5D0B36AA310, _r)
end
Global.IsPlayerBanned = Global.NetworkHaveRosMultiplayerPriv
Global.CanPlayOnline = Global.NetworkHaveRosMultiplayerPriv
Global.NetworkGetRosPrivilege_3 = Global.NetworkHaveRosMultiplayerPriv

--- NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV
function Global.NetworkHaveRosSocialClubPriv()
	return _in(0x606E4D3E3CCCF3EB, _r)
end
Global.N_0x606e4d3e3cccf3eb = Global.NetworkHaveRosSocialClubPriv
Global.NetworkGetRosPrivilege_10 = Global.NetworkHaveRosSocialClubPriv

--- NETWORK_HAVE_USER_CONTENT_PRIVILEGES
function Global.NetworkHaveUserContentPrivileges(p0)
	return _in(0x72D918C99BCACC54, p0, _r)
end
Global.N_0x72d918c99bcacc54 = Global.NetworkHaveUserContentPrivileges

--- From what I can tell it looks like it does the following:
-- Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
-- You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
-- @param p0 Unknown int
-- @param p1 Unknown int
-- @param p2 Unknown int
-- @param p3 Unknown int
-- @param p4 Unknown always 0 in decompiled scripts
-- @param p5 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p6 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p7 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p8 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p9 Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
-- @return Probably a bool indicating if the transition was created.
function Global.NetworkHostTransition(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA60BB5CE242BB254, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r)
end

--- NETWORK_INITIALIZE_CASH
function Global.NetworkInitializeCash(wallet, bank)
	return _in(0x3DA5ECD1A56CBA6D, wallet, bank)
end
Global.N_0x3da5ecd1a56cba6d = Global.NetworkInitializeCash

--- NETWORK_INVITE_GAMERS
function Global.NetworkInviteGamers(p1)
	return _in(0x9D80CD1D0E6327DE, _i, p1, _i, _i, _r)
end

--- NETWORK_INVITE_GAMERS_TO_TRANSITION
function Global.NetworkInviteGamersToTransition(p1)
	return _in(0x4A595C32F77DFF76, _i, p1, _r)
end

--- NETWORK_IS_ACTIVITY_SESSION
function Global.NetworkIsActivitySession()
	return _in(0x05095437424397FA, _r)
end

--- NETWORK_IS_ACTIVITY_SPECTATOR
function Global.NetworkIsActivitySpectator()
	return _in(0x12103B9E0C9F92FB, _r)
end

--- NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE
function Global.NetworkIsActivitySpectatorFromHandle(networkHandle)
	return _in(0x2763BBAA72A7BCB9, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_ADDING_FRIEND
function Global.NetworkIsAddingFriend()
	return _in(0x6EA101606F6E4D81, _ri)
end

--- NETWORK_IS_CABLE_CONNECTED
function Global.NetworkIsCableConnected()
	return _in(0xEFFB25453D8600F9, _r)
end
Global.N_0xeffb25453d8600f9 = Global.NetworkIsCableConnected

--- This would be nice to see if someone is in party chat, but 2 sad notes.
-- 1) It only becomes true if said person is speaking in that party at the time.
-- 2) It will never, become true unless you are in that party with said person.
function Global.NetworkIsChattingInPlatformParty(networkHandle)
	return _in(0x8DE9945BCC9AEC52, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_CLOCK_TIME_OVERRIDDEN
function Global.NetworkIsClockTimeOverridden()
	return _in(0xD7C95D322FF57522, _r)
end
Global.N_0xd7c95d322ff57522 = Global.NetworkIsClockTimeOverridden

--- NETWORK_IS_CLOUD_AVAILABLE
function Global.NetworkIsCloudAvailable()
	return _in(0x9A4CF4F48AD77302, _r)
end

--- NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING
function Global.NetworkIsCloudBackgroundScriptRequestPending()
	return _in(0x8132C0EB8B2B3293, _r)
end
Global.N_0x8132c0eb8b2b3293 = Global.NetworkIsCloudBackgroundScriptRequestPending
Global.HasBgScriptBeenDownloaded = Global.NetworkIsCloudBackgroundScriptRequestPending
Global.NetworkIsCloudBackgroundScriptsRequestPending = Global.NetworkIsCloudBackgroundScriptRequestPending

--- NETWORK_IS_*
-- NativeDB Introduced: v323
function Global.NetworkIsConnectionEndpointRelayServer(player)
	return _in(0x16D3D49902F697BB, player, _r)
end
Global.N_0x16d3d49902f697bb = Global.NetworkIsConnectionEndpointRelayServer

--- NETWORK_IS_DOOR_NETWORKED
function Global.NetworkIsDoorNetworked(doorHash)
	return _in(0xC01E93FAC20C3346, _ch(doorHash), _r)
end
Global.N_0xc01e93fac20c3346 = Global.NetworkIsDoorNetworked
Global.NetworkHasControlOfPavementStats = Global.NetworkIsDoorNetworked

--- Note: This only works for vehicles, which appears to be a bug (since the setter *does* work for every entity type and the name is 99% correct).
function Global.NetworkIsEntityConcealed(entity)
	return _in(0x71302EC70689052A, entity, _r)
end

--- NETWORK_IS_ENTITY_FADING
function Global.NetworkIsEntityFading(entity)
	return _in(0x422F32CC7E56ABAD, entity, _r)
end
Global.N_0x422f32cc7e56abad = Global.NetworkIsEntityFading

--- NETWORK_IS_FINDING_GAMERS
function Global.NetworkIsFindingGamers()
	return _in(0xDDDF64C91BFCF0AA, _r)
end

--- NETWORK_IS_FRIEND
function Global.NetworkIsFriend(networkHandle)
	return _in(0x1A24A179F9B31654, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- _NETWORK_IS_FRIEND_HANDLE_ONLINE
function Global.NetworkIsFriendHandleOnline(networkHandle)
	return _in(0x87EB7A3FFCB314DB, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x87eb7a3ffcb314db = Global.NetworkIsFriendHandleOnline
Global.NetworkIsFriendOnline_2 = Global.NetworkIsFriendHandleOnline

--- NETWORK_IS_FRIEND_IN_MULTIPLAYER
function Global.NetworkIsFriendInMultiplayer(friendName)
	return _in(0x57005C18827F3A28, _ts(friendName), _r)
end

--- In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
function Global.NetworkIsFriendInSameTitle(friendName)
	return _in(0x2EA9A3BEDF3F17B8, _ts(friendName), _r)
end

--- NETWORK_IS_FRIEND_INDEX_ONLINE
function Global.NetworkIsFriendIndexOnline(friendIndex)
	return _in(0xBAD8F2A42B844821, friendIndex, _r)
end
Global.N_0xbad8f2a42b844821 = Global.NetworkIsFriendIndexOnline

--- NETWORK_IS_FRIEND_ONLINE
function Global.NetworkIsFriendOnline(name)
	return _in(0x425A44533437B64D, _ts(name), _r)
end

--- NETWORK_IS_GAME_IN_PROGRESS
function Global.NetworkIsGameInProgress()
	return _in(0x10FAB35428CCC9D7, _r)
end

--- NETWORK_IS_GAMER_BLOCKED_BY_ME
function Global.NetworkIsGamerBlockedByMe(networkHandle)
	return _in(0xE944C4F5AF1B5883, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_GAMER_IN_MY_SESSION
function Global.NetworkIsGamerInMySession(networkHandle)
	return _in(0x0F10B05DDF8D16E9, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_GAMER_MUTED_BY_ME
function Global.NetworkIsGamerMutedByMe(networkHandle)
	return _in(0xCE60DE011B6C7978, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_GAMER_TALKING
function Global.NetworkIsGamerTalking(networkHandle)
	return _in(0x71C33B22606CD88A, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_GETTING_GAMER_STATUS
function Global.NetworkIsGettingGamerStatus()
	return _in(0x94A8394D150B013A, _r)
end
Global.N_0x94a8394d150b013a = Global.NetworkIsGettingGamerStatus

--- NETWORK_IS_HANDLE_VALID
function Global.NetworkIsHandleValid(bufferSize)
	return _in(0x6F79B93B0A8E4133, _i, bufferSize, _r)
end

--- If you are host, returns true else returns false.
function Global.NetworkIsHost()
	return _in(0x8DB296B814EDDA07, _r)
end

--- NETWORK_IS_HOST_OF_THIS_SCRIPT
function Global.NetworkIsHostOfThisScript()
	return _in(0x83CD99A1E6061AB5, _r)
end

--- NETWORK_IS_IN_MP_CUTSCENE
function Global.NetworkIsInMpCutscene()
	return _in(0x6CC27C9FA2040220, _r)
end

--- Note according to IDA TU27 X360(Console),
-- This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
-- Side note: This location just stops where it's at once jumped to.
-- Screenshot for side note,
-- h t t p ://i.imgur.com/m2ci1mF.png
-- h t t p://i.imgur.com/Z0Wx2B6.png
function Global.NetworkIsInParty()
	return _in(0x966C2BC2A7FE3F30, _r)
end

--- Hardcoded to return false.
function Global.NetworkIsInPlatformParty()
	return _in(0x2FC5650B0271CB57, _r)
end
Global.N_0x2fc5650b0271cb57 = Global.NetworkIsInPlatformParty

--- Hardcoded to return false.
function Global.NetworkIsInPlatformPartyChat()
	return _in(0xFD8B834A8BA05048, _r)
end
Global.N_0xfd8b834a8ba05048 = Global.NetworkIsInPlatformPartyChat

--- NETWORK_IS_IN_SESSION
function Global.NetworkIsInSession()
	return _in(0xCA97246103B63917, _r)
end

--- NETWORK_IS_IN_SPECTATOR_MODE
function Global.NetworkIsInSpectatorMode()
	return _in(0x048746E388762E11, _r)
end

--- NETWORK_IS_IN_TRANSITION
function Global.NetworkIsInTransition()
	return _in(0x68049AEFF83D8F0A, _r)
end

--- NETWORK_IS_IN_TUTORIAL_SESSION
function Global.NetworkIsInTutorialSession()
	return _in(0xADA24309FE08DACF, _r)
end

--- Checks if the networkHandle is the same as any other user that is signed in on the local machine.
-- For example, if your console has two or more users signed in (on different controllers), the profile that is not controlling the game would be "inactive".
-- @return Returns true if the networkHandle is signed in on the same machine, but is not the main player.
function Global.NetworkIsInactiveProfile(networkHandle)
	return _in(0x7E58745504313A2E, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_LOCAL_PLAYER_INVINCIBLE
function Global.NetworkIsLocalPlayerInvincible()
	return _in(0x8A8694B48715B000, _r)
end

--- NETWORK_IS_LOCAL_TALKING
function Global.NetworkIsLocalTalking()
	return _in(0xC0D2AF00BCC234CA, _r)
end
Global.N_0xc0d2af00bcc234ca = Global.NetworkIsLocalTalking

--- NETWORK_IS_MULTIPLAYER_DISABLED
function Global.NetworkIsMultiplayerDisabled()
	return _in(0x9747292807126EDA, _r)
end
Global.N_0x9747292807126eda = Global.NetworkIsMultiplayerDisabled

--- Returns true if the specified network id is controlled by someone else.
-- @param netId The network id for an object or entity.
-- @return Probably a bool, returns 1 if you don't have control over the netId entity.
function Global.NetworkIsNetworkIdAClone(netId)
	return _in(0x7242F8B741CE1086, netId, _r)
end
Global.N_0x7242f8b741ce1086 = Global.NetworkIsNetworkIdAClone

--- NETWORK_IS_OFFLINE_INVITE_PENDING
function Global.NetworkIsOfflineInvitePending()
	return _in(0x74698374C45701D2, _r)
end
Global.N_0x74698374c45701d2 = Global.NetworkIsOfflineInvitePending

--- NETWORK_IS_PARTICIPANT_ACTIVE
function Global.NetworkIsParticipantActive(p0)
	return _in(0x6FF8FF40B6357D45, p0, _r)
end

--- Note according to IDA TU27 X360(Console),
-- This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
-- Side note: This location just stops where it's at once jumped to.
-- Screenshot for side note,
-- h t t p ://i.imgur.com/m2ci1mF.png
-- h t t p://i.imgur.com/Z0Wx2B6.png
function Global.NetworkIsPartyMember(networkHandle)
	return _in(0x676ED266AADD31E0, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- This function is hard-coded to always return 0.
function Global.NetworkIsPendingFriend(p0)
	return _in(0x0BE73DA6984A6E33, p0, _ri)
end

--- NETWORK_IS_PLAYER_A_PARTICIPANT
function Global.NetworkIsPlayerAParticipant(player)
	return _in(0x3CA58F6CB7CBD784, player, _r)
end

--- NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT
function Global.NetworkIsPlayerAParticipantOnScript(player1, script, player2)
	return _in(0x1AD5B71586B94820, player1, _ts(script), player2, _r)
end
Global.N_0x1ad5b71586b94820 = Global.NetworkIsPlayerAParticipantOnScript

--- NETWORK_IS_PLAYER_ACTIVE
function Global.NetworkIsPlayerActive(player)
	return _in(0xB8DFD30D6973E135, player, _r)
end

--- NETWORK_IS_PLAYER_BLOCKED_BY_ME
function Global.NetworkIsPlayerBlockedByMe(player)
	return _in(0x57AF1F8E27483721, player, _r)
end

--- NETWORK_IS_PLAYER_CONCEALED
function Global.NetworkIsPlayerConcealed(player)
	return _in(0x919B3C98ED8292F9, player, _r)
end

--- NETWORK_IS_PLAYER_CONNECTED
function Global.NetworkIsPlayerConnected(player)
	return _in(0x93DC1BE4E1ABE9D1, player, _r)
end

--- NETWORK_ARE_*
function Global.NetworkIsPlayerEqualToIndex(player, index)
	return _in(0x9DE986FC9A87C474, player, index, _r)
end
Global.N_0x9de986fc9a87c474 = Global.NetworkIsPlayerEqualToIndex

--- NETWORK_IS_PLAYER_FADING
function Global.NetworkIsPlayerFading(player)
	return _in(0x631DC5DFF4B110E3, player, _r)
end
Global.N_0x631dc5dff4b110e3 = Global.NetworkIsPlayerFading

--- NETWORK_IS_PLAYER_IN_MP_CUTSCENE
function Global.NetworkIsPlayerInMpCutscene(player)
	return _in(0x63F9EE203C3619F2, player, _r)
end

--- NETWORK_IS_PLAYER_MUTED_BY_ME
function Global.NetworkIsPlayerMutedByMe(player)
	return _in(0x8C71288AE68EDE39, player, _r)
end

--- returns true if someone is screaming or talking in a microphone
function Global.NetworkIsPlayerTalking(player)
	return _in(0x031E11F3D447647E, player, _r)
end

--- _NETWORK_IS_PSN_AVAILABLE
function Global.NetworkIsPsnAvailable()
	return _in(0x8D11E61A4ABF49CC, _r)
end
Global.N_0x8d11e61a4abf49cc = Global.NetworkIsPsnAvailable

--- NETWORK_IS_SCRIPT_ACTIVE
function Global.NetworkIsScriptActive(scriptName, player, p2, p3)
	return _in(0x9D40DF90FAD26098, _ts(scriptName), player, p2, p3, _r)
end

--- NativeDB Introduced: v2245
function Global.NetworkIsScriptActiveByHash(scriptHash, p1, p2, p3)
	return _in(0xDA7DE67F5FE5EE13, _ch(scriptHash), p1, p2, p3, _r)
end

--- NETWORK_IS_SESSION_ACTIVE
function Global.NetworkIsSessionActive()
	return _in(0xD83C2B94E7508980, _r)
end

--- NETWORK_IS_SESSION_BUSY
function Global.NetworkIsSessionBusy()
	return _in(0xF4435D66A8E2905E, _r)
end

--- This checks if player is playing on gta online or not.
-- Please add an if and block your mod if this is "true".
function Global.NetworkIsSessionStarted()
	return _in(0x9DE624D2FC4B603F, _r)
end

--- Returns whether the player is signed into Social Club.
function Global.NetworkIsSignedIn()
	return _in(0x054354A99211EB96, _r)
end

--- Returns whether the game is not in offline mode.
-- seemed not to work for some ppl
function Global.NetworkIsSignedOnline()
	return _in(0x1077788E268557C2, _r)
end

--- Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
function Global.NetworkIsTextChatActive()
	return _in(0x5FCF4D7069B09026, _r)
end

--- _NETWORK_IS_THIS_SCRIPT_MARKED
function Global.NetworkIsThisScriptMarked(p0, p1, p2)
	return _in(0xD1110739EEADB592, p0, p1, p2, _r)
end
Global.N_0xd1110739eeadb592 = Global.NetworkIsThisScriptMarked
Global.NetworkSetThisScriptMarked = Global.NetworkIsThisScriptMarked

--- NETWORK_IS_TRANSITION_BUSY
function Global.NetworkIsTransitionBusy()
	return _in(0x520F3282A53D26B7, _r)
end

--- NETWORK_IS_TRANSITION_CLOSED_CREW
function Global.NetworkIsTransitionClosedCrew()
	return _in(0x0DBD5D7E3C5BEC3B, _r)
end
Global.N_0x0dbd5d7e3c5bec3b = Global.NetworkIsTransitionClosedCrew

--- NETWORK_IS_TRANSITION_CLOSED_FRIENDS
function Global.NetworkIsTransitionClosedFriends()
	return _in(0x6512765E3BE78C50, _r)
end
Global.N_0x6512765e3be78c50 = Global.NetworkIsTransitionClosedFriends

--- NETWORK_IS_TRANSITION_HOST
function Global.NetworkIsTransitionHost()
	return _in(0x0B824797C9BF2159, _r)
end

--- NETWORK_IS_TRANSITION_HOST_FROM_HANDLE
function Global.NetworkIsTransitionHostFromHandle(networkHandle)
	return _in(0x6B5C83BA3EFE6A10, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NETWORK_IS_TRANSITION_MATCHMAKING
function Global.NetworkIsTransitionMatchmaking()
	return _in(0x292564C735375EDF, _r)
end
Global.N_0x292564c735375edf = Global.NetworkIsTransitionMatchmaking

--- NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING
function Global.NetworkIsTransitionOpenToMatchmaking()
	return _in(0x37A4494483B9F5C9, _r)
end
Global.N_0x37a4494483b9f5c9 = Global.NetworkIsTransitionOpenToMatchmaking

--- NETWORK_IS_TRANSITION_PRIVATE
function Global.NetworkIsTransitionPrivate()
	return _in(0x5A6AA44FF8E931E6, _r)
end
Global.N_0x5a6aa44ff8e931e6 = Global.NetworkIsTransitionPrivate

--- NETWORK_IS_TRANSITION_SOLO
function Global.NetworkIsTransitionSolo()
	return _in(0x5DC577201723960A, _r)
end
Global.N_0x5dc577201723960a = Global.NetworkIsTransitionSolo

--- NETWORK_IS_TRANSITION_STARTED
function Global.NetworkIsTransitionStarted()
	return _in(0x53FA83401D9C07FE, _r)
end

--- NETWORK_IS_TRANSITION_TO_GAME
function Global.NetworkIsTransitionToGame()
	return _in(0x9D7696D8F4FA6CB7, _r)
end

--- NETWORK_IS_TRANSITION_VISIBILITY_LOCKED
function Global.NetworkIsTransitionVisibilityLocked()
	return _in(0xD0A484CB2F829FBE, _r)
end
Global.N_0xd0a484cb2f829fbe = Global.NetworkIsTransitionVisibilityLocked

--- NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING
function Global.NetworkIsTunableCloudRequestPending()
	return _in(0x0467C11ED88B7D28, _r)
end
Global.N_0x0467c11ed88b7d28 = Global.NetworkIsTunableCloudRequestPending
Global.HasTunablesBeenDownloaded = Global.NetworkIsTunableCloudRequestPending

--- NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING
function Global.NetworkIsTutorialSessionChangePending()
	return _in(0x35F0B98A8387274D, _r)
end
Global.N_0x35f0b98a8387274d = Global.NetworkIsTutorialSessionChangePending

--- NETWORK_JOIN_GROUP_ACTIVITY
function Global.NetworkJoinGroupActivity()
	return _in(0xA06509A691D12BE4, _ri)
end
Global.N_0xa06509a691d12be4 = Global.NetworkJoinGroupActivity

--- NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION
function Global.NetworkJoinPreviouslyFailedSession()
	return _in(0x59DF79317F85A7E0, _r)
end
Global.N_0x59df79317f85a7e0 = Global.NetworkJoinPreviouslyFailedSession

--- NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION
function Global.NetworkJoinPreviouslyFailedTransition()
	return _in(0xFFE1E5B792D92B34, _r)
end
Global.N_0xffe1e5b792d92b34 = Global.NetworkJoinPreviouslyFailedTransition

--- int handle[76];
-- NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
-- Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
-- NETWORK_JOIN_TRANSITION(uVar2);
-- nothing doin.
function Global.NetworkJoinTransition(player)
	return _in(0x9D060B08CD63321A, player, _r)
end

--- NETWORK_LAUNCH_TRANSITION
function Global.NetworkLaunchTransition()
	return _in(0x2DCF46CB1A4F0884, _r)
end

--- NETWORK_LEAVE_TRANSITION
function Global.NetworkLeaveTransition()
	return _in(0xD23A1A815D21DB19, _r)
end

--- _NETWORK_MANUAL_DELETE_CHARACTER
function Global.NetworkManualDeleteCharacter(characterSlot)
	return _in(0x821418C727FCACD7, characterSlot)
end
Global.N_0x821418c727fcacd7 = Global.NetworkManualDeleteCharacter

--- NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED
function Global.NetworkMarkTransitionGamerAsFullyJoined(p0)
	return _in(0x5728BB6D63E3FF1D, _ii(p0) --[[ may be optional ]], _r)
end

--- NETWORK_MEMBER_ID_FROM_GAMER_HANDLE
function Global.NetworkMemberIdFromGamerHandle(networkHandle)
	return _in(0xC82630132081BB6F, _ii(networkHandle) --[[ may be optional ]], _s)
end

--- NETWORK_MONEY_CAN_BET
function Global.NetworkMoneyCanBet(amount, p1, p2)
	return _in(0x81404F3DC124FE5B, amount, p1, p2, _r)
end
Global.N_0x81404f3dc124fe5b = Global.NetworkMoneyCanBet

--- NETWORK_OPEN_TRANSITION_MATCHMAKING
function Global.NetworkOpenTransitionMatchmaking()
	return _in(0x2B3A8F7CA3A38FDE)
end
Global.N_0x2b3a8f7ca3a38fde = Global.NetworkOpenTransitionMatchmaking

--- Could possibly bypass being muted or automatically muted
function Global.NetworkOverrideChatRestrictions(player, toggle)
	return _in(0x3039AE5AD2C9C0C4, player, toggle)
end
Global.N_0x3039ae5ad2c9c0c4 = Global.NetworkOverrideChatRestrictions

--- NativeDB Introduced: v2189
function Global.NetworkOverrideClockMillisecondsPerGameMinute(ms)
	return _in(0x42BF1D2E723B6D7E, ms)
end

--- Overrides the game clock time for the local player, allowing for manipulation of the in-game time. This native is effective in both multiplayer and singleplayer modes.
-- **Note:** Passing wrong data (e.g. hours above 23) will cause the game to crash.
-- @param hours The hour to set (0-23).
-- @param minutes The minute to set (0-59).
-- @param seconds The second to set (0-59).
function Global.NetworkOverrideClockTime(hours, minutes, seconds)
	return _in(0xE679E3E06E363892, hours, minutes, seconds)
end

--- NETWORK_OVERRIDE_COORDS_AND_HEADING
function Global.NetworkOverrideCoordsAndHeading(entity, x, y, z, heading)
	return _in(0xA7E30DE9272B6D49, entity, x, y, z, heading)
end
Global.N_0xa7e30de9272b6d49 = Global.NetworkOverrideCoordsAndHeading

--- R* uses this to hear all player when spectating.
-- It allows you to hear other online players when their chat is on none, crew and or friends
function Global.NetworkOverrideReceiveRestrictions(player, toggle)
	return _in(0xDDF73E2B1FEC5AB4, player, toggle)
end
Global.N_0xddf73e2b1fec5ab4 = Global.NetworkOverrideReceiveRestrictions

--- p0 is always false in scripts.
function Global.NetworkOverrideReceiveRestrictionsAll(toggle)
	return _in(0x0FF2862B61A58AF9, toggle)
end
Global.N_0x0ff2862b61a58af9 = Global.NetworkOverrideReceiveRestrictionsAll

--- This is used alongside the native,
-- 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
function Global.NetworkOverrideSendRestrictions(player, toggle)
	return _in(0x97DD4C5944CC2E6A, player, toggle)
end
Global.N_0x97dd4c5944cc2e6a = Global.NetworkOverrideSendRestrictions
Global.NetworkOverrideSendRestrictions = Global.NetworkOverrideSendRestrictions

--- NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL
function Global.NetworkOverrideSendRestrictionsAll(toggle)
	return _in(0x57B192B4D4AD23D5, toggle)
end
Global.N_0x57b192b4d4ad23d5 = Global.NetworkOverrideSendRestrictionsAll
Global.NetworkChatMute = Global.NetworkOverrideSendRestrictionsAll

--- NETWORK_OVERRIDE_TEAM_RESTRICTIONS
function Global.NetworkOverrideTeamRestrictions(team, toggle)
	return _in(0x6F697A66CE78674E, team, toggle)
end
Global.N_0x6f697a66ce78674e = Global.NetworkOverrideTeamRestrictions

--- NETWORK_OVERRIDE_TRANSITION_CHAT
function Global.NetworkOverrideTransitionChat(p0)
	return _in(0xAF66059A131AA269, p0)
end
Global.N_0xaf66059a131aa269 = Global.NetworkOverrideTransitionChat

--- NETWORK_PAY_EMPLOYEE_WAGE
function Global.NetworkPayEmployeeWage(p0, p1, p2)
	return _in(0x5FD5ED82CBBE9989, p0, p1, p2)
end
Global.N_0x5fd5ed82cbbe9989 = Global.NetworkPayEmployeeWage

--- NETWORK_PAY_MATCH_ENTRY_FEE
function Global.NetworkPayMatchEntryFee(amount, matchId, p2, p3)
	return _in(0x9346E14F2AF74D46, amount, _ts(matchId), p2, p3)
end
Global.N_0x9346e14f2af74d46 = Global.NetworkPayMatchEntryFee

--- NETWORK_PAY_UTILITY_BILL
function Global.NetworkPayUtilityBill(amount, p1, p2)
	return _in(0xAFE08B35EC0C9EAE, amount, p1, p2)
end
Global.N_0xafe08b35ec0c9eae = Global.NetworkPayUtilityBill

--- NativeDB Introduced: v2372
function Global.NetworkPedForceGameStateUpdate(ped)
	return _in(0xF0BC9BCD24A511D5, ped)
end
Global.N_0xf0bc9bcd24a511d5 = Global.NetworkPedForceGameStateUpdate

--- NETWORK_PLAYER_GET_CHEATER_REASON
function Global.NetworkPlayerGetCheaterReason()
	return _in(0x172F75B6EE2233BA, _ri)
end
Global.N_0x172f75b6ee2233ba = Global.NetworkPlayerGetCheaterReason
Global.NetworkPlayerIsUnk = Global.NetworkPlayerGetCheaterReason

--- Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
function Global.NetworkPlayerGetName(player)
	return _in(0x7718D2E2060837D2, player, _s)
end

--- Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
function Global.NetworkPlayerGetUserid(player, userID)
	return _in(0x4927FC39CD0869A0, player, _ii(userID) --[[ may be optional ]], _s)
end
Global.NetworkPlayerGetUserId = Global.NetworkPlayerGetUserid

--- NETWORK_PLAYER_HAS_HEADSET
function Global.NetworkPlayerHasHeadset(player)
	return _in(0x3FB99A8B08D18FD6, player, _r)
end

--- Does exactly the same thing as PLAYER_ID()
function Global.NetworkPlayerIdToInt()
	return _in(0xEE68096F9F37341E, _ri)
end

--- NETWORK_PLAYER_INDEX_IS_CHEATER
function Global.NetworkPlayerIndexIsCheater(player)
	return _in(0x565E430DB3B05BEC, player, _r)
end
Global.N_0x565e430db3b05bec = Global.NetworkPlayerIndexIsCheater
Global.NetworkPlayerSomething = Global.NetworkPlayerIndexIsCheater

--- NETWORK_PLAYER_IS_BADSPORT
function Global.NetworkPlayerIsBadsport()
	return _in(0x19D8DA0E5A68045A, _r)
end

--- NETWORK_PLAYER_IS_CHEATER
function Global.NetworkPlayerIsCheater()
	return _in(0x655B91F1495A9090, _r)
end

--- Checks if a specific value (BYTE) in CPlayerInfo is nonzero.
-- Returns always false in Singleplayer.
-- No longer used for dev checks since first mods were released on PS3 & 360.
-- R* now checks with the is_dlc_present native for the dlc hash 2532323046,
-- if that is present it will unlock dev stuff.
function Global.NetworkPlayerIsRockstarDev(player)
	return _in(0x544ABDDA3B409B6D, player, _r)
end

--- NETWORK_QUERY_RESPAWN_RESULTS
function Global.NetworkQueryRespawnResults(p0)
	return _in(0x3C891A251567DFCE, _ii(p0) --[[ may be optional ]], _ri)
end
Global.N_0x3c891a251567dfce = Global.NetworkQueryRespawnResults

--- NETWORK_QUEUE_GAMER_FOR_STATUS
function Global.NetworkQueueGamerForStatus(p0)
	return _in(0x85A0EF54A500882C, _ii(p0) --[[ may be optional ]], _r)
end
Global.N_0x85a0ef54a500882c = Global.NetworkQueueGamerForStatus
Global.NetworkGetGamerStatus = Global.NetworkQueueGamerForStatus

--- Forces the "Are you sure you want to quit Grand Theft Auto V?" warning message (Same as when you Alt+F4) to show.
-- Doesn't work in singleplayer.
function Global.NetworkQuitMpToDesktop()
	return _in(0x45A83257ED02D9BC)
end
Global.N_0x45a83257ed02d9bc = Global.NetworkQuitMpToDesktop

--- NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH
function Global.NetworkReceivePlayerJobshareCash(value, networkHandle)
	return _in(0x56A3B51944C50598, value, _ii(networkHandle) --[[ may be optional ]])
end

--- index
-- -------
-- See function sub_1005 in am_boat_taxi.ysc
-- context
-- ----------
-- "BACKUP_VAGOS"
-- "BACKUP_LOST"
-- "BACKUP_FAMILIES"
-- "HIRE_MUGGER"
-- "HIRE_MERCENARY"
-- "BUY_CARDROPOFF"
-- "HELI_PICKUP"
-- "BOAT_PICKUP"
-- "CLEAR_WANTED"
-- "HEAD_2_HEAD"
-- "CHALLENGE"
-- "SHARE_LAST_JOB"
-- "DEFAULT"
-- reason
-- ---------
-- "NOTREACHTARGET"
-- "TARGET_ESCAPE"
-- "DELIVERY_FAIL"
-- "NOT_USED"
-- "TEAM_QUIT"
-- "SERVER_ERROR"
-- "RECEIVE_LJ_L"
-- "CHALLENGE_PLAYER_LEFT"
-- "DEFAULT"
-- unk
-- -----
-- Unknown bool value
function Global.NetworkRefundCash(index, context, reason, unk)
	return _in(0xF9C812CD7C46E817, index, _ts(context), _ts(reason), unk)
end
Global.N_0xf9c812cd7c46e817 = Global.NetworkRefundCash

--- NETWORK_REGISTER_ENTITY_AS_NETWORKED
function Global.NetworkRegisterEntityAsNetworked(entity)
	return _in(0x06FAACD625D80CAA, entity)
end
Global.N_0x06faacd625d80caa = Global.NetworkRegisterEntityAsNetworked

--- NETWORK_REGISTER_HOST_BROADCAST_VARIABLES
function Global.NetworkRegisterHostBroadcastVariables(numVars)
	return _in(0x3E9B2F01C50DF595, _i, numVars)
end

--- NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES
function Global.NetworkRegisterPlayerBroadcastVariables(numVars)
	return _in(0x3364AA97340CA215, _i, numVars)
end

--- _NETWORK_REGISTER_TUNABLE_BOOL_HASH
function Global.NetworkRegisterTunableBoolHash(contextHash, nameHash, value)
	return _in(0x697F508861875B42, _ch(contextHash), _ch(nameHash), _i --[[ actually bool ]], _r)
end
Global.N_0x697f508861875b42 = Global.NetworkRegisterTunableBoolHash

--- _NETWORK_REGISTER_TUNABLE_FLOAT_HASH
function Global.NetworkRegisterTunableFloatHash(contextHash, nameHash, value)
	return _in(0x1950DAE9848A4739, _ch(contextHash), _ch(nameHash), _fi(value) --[[ may be optional ]], _r)
end
Global.N_0x1950dae9848a4739 = Global.NetworkRegisterTunableFloatHash

--- _NETWORK_REGISTER_TUNABLE_INT_HASH
function Global.NetworkRegisterTunableIntHash(contextHash, nameHash, value)
	return _in(0x3A8B55FDA4C8DDEF, _ch(contextHash), _ch(nameHash), _ii(value) --[[ may be optional ]], _r)
end
Global.N_0x3a8b55fda4c8ddef = Global.NetworkRegisterTunableIntHash

--- NETWORK_REMOVE_ALL_TRANSITION_INVITE
function Global.NetworkRemoveAllTransitionInvite()
	return _in(0x726E0375C7A26368)
end
Global.N_0x726e0375c7a26368 = Global.NetworkRemoveAllTransitionInvite

--- NETWORK_REMOVE_ENTITY_AREA
function Global.NetworkRemoveEntityArea(p0)
	return _in(0x93CF869BAA0C4874, p0, _r)
end

--- NETWORK_REMOVE_PRESENCE_INVITE
function Global.NetworkRemovePresenceInvite(p0)
	return _in(0xF0210268DB0974B1, p0, _r)
end
Global.N_0xf0210268db0974b1 = Global.NetworkRemovePresenceInvite

--- NETWORK_REMOVE_TRANSITION_INVITE
function Global.NetworkRemoveTransitionInvite(p0)
	return _in(0x7524B431B2E6F7EE, _ii(p0) --[[ may be optional ]])
end

--- _NETWORK_REPORT_MYSELF
function Global.NetworkReportMyself()
	return _in(0x5626D9D6810730D5)
end
Global.N_0x5626d9d6810730d5 = Global.NetworkReportMyself

--- NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS
function Global.NetworkRequestCloudBackgroundScripts()
	return _in(0x924426BFFD82E915, _r)
end
Global.N_0x924426bffd82e915 = Global.NetworkRequestCloudBackgroundScripts
Global.NetworkRequestCloudBackgroundScripts = Global.NetworkRequestCloudBackgroundScripts

--- NETWORK_REQUEST_CLOUD_TUNABLES
function Global.NetworkRequestCloudTunables()
	return _in(0x42FB3B532D526E6C)
end
Global.N_0x42fb3b532d526e6c = Global.NetworkRequestCloudTunables

--- NETWORK_REQUEST_CONTROL_OF_DOOR
function Global.NetworkRequestControlOfDoor(doorID)
	return _in(0x870DDFD5A4A796E4, doorID, _r)
end

--- NETWORK_REQUEST_CONTROL_OF_ENTITY
function Global.NetworkRequestControlOfEntity(entity)
	return _in(0xB69317BF5E782347, entity, _r)
end

--- NETWORK_REQUEST_CONTROL_OF_NETWORK_ID
function Global.NetworkRequestControlOfNetworkId(netId)
	return _in(0xA670B3662FAFFBD0, netId, _r)
end

--- NETWORK_RESET_BODY_TRACKER
function Global.NetworkResetBodyTracker()
	return _in(0x72433699B4E6DD64)
end

--- p4 and p5 are always 0 in scripts
function Global.NetworkRespawnCoords(player, x, y, z, p4, p5)
	return _in(0x9769F811D1785B03, player, x, y, z, p4, p5)
end
Global.N_0x9769f811d1785b03 = Global.NetworkRespawnCoords

--- Revives our local player who was previously dead.
-- **Note:** Call this once you resurrect the player (this does not need to be called every frame).
-- ```cpp
-- enum ePlayerSpawnLocation {
-- SPAWN_LOCATION_AUTOMATIC = 0, // system will decide
-- SPAWN_LOCATION_NEAR_DEATH,
-- SPAWN_LOCATION_NEAR_TEAM_MATES,
-- SPAWN_LOCATION_MISSION_AREA, // script defined area
-- SPAWN_LOCATION_NEAR_OTHER_PLAYERS,
-- SPAWN_LOCATION_NEAR_CURRENT_POSITION,
-- SPAWN_LOCATION_AT_CURRENT_POSITION,
-- SPAWN_LOCATION_NET_TEST_BED,
-- SPAWN_LOCATION_CUSTOM_SPAWN_POINTS,
-- SPAWN_LOCATION_OUTSIDE_SIMEON_GARAGE,
-- SPAWN_LOCATION_NEAR_SPECIFIC_COORDS,
-- SPAWN_LOCATION_AT_SPECIFIC_COORDS,
-- SPAWN_LOCATION_AT_AIRPORT_ARRIVALS,
-- SPAWN_LOCATION_AT_SPECIFIC_COORDS_IF_POSSIBLE,
-- SPAWN_LOCATION_IN_SPECIFIC_ANGLED_AREA,
-- SPAWN_LOCATION_NEAREST_RESPAWN_POINT,
-- SPAWN_LOCATION_AT_SPECIFIC_COORDS_RACE_CORONA,
-- SPAWN_LOCATION_INSIDE_GARAGE,
-- SPAWN_LOCATION_INSIDE_PROPERTY,
-- SPAWN_LOCATION_INSIDE_PROPERTY_OR_GARAGE,
-- SPAWN_LOCATION_NEAR_DEATH_IMPROMPTU,
-- SPAWN_LOCATION_NEAR_CURRENT_POSITION_SPREAD_OUT,
-- SPAWN_LOCATION_NEAREST_RESPAWN_POINT_TO_SPECIFIC_COORDS,
-- SPAWN_LOCATION_NEAREST_HOSPITAL,
-- SPAWN_LOCATION_NEAREST_POLICE_STATION,
-- SPAWN_LOCATION_NEAREST_HOTEL_TO_SPECIFIC_COORDS,
-- SPAWN_LOCATION_MISSION_AREA_NEAR_CURRENT_POSITION,
-- SPAWN_LOCATION_PRIVATE_YACHT,
-- SPAWN_LOCATION_PRIVATE_YACHT_APARTMENT,
-- SPAWN_LOCATION_PRIVATE_FRIEND_YACHT,
-- SPAWN_LOCATION_PRIVATE_YACHT_NEAR_SHORE,
-- SPAWN_LOCATION_NEAR_GANG_BOSS,
-- SPAWN_LOCATION_NEAR_SPECIFIC_COORDS_WITH_GANG,
-- SPAWN_LOCATION_GANG_DM,
-- SPAWN_LOCATION_GANG_BOSS_PRIVATE_YACHT,
-- SPAWN_LOCATION_OFFICE,
-- SPAWN_LOCATION_CLUBHOUSE,
-- SPAWN_LOCATION_NEAR_CURRENT_POSITION_AS_POSSIBLE,
-- SPAWN_LOCATION_NEAR_CURRENT_PERCEIVED_POSITION,
-- SPAWN_LOCATION_IE_WAREHOUSE,
-- SPAWN_LOCATION_BUNKER,
-- SPAWN_LOCATION_HANGAR,
-- SPAWN_LOCATION_DEFUNCT_BASE,
-- SPAWN_LOCATION_NIGHTCLUB,
-- SPAWN_LOCATION_ARENA_GARAGE,
-- SPAWN_LOCATION_CASINO,
-- SPAWN_LOCATION_CASINO_APARTMENT,
-- SPAWN_LOCATION_CASINO_OUTSIDE,
-- SPAWN_LOCATION_ARCADE,
-- SPAWN_LOCATION_CASINO_NIGHTCLUB,
-- SPAWN_LOCATION_SUBMARINE,
-- SPAWN_LOCATION_HEIST_ISLAND_NEAR_DEATH,
-- SPAWN_LOCATION_HEIST_ISLAND_BEACH_PARTY,
-- SPAWN_LOCATION_LAND_NEAR_SUBMARINE,
-- SPAWN_LOCATION_CAR_MEET,
-- SPAWN_LOCATION_AUTO_SHOP,
-- SPAWN_LOCATION_FIXER_HQ,
-- SPAWN_LOCATION_SITTING_SMOKING,
-- SPAWN_LOCATION_DRUNK_WAKE_UP_MUSIC_STUDIO,
-- SPAWN_LOCATION_MUSIC_STUDIO,
-- TOTAL_SPAWN_LOCATIONS
-- };
-- ```
-- ```cpp
-- enum eSpawnReason {
-- SPAWN_REASON_DEATH = 0,
-- SPAWN_REASON_TRANSITION,
-- SPAWN_REASON_MANUAL,
-- SPAWN_REASON_RESTORE_CHARACTER,
-- SPAWN_REASON_IN_VEHICLE
-- };
-- ```
-- ### Added parameters
-- *   **bUnpauseRenderPhases**: This boolean parameter will unpause the render phases when set to `true`.
-- *   **iSpawnLocation**: This integer parameter sets the player's spawn location metric for telemetry. See `ePlayerSpawnLocation` enum.
-- *   **iSpawnReason**: This integer parameter sets the player's spawn reason metric for telemetry. See `eSpawnReason` enum.
-- @param nInvincibilityTime This is the length of time in milliseconds that the player will be invincible for after resurrection.
-- @param bLeaveDeadPed Leaves the dead ped behind when resurrecting.
function Global.NetworkResurrectLocalPlayer(x, y, z, heading, nInvincibilityTime, bLeaveDeadPed)
	return _in(0xEA23C49EAA83ACFB, x, y, z, heading, nInvincibilityTime, bLeaveDeadPed)
end

--- NativeDB Introduced: v1290
function Global.NetworkRivalDeliveryCompleted(earnedMoney)
	return _in(0x1B882107C23A9022, earnedMoney)
end

--- NETWORK_SEED_RANDOM_NUMBER_GENERATOR
function Global.NetworkSeedRandomNumberGenerator(seed)
	return _in(0xF1B84178F8674195, seed)
end
Global.N_0xf1b84178f8674195 = Global.NetworkSeedRandomNumberGenerator

--- NETWORK_SEND_INVITE_VIA_PRESENCE
function Global.NetworkSendInviteViaPresence(p2, p3)
	return _in(0xC3C7A6AFDB244624, _i, _i, p2, p3, _r)
end
Global.N_0xc3c7a6afdb244624 = Global.NetworkSendInviteViaPresence
Global.NetworkSendPresenceInvite = Global.NetworkSendInviteViaPresence

--- String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.
function Global.NetworkSendPresenceTransitionInvite(p2, p3)
	return _in(0xC116FF9B4D488291, _i, _i, p2, p3, _r)
end
Global.N_0xc116ff9b4d488291 = Global.NetworkSendPresenceTransitionInvite

--- Message is limited to 64 characters.
function Global.NetworkSendTextMessage(message, networkHandle)
	return _in(0x3A214F2EC889B100, _ts(message), _ii(networkHandle) --[[ may be optional ]], _r)
end

--- the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1
-- does this send an invite to a player?
function Global.NetworkSendTransitionGamerInstruction(p1, p2, p3, p4)
	return _in(0x31D1D2B858D25E6B, _i, _ts(p1), p2, p3, p4, _r)
end

--- NETWORK_SESSION_ACTIVITY_QUICKMATCH
function Global.NetworkSessionActivityQuickmatch(p0, p1, p2, p3)
	return _in(0xBE3E347A87ACEB82, p0, p1, p2, p3, _r)
end
Global.N_0xbe3e347a87aceb82 = Global.NetworkSessionActivityQuickmatch

--- NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP
-- @param groupId An identifier value between zero and four
function Global.NetworkSessionAddActiveMatchmakingGroup(groupId)
	return _in(0xCAE55F48D3D7875C, groupId)
end
Global.N_0xcae55f48d3d7875c = Global.NetworkSessionAddActiveMatchmakingGroup

--- NETWORK_SESSION_BLOCK_JOIN_REQUESTS
function Global.NetworkSessionBlockJoinRequests(toggle)
	return _in(0xA73667484D7037C3, toggle)
end
Global.N_0xa73667484d7037c3 = Global.NetworkSessionBlockJoinRequests

--- NETWORK_SESSION_CANCEL_INVITE
function Global.NetworkSessionCancelInvite()
	return _in(0x2FBF47B1B36D36F9)
end

--- NETWORK_SESSION_CHANGE_SLOTS
function Global.NetworkSessionChangeSlots(p0, p1)
	return _in(0xB4AB419E0D86ACAE, p0, p1)
end
Global.N_0xb4ab419e0d86acae = Global.NetworkSessionChangeSlots

--- NETWORK_SESSION_CREW_MATCHMAKING
function Global.NetworkSessionCrewMatchmaking(p0, p1, p2, maxPlayers, p4)
	return _in(0x94BC51E9449D917F, p0, p1, p2, maxPlayers, p4, _r)
end
Global.N_0x94bc51e9449d917f = Global.NetworkSessionCrewMatchmaking

--- p0 is always false and p1 varies.
-- NETWORK_SESSION_END(0, 1)
-- NETWORK_SESSION_END(0, 0)
-- Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."
function Global.NetworkSessionEnd(p0, p1)
	return _in(0xA02E59562D711006, p0, p1, _r)
end

--- unknown params
-- p0 = 0, 2, or 999 (The global is 999 by default.)
-- p1 = 0 (Always in every script it's found in atleast.)
-- p2 = 0, 3, or 4 (Based on a var that is determined by a function.)
-- p3 = maxPlayers (It's obvious in x360 scripts it's always 18)
-- p4 = 0 (Always in every script it's found in atleast.)
-- p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)
-- p5 is reset to 0 if,
-- Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.
function Global.NetworkSessionEnter(p0, p1, p2, maxPlayers, p4, p5)
	return _in(0x330ED4D05491934F, p0, p1, p2, maxPlayers, p4, p5, _ri)
end

--- NETWORK_SESSION_FORCE_CANCEL_INVITE
function Global.NetworkSessionForceCancelInvite()
	return _in(0xA29177F7703B5644)
end
Global.N_0xa29177f7703b5644 = Global.NetworkSessionForceCancelInvite

--- NETWORK_SESSION_FRIEND_MATCHMAKING
function Global.NetworkSessionFriendMatchmaking(p0, p1, maxPlayers, p3)
	return _in(0x2CFC76E0D087C994, p0, p1, maxPlayers, p3, _r)
end
Global.N_0x2cfc76e0d087c994 = Global.NetworkSessionFriendMatchmaking

--- NETWORK_SESSION_GET_INVITER
function Global.NetworkSessionGetInviter(networkHandle)
	return _in(0xE57397B4A3429DD0, _ii(networkHandle) --[[ may be optional ]])
end

--- NETWORK_SESSION_GET_KICK_VOTE
function Global.NetworkSessionGetKickVote(player)
	return _in(0xD6D09A6F32F49EF1, player, _r)
end
Global.NetworkSessionArePlayersVotingToKick = Global.NetworkSessionGetKickVote
Global.NetworkSessionIsPlayerVotedToKick = Global.NetworkSessionGetKickVote

--- NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE
function Global.NetworkSessionGetMatchmakingGroupFree(p0)
	return _in(0x56CE820830EF040B, p0, _ri)
end
Global.N_0x56ce820830ef040b = Global.NetworkSessionGetMatchmakingGroupFree
Global.NetworkSessionGetUnk = Global.NetworkSessionGetMatchmakingGroupFree

--- NETWORK_SESSION_GET_PRIVATE_SLOTS
function Global.NetworkSessionGetPrivateSlots()
	return _in(0x53AFD64C6758F2F9, _ri)
end
Global.N_0x53afd64c6758f2f9 = Global.NetworkSessionGetPrivateSlots

--- Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
function Global.NetworkSessionHost(p0, maxPlayers, p2)
	return _in(0x6F3D4ED9BEE4E61D, p0, maxPlayers, p2, _r)
end

--- NETWORK_SESSION_HOST_CLOSED
function Global.NetworkSessionHostClosed(p0, maxPlayers)
	return _in(0xED34C0C02C098BB7, p0, maxPlayers, _r)
end
Global.N_0xed34c0c02c098bb7 = Global.NetworkSessionHostClosed

--- Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
function Global.NetworkSessionHostFriendsOnly(p0, maxPlayers)
	return _in(0xB9CFD27A5D578D83, p0, maxPlayers, _r)
end

--- Loads up the map that is loaded when beeing in mission creator
-- Player gets placed in a mix between online/offline mode
-- p0 is always 2 in R* scripts.
-- Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
function Global.NetworkSessionHostSinglePlayer(p0)
	return _in(0xC74C33FCA52856D5, p0)
end

--- NETWORK_SESSION_IS_CLOSED_CREW
function Global.NetworkSessionIsClosedCrew()
	return _in(0x74732C6CA90DA2B4, _r)
end
Global.N_0x74732c6ca90da2b4 = Global.NetworkSessionIsClosedCrew

--- NETWORK_SESSION_IS_CLOSED_FRIENDS
function Global.NetworkSessionIsClosedFriends()
	return _in(0xFBCFA2EA2E206890, _r)
end
Global.N_0xfbcfa2ea2e206890 = Global.NetworkSessionIsClosedFriends

--- NETWORK_SESSION_IS_IN_VOICE_SESSION
function Global.NetworkSessionIsInVoiceSession()
	return _in(0x855BC38818F6F684, _r)
end
Global.N_0x855bc38818f6f684 = Global.NetworkSessionIsInVoiceSession

--- NETWORK_SESSION_IS_PRIVATE
function Global.NetworkSessionIsPrivate()
	return _in(0xCEF70AA5B3F89BA1, _r)
end
Global.N_0xcef70aa5b3f89ba1 = Global.NetworkSessionIsPrivate

--- NETWORK_SESSION_IS_SOLO
function Global.NetworkSessionIsSolo()
	return _in(0xF3929C2379B60CCE, _r)
end
Global.N_0xf3929c2379b60cce = Global.NetworkSessionIsSolo

--- NETWORK_SESSION_IS_VISIBLE
function Global.NetworkSessionIsVisible()
	return _in(0xBA416D68C631496A, _r)
end
Global.N_0xba416d68c631496a = Global.NetworkSessionIsVisible

--- NETWORK_SESSION_IS_VOICE_SESSION_BUSY
function Global.NetworkSessionIsVoiceSessionBusy()
	return _in(0xEF0912DDF7C4CB4B, _r)
end
Global.N_0xef0912ddf7c4cb4b = Global.NetworkSessionIsVoiceSessionBusy

--- NETWORK_SESSION_JOIN_INVITE
function Global.NetworkSessionJoinInvite()
	return _in(0xC6F8AB8A4189CF3A)
end
Global.NetworkIsPlayerAnimationDrawingSynchronized = Global.NetworkSessionJoinInvite

--- Only works as host.
function Global.NetworkSessionKickPlayer(player)
	return _in(0xFA8904DC5F304220, player)
end

--- NETWORK_SESSION_LEAVE_SINGLE_PLAYER
function Global.NetworkSessionLeaveSinglePlayer()
	return _in(0x3442775428FD2DAA)
end

--- NETWORK_SESSION_MARK_VISIBLE
function Global.NetworkSessionMarkVisible(toggle)
	return _in(0x271CC6AB59EBF9A5, toggle)
end
Global.N_0x271cc6ab59ebf9a5 = Global.NetworkSessionMarkVisible

--- NETWORK_SESSION_SET_MATCHMAKING_GROUP
function Global.NetworkSessionSetMatchmakingGroup(matchmakingGroup)
	return _in(0x49EC8030F5015F8B, matchmakingGroup)
end
Global.N_0x49ec8030f5015f8b = Global.NetworkSessionSetMatchmakingGroup
Global.NetworkSctvSlots = Global.NetworkSessionSetMatchmakingGroup

--- playerTypes:
-- 0 = regular joiner
-- 4 = spectator
-- 8 = unknown
function Global.NetworkSessionSetMatchmakingGroupMax(playerType, playerCount)
	return _in(0x8B6A4DD0AF9CE215, playerType, playerCount)
end
Global.N_0x8b6a4dd0af9ce215 = Global.NetworkSessionSetMatchmakingGroupMax
Global.NetworkSessionSetMaxPlayers = Global.NetworkSessionSetMatchmakingGroupMax

--- NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE
function Global.NetworkSessionSetMatchmakingMentalState(p0)
	return _in(0xF1EEA2DDA9FFA69D, p0)
end
Global.N_0xf1eea2dda9ffa69d = Global.NetworkSessionSetMatchmakingMentalState

--- NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID
function Global.NetworkSessionSetMatchmakingPropertyId(p0)
	return _in(0x3F52E880AAF6C8CA, p0)
end
Global.N_0x3f52e880aaf6c8ca = Global.NetworkSessionSetMatchmakingPropertyId

--- NETWORK_SESSION_VALIDATE_JOIN
function Global.NetworkSessionValidateJoin(p0)
	return _in(0xC19F6C8E7865A6FF, p0)
end
Global.N_0xc19f6c8e7865a6ff = Global.NetworkSessionValidateJoin
Global.NetworkSessionHosted = Global.NetworkSessionValidateJoin

--- Only one occurence in the scripts:
-- auto sub_cb43(auto a_0, auto a_1) {
-- if (g_2594CB._f1) {
-- if (NETWORK::_855BC38818F6F684()) {
-- NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
-- g_2594CB._f14/*{13}*/ = a_0._fB93;
-- g_2594CB._f4/*"64"*/ = a_1;
-- return 1;
-- }
-- }
-- return 0;
-- }
-- other:
-- looks like it passes a player in the paramater
-- Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
function Global.NetworkSessionVoiceConnectToPlayer(globalPtr)
	return _in(0xABD5E88B8A2D3DB2, _ii(globalPtr) --[[ may be optional ]])
end
Global.N_0xabd5e88b8a2d3db2 = Global.NetworkSessionVoiceConnectToPlayer
Global.NetworkVoiceConnectToPlayer = Global.NetworkSessionVoiceConnectToPlayer

--- NETWORK_SESSION_VOICE_HOST
function Global.NetworkSessionVoiceHost()
	return _in(0x9C1556705F864230)
end

--- NETWORK_SESSION_VOICE_LEAVE
function Global.NetworkSessionVoiceLeave()
	return _in(0x6793E42BE02B575D)
end

--- NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST
function Global.NetworkSessionVoiceRespondToRequest(p0, p1)
	return _in(0x7F8413B7FC2AA6B9, p0, p1)
end
Global.NetworkSetKeepFocuspoint = Global.NetworkSessionVoiceRespondToRequest

--- NETWORK_SESSION_VOICE_SET_TIMEOUT
function Global.NetworkSessionVoiceSetTimeout(timeout)
	return _in(0x5B8ED3DB018927B1, timeout)
end
Global.N_0x5b8ed3db018927b1 = Global.NetworkSessionVoiceSetTimeout

--- NETWORK_SESSION_WAS_INVITED
function Global.NetworkSessionWasInvited()
	return _in(0x23DFB504655D0CE4, _r)
end
Global.N_0x23dfb504655d0ce4 = Global.NetworkSessionWasInvited

--- NETWORK_SET_ACTIVITY_PLAYER_MAX
function Global.NetworkSetActivityPlayerMax(playerCount)
	return _in(0x0E4F77F7B9D74D84, playerCount)
end
Global.N_0x0e4f77f7b9d74d84 = Global.NetworkSetActivityPlayerMax

--- NETWORK_SET_ACTIVITY_SPECTATOR
function Global.NetworkSetActivitySpectator(toggle)
	return _in(0x75138790B4359A74, toggle)
end

--- NETWORK_SET_ACTIVITY_SPECTATOR_MAX
function Global.NetworkSetActivitySpectatorMax(maxSpectators)
	return _in(0x9D277B76D1D12222, maxSpectators)
end

--- NETWORK_SET_CHOICE_MIGRATE_OPTIONS
function Global.NetworkSetChoiceMigrateOptions(toggle, player)
	return _in(0x5C707A667DF8B9FA, toggle, player)
end
Global.N_0x5c707a667df8b9fa = Global.NetworkSetChoiceMigrateOptions

--- _NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE
function Global.NetworkSetCurrentDataManagerHandle(p0)
	return _in(0x796A87B3B68D1F3D, _ii(p0) --[[ may be optional ]], _r)
end
Global.N_0x796a87b3b68d1f3d = Global.NetworkSetCurrentDataManagerHandle
Global.NetworkCheckDataManagerForHandle = Global.NetworkSetCurrentDataManagerHandle

--- NativeDB Introduced: v2699
function Global.NetworkSetCurrentMissionId(missionId)
	return _in(0x2C863ACDCD12B3DB, _ts(missionId))
end

--- mpSettingSpawn:
-- enum eMpSettingSpawn
-- {
-- MP_SETTING_SPAWN_NULL,
-- MP_SETTING_SPAWN_PROPERTY,
-- MP_SETTING_SPAWN_LAST_POSITION,
-- MP_SETTING_SPAWN_GARAGE,
-- MP_SETTING_SPAWN_RANDOM,
-- MP_SETTING_SPAWN_PRIVATE_YACHT,
-- MP_SETTING_SPAWN_OFFICE,
-- MP_SETTING_SPAWN_CLUBHOUSE,
-- MP_SETTING_SPAWN_IE_WAREHOUSE,
-- MP_SETTING_SPAWN_BUNKER,
-- MP_SETTING_SPAWN_HANGAR,
-- MP_SETTING_SPAWN_DEFUNCT_BASE,
-- MP_SETTING_SPAWN_NIGHTCLUB,
-- MP_SETTING_SPAWN_ARENA_GARAGE,
-- MP_SETTING_SPAWN_CASINO_APARTMENT,
-- MP_SETTING_SPAWN_ARCADE,
-- MP_SETTING_SPAWN_SUBMARINE,
-- MP_SETTING_SPAWN_CAR_MEET,
-- MP_SETTING_SPAWN_AUTO_SHOP,
-- MP_SETTING_SPAWN_FIXER_HQ,
-- MP_SETTING_SPAWN_MAX,
-- };
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.NetworkSetCurrentSpawnSetting(mpSettingSpawn)
	return _in(0xAA6D5451DC3448B6, _ch(mpSettingSpawn))
end

--- NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU
function Global.NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(p0)
	return _in(0x7206F674F2A3B1BB, _ii(p0) --[[ may be optional ]], _r)
end

--- NETWORK_SET_ENTITY_CAN_BLEND
function Global.NetworkSetEntityCanBlend(entity, toggle)
	return _in(0xD830567D88A1E873, entity, toggle)
end

--- _NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER
function Global.NetworkSetEntityGhostedWithOwner(entity, p1)
	return _in(0x4BA166079D658ED4, entity, p1)
end
Global.N_0x4ba166079d658ed4 = Global.NetworkSetEntityGhostedWithOwner

--- if set to true other network players can't see it
-- if set to false other network player can see it
-- =========================================
-- ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
-- pc or last gen?
-- ^^ last-gen
function Global.NetworkSetEntityInvisibleToNetwork(entity, toggle)
	return _in(0xF1CA12B18AEF5298, entity, toggle)
end
Global.N_0xf1ca12b18aef5298 = Global.NetworkSetEntityInvisibleToNetwork
Global.NetworkSetEntityVisibleToNetwork = Global.NetworkSetEntityInvisibleToNetwork

--- NETWORK_SET_FRIENDLY_FIRE_OPTION
function Global.NetworkSetFriendlyFireOption(toggle)
	return _in(0xF808475FA571D823, toggle)
end

--- NETWORK_SET_GAMER_INVITED_TO_TRANSITION
function Global.NetworkSetGamerInvitedToTransition(networkHandle)
	return _in(0xCA2C8073411ECDB6, _ii(networkHandle) --[[ may be optional ]])
end

--- NETWORK_SET_IN_FREE_CAM_MODE
function Global.NetworkSetInFreeCamMode(toggle)
	return _in(0xFC18DB55AE19E046, toggle)
end
Global.N_0xfc18db55ae19e046 = Global.NetworkSetInFreeCamMode

--- NETWORK_SET_IN_MP_CUTSCENE
function Global.NetworkSetInMpCutscene(p0, p1)
	return _in(0x9CA5DE655269FEC4, p0, p1)
end

--- NETWORK_SET_IN_SPECTATOR_MODE
function Global.NetworkSetInSpectatorMode(toggle, playerPed)
	return _in(0x423DE3854BB50894, toggle, playerPed)
end

--- NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED
function Global.NetworkSetInSpectatorModeExtended(toggle, playerPed, p2)
	return _in(0x419594E137637120, toggle, playerPed, p2)
end
Global.N_0x419594e137637120 = Global.NetworkSetInSpectatorModeExtended

--- NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU
function Global.NetworkSetInviteOnCallForInviteMenu(networkHandle)
	return _in(0x66F010A4B031A331, _ii(networkHandle) --[[ may be optional ]])
end
Global.N_0x66f010a4b031a331 = Global.NetworkSetInviteOnCallForInviteMenu

--- NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME
function Global.NetworkSetLocalPlayerInvincibleTime(time)
	return _in(0x2D95C7E2D7E07307, time)
end

--- NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT
function Global.NetworkSetLocalPlayerSyncLookAt(toggle)
	return _in(0x524FF0AEFF9C3973, toggle)
end
Global.N_0x524ff0aeff9c3973 = Global.NetworkSetLocalPlayerSyncLookAt

--- NETWORK_SET_MISSION_FINISHED
function Global.NetworkSetMissionFinished()
	return _in(0x3B3D11CD9FFCDFC9)
end

--- NETWORK_SET_NO_SPECTATOR_CHAT
function Global.NetworkSetNoSpectatorChat(toggle)
	return _in(0xF46A1E03E8755980, toggle)
end
Global.N_0xf46a1e03e8755980 = Global.NetworkSetNoSpectatorChat

--- Sets whether or not an object (created using `CREATE_OBJECT`, or similar) should have its position/rotation synchronized,
-- even if it is a 'static' object (for example, having flag 32 - Static - set in its archetype definition).
-- This has to be called during the same frame the object is created/registered for network, as otherwise it may already
-- have a remote clone created.
-- Once a remote clone is created, changing this value will not have any effect on said clone.
-- @param object The object to set forced blending state for.
-- @param enabled `true` to enable forced blending.
function Global.NetworkSetObjectForceStaticBlend(object, enabled)
	return _in(0x0379DAF89BA09AA5, object, enabled)
end
Global.N_0x0379daf89ba09aa5 = Global.NetworkSetObjectForceStaticBlend

--- NETWORK_SET_OVERRIDE_SPECTATOR_MODE
function Global.NetworkSetOverrideSpectatorMode(toggle)
	return _in(0x70DA3BF8DACD3210, toggle)
end

--- NETWORK_SET_PLAYER_IS_PASSIVE
function Global.NetworkSetPlayerIsPassive(toggle)
	return _in(0x1B857666604B1A74, toggle)
end
Global.N_0x1b857666604b1a74 = Global.NetworkSetPlayerIsPassive

--- value must be < 255
function Global.NetworkSetPropertyId(id)
	return _in(0x1775961C2FBBCB5C, id)
end

--- On PC it's a nullsub which means it does absolutely nothing.
-- Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...
function Global.NetworkSetRichPresence(p0, p1, p2, p3)
	return _in(0x1DCCACDCFC569362, p0, p1, p2, p3)
end

--- This native does absolutely nothing, just a nullsub
function Global.NetworkSetRichPresenceString(p0, textLabel)
	return _in(0x3E200C2BCF4164EB, p0, _ts(textLabel))
end
Global.N_0x3e200c2bcf4164eb = Global.NetworkSetRichPresenceString
Global.NetworkSetRichPresence_2 = Global.NetworkSetRichPresenceString

--- NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME
function Global.NetworkSetScriptIsSafeForNetworkGame()
	return _in(0x9243BAC96D64C050)
end

--- NETWORK_SET_SCRIPT_READY_FOR_EVENTS
function Global.NetworkSetScriptReadyForEvents(toggle)
	return _in(0x7AC752103856FB20, toggle)
end
Global.N_0x7ac752103856fb20 = Global.NetworkSetScriptReadyForEvents

--- NETWORK_SET_TALKER_PROXIMITY
function Global.NetworkSetTalkerProximity(value)
	return _in(0xCBF12D65F95AD686, value)
end

--- NETWORK_SET_TEAM_ONLY_CHAT
function Global.NetworkSetTeamOnlyChat(toggle)
	return _in(0xD5B4883AC32F24C3, toggle)
end

--- NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT
function Global.NetworkSetThisScriptIsNetworkScript(maxNumMissionParticipants, p1, instanceId)
	return _in(0x1CA59E306ECB80A5, maxNumMissionParticipants, p1, instanceId)
end

--- NETWORK_SET_TRANSITION_ACTIVITY_ID
function Global.NetworkSetTransitionActivityId(p0)
	return _in(0x30DE938B516F0AD2, p0)
end
Global.N_0x30de938b516f0ad2 = Global.NetworkSetTransitionActivityId

--- NETWORK_SET_TRANSITION_CREATOR_HANDLE
function Global.NetworkSetTransitionCreatorHandle(p0)
	return _in(0xEF26739BCD9907D5, _ii(p0) --[[ may be optional ]])
end

--- NETWORK_SET_TRANSITION_VISIBILITY_LOCK
function Global.NetworkSetTransitionVisibilityLock(p0, p1)
	return _in(0x0C978FDA19692C2C, p0, p1)
end
Global.N_0x0c978fda19692c2c = Global.NetworkSetTransitionVisibilityLock

--- Used by Metric VEHICLE_DIST_DRIVEN
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.NetworkSetVehicleTestDrive(toggle)
	return _in(0x8C70252FC40F320B, toggle)
end

--- Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
-- ```
-- ```
-- NativeDB Introduced: v1365
function Global.NetworkSetVehicleWheelsDestructible(vehicle, toggle)
	return _in(0x890E2C5ABED7236D, vehicle, toggle)
end
Global.N_0x890e2c5abed7236d = Global.NetworkSetVehicleWheelsDestructible

--- NETWORK_SET_VOICE_ACTIVE
function Global.NetworkSetVoiceActive(toggle)
	return _in(0xBABEC9E69A91C57B, toggle)
end

--- NETWORK_SET_VOICE_CHANNEL
function Global.NetworkSetVoiceChannel(channel)
	return _in(0xEF6212C2EFEF1A23, channel)
end

--- Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
function Global.NetworkShouldShowConnectivityTroubleshooting()
	return _in(0x82A2B386716608F1, _r)
end
Global.N_0x82a2b386716608f1 = Global.NetworkShouldShowConnectivityTroubleshooting

--- Example:
-- int playerHandle;
-- NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);
-- NETWORK_SHOW_PROFILE_UI(&playerHandle);
function Global.NetworkShowProfileUi(networkHandle)
	return _in(0x859ED1CEA343FCA8, _ii(networkHandle) --[[ may be optional ]])
end

--- NETWORK_SPENT_AMMO_DROP
function Global.NetworkSpentAmmoDrop(p0, p1, p2)
	return _in(0xB162DC95C0A3317B, p0, p1, p2)
end

--- NativeDB Introduced: v1868
function Global.NetworkSpentArcadeGame(p0, p1, p2, p3, p4)
	return _in(0xEAD3D81F2C3A1458, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1868
function Global.NetworkSpentArcadeGeneric(p0, p1, p2, p3, p4)
	return _in(0x43AA7FAC4E6D6687, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
function Global.NetworkSpentArenaJoinSpectator(amount, p1, p2, p3)
	return _in(0x14EAEA58F93B55AF, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1604
function Global.NetworkSpentArenaPremium(amount, p1, p2)
	return _in(0x619496D837EFD920, amount, p1, p2)
end

--- NativeDB Introduced: v1604
function Global.NetworkSpentArenaSpectatorBox(amount, p1, p2, p3)
	return _in(0x7049BF858601DC0F, amount, p1, p2, p3)
end

--- NETWORK_SPENT_ARREST_BAIL
function Global.NetworkSpentArrestBail(p0, p1, p2)
	return _in(0x812F5488B1B2A299, p0, p1, p2)
end

--- NativeDB Introduced: v2372
function Global.NetworkSpentAutoshopModifications(p0, p1, p2, p3, p4)
	return _in(0x9BEA350D7C48061B, p0, p1, p2, p3, p4)
end
Global.N_0x9bea350d7c48061b = Global.NetworkSpentAutoshopModifications

--- NativeDB Introduced: v2372
function Global.NetworkSpentAutoshopPropertyUtilityFee(p0, p1, p2, p3)
	return _in(0xB40F96D6D252839B, p0, p1, p2, p3)
end
Global.N_0xb40f96d6d252839b = Global.NetworkSpentAutoshopPropertyUtilityFee

--- _NETWORK_SPENT_BA_SERVICE
function Global.NetworkSpentBaService(p0, p1, p2, p3, p4)
	return _in(0xD7CCCBA28C4ECAF0, p0, p1, p2, p3, p4)
end
Global.N_0xd7cccba28c4ecaf0 = Global.NetworkSpentBaService

--- _NETWORK_SPENT_BALLISTIC_EQUIPMENT
function Global.NetworkSpentBallisticEquipment(amount, p1, p2)
	return _in(0x5D97630A8A0EF123, amount, p1, p2)
end
Global.N_0x5d97630a8a0ef123 = Global.NetworkSpentBallisticEquipment

--- NativeDB Introduced: v323
function Global.NetworkSpentBankInterest(p0, p1, p2)
	return _in(0xCA230C9682556CF1, p0, p1, p2)
end

--- NativeDB Introduced: v2189
function Global.NetworkSpentBeachPartyGeneric(p0)
	return _in(0x54ABA22FA6371249, p0)
end

--- NETWORK_SPENT_BETTING
function Global.NetworkSpentBetting(amount, p1, matchId, p3, p4)
	return _in(0x1C436FD11FFA692F, amount, p1, _ts(matchId), p3, p4)
end

--- NativeDB Introduced: v2699
function Global.NetworkSpentBikeShopModify(p0, p1, p2, p3)
	return _in(0x923AEA8E78F8DF0B, p0, p1, p2, p3)
end

--- NETWORK_SPENT_BOAT_PICKUP
function Global.NetworkSpentBoatPickup(p0, p1, p2)
	return _in(0x524EE43A37232C00, p0, p1, p2)
end

--- NativeDB Added Parameter 1: int amount
-- NativeDB Added Parameter 2: BOOL p1
-- NativeDB Added Parameter 3: BOOL p2
function Global.NetworkSpentBoss()
	return _in(0xFFBE02CD385356BD, _r)
end
Global.N_0xffbe02cd385356bd = Global.NetworkSpentBoss

--- NETWORK_SPENT_BOUNTY
function Global.NetworkSpentBounty(p0, p1, p2)
	return _in(0x29B260B84947DFCC, p0, p1, p2)
end

--- NativeDB Introduced: v1493
function Global.NetworkSpentBountyHunterMission(amount, p1, p2)
	return _in(0x1BEA0CD93470BB1F, amount, p1, p2)
end

--- NETWORK_SPENT_BULL_SHARK
function Global.NetworkSpentBullShark(p0, p1, p2)
	return _in(0xA6DD8458CE24012C, p0, p1, p2)
end

--- _NETWORK_SPENT_BUSINESS
function Global.NetworkSpentBusiness(p0, p1, p2, p3)
	return _in(0x0035BB914316F1E3, p0, p1, p2, p3)
end
Global.N_0x0035bb914316f1e3 = Global.NetworkSpentBusiness

--- NativeDB Introduced: v1604
function Global.NetworkSpentBuyArena(amount, p1, p2, p3)
	return _in(0x40D5DA9550B7CB46, amount, p1, p2, _ts(p3))
end

--- NativeDB Introduced: v2372
function Global.NetworkSpentBuyAutoshop(p0, p1, p2, p3)
	return _in(0xEEB7E5D1FEB20869, p0, p1, p2, p3)
end
Global.N_0xeeb7e5d1feb20869 = Global.NetworkSpentBuyAutoshop

--- NativeDB Introduced: v1290
function Global.NetworkSpentBuyBase(p0, p1, p2, p3)
	return _in(0x4EA3F425C7744D21, p0, p1, p2, p3)
end

--- _NETWORK_SPENT_BUY_BUNKER
function Global.NetworkSpentBuyBunker(p0, p1, p2, p3)
	return _in(0x12D148D26538D0F9, p0, p1, p2, p3)
end
Global.N_0x12d148d26538d0f9 = Global.NetworkSpentBuyBunker

--- NativeDB Introduced: v1734
function Global.NetworkSpentBuyCasino(amount, p1, p2, data)
	return _in(0x34A6FC4D06C4DA0F, amount, p1, p2, _ii(data) --[[ may be optional ]])
end

--- NETWORK_SPENT_BUY_OFFTHERADAR
function Global.NetworkSpentBuyOfftheradar(p0, p1, p2)
	return _in(0xA628A745E2275C5D, p0, p1, p2)
end

--- NETWORK_SPENT_BUY_PASSIVE_MODE
function Global.NetworkSpentBuyPassiveMode(p0, p1, p2)
	return _in(0x6D3A430D1A809179, p0, p1, p2)
end

--- NETWORK_SPENT_BUY_REVEAL_PLAYERS
function Global.NetworkSpentBuyRevealPlayers(p0, p1, p2)
	return _in(0x6E176F1B18BC0637, p0, p1, p2)
end

--- NativeDB Introduced: v1290
function Global.NetworkSpentBuyTiltrotor(p0, p1, p2, p3)
	return _in(0x0CCE73BC7A11E885, p0, p1, p2, p3)
end

--- _NETWORK_SPENT_BUY_TRUCK
function Global.NetworkSpentBuyTruck(p0, p1, p2, p3)
	return _in(0xAC272C0AE01B4BD8, p0, p1, p2, p3)
end
Global.N_0xac272c0ae01b4bd8 = Global.NetworkSpentBuyTruck

--- NETWORK_SPENT_BUY_WANTEDLEVEL
function Global.NetworkSpentBuyWantedlevel(p0, p2, p3)
	return _in(0xE1B13771A843C4F6, p0, _i, p2, p3)
end

--- NETWORK_SPENT_CALL_PLAYER
function Global.NetworkSpentCallPlayer(p0, p2, p3)
	return _in(0xACDE7185B374177C, p0, _i, p2, p3)
end

--- NativeDB Introduced: v2372
function Global.NetworkSpentCarclub(p0, p1, p2, p3)
	return _in(0x925227803A0EAA1B, p0, p1, p2, p3)
end
Global.N_0x925227803a0eaa1b = Global.NetworkSpentCarclub

--- NativeDB Introduced: v2372
function Global.NetworkSpentCarclubMembership(p0, p1, p2, p3, p4)
	return _in(0x1464E17207CD36E2, p0, p1, p2, p3, p4)
end
Global.N_0x1464e17207cd36e2 = Global.NetworkSpentCarclubMembership

--- NativeDB Introduced: v2372
function Global.NetworkSpentCarclubTakeover(p0, p1, p2, p3)
	return _in(0xD1E46824E6FB92B5, p0, p1, p2, p3)
end
Global.N_0xd1e46824e6fb92b5 = Global.NetworkSpentCarclubTakeover

--- NativeDB Introduced: v2699
function Global.NetworkSpentCargoSourcing(p0, p1, p2, p3, p4, p5)
	return _in(0x948705F6F9C50824, p0, p1, p2, p3, p4, p5)
end

--- NETWORK_SPENT_CARWASH
function Global.NetworkSpentCarwash(p0, p1, p2, p3, p4)
	return _in(0xEC03C719DB2F4306, p0, p1, p2, p3, p4)
end

--- NETWORK_SPENT_CASH_DROP
function Global.NetworkSpentCashDrop(amount, p1, p2)
	return _in(0x289016EC778D60E0, amount, p1, p2)
end

--- NativeDB Introduced: v2189
function Global.NetworkSpentCasinoClubGeneric(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xC991C255AA6D90B2, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end

--- NativeDB Introduced: v1734
function Global.NetworkSpentCasinoGeneric(amount, p1, p2, p3, p4)
	return _in(0x88BF9B612B84D3C3, amount, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1868
function Global.NetworkSpentCasinoHeist(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0xD30E8392F407C328, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- NativeDB Introduced: v1868
function Global.NetworkSpentCasinoHeistSkipMission(p0, p1, p2, p3)
	return _in(0x487009DD91D93429, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1734
function Global.NetworkSpentCasinoMembership(amount, p1, p2, p3)
	return _in(0xFBBE0570EDF39D46, amount, p1, p2, p3)
end

--- NETWORK_SPENT_CINEMA
function Global.NetworkSpentCinema(p0, p1, p2, p3)
	return _in(0x6B38ECB05A63A685, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function Global.NetworkSpentEmployAssassins(p0, p1, p2, p3)
	return _in(0x5BBBD92186E1F1C5, p0, p1, p2, p3)
end

--- NativeDB Introduced: v2372
function Global.NetworkSpentFromBank(p0, p1, p2, p3)
	return _in(0xB9F7A469460E7A4A, p0, p1, p2, p3)
end
Global.N_0xb9f7a469460e7a4a = Global.NetworkSpentFromBank

--- NETWORK_SPENT_FROM_ROCKSTAR
function Global.NetworkSpentFromRockstar(bank, p1, p2)
	return _in(0x6A445B64ED7ABEB5, bank, p1, p2)
end
Global.N_0x6a445b64ed7abeb5 = Global.NetworkSpentFromRockstar

--- NativeDB Introduced: v1290
function Global.NetworkSpentGangopsCannon(p0, p1, p2, p3)
	return _in(0x771ADB0E7635B7BF, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function Global.NetworkSpentGangopsStartMission(p0, p1, p2, p3)
	return _in(0xDA947AE8880D5C18, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function Global.NetworkSpentGangopsStartStrand(type, amount, p2, p3)
	return _in(0xA19EC0786E326E06, type, amount, p2, p3)
end

--- NativeDB Introduced: v1290
function Global.NetworkSpentGangopsTripSkip(amount, p1, p2)
	return _in(0x5ECE6FD7B4EC8D6A, amount, p1, p2)
end

--- NativeDB Introduced: v2699
function Global.NetworkSpentGunrunningContactService(p0, p1, p2, p3)
	return _in(0x2CEB0E0BC2A77C05, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1180
function Global.NetworkSpentHangarStaffCharges(amount, p1, p2)
	return _in(0xB1F1346FD57685D7, amount, p1, p2)
end

--- NativeDB Introduced: v1180
function Global.NetworkSpentHangarUtilityCharges(amount, p1, p2)
	return _in(0xB18AC2ECBB15CB6A, amount, p1, p2)
end

--- NETWORK_SPENT_HELI_PICKUP
function Global.NetworkSpentHeliPickup(p0, p1, p2)
	return _in(0x7BF1D73DB2ECA492, p0, p1, p2)
end

--- NETWORK_SPENT_HIRE_MERCENARY
function Global.NetworkSpentHireMercenary(p0, p1, p2)
	return _in(0xE7B80E2BF9D80BD6, p0, p1, p2)
end

--- Only used once in a script (am_contact_requests)
-- p1 = 0
-- p2 = 1
function Global.NetworkSpentHireMugger(p0, p1, p2)
	return _in(0xE404BFB981665BF0, p0, p1, p2)
end

--- NETWORK_SPENT_HOLDUPS
function Global.NetworkSpentHoldups(p0, p1, p2)
	return _in(0xD9B86B9872039763, p0, p1, p2)
end

--- NativeDB Introduced: v2372
function Global.NetworkSpentImAbility(p0, p1, p2, p3)
	return _in(0x93AA4165CB67E925, p0, p1, p2, p3)
end
Global.N_0x93aa4165cb67e925 = Global.NetworkSpentImAbility

--- _NETWORK_SPENT_IMPORT_EXPORT_REPAIR
function Global.NetworkSpentImportExportRepair(p0, p1, p2)
	return _in(0xC1952F3773BA18FE, p0, p1, p2)
end
Global.N_0xc1952f3773ba18fe = Global.NetworkSpentImportExportRepair

--- NETWORK_SPENT_IN_STRIPCLUB
function Global.NetworkSpentInStripclub(p0, p1, p2, p3)
	return _in(0xEE99784E4467689C, p0, p1, p2, p3)
end
Global.N_0xee99784e4467689c = Global.NetworkSpentInStripclub

--- NativeDB Introduced: v2189
function Global.NetworkSpentIslandHeist(p0, p1, p2, p3)
	return _in(0xE86689E5F82DE429, p0, p1, p2, p3)
end

--- NativeDB Introduced: v323
function Global.NetworkSpentJobSkip(amount, matchId, p2, p3)
	return _in(0x28F174A67B8D0C2F, amount, _ts(matchId), p2, p3)
end

--- _NETWORK_SPENT_JUKEBOX
function Global.NetworkSpentJukebox(p0, p1, p2, p3)
	return _in(0x5BCDE0F640C773D2, p0, p1, p2, p3)
end
Global.N_0x5bcde0f640c773d2 = Global.NetworkSpentJukebox

--- NativeDB Introduced: v1604
function Global.NetworkSpentMakeItRain(amount, p1, p2)
	return _in(0xE5F5A060439C2F5D, amount, p1, p2)
end

--- _NETWORK_SPENT_MOVE_YACHT
function Global.NetworkSpentMoveYacht(amount, p1, p2)
	return _in(0xE7DF4E0545DFB56E, amount, p1, p2)
end
Global.N_0xe7df4e0545dfb56e = Global.NetworkSpentMoveYacht

--- NativeDB Introduced: v1493
function Global.NetworkSpentNightclubBarDrink(amount, p1, p2, p3)
	return _in(0xDD21B016E4289465, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function Global.NetworkSpentNightclubEntryFee(player, amount, p1, p2, p3)
	return _in(0x876056684281655D, player, amount, p1, p2, p3)
end

--- NETWORK_SPENT_NO_COPS
function Global.NetworkSpentNoCops(p0, p1, p2)
	return _in(0xD5BB406F4E04019F, p0, p1, p2)
end
Global.N_0xd5bb406f4e04019f = Global.NetworkSpentNoCops

--- _NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE
function Global.NetworkSpentOrderBodyguardVehicle(p0, p1, p2, p3)
	return _in(0xE8B0B270B6E7C76E, p0, p1, p2, p3)
end
Global.N_0xe8b0b270b6e7c76e = Global.NetworkSpentOrderBodyguardVehicle

--- _NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE
function Global.NetworkSpentOrderWarehouseVehicle(p0, p1, p2, p3)
	return _in(0x05F04155A226FBBF, p0, p1, p2, p3)
end
Global.N_0x05f04155a226fbbf = Global.NetworkSpentOrderWarehouseVehicle

--- _NETWORK_SPENT_PA_SERVICE_DANCER
function Global.NetworkSpentPaServiceDancer(p0, p1, p2, p3)
	return _in(0xB49ECA122467D05F, p0, p1, p2, p3)
end
Global.N_0xb49eca122467d05f = Global.NetworkSpentPaServiceDancer

--- _NETWORK_SPENT_PA_SERVICE_HELI_PICKUP
function Global.NetworkSpentPaServiceHeliPickup(p0, p1, p2, p3)
	return _in(0x0FE8E1FCD2B86B33, p0, p1, p2, p3)
end
Global.N_0x0fe8e1fcd2b86b33 = Global.NetworkSpentPaServiceHeliPickup

--- _NETWORK_SPENT_PAY_BOSS
function Global.NetworkSpentPayBoss(p0, p1, p2)
	return _in(0xDBC966A01C02BCA7, p0, p1, p2)
end
Global.N_0xdbc966a01c02bca7 = Global.NetworkSpentPayBoss

--- _NETWORK_SPENT_PAY_GOON
function Global.NetworkSpentPayGoon(p0, p1, amount)
	return _in(0x08A1B82B91900682, p0, p1, amount)
end
Global.N_0x08a1b82b91900682 = Global.NetworkSpentPayGoon

--- According to how I understood this in the freemode script alone,
-- The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
-- The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
-- The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
-- The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
-- The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
-- bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.
function Global.NetworkSpentPayVehicleInsurancePremium(amount, vehicleModel, notBankrupt, hasTheMoney)
	return _in(0x9FF28D88C766E3E8, amount, _ch(vehicleModel), _i, notBankrupt, hasTheMoney)
end

--- NETWORK_SPENT_PLAYER_HEALTHCARE
function Global.NetworkSpentPlayerHealthcare(p0, p1, p2, p3)
	return _in(0x7C99101F7FCE2EE5, p0, p1, p2, p3)
end
Global.N_0x7c99101f7fce2ee5 = Global.NetworkSpentPlayerHealthcare

--- NETWORK_SPENT_PROSTITUTES
function Global.NetworkSpentProstitutes(p0, p1, p2)
	return _in(0xB21B89501CFAC79E, p0, p1, p2)
end

--- NativeDB Introduced: v1180
function Global.NetworkSpentPurchaseHangar(p0, p1, p2, p3)
	return _in(0xCCB339CC970452DA, p0, p1, p2, p3)
end

--- _NETWORK_SPENT_PURCHASE_WAREHOUSE
function Global.NetworkSpentPurchaseWarehouse(amount, data, p2, p3)
	return _in(0x33981D6804E62F49, amount, data, p2, p3)
end
Global.N_0x33981d6804e62f49 = Global.NetworkSpentPurchaseWarehouse

--- NativeDB Introduced: v1493
function Global.NetworkSpentRdrhatchetBonus(amount, p1, p2)
	return _in(0xE284D46FFDB82E36, amount, p1, p2)
end

--- NativeDB Introduced: v1493
function Global.NetworkSpentRehireDj(amount, p1, p2, p3)
	return _in(0xF6C8A544E4CF14FC, amount, p1, p2, p3)
end

--- _NETWORK_SPENT_RENAME_ORGANIZATION
function Global.NetworkSpentRenameOrganization(p0, p1, p2)
	return _in(0xFC4EE00A7B3BFB76, p0, p1, p2)
end
Global.N_0xfc4ee00a7b3bfb76 = Global.NetworkSpentRenameOrganization

--- NETWORK_SPENT_REQUEST_HEIST
function Global.NetworkSpentRequestHeist(p0, p1, p2)
	return _in(0x9D26502BB97BFE62, p0, p1, p2)
end
Global.N_0x9d26502bb97bfe62 = Global.NetworkSpentRequestHeist
Global.NetworkSpentRequestHeist = Global.NetworkSpentRequestHeist

--- NETWORK_SPENT_REQUEST_JOB
function Global.NetworkSpentRequestJob(p0, p1, p2)
	return _in(0x8204DA7934DF3155, p0, p1, p2)
end
Global.N_0x8204da7934df3155 = Global.NetworkSpentRequestJob

--- NETWORK_SPENT_ROBBED_BY_MUGGER
function Global.NetworkSpentRobbedByMugger(amount, p1, p2)
	return _in(0x995A65F15F581359, amount, p1, p2)
end
Global.N_0x995a65f15f581359 = Global.NetworkSpentRobbedByMugger

--- NativeDB Introduced: v2699
function Global.NetworkSpentSalesDisplay(p0)
	return _in(0x7E2F4E8F44CAF4E0, p0)
end

--- NativeDB Introduced: v1604
-- NativeDB Removed Parameter 4: BOOL p3
function Global.NetworkSpentSpinTheWheelPayment(amount, p1, p2, p3)
	return _in(0x9A5BD1D0000B339C, amount, p1, p2, p3)
end

--- NativeDB Introduced: v2189
function Global.NetworkSpentSubmarine(p0, p1, p2, p3, p4, p5)
	return _in(0x6C8BC1488527AAAB, p0, p1, p2, p3, p4, p5)
end

--- NETWORK_SPENT_TAXI
function Global.NetworkSpentTaxi(amount, p1, p2)
	return _in(0x17C3A7D31EAE39F9, amount, p1, p2)
end

--- NETWORK_SPENT_TELESCOPE
function Global.NetworkSpentTelescope(p0, p1, p2)
	return _in(0x7FE61782AD94CC09, p0, p1, p2)
end

--- NativeDB Introduced: v1604
function Global.NetworkSpentUpgradeArena(amount, p1, p2, p3)
	return _in(0x037ABB06825D7AB1, amount, p1, p2, _ts(p3))
end

--- NativeDB Introduced: v2372
function Global.NetworkSpentUpgradeAutoshop(p0, p1, p2, p3)
	return _in(0xDD829AA198FDC46C, p0, p1, p2, p3)
end
Global.N_0xdd829aa198fdc46c = Global.NetworkSpentUpgradeAutoshop

--- NativeDB Introduced: v1290
function Global.NetworkSpentUpgradeBase(p0, p1, p2, p3)
	return _in(0x3DD3F33A5D55EA6F, p0, p1, p2, p3)
end

--- _NETWORK_SPENT_UPGRADE_BUNKER
function Global.NetworkSpentUpgradeBunker(p0, p1, p2, p3)
	return _in(0x0C82D21A77C22D49, p0, p1, p2, p3)
end
Global.N_0x0c82d21a77c22d49 = Global.NetworkSpentUpgradeBunker

--- NativeDB Introduced: v1734
function Global.NetworkSpentUpgradeCasino(amount, p1, p2, data)
	return _in(0x4740D62BC1B4EBEA, amount, p1, p2, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1180
function Global.NetworkSpentUpgradeHangar(p0, p1, p2, p3)
	return _in(0x615EB504B0788DAF, p0, p1, p2, p3)
end

--- NativeDB Introduced: v2189
function Global.NetworkSpentUpgradeSub(p0, p1, p2, p3)
	return _in(0x89049A84065CE68E, p0, p1, p2, p3)
end
Global.N_0x89049a84065ce68e = Global.NetworkSpentUpgradeSub

--- NativeDB Introduced: v1290
function Global.NetworkSpentUpgradeTiltrotor(p0, p1, p2, p3)
	return _in(0x165E135D6DFA2907, p0, p1, p2, p3)
end

--- _NETWORK_SPENT_UPGRADE_TRUCK
function Global.NetworkSpentUpgradeTruck(p0, p1, p2, p3)
	return _in(0x365E877C61D6988B, p0, p1, p2, p3)
end
Global.N_0x365e877c61d6988b = Global.NetworkSpentUpgradeTruck

--- _NETWORK_SPENT_VEHICLE_EXPORT_MODS
function Global.NetworkSpentVehicleExportMods(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA75CCF58A60A5FD1, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end
Global.N_0xa75ccf58a60a5fd1 = Global.NetworkSpentVehicleExportMods

--- NativeDB Introduced: v2699
function Global.NetworkSpentVehicleRequested(p0, p1, p2, p3, p4)
	return _in(0x02D24A35A9CC3503, p0, p1, p2, p3, p4)
end

--- _NETWORK_SPENT_VIP_UTILITY_CHARGES
function Global.NetworkSpentVipUtilityCharges(p0, p1, p2)
	return _in(0x5182A339A3474510, p0, p1, p2)
end
Global.N_0x5182a339a3474510 = Global.NetworkSpentVipUtilityCharges

--- _NETWORK_SPENT_WAGER
function Global.NetworkSpentWager(p0, p1, amount)
	return _in(0xD99DB210089617FE, p0, p1, amount)
end
Global.N_0xd99db210089617fe = Global.NetworkSpentWager

--- ```
-- One of the first things it does is get the players ped.
-- Then it calls a function that is used in some tasks and ped based functions.
-- ```
-- p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS`, in the decompiled scripts.
function Global.NetworkStartRespawnSearchForPlayer(player, x, y, z, radius, p5, p6, p7, flags)
	return _in(0x5A6FFA2433E2F14C, player, x, y, z, radius, p5, p6, p7, flags, _r)
end
Global.N_0x5a6ffa2433e2f14c = Global.NetworkStartRespawnSearchForPlayer

--- p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS` in the decompiled scripts.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.NetworkStartRespawnSearchInAngledAreaForPlayer(player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags)
	return _in(0x4BA92A18502BCA61, player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags, _r)
end
Global.N_0x4ba92a18502bca61 = Global.NetworkStartRespawnSearchInAngledAreaForPlayer

--- NETWORK_START_SOLO_TUTORIAL_SESSION
function Global.NetworkStartSoloTutorialSession()
	return _in(0x17E0198B3882C2CB)
end
Global.N_0x17e0198b3882c2cb = Global.NetworkStartSoloTutorialSession

--- NETWORK_START_SYNCHRONISED_SCENE
function Global.NetworkStartSynchronisedScene(netScene)
	return _in(0x9A1B3FCDB36C8697, netScene)
end

--- Always returns -1. Seems to be XB1 specific.
function Global.NetworkStartUserContentPermissionsCheck(netHandle)
	return _in(0xDEB2B99A1AF1A2A6, netHandle, _ri)
end
Global.N_0xdeb2b99a1af1a2a6 = Global.NetworkStartUserContentPermissionsCheck

--- NETWORK_STOP_LOAD_SCENE
function Global.NetworkStopLoadScene()
	return _in(0x64E630FAF5F60F44)
end

--- NETWORK_STOP_SYNCHRONISED_SCENE
function Global.NetworkStopSynchronisedScene(netScene)
	return _in(0xC254481A4574CB2F, netScene)
end

--- NETWORK_SUPPRESS_INVITE
function Global.NetworkSuppressInvite(toggle)
	return _in(0xA0682D67EF1FBA3D, toggle)
end

--- _NETWORK_TRANSITION_TRACK
function Global.NetworkTransitionTrack(hash, p1, p2, state, p4)
	return _in(0xC3BFED92026A2AAD, _ch(hash), p1, p2, state, p4)
end
Global.N_0xc3bfed92026a2aad = Global.NetworkTransitionTrack

--- Returns defaultValue if the tunable doesn't exist.
function Global.NetworkTryAccessTunableBoolHash(tunableContext, tunableName, defaultValue)
	return _in(0xC7420099936CE286, _ch(tunableContext), _ch(tunableName), defaultValue, _r)
end
Global.N_0xc7420099936ce286 = Global.NetworkTryAccessTunableBoolHash
Global.NetworkAccessTunableBoolHashFailVal = Global.NetworkTryAccessTunableBoolHash

--- NativeDB Introduced: v2372
function Global.NetworkUgcNav(p0, p1)
	return _in(0xC1447451DDB512F0, p0, p1)
end
Global.N_0xc1447451ddb512f0 = Global.NetworkUgcNav

--- NETWORK_UNREGISTER_NETWORKED_ENTITY
function Global.NetworkUnregisterNetworkedEntity(entity)
	return _in(0x7368E683BB9038D6, entity)
end
Global.N_0x7368e683bb9038d6 = Global.NetworkUnregisterNetworkedEntity

--- NETWORK_UPDATE_LOAD_SCENE
function Global.NetworkUpdateLoadScene()
	return _in(0xC4582015556D1C46, _r)
end

--- _NETWORK_UPDATE_PLAYER_SCARS
function Global.NetworkUpdatePlayerScars()
	return _in(0xB7C7F6AD6424304B)
end
Global.N_0xb7c7f6ad6424304b = Global.NetworkUpdatePlayerScars

--- Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
function Global.NetworkUseHighPrecisionBlending(netID, toggle)
	return _in(0x2B1813ABA29016C5, netID, toggle)
end
Global.N_0x2b1813aba29016c5 = Global.NetworkUseHighPrecisionBlending
Global.NetworkSetNetworkIdDynamic = Global.NetworkUseHighPrecisionBlending

--- Implemented only for Trains.
-- ```
-- ```
-- NativeDB Introduced: v2372
function Global.NetworkUseHighPrecisionVehicleBlending(vehicle, toggle)
	return _in(0xEC0C1D4922AF9754, vehicle, toggle)
end
Global.N_0xec0c1d4922af9754 = Global.NetworkUseHighPrecisionVehicleBlending

--- NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME
function Global.NetworkUseLogarithmicBlendingThisFrame(entity)
	return _in(0xCD71A4ECAB22709E, entity)
end
Global.N_0xcd71a4ecab22709e = Global.NetworkUseLogarithmicBlendingThisFrame

--- `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
-- `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
-- Returns True if success, used only 7 times in decompiled scripts of 1868
-- @param posX World `x` coordinate.
-- @param posY World `y` coordinate.
-- @param posZ World `z` coordinate.
-- @param offsetX Offset `x` coordinate.
-- @param offsetY Offset `y` coordinate.
-- @param offsetZ Offset `z` coordinate.
-- @param radius Action radius, value is usually between `3f` and `7000f` in original 1868 scripts.
-- @param p7 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
-- @return True if success, used only 7 times in decompiled scripts of 1868 (https://github.com/root-cause/v-decompiled-scripts).
function Global.NewLoadSceneStart(posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7)
	return _in(0x212A8D0D2BABFAC2, posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7, _r)
end

--- if (!sub_8f12("START LOAD SCENE SAFE")) {
-- if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
-- STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
-- sub_8e9e("START LOAD SCENE SAFE", 1);
-- }
-- }
-- (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
function Global.NewLoadSceneStartSphere(x, y, z, radius, p4)
	return _in(0xACCFB4ACF53551B0, x, y, z, radius, p4, _r)
end
Global.N_0xaccfb4acf53551b0 = Global.NewLoadSceneStartSphere

--- NEW_LOAD_SCENE_STOP
function Global.NewLoadSceneStop()
	return _in(0xC197616D221FF4A4)
end

--- p0 was always 2 in R* scripts.
-- Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
function Global.NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(p0)
	return _in(0x3ED1438C1F5C6612, p0)
end
Global.N_0x3ed1438c1f5c6612 = Global.NextOnscreenKeyboardResultWillDisplayUsingTheseFonts

--- Lets objects spawn online simply do it like this:
-- int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
function Global.ObjToNet(object)
	return _in(0x99BFDC94A603E541, object, _ri)
end

--- This loads the GTA:O dlc map parts (high end garages, apartments).
-- Works in singleplayer.
-- In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
function Global.OnEnterMp()
	return _in(0x0888C3502DBBEEF5)
end
Global.LoadMpDlcMaps = Global.OnEnterMp

--- Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
-- The original (and wrong) definition is below:
-- This unload the GTA:O DLC map parts (like high end garages/apartments).
-- Works in singleplayer.
function Global.OnEnterSp()
	return _in(0xD7C10C4A637992C9)
end
Global.N_0xd7c10c4a637992c9 = Global.OnEnterSp
Global.LoadSpDlcMaps = Global.OnEnterSp

--- OPEN_BOMB_BAY_DOORS
function Global.OpenBombBayDoors(vehicle)
	return _in(0x87E7F24270732CB1, vehicle)
end
Global.OpenVehicleBombBay = Global.OpenBombBayDoors

--- Has a 3rd param (int) since patch [???].
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.OpenCommerceStore(p0, p1)
	return _in(0x58C21165F6545892, _ts(p0), _ts(p1))
end
Global.N_0x58c21165f6545892 = Global.OpenCommerceStore

--- OPEN_ONLINE_POLICIES_MENU
function Global.OpenOnlinePoliciesMenu()
	return _in(0x805D7CBB36FD6C4C)
end
Global.ShowSocialClubLegalScreen = Global.OpenOnlinePoliciesMenu

--- The patrol route name must starts with "miss_" to be properly created.
-- patrolRoutes found in the b617d scripts:
-- "miss_Ass0",
-- "miss_Ass1",
-- "miss_Ass2",
-- "miss_Ass3",
-- "miss_Ass4",
-- "miss_Ass5",
-- "miss_Ass6",
-- "MISS_PATROL_6",
-- "MISS_PATROL_7",
-- "MISS_PATROL_8",
-- "MISS_PATROL_9",
-- "miss_Tower_01",
-- "miss_Tower_02",
-- "miss_Tower_03",
-- "miss_Tower_04",
-- "miss_Tower_05",
-- "miss_Tower_06",
-- "miss_Tower_07",
-- "miss_Tower_08",
-- "miss_Tower_10"
function Global.OpenPatrolRoute(patrolRoute)
	return _in(0xA36BFB5EE89F3D82, _ts(patrolRoute))
end

--- Shows a menu for reporting UGC content.
function Global.OpenReportugcMenu()
	return _in(0x523A590C1A3CC0D3)
end
Global.N_0x523a590c1a3cc0d3 = Global.OpenReportugcMenu
Global.DisplayJobReport = Global.OpenReportugcMenu

--- OPEN_SEQUENCE_TASK
function Global.OpenSequenceTask(taskSequenceId)
	return _in(0xE8854A4326B9E12B, _ii(taskSequenceId) --[[ may be optional ]])
end

--- Uses the `SOCIAL_CLUB2` scaleform.
function Global.OpenSocialClubMenu()
	return _in(0x75D3691713C3B05A)
end
Global.N_0x75d3691713c3b05a = Global.OpenSocialClubMenu

--- _ORDERED_BOSS_VEHICLE
function Global.OrderedBossVehicle(p0, p1, vehicleHash)
	return _in(0xCEA553E35C2246E1, p0, p1, _ch(vehicleHash))
end
Global.N_0xcea553e35c2246e1 = Global.OrderedBossVehicle

--- Max value for p1 is 15.
function Global.OverrideCamSplineMotionBlur(cam, p1, p2, p3)
	return _in(0x7DCF7C708D292D55, cam, p1, p2, p3)
end

--- OVERRIDE_CAM_SPLINE_VELOCITY
function Global.OverrideCamSplineVelocity(cam, p1, p2, p3)
	return _in(0x40B62FA033EB0346, cam, p1, p2, p3)
end

--- OVERRIDE_INTERIOR_SMOKE_END
function Global.OverrideInteriorSmokeEnd()
	return _in(0xEFB55E7C25D3B3BE)
end
Global.N_0xefb55e7c25d3b3be = Global.OverrideInteriorSmokeEnd

--- OVERRIDE_INTERIOR_SMOKE_LEVEL
function Global.OverrideInteriorSmokeLevel(level)
	return _in(0x1600FD8CF72EBC12, level)
end
Global.N_0x1600fd8cf72ebc12 = Global.OverrideInteriorSmokeLevel

--- OVERRIDE_INTERIOR_SMOKE_NAME
function Global.OverrideInteriorSmokeName(name)
	return _in(0x2A2A52824DB96700, _ts(name))
end
Global.N_0x2a2a52824db96700 = Global.OverrideInteriorSmokeName

--- This allows you to override "extended distance scaling" setting. Needs to be called each frame.
-- Max scaling seems to be 200.0, normal is 1.0
-- See https://gfycat.com/DetailedHauntingIncatern
function Global.OverrideLodscaleThisFrame(scaling)
	return _in(0xA76359FC80B2438E, scaling)
end
Global.N_0xa76359fc80b2438e = Global.OverrideLodscaleThisFrame

--- Sets audio flag "OverrideMicrophoneSettings"
-- Allows the script to ovverride the current microphone settings
function Global.OverrideMicrophoneSettings(hash, toggle)
	return _in(0x75773E11BA459E90, _ch(hash), toggle)
end
Global.N_0x75773e11ba459e90 = Global.OverrideMicrophoneSettings
Global.OverrideMicrophoneSettings = Global.OverrideMicrophoneSettings

--- _OVERRIDE_MULTIPLAYER_CHAT_COLOUR
function Global.OverrideMultiplayerChatColour(p0, hudColor)
	return _in(0xF47E567B3630DD12, p0, hudColor)
end
Global.N_0xf47e567b3630dd12 = Global.OverrideMultiplayerChatColour

--- _OVERRIDE_MULTIPLAYER_CHAT_PREFIX
function Global.OverrideMultiplayerChatPrefix(gxtEntryHash)
	return _in(0x6A1738B4323FE2D9, _ch(gxtEntryHash))
end
Global.N_0x6a1738b4323fe2d9 = Global.OverrideMultiplayerChatPrefix

--- Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
function Global.OverridePedBadgeTexture(ped, txd, txn)
	return _in(0x95EB5E34F821BABE, ped, _ts(txd), _ts(txn), _r)
end
Global.N_0x95eb5e34f821babe = Global.OverridePedBadgeTexture

--- Sets whether peds can stand on top of *all* vehicles without falling off.
-- Note this flag is not replicated automatically, you will have to manually do so.
-- @param flag true to override, false to use default game behavior.
function Global.OverridePedsCanStandOnTopFlag(flag)
	return _in(0x90a9e0b2, flag)
end

--- Allows the bypassing of default game behavior that prevents the use of [SET_PED_DRIVE_BY_CLIPSET_OVERRIDE](#\_0xED34AB6C5CB36520) in certain scenarios to avoid clipping issues (e.g., when there is more than one Ped in a vehicle).
-- Note: This flag and the overridden clipset are not replicated values and require synchronization through user scripts. Additionally, current game behavior also restricts applying this clipset locally when in first-person mode and will require a temporary workaround.
-- @param flag true to override, false to use default game behavior.
function Global.OverridePedsUseDefaultDriveByClipset(flag)
	return _in(0xb14f8ead, flag)
end

--- Sets the footstep tuning modes
-- @param scriptOverrides True to override with the given overridenMaterialHash, false to stop overriding
function Global.OverridePlayerGroundMaterial(overriddenMaterialHash, scriptOverrides)
	return _in(0xD2CC78CD3D0B50F9, _ch(overriddenMaterialHash), scriptOverrides)
end
Global.N_0xd2cc78cd3d0b50f9 = Global.OverridePlayerGroundMaterial

--- Replaces the `popgroups` (CPopGroupList) meta file with the file in the specified path.
-- @param path The file path to load (`popgroups`, `@resource/popgroups`), or `null` to reload the default population groups file.
function Global.OverridePopGroups(path)
	return _in(0xd3bc438f, _ts(path))
end

--- Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
-- Modified example from "am_imp_exp.c4", line 6406:
-- /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
-- etc.
-- */
-- ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);
-- STREAMING::REQUEST_MODEL(vehicleHash);
function Global.OverridePopscheduleVehicleModel(scheduleId, vehicleHash)
	return _in(0x5F7D596BAC2E7777, scheduleId, _ch(vehicleHash))
end

--- OVERRIDE_SAVE_HOUSE
function Global.OverrideSaveHouse(p0, p1, p2, p3, p4, p5)
	return _in(0x1162EA8AE9D24EEA, p0, p1, p2, p3, p4, p5, _v, _f, _r)
end

--- This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
-- To clear the override use [RESET_TREVOR_RAGE](#\_0xE78503B10C4314E0)
function Global.OverrideTrevorRage(voiceEffect)
	return _in(0x13AD665062541A7E, _ts(voiceEffect))
end

--- This native allows a scripter to override the current underwater stream.
-- It needs to be called before going into the water
-- It needs to also be called with OVERRIDE_UNDERWATER_STREAM("", false) in order to stop overriding.
function Global.OverrideUnderwaterStream(streamName, override)
	return _in(0xF2A9CDABCEA04BD6, _ts(streamName), override)
end

--- Overrides the vehicle's horn hash.
-- When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#\_0xACB5DCCA1EC76840) will **not** return the 'overwritten' hash. It will still always return the default horn hash (same as [`GET_VEHICLE_DEFAULT_HORN`](#\_0x02165D55000219AC)).
-- List of possible hashes (found in decompiled scripts):
-- |        signed |     unsigned |      hex     |
-- |--------------:|-------------:|:------------:|
-- |  `1604822495` | `1604822495` | `0x5FA7A5DF` |
-- | `-1262465009` | `3032502287` | `0xB4C0500F` |
-- |  `-889553789` | `3405413507` | `0xCAFA7C83` |
-- | `-1557943086` | `2737024210` | `0xA323ACD2` |
-- | `-1318696617` | `2976270679` | `0xB1664957` |
-- |    `-7740003` | `4287227293` | `0xFF89E59D` |
-- | `-1815146967` | `2479820329` | `0x93CF0E29` |
-- |  `-339919356` | `3955047940` | `0xEBBD3E04` |
-- @param vehicle The vehicle you want to change the horn on.
-- @param override Must be set to true. If set to false, the default horn hash will be restored.
-- @param hornHash A horn hash.
function Global.OverrideVehHorn(vehicle, override, hornHash)
	return _in(0x3CDC1E622CCE0356, vehicle, override, hornHash)
end

--- Overrides whether or not peds can stand on top of the specified vehicle.
-- Note this flag is not replicated automatically, you will have to manually do so.
-- @param vehicle The vehicle.
-- @param can Can they?
function Global.OverrideVehiclePedsCanStandOnTopFlag(vehicle, can)
	return _in(0x7fa03e76, vehicle, can)
end

--- Return the local Participant ID
function Global.ParticipantId()
	return _in(0x90986E8876CE0A83, _ri)
end

--- Return the local Participant ID.
-- This native is exactly the same as 'PARTICIPANT_ID' native.
function Global.ParticipantIdToInt()
	return _in(0x57A3BDDAD8E5AA0A, _ri)
end

--- Passes keyboard input to scaleform. You must call this native every frame. Once an input occurs, this native will return true and call `SET_PC_KEY` scaleform movie method with the key that has been inputted.
-- The key parameter which is passed to the scaleform can also be: "BACKSPACE", "ENTER" or "\x1b" (Which is ESC).
-- This native is only used in `web_browser.c` as of game build 2944.
-- @param scaleformHandle Scaleform movie handle returned by [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F)
-- @return Bool indicating if an input occurred this frame and was passed to the scaleform.
function Global.PassKeyboardInputToScaleform(scaleformHandle)
	return _in(0xD1C7CB175E012964, scaleformHandle, _r)
end
Global.N_0xd1c7cb175e012964 = Global.PassKeyboardInputToScaleform

--- REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
-- *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
-- PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
function Global.PatchDecalDiffuseMap(decalType, textureDict, textureName)
	return _in(0x8A35C742130C6080, decalType, _ts(textureDict), _ts(textureName))
end
Global.N_0x8a35c742130c6080 = Global.PatchDecalDiffuseMap
Global.AddDecalToMarker = Global.PatchDecalDiffuseMap
Global.OverrideDecalTexture = Global.PatchDecalDiffuseMap

--- PAUSE_CLOCK
function Global.PauseClock(toggle)
	return _in(0x4055E40BD2DBEC1D, toggle)
end

--- PAUSE_DEATH_ARREST_RESTART
function Global.PauseDeathArrestRestart(toggle)
	return _in(0x2C2B3493FBF51C71, toggle)
end
Global.DisableAutomaticRespawn = Global.PauseDeathArrestRestart

--- Activates the specified frontend menu context.
-- pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
-- The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
-- The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
-- This basically allows you to hide certain menu sections, or things like instructional buttons.
-- See the old description below for more info.
-- ***
-- > Seems to add/set the current menu context (to show/hide buttons?)
-- > Pausemenu.xml:
-- > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
-- > Code:
-- >
-- > ```
-- > if (...) {
-- >     sub_bbd34(a_0, 0, "FM_BET_HELP");
-- >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
-- >     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
-- > } else {
-- >     sub_bbd34(a_0, 0, "");
-- >     UI::OBJECT_DECAL_TOGGLE(${bet_available});
-- >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
-- > }
-- > ```
-- >
-- > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
-- > // Old
-- > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
-- @param hash Context name hash.
function Global.PauseMenuActivateContext(hash)
	return _in(0xDD564BDD0472C936, _ch(hash))
end
Global.N_0xdd564bdd0472c936 = Global.PauseMenuActivateContext
Global.AddFrontendMenuContext = Global.PauseMenuActivateContext

--- PAUSE_MENU_DEACTIVATE_CONTEXT
function Global.PauseMenuDeactivateContext(contextHash)
	return _in(0x444D8CF241EC25C5, _ch(contextHash))
end
Global.ObjectDecalToggle = Global.PauseMenuDeactivateContext

--- Disables the loading spinner in Pause Menu when switching from one header tab to another.
-- @param toggle true to disable and false to re-enable the loading icon.
function Global.PauseMenuDisableBusyspinner(toggle)
	return _in(0x9245E81072704B8A, toggle)
end
Global.N_0x9245e81072704b8a = Global.PauseMenuDisableBusyspinner

--- If mouse is hovering on a slot, it returns the slot's index, else it returns -1.
function Global.PauseMenuGetIndexOfMouseHoveredSlot()
	return _in(0x359AF31A4B52F5ED, _ri)
end
Global.N_0x359af31a4b52f5ed = Global.PauseMenuGetIndexOfMouseHoveredSlot

--- If mouse is hovering on a slot, it returns uniqueid of that slot, else it returns -1.
function Global.PauseMenuGetUniqueIdOfMouseHoveredSlot()
	return _in(0x13C4B962653A5280, _ri)
end
Global.N_0x13c4b962653a5280 = Global.PauseMenuGetUniqueIdOfMouseHoveredSlot

--- PAUSE_MENU_IS_CONTEXT_ACTIVE
function Global.PauseMenuIsContextActive(contextHash)
	return _in(0x84698AB38D0C6636, _ch(contextHash), _r)
end
Global.N_0x84698ab38d0c6636 = Global.PauseMenuIsContextActive

--- PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE
function Global.PauseMenuIsContextMenuActive()
	return _in(0x2A25ADC48F87841F, _ri)
end
Global.N_0x2a25adc48f87841f = Global.PauseMenuIsContextMenuActive

--- Updates instructional buttons in Pause Menu after menu contexts have been toggled. p0 purpose is currently unknown, only 0 is used in scripts.
function Global.PauseMenuRedrawInstructionalButtons(p0)
	return _in(0x4895BDEA16E7C080, p0)
end
Global.EnableDeathbloodSeethrough = Global.PauseMenuRedrawInstructionalButtons
Global.N_0x4895bdea16e7c080 = Global.PauseMenuRedrawInstructionalButtons

--- PAUSE_MENU_SET_BUSY_SPINNER
function Global.PauseMenuSetBusySpinner(p0, p1, p2)
	return _in(0xC78E239AC5B2DDB9, p0, p1, p2)
end
Global.N_0xc78e239ac5b2ddb9 = Global.PauseMenuSetBusySpinner

--- Shows this warning message when trying to switch pause menu header tabs: https://i.imgur.com/8qmfztu.png
-- @param setWarn Wether to show the message or not.
function Global.PauseMenuSetWarnOnTabChange(setWarn)
	return _in(0xF06EBB91A81E09E3, setWarn)
end
Global.N_0xf06ebb91a81e09e3 = Global.PauseMenuSetWarnOnTabChange

--- Sets current pause menu page/component to the specified value.
-- Available page IDs: https://pastebin.com/qxuhwjPT
function Global.PauseMenuceptionGoDeeper(pageId)
	return _in(0x77F16B447824DA6C, pageId)
end
Global.N_0x77f16b447824da6c = Global.PauseMenuceptionGoDeeper

--- Forces the Pause Menu to back out of unique pages such as Awards, Unlocks, Key Bindings etc
function Global.PauseMenuceptionTheKick()
	return _in(0xCDCA26E80FAECB8F)
end
Global.N_0xcdca26e80faecb8f = Global.PauseMenuceptionTheKick

--- PAUSE_PLAYBACK_RECORDED_VEHICLE
function Global.PausePlaybackRecordedVehicle(vehicle)
	return _in(0x632A689BF42301B1, vehicle)
end

--- To resume the conversation use [RESTART_SCRIPTED_CONVERSATION](#\_0x9AEB285D1818C9AC)
function Global.PauseScriptedConversation(finishCurrentLine)
	return _in(0x8530AD776CD72B12, finishCurrentLine)
end

--- Toggles pause menu map rendering.
function Global.PauseToggleFullscreenMap(enabled)
	return _in(0x2DE6C5E2E996F178, enabled)
end
Global.N_0x2de6c5e2e996f178 = Global.PauseToggleFullscreenMap

--- PED_HAS_USE_SCENARIO_TASK
function Global.PedHasUseScenarioTask(ped)
	return _in(0x295E3CCEC879CCD7, ped, _r)
end

--- gets the network id of a ped
function Global.PedToNet(ped)
	return _in(0x0EDEC3C276198689, ped, _ri)
end

--- PIN_INTERIOR_IN_MEMORY
function Global.PinInteriorInMemory(interior)
	return _in(0x2CA429C029CCF247, interior)
end
Global.N_0x2ca429c029ccf247 = Global.PinInteriorInMemory
Global.LoadInterior = Global.PinInteriorInMemory

--- PIN_ROPE_VERTEX
function Global.PinRopeVertex(ropeId, vertex, x, y, z)
	return _in(0x2B320CF14146B69A, ropeId, vertex, x, y, z)
end

--- PLACE_OBJECT_ON_GROUND_PROPERLY
function Global.PlaceObjectOnGroundProperly(object)
	return _in(0x58A850EAEE20FAA3, object, _r)
end

--- _PLACE_OBJECT_ON_GROUND_PROPERLY_2
function Global.PlaceObjectOnGroundProperly_2(object)
	return _in(0xD76EEEF746057FD6, object, _r)
end
Global.N_0xd76eeef746057fd6 = Global.PlaceObjectOnGroundProperly_2

--- PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE
-- @param speechParam See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for params
function Global.PlayAmbientSpeechFromPositionNative(speechName, voiceName, x, y, z, speechParam)
	return _in(0xED640017ED337E45, _ts(speechName), _ts(voiceName), x, y, z, _ts(speechParam))
end
Global.N_0xed640017ed337e45 = Global.PlayAmbientSpeechFromPositionNative
Global.PlayAmbientSpeechAtCoords = Global.PlayAmbientSpeechFromPositionNative

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlayAnimOnRunningScenario(ped, animDict, animName)
	return _in(0x748040460F8DF5DC, ped, _ts(animDict), _ts(animName))
end

--- cpp
-- enum eAudAnimalType {
-- AUD_ANIMAL_NONE = -1,
-- AUD_ANIMAL_BOAR,
-- AUD_ANIMAL_CHICKEN,
-- AUD_ANIMAL_DOG,
-- AUD_ANIMAL_DOG_ROTTWEILER,
-- AUD_ANIMAL_HORSE,
-- AUD_NUM_ANIMALS
-- }
function Global.PlayAnimalVocalization(pedHandle, animalType, speechName)
	return _in(0xEE066C7006C49C0A, pedHandle, animalType, _ts(speechName))
end
Global.N_0xee066c7006c49c0a = Global.PlayAnimalVocalization

--- NativeDB Introduced: v1290
function Global.PlayBinkMovie(binkMovie)
	return _in(0x70D2CC8A542A973C, binkMovie)
end

--- ```
-- Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
-- p9 is unknown at this time.
-- p10 throughout all the X360 Scripts is always 2.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlayCamAnim(cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10)
	return _in(0x9A2D0FB2E7852392, cam, _ts(animName), _ts(animDictionary), x, y, z, xRot, yRot, zRot, p9, p10, _r)
end

--- PLAY_DEFERRED_SOUND_FRONTEND
function Global.PlayDeferredSoundFrontend(soundName, soundsetName)
	return _in(0xCADA5A0D0702381E, _ts(soundName), _ts(soundsetName))
end
Global.N_0xcada5a0d0702381e = Global.PlayDeferredSoundFrontend

--- PLAY_END_CREDITS_MUSIC
function Global.PlayEndCreditsMusic(bActive)
	return _in(0xCD536C4D33DCC900, bActive)
end

--- ```
-- delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
-- The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlayEntityAnim(entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset)
	return _in(0x7FB218262B810701, entity, _ts(animName), _ts(animDict), p3, loop, stayInAnim, p6, delta, bitset, _r)
end

--- PLAY_ENTITY_SCRIPTED_ANIM
function Global.PlayEntityScriptedAnim(p0, p4, p5)
	return _in(0x77A1EEC547E7FCF1, p0, _i, _i, _i, p4, p5)
end

--- PLAY_FACIAL_ANIM
function Global.PlayFacialAnim(ped, animName, animDict)
	return _in(0xE1E65CA8AC9C00ED, ped, _ts(animName), _ts(animDict))
end

--- Called 38 times in the scripts. There are 5 different audioNames used.
-- One unknown removed below.
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
function Global.PlayMissionCompleteAudio(audioName)
	return _in(0xB138AAB8A70D3C69, _ts(audioName))
end

--- This native had a 4th parameter added in newer game builds
-- `syncOverNetwork` creates a `CPedPlayPainEvent` when set to true, by default this variable is false.
-- ```cpp
-- enum eAudDamageReason {
-- AUD_DAMAGE_REASON_DEFAULT = 0,
-- AUD_DAMAGE_REASON_FALLING = 1,
-- AUD_DAMAGE_REASON_SUPER_FALLING = 2,
-- AUD_DAMAGE_REASON_SCREAM_PANIC = 3,
-- AUD_DAMAGE_REASON_SCREAM_PANIC_SHORT = 4,
-- AUD_DAMAGE_REASON_SCREAM_SCARED = 5,
-- AUD_DAMAGE_REASON_SCREAM_SHOCKED = 6,
-- AUD_DAMAGE_REASON_SCREAM_TERROR = 7,
-- AUD_DAMAGE_REASON_ON_FIRE = 8,
-- AUD_DAMAGE_REASON_DROWNING = 9,
-- AUD_DAMAGE_REASON_SURFACE_DROWNING = 10,	// drowning on the surface of water, after we time out
-- AUD_DAMAGE_REASON_INHALE = 11,
-- AUD_DAMAGE_REASON_EXHALE = 12,
-- AUD_DAMAGE_REASON_POST_FALL_GRUNT = 13,
-- AUD_DAMAGE_REASON_ENTERING_RAGDOLL_DEATH = 14,
-- AUD_DAMAGE_REASON_EXPLOSION = 15,
-- AUD_DAMAGE_REASON_MELEE = 16,
-- AUD_DAMAGE_REASON_SHOVE = 17,
-- AUD_DAMAGE_REASON_WHEEZE = 18,
-- AUD_DAMAGE_REASON_COUGH = 19,
-- AUD_DAMAGE_REASON_TAZER = 20,
-- AUD_DAMAGE_REASON_EXHAUSTION = 21,
-- AUD_DAMAGE_REASON_CLIMB_LARGE = 22,
-- AUD_DAMAGE_REASON_CLIMB_SMALL = 23,
-- AUD_DAMAGE_REASON_JUMP = 24,
-- AUD_DAMAGE_REASON_COWER = 25,
-- AUD_DAMAGE_REASON_WHIMPER = 26,
-- AUD_DAMAGE_REASON_DYING_MOAN = 27,
-- AUD_DAMAGE_REASON_CYCLING_EXHALE = 28,
-- AUD_DAMAGE_REASON_PAIN_RAPIDS = 29,
-- AUD_DAMAGE_REASON_SNEEZE = 30,
-- AUD_DAMAGE_REASON_MELEE_SMALL_GRUNT = 31,
-- AUD_DAMAGE_REASON_MELEE_LARGE_GRUNT = 32,
-- AUD_DAMAGE_REASON_POST_FALL_GRUNT_LOW = 33
-- }
-- ```
-- @param ped The ped entity.
-- @param damageReason The damage reason/type, refer to eAudDamageReason
-- @param rawDamage Damage value, defaults to 0.0
function Global.PlayPain(ped, damageReason, rawDamage)
	return _in(0xBC9AE166038A5CEC, ped, damageReason, rawDamage)
end

--- See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for parameter specifications.
-- ```
-- NativeDB Added Parameter 4: Any p3
-- ```
function Global.PlayPedAmbientSpeechAndCloneNative(ped, speechName, speechParam)
	return _in(0xC6941B4A3A8FBBB9, ped, _ts(speechName), _ts(speechParam))
end
Global.PlayAmbientSpeech2 = Global.PlayPedAmbientSpeechAndCloneNative

--- Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#\_0xC6941B4A3A8FBBB9).
-- ```
-- speechParam: Can be one of the following:
-- SPEECH_PARAMS_STANDARD
-- SPEECH_PARAMS_ALLOW_REPEAT
-- SPEECH_PARAMS_BEAT
-- SPEECH_PARAMS_FORCE
-- SPEECH_PARAMS_FORCE_FRONTEND
-- SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
-- SPEECH_PARAMS_FORCE_NORMAL
-- SPEECH_PARAMS_FORCE_NORMAL_CLEAR
-- SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
-- SPEECH_PARAMS_FORCE_SHOUTED
-- SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
-- SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY
-- SPEECH_PARAMS_MEGAPHONE
-- SPEECH_PARAMS_HELI
-- SPEECH_PARAMS_FORCE_MEGAPHONE
-- SPEECH_PARAMS_FORCE_HELI
-- SPEECH_PARAMS_INTERRUPT
-- SPEECH_PARAMS_INTERRUPT_SHOUTED
-- SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
-- SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
-- SPEECH_PARAMS_INTERRUPT_NO_FORCE
-- SPEECH_PARAMS_INTERRUPT_FRONTEND
-- SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
-- SPEECH_PARAMS_ADD_BLIP
-- SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
-- SPEECH_PARAMS_ADD_BLIP_FORCE
-- SPEECH_PARAMS_ADD_BLIP_SHOUTED
-- SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
-- SPEECH_PARAMS_ADD_BLIP_INTERRUPT
-- SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
-- SPEECH_PARAMS_SHOUTED
-- SPEECH_PARAMS_SHOUTED_CLEAR
-- SPEECH_PARAMS_SHOUTED_CRITICAL
-- Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
-- ```
-- @param ped The ped to play the ambient speech.
-- @param speechName Name of the speech to play, eg. "GENERIC_HI".
function Global.PlayPedAmbientSpeechNative(ped, speechName, speechParam)
	return _in(0x8E04FEDD28D42462, ped, _ts(speechName), _ts(speechParam))
end
Global.PlayAmbientSpeech1 = Global.PlayPedAmbientSpeechNative

--- This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
-- EX (C#):
-- GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
-- The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
function Global.PlayPedAmbientSpeechWithVoiceNative(ped, speechName, voiceName, speechParam, p4)
	return _in(0x3523634255FC3318, ped, _ts(speechName), _ts(voiceName), _ts(speechParam), p4)
end
Global.PlayAmbientSpeechWithVoice = Global.PlayPedAmbientSpeechWithVoiceNative

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny
-- AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
-- AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
function Global.PlayPedRingtone(ringtoneName, ped, p2)
	return _in(0xF9E56683CA8E11A5, _ts(ringtoneName), ped, p2)
end

--- Plays the given police radio message.
-- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
function Global.PlayPoliceReport(name, p1)
	return _in(0xDFEBD56D9BD1EB16, _ts(name), p1, _ri)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ
function Global.PlaySound(soundId, audioName, audioRef, p3, p4, p5)
	return _in(0x7FF4944CC209192D, soundId, _ts(audioName), _ts(audioRef), p3, p4, p5)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW
-- gtaforums.com/topic/795622-audio-for-mods
function Global.PlaySoundFromCoord(soundId, audioName, x, y, z, audioRef, isNetwork, range, p8)
	return _in(0x8D8686B622B88120, soundId, _ts(audioName), x, y, z, _ts(audioRef), isNetwork, range, p8)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0
-- No changes made in b678d.
-- gtaforums.com/topic/795622-audio-for-mods
function Global.PlaySoundFromEntity(soundId, audioName, entity, audioRef, isNetwork, p5)
	return _in(0xE65F427EB70AB1ED, soundId, _ts(audioName), entity, _ts(audioRef), isNetwork, p5)
end

--- List: https://pastebin.com/DCeRiaLJ
-- All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
function Global.PlaySoundFrontend(soundId, audioName, audioRef, p3)
	return _in(0x67C540AA08E4A6F5, soundId, _ts(audioName), _ts(audioRef), p3)
end

--- Plays a preloaded stream back from the specified object.
function Global.PlayStreamFromObject(object)
	return _in(0xEBAA9B64D76356FD, object)
end

--- Plays a preloaded stream back from the specified ped.
function Global.PlayStreamFromPed(ped)
	return _in(0x89049DD63C08B5D1, ped)
end
Global.N_0x89049dd63c08b5d1 = Global.PlayStreamFromPed

--- Plays a preloaded stream back from the specified Vector3.
function Global.PlayStreamFromPosition(x, y, z)
	return _in(0x21442F412E8DE56B, x, y, z)
end
Global.SpecialFrontendEqual = Global.PlayStreamFromPosition

--- Plays a preloaded stream back from the specified ped vehicle
function Global.PlayStreamFromVehicle(vehicle)
	return _in(0xB70374A758007DFA, vehicle)
end

--- PLAY_STREAM_FRONTEND
function Global.PlayStreamFrontend()
	return _in(0x58FCE43488F9F5F4)
end

--- PLAY_SYNCHRONIZED_AUDIO_EVENT
function Global.PlaySynchronizedAudioEvent(sceneId)
	return _in(0x8B2FD4560E55DD2D, sceneId, _r)
end

--- ```
-- Examples:
-- CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");
-- CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlaySynchronizedCamAnim(camera, scene, animName, animDictionary)
	return _in(0xE32EFE9AB4A9AA0C, camera, scene, _ts(animName), _ts(animDictionary), _r)
end

--- ```
-- p4 and p7 are usually 1000.0f.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlaySynchronizedEntityAnim(entity, syncedScene, animation, propName, p4, p5, p6, p7)
	return _in(0xC77720A12FE14A86, entity, syncedScene, _ts(animation), _ts(propName), p4, p5, p6, p7, _r)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlaySynchronizedMapEntityAnim(p0, p1, p2, p3, p4, p5, p8, p9, p10, p11)
	return _in(0xB9C54555ED30FBC4, p0, p1, p2, p3, p4, p5, _i, _i, p8, p9, p10, p11, _r)
end

--- PLAY_TENNIS_DIVE_ANIM
function Global.PlayTennisDiveAnim(ped, p1, p2, p3, p4, p5)
	return _in(0x8FA9C42FC5D7C64B, ped, p1, p2, p3, p4, p5)
end
Global.N_0x8fa9c42fc5d7c64b = Global.PlayTennisDiveAnim

--- PLAY_TENNIS_SWING_ANIM
function Global.PlayTennisSwingAnim(ped, animDict, animName, p3, p4, p5)
	return _in(0xE266ED23311F24D4, ped, _ts(animDict), _ts(animName), p3, p4, p5)
end
Global.N_0xe266ed23311f24d4 = Global.PlayTennisSwingAnim

--- PLAY_VEHICLE_DOOR_CLOSE_SOUND
function Global.PlayVehicleDoorCloseSound(vehicle, doorIndex)
	return _in(0x62A456AA4769EF34, vehicle, doorIndex)
end

--- PLAY_VEHICLE_DOOR_OPEN_SOUND
function Global.PlayVehicleDoorOpenSound(vehicle, doorIndex)
	return _in(0x3A539D52857EA82D, vehicle, doorIndex)
end

--- Only 1 match. ob_sofa_michael.
-- PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function Global.PlayerAttachVirtualBound(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xED51733DC73AED51, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function Global.PlayerDetachVirtualBound()
	return _in(0x1DD5897E2FA6E7C9)
end

--- Returns the player index for the local player.
-- @return The local player's player index.
function Global.PlayerId()
	return _in(0x4F8644AF03D0E0D6, _ri)
end

--- Returns the entity handle for the local player ped. Note that this entity handle will change after using commands such as SET_PLAYER_MODEL.
-- @return The local player ped's entity handle.
function Global.PlayerPedId()
	return _in(0xD80958FC74E988A6, _ri)
end

--- PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE
function Global.PlaystatsAcquiredHiddenPackage(p0)
	return _in(0x79AB33F0FBFAC40C, p0)
end
Global.N_0x79ab33f0fbfac40c = Global.PlaystatsAcquiredHiddenPackage

--- PLAYSTATS_ACTIVITY_DONE
function Global.PlaystatsActivityDone(p0, p1)
	return _in(0xA071E0ED98F91286, p0, p1)
end
Global.N_0xa071e0ed98f91286 = Global.PlaystatsActivityDone

--- NativeDB Introduced: v1734
function Global.PlaystatsArcadegame(p0, p1, p2, p3, p4, p5)
	return _in(0x533A7D1EA58DF958, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Introduced: v1604
function Global.PlaystatsArenaWarSpectator(p0, p1, p2, p3, p4)
	return _in(0x6F4F599753F8200A, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
function Global.PlaystatsArenaWarsEnded(data)
	return _in(0xB479D9F0D48A1BC5, _ii(data) --[[ may be optional ]])
end

--- _PLAYSTATS_AWARD_BADSPORT
function Global.PlaystatsAwardBadsport(id)
	return _in(0x47B32F5611E6E483, id)
end
Global.N_0x47b32f5611e6e483 = Global.PlaystatsAwardBadsport

--- PLAYSTATS_AWARD_XP
function Global.PlaystatsAwardXp(amount, type, category)
	return _in(0x46F917F6B4128FE4, amount, _ch(type), _ch(category))
end

--- PLAYSTATS_BACKGROUND_SCRIPT_ACTION
function Global.PlaystatsBackgroundScriptAction(action, value)
	return _in(0x5009DFD741329729, _ts(action), value)
end
Global.N_0x5009dfd741329729 = Global.PlaystatsBackgroundScriptAction

--- _PLAYSTATS_BAN_ALERT
function Global.PlaystatsBanAlert(p0)
	return _in(0x516FC96EB88EEFE5, p0)
end
Global.N_0x516fc96eb88eefe5 = Global.PlaystatsBanAlert

--- _PLAYSTATS_BUY_CONTRABAND
function Global.PlaystatsBuyContraband(data)
	return _in(0xD6781E42755531F7, _ii(data) --[[ may be optional ]])
end
Global.N_0xd6781e42755531f7 = Global.PlaystatsBuyContraband

--- NativeDB Introduced: v2372
function Global.PlaystatsCarclubChallenge(p0, p1, p2, p3)
	return _in(0x1187CB58D7F3BED7, p0, p1, p2, p3)
end
Global.N_0x1187cb58d7f3bed7 = Global.PlaystatsCarclubChallenge

--- NativeDB Introduced: v2372
function Global.PlaystatsCarclubPoints(p0)
	return _in(0xFF14D6FEEC507BBE, p0)
end
Global.N_0xff14d6feec507bbe = Global.PlaystatsCarclubPoints

--- NativeDB Introduced: v2372
function Global.PlaystatsCarclubPrize(p0, p1)
	return _in(0x69C922B677621428, p0, p1)
end
Global.N_0x69c922b677621428 = Global.PlaystatsCarclubPrize

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoBlackjack(p0)
	return _in(0x3EAE97309727E7AD, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoBlackjackLight(p0)
	return _in(0xD5451C7BF151EB6F, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoChip(p0)
	return _in(0x0999F3F090EC5012, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoInsidetrack(p0)
	return _in(0x049F059625058A86, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoInsidetrackLight(p0)
	return _in(0x23A3CBCD50D54E47, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoLuckyseven(p0)
	return _in(0x0C432C1435F5E4FA, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoMissionEnded(data)
	return _in(0x1A0D4A6C336B7BC5, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoRoulette(p0)
	return _in(0x95101C443A84E7F1, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoRouletteLight(p0)
	return _in(0x6572ABA3DE1197FC, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoSlotmachine(p0)
	return _in(0xEF5EC67D392B830A, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoSlotmachineLight(p0)
	return _in(0xE60054A0FAE8227F, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoStoryMissionEnded(p0, p1)
	return _in(0xFCCCAC2BD3C1F180, p0, p1)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoThreecardpoker(p0)
	return _in(0xF740FB339D471C35, p0)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCasinoThreecardpokerLight(p0)
	return _in(0xC9001364B4388F22, p0)
end

--- _PLAYSTATS_CHANGE_MC_EMBLEM
function Global.PlaystatsChangeMcEmblem(p0, p1, p2, p3, p4)
	return _in(0x0A50D2604E05CB94, p0, p1, p2, p3, p4)
end
Global.N_0x0a50d2604e05cb94 = Global.PlaystatsChangeMcEmblem

--- PLAYSTATS_CHEAT_APPLIED
function Global.PlaystatsCheatApplied(cheat)
	return _in(0x6058665D72302D3F, _ts(cheat))
end

--- PLAYSTATS_CLOTH_CHANGE
function Global.PlaystatsClothChange(p0, p1, p2, p3, p4)
	return _in(0x34B973047A2268B9, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsCollectible(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xCD0A8A9338681CF2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- _PLAYSTATS_COPY_RANK_INTO_NEW_SLOT
function Global.PlaystatsCopyRankIntoNewSlot(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xB7257BA2550EA10A, p0, p1, p2, p3, p4, p5, p6)
end
Global.N_0xb7257ba2550ea10a = Global.PlaystatsCopyRankIntoNewSlot

--- PLAYSTATS_CRATE_CREATED
function Global.PlaystatsCrateCreated(p0, p1, p2)
	return _in(0xAFC7E5E075A96F46, p0, p1, p2)
end
Global.N_0xafc7e5e075a96f46 = Global.PlaystatsCrateCreated
Global.PlaystatsAmbientMissionCrateCreated = Global.PlaystatsCrateCreated
Global.PlaystatsCrateCreated = Global.PlaystatsCrateCreated
Global.PlaystatsCrateCreatedMissionDone = Global.PlaystatsCrateCreated

--- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function Global.PlaystatsCrateDropMissionDone(p0, p1, p2, p3, p4, p5)
	return _in(0x1CAE5D2E3F9A07F0, p0, p1, p2, p3, p4, p5)
end
Global.N_0x1cae5d2e3f9a07f0 = Global.PlaystatsCrateDropMissionDone
Global.PlaystatsCrateDrop = Global.PlaystatsCrateDropMissionDone

--- NativeDB Introduced: v1290
function Global.PlaystatsDarMissionEnd(data)
	return _in(0x0BC254FF3A911501, _ii(data) --[[ may be optional ]])
end

--- _PLAYSTATS_DEFEND_CONTRABAND
function Global.PlaystatsDefendContraband(data)
	return _in(0x2605663BD4F23B5D, _ii(data) --[[ may be optional ]])
end
Global.N_0x2605663bd4f23b5d = Global.PlaystatsDefendContraband

--- _PLAYSTATS_DIRECTOR_MODE
function Global.PlaystatsDirectorMode(p0)
	return _in(0x46326E13DA4E0546, _ii(p0) --[[ may be optional ]])
end
Global.N_0x46326e13da4e0546 = Global.PlaystatsDirectorMode

--- NativeDB Introduced: v1493
function Global.PlaystatsDroneUsage(p0, p1, p2)
	return _in(0x66C7BB2416ED3FCE, p0, p1, p2)
end

--- _PLAYSTATS_DUPE_DETECTION
function Global.PlaystatsDupeDetection(data)
	return _in(0x848B66100EE33B05, _ii(data) --[[ may be optional ]])
end
Global.N_0x848b66100ee33b05 = Global.PlaystatsDupeDetection

--- _PLAYSTATS_EARNED_MC_POINTS
function Global.PlaystatsEarnedMcPoints(p0, p1, p2, p3, p4, p5)
	return _in(0x501478855A6074CE, p0, p1, p2, p3, p4, p5)
end
Global.N_0x501478855a6074ce = Global.PlaystatsEarnedMcPoints

--- NativeDB Introduced: v1290
function Global.PlaystatsEnterSessionPack(data)
	return _in(0x878FF156D36E9956, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v2372
function Global.PlaystatsExtraEvent(p0)
	return _in(0xFA5B74BAB8A7EF99, p0)
end
Global.N_0xfa5b74bab8a7ef99 = Global.PlaystatsExtraEvent

--- PLAYSTATS_FRIEND_ACTIVITY
function Global.PlaystatsFriendActivity(p0, p1)
	return _in(0x0F71DE29AB2258F1, p0, p1)
end

--- _PLAYSTATS_GUNRUN_MISSION_ENDED
function Global.PlaystatsGunrunMissionEnded(data)
	return _in(0x0EACDF8487D5155A, _ii(data) --[[ may be optional ]])
end
Global.N_0x0eacdf8487d5155a = Global.PlaystatsGunrunMissionEnded

--- NativeDB Introduced: v1290
function Global.PlaystatsH2FmprepEnd(data)
	return _in(0xD8AFB345A9C5CCBB, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1290
function Global.PlaystatsH2InstanceEnd(p1, p2, p3)
	return _in(0x1E1497D0D2108115, _i, p1, p2, p3)
end

--- PLAYSTATS_HEIST_SAVE_CHEAT
function Global.PlaystatsHeistSaveCheat(hash, p1)
	return _in(0xF4FF020A08BC8863, _ch(hash), p1)
end
Global.N_0xf4ff020a08bc8863 = Global.PlaystatsHeistSaveCheat
Global.PlaystatsHeistSaveCheat = Global.PlaystatsHeistSaveCheat

--- PLAYSTATS_HOLD_UP_MISSION_DONE
function Global.PlaystatsHoldUpMissionDone(p0, p1, p2, p3)
	return _in(0xCB00196B31C39EB1, p0, p1, p2, p3)
end
Global.N_0xcb00196b31c39eb1 = Global.PlaystatsHoldUpMissionDone
Global.PlaystatsHoldUp = Global.PlaystatsHoldUpMissionDone

--- longest time being ilde?
function Global.PlaystatsIdleKick(time)
	return _in(0x5DA3A8DE8CB6226F, time)
end
Global.N_0x5da3a8de8cb6226f = Global.PlaystatsIdleKick

--- PLAYSTATS_IMPORT_EXPORT_MISSION_DONE
function Global.PlaystatsImportExportMissionDone(p0, p1, p2, p3)
	return _in(0x2B69F5074C894811, p0, p1, p2, p3)
end
Global.N_0x2b69f5074c894811 = Global.PlaystatsImportExportMissionDone
Global.PlaystatsImpExp = Global.PlaystatsImportExportMissionDone

--- NativeDB Introduced: v2699
function Global.PlaystatsInventory(p0)
	return _in(0x887DAD63CF5B7908, p0)
end

--- PLAYSTATS_JOB_BEND
function Global.PlaystatsJobBend()
	return _in(0xF5BB8DAC426A52C0, _i, _i, _i, _i)
end
Global.N_0xf5bb8dac426a52c0 = Global.PlaystatsJobBend

--- PLAYSTATS_LEAVE_JOB_CHAIN
function Global.PlaystatsLeaveJobChain(p0, p1, p2, p3, p4)
	return _in(0xC5BE134EC7BA96A0, p0, p1, p2, p3, p4)
end
Global.N_0xc5be134ec7ba96a0 = Global.PlaystatsLeaveJobChain

--- NativeDB Removed Parameter 4: Any p3
-- NativeDB Removed Parameter 5: Any p4
-- NativeDB Removed Parameter 6: Any p5
-- NativeDB Removed Parameter 7: Any p6
function Global.PlaystatsMatchStarted(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xBC80E22DED931E3D, p0, p1, p2, p3, p4, p5, p6)
end

--- PLAYSTATS_MISSION_CHECKPOINT
function Global.PlaystatsMissionCheckpoint(p1, p2, p3)
	return _in(0xC900596A63978C1D, _i, p1, p2, p3)
end

--- PLAYSTATS_MISSION_OVER
function Global.PlaystatsMissionOver(p1, p2, p3, p4, p5)
	return _in(0x7C4BB33A8CED7324, _i, p1, p2, p3, p4, p5)
end

--- PLAYSTATS_MISSION_STARTED
function Global.PlaystatsMissionStarted(p1, p2, p3)
	return _in(0xC19A2925C34D2231, _i, p1, p2, p3)
end

--- PLAYSTATS_NPC_INVITE
function Global.PlaystatsNpcInvite(p0)
	return _in(0x93054C88E6AA7C44, _ii(p0) --[[ may be optional ]])
end

--- **This native does absolutely nothing, just a nullsub**
function Global.PlaystatsOddjobDone(p0, p1, p2)
	return _in(0x69DEA3E9DB727B4C, p0, p1, p2)
end

--- NativeDB Introduced: v1734
function Global.PlaystatsPassiveMode(p0, p1, p2, p3)
	return _in(0x35EEC6C2BC821A71, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1180
function Global.PlaystatsPegasaircraft(modelHash)
	return _in(0x9572BD4DD6B72122, _ch(modelHash))
end

--- _PLAYSTATS_PI_MENU_HIDE_SETTINGS
function Global.PlaystatsPiMenuHideSettings(data)
	return _in(0x203B381133817079, _ii(data) --[[ may be optional ]])
end
Global.N_0x203b381133817079 = Global.PlaystatsPiMenuHideSettings

--- PLAYSTATS_PROP_CHANGE
function Global.PlaystatsPropChange(p0, p1, p2, p3)
	return _in(0xBA739D6D5A05D6E7, p0, p1, p2, p3)
end

--- PLAYSTATS_QUICKFIX_TOOL
function Global.PlaystatsQuickfixTool(element, item)
	return _in(0x90D0622866E80445, element, _ts(item))
end
Global.N_0x90d0622866e80445 = Global.PlaystatsQuickfixTool

--- PLAYSTATS_RACE_CHECKPOINT
function Global.PlaystatsRaceCheckpoint(p0, p1, p2, p3, p4)
	return _in(0x9C375C315099DDE4, p0, p1, p2, p3, p4)
end

--- NativeDB Removed Parameter 5: Any p4
-- NativeDB Removed Parameter 6: Any p5
-- NativeDB Removed Parameter 7: Any p6
-- NativeDB Removed Parameter 8: Any p7
-- NativeDB Removed Parameter 9: Any p8
-- NativeDB Removed Parameter 10: Any p9
function Global.PlaystatsRaceToPointMissionDone(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xADDD1C754E2E2914, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end
Global.N_0xaddd1c754e2e2914 = Global.PlaystatsRaceToPointMissionDone
Global.PlaystatsRaceToPoint = Global.PlaystatsRaceToPointMissionDone

--- PLAYSTATS_RANDOM_MISSION_DONE
function Global.PlaystatsRandomMissionDone(name, p1, p2, p3)
	return _in(0x71862B1D855F32E1, _ts(name), p1, p2, p3)
end
Global.N_0x71862b1d855f32e1 = Global.PlaystatsRandomMissionDone

--- PLAYSTATS_RANK_UP
function Global.PlaystatsRankUp(rank)
	return _in(0xC7F2DE41D102BFB4, rank)
end

--- _PLAYSTATS_RECOVER_CONTRABAND
function Global.PlaystatsRecoverContraband(data)
	return _in(0x04D90BA8207ADA2D, _ii(data) --[[ may be optional ]])
end
Global.N_0x04d90ba8207ada2d = Global.PlaystatsRecoverContraband

--- NativeDB Introduced: v2372
function Global.PlaystatsRobberyFinale(p0)
	return _in(0xBBA55BE9AAAABF44, p0)
end
Global.N_0xbba55be9aaaabf44 = Global.PlaystatsRobberyFinale

--- NativeDB Introduced: v2372
function Global.PlaystatsRobberyPrep(p0)
	return _in(0x1A67DFBF1F5C3835, p0)
end
Global.N_0x1a67dfbf1f5c3835 = Global.PlaystatsRobberyPrep

--- PLAYSTATS_ROS_BET
function Global.PlaystatsRosBet(amount, act, player, cm)
	return _in(0x121FB4DDDC2D5291, amount, act, player, cm)
end
Global.N_0x121fb4dddc2d5291 = Global.PlaystatsRosBet

--- _PLAYSTATS_SELL_CONTRABAND
function Global.PlaystatsSellContraband(data)
	return _in(0xC729991A9065376E, _ii(data) --[[ may be optional ]])
end
Global.N_0xc729991a9065376e = Global.PlaystatsSellContraband

--- Sets a byte that is then used in session_host and session_join metrics when hosting or joining a session
function Global.PlaystatsSetJoinType(joinType)
	return _in(0xD1032E482629049E, joinType)
end
Global.N_0xd1032e482629049e = Global.PlaystatsSetJoinType

--- PLAYSTATS_SHOP_ITEM
function Global.PlaystatsShopItem(p0, p1, p2, p3, p4)
	return _in(0x176852ACAAC173D1, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1180
function Global.PlaystatsSmugMissionEnded(data)
	return _in(0x320C35147D5B5DDD, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1604
function Global.PlaystatsSpectatorWheelSpin(p0, p1, p2, p3)
	return _in(0x6731DE84A38BFAD0, p0, p1, p2, p3)
end

--- _PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT
function Global.PlaystatsSpentPiCustomLoadout(amount)
	return _in(0xBE509B0A3693DE8B, amount)
end
Global.N_0xbe509b0a3693de8b = Global.PlaystatsSpentPiCustomLoadout

--- PLAYSTATS_START_INVITE_DESPAWNING?
function Global.PlaystatsStartOfflineMode()
	return _in(0x098760C7461724CD)
end
Global.N_0x098760c7461724cd = Global.PlaystatsStartOfflineMode

--- NativeDB Introduced: v1493
function Global.PlaystatsStoneHatchetEnd(data)
	return _in(0x35E39E5570358630, _ii(data) --[[ may be optional ]])
end

--- Allows CEventNetworkStuntPerformed to be triggered.
function Global.PlaystatsStuntPerformedEventAllowTrigger()
	return _in(0x928DBFB892638EF3)
end
Global.N_0x928dbfb892638ef3 = Global.PlaystatsStuntPerformedEventAllowTrigger

--- Disallows CEventNetworkStuntPerformed to be triggered.
function Global.PlaystatsStuntPerformedEventDisallowTrigger()
	return _in(0x8A800DACCC0DA55D)
end
Global.N_0x8a800daccc0da55d = Global.PlaystatsStuntPerformedEventDisallowTrigger

--- PLAYSTATS_WEAPON_MODE_CHANGE
function Global.PlaystatsWeaponModeChange(weaponHash, componentHashTo, componentHashFrom)
	return _in(0xE95C8A1875A02CA4, _ch(weaponHash), _ch(componentHashTo), _ch(componentHashFrom))
end
Global.N_0xe95c8a1875a02ca4 = Global.PlaystatsWeaponModeChange

--- PLAYSTATS_WEBSITE_VISITED
function Global.PlaystatsWebsiteVisited(scaleformHash, p1)
	return _in(0xDDF24D535060F811, _ch(scaleformHash), p1)
end
Global.N_0xddf24d535060f811 = Global.PlaystatsWebsiteVisited

--- POINT_CAM_AT_COORD
function Global.PointCamAtCoord(cam, x, y, z)
	return _in(0xF75497BB865F0803, cam, x, y, z)
end

--- Points the camera at the specified entity.
-- Offset works like [GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS](#\_0x1899F328B0E12848).
-- @param cam Cam (Return value of CREATE_CAM or CREATE_CAM_WITH_PARAMS).
-- @param entity Entity for the camera to point at.
-- @param offsetX X offset for the camera (left/right).
-- @param offsetY Y offset for the camera (forward/backward).
-- @param offsetZ Z offset for the camera (up/down).
-- @param p5 Always seems to be 1 (true).
function Global.PointCamAtEntity(cam, entity, offsetX, offsetY, offsetZ, p5)
	return _in(0x5640BFF86B16E8DC, cam, entity, offsetX, offsetY, offsetZ, p5)
end

--- Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
function Global.PointCamAtPedBone(cam, ped, boneIndex, x, y, z, p6)
	return _in(0x68B2B5F33BA63C41, cam, ped, boneIndex, x, y, z, p6)
end

--- Detaches the vehicle's windscreen.
function Global.PopOutVehicleWindscreen(vehicle)
	return _in(0x6D645D59FB5F5AD3, vehicle)
end
Global.DetachVehicleWindscreen = Global.PopOutVehicleWindscreen

--- POP_TIMECYCLE_MODIFIER
function Global.PopTimecycleModifier()
	return _in(0x3C8938D7D872211E)
end

--- spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
function Global.PopulateNow()
	return _in(0x7472BB270D7B4F3E)
end

--- POW
function Global.Pow(base, exponent)
	return _in(0xE3621CC40F31FE2E, base, exponent, _rf)
end

--- This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
-- For instance, GTA:O opening cutscene.
-- https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
-- https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker.
-- @param srl A SRL name.
function Global.PrefetchSrl(srl)
	return _in(0x3D245789CE12982C, _ts(srl))
end

--- PRELOAD_BUSYSPINNER
function Global.PreloadBusyspinner()
	return _in(0xC65AB383CD91DF98)
end
Global.N_0xc65ab383cd91df98 = Global.PreloadBusyspinner

--- Found in the scripts:
-- MISC::_11B56FBBF7224868("CONTRAILS");
function Global.PreloadCloudHat(name)
	return _in(0x11B56FBBF7224868, _ts(name))
end
Global.N_0x11b56fbbf7224868 = Global.PreloadCloudHat

--- Similar to [START_SCRIPT_CONVERSATION](#\_0x6B17C62C9635D2DC), except that is starts the conversation off paused.
-- A scripter can then kick off the conversation by calling [START_PRELOADED_CONVERSATION](#\_0x23641AFE870AF385).
-- If they want to check that the conversation is done preloading, they can use [GET_IS_PRELOADED_CONVERSATION_READY](#\_0xE73364DB90778FFA)
-- @param addToBriefScreen Defaults to true
-- @param cloneConversation Defaults to false
-- @param interruptible Defaults to true
function Global.PreloadScriptConversation(displaySubtitles, addToBriefScreen, cloneConversation, interruptible)
	return _in(0x3B3CAD6166916D87, displaySubtitles, addToBriefScreen, cloneConversation, interruptible)
end

--- PRELOAD_SCRIPT_PHONE_CONVERSATION
-- @param addToBriefScreen Defaults to true
function Global.PreloadScriptPhoneConversation(displaySubtitles, addToBriefScreen)
	return _in(0x6004BCB0E226AAEA, displaySubtitles, addToBriefScreen)
end

--- Request that we preload the required audio bank for a given vehicle model.
-- ```
-- NativeDB Introduced: v1180
-- ```
function Global.PreloadVehicleAudioBank(model)
	return _in(0xCA4CEA6AE0000A7E, _ch(model))
end
Global.N_0xca4cea6ae0000a7e = Global.PreloadVehicleAudioBank
Global.PreloadVehicleAudio = Global.PreloadVehicleAudioBank

--- PRELOAD_VEHICLE_MOD
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.PreloadVehicleMod(p0, modType, p2)
	return _in(0x758F49C24925568A, p0, modType, p2)
end

--- Prepares any banks required to play the given alarm
-- @return Returns true if the alarm was successfully prepared
function Global.PrepareAlarm(alarmName)
	return _in(0x9D74AE343DB65533, _ts(alarmName), _r)
end

--- Prepares the specified music event. Preparing it in advance will preload any required data so that it's ready to play immediately.
-- @return Returns true if the event is prepared, false otherwise
function Global.PrepareMusicEvent(eventName)
	return _in(0x1E5185B72EF5158A, _ts(eventName), _r)
end

--- PREPARE_SYNCHRONIZED_AUDIO_EVENT
-- @param audioEvent The audio event name.
-- @param startOffsetMs Unused parameter (since v323)
function Global.PrepareSynchronizedAudioEvent(audioEvent, startOffsetMs)
	return _in(0xC7ABCACA4985A766, _ts(audioEvent), startOffsetMs, _r)
end

--- PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE
-- @return Returns true if prepared, false otherwise
function Global.PrepareSynchronizedAudioEventForScene(sceneId, audioEvent)
	return _in(0x029FE7CD1B7E2E75, sceneId, _ts(audioEvent), _r)
end

--- PRESENCE_EVENT_UPDATESTAT_FLOAT
function Global.PresenceEventUpdatestatFloat(statHash, value, p2)
	return _in(0x30A6614C1F7799B8, _ch(statHash), value, p2)
end
Global.N_0x30a6614c1f7799b8 = Global.PresenceEventUpdatestatFloat
Global.UpdateStatFloat = Global.PresenceEventUpdatestatFloat

--- PRESENCE_EVENT_UPDATESTAT_INT
function Global.PresenceEventUpdatestatInt(statHash, value, p2)
	return _in(0x11FF1C80276097ED, _ch(statHash), value, p2)
end
Global.N_0x11ff1c80276097ed = Global.PresenceEventUpdatestatInt
Global.UpdateStatInt = Global.PresenceEventUpdatestatInt

--- Only one match in the scripts:
-- GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
function Global.PresetInteriorAmbientCache(timecycleModifierName)
	return _in(0xD7021272EB0A451E, _ts(timecycleModifierName))
end
Global.N_0xd7021272eb0a451e = Global.PresetInteriorAmbientCache
Global.PresetInteriorAmbientCache = Global.PresetInteriorAmbientCache

--- PREVENT_COLLECTION_OF_PORTABLE_PICKUP
function Global.PreventCollectionOfPortablePickup(object, p1, p2)
	return _in(0x92AEFB5F6E294023, object, p1, p2)
end
Global.N_0x92aefb5f6e294023 = Global.PreventCollectionOfPortablePickup

--- PROCESS_CASH_GIFT
function Global.ProcessCashGift(p2)
	return _in(0x20194D48EAEC9A41, _i, _i, _ts(p2), _s)
end
Global.N_0x20194d48eaec9a41 = Global.ProcessCashGift

--- Called to update entity attachments.
function Global.ProcessEntityAttachments(entity)
	return _in(0xF4080490ADC51C6F, entity)
end

--- Scope entry for profiler.
-- @param scopeName Scope name.
function Global.ProfilerEnterScope(scopeName)
	return _in(0xc795a4a9, _ts(scopeName))
end

--- Scope exit for profiler.
function Global.ProfilerExitScope()
	return _in(0xb39ca35c)
end

--- Returns true if the profiler is active.
-- @return True or false.
function Global.ProfilerIsRecording()
	return _in(0xf8b7d7bb, _r)
end

--- PULSE_BLIP
function Global.PulseBlip(blip)
	return _in(0x742D6FD43115AF73, blip)
end

--- PUSH_TIMECYCLE_MODIFIER
function Global.PushTimecycleModifier()
	return _in(0x58F735290861E6B4)
end

--- QUERY_MOVIE_MESH_SET_STATE
function Global.QueryMovieMeshSetState(p0)
	return _in(0x9B6E70C5CEEF4EEB, p0, _ri)
end
Global.N_0x9b6e70c5ceef4eeb = Global.QueryMovieMeshSetState

--- QUEUE_MISSION_REPEAT_LOAD
function Global.QueueMissionRepeatLoad()
	return _in(0x72DE52178C291CB5, _r)
end
Global.N_0x72de52178c291cb5 = Global.QueueMissionRepeatLoad

--- Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
-- @return Returns 1 if the message isn't currently on screen.
function Global.QueueMissionRepeatSave()
	return _in(0x44A0BDC559B35F6E, _r)
end
Global.N_0x44a0bdc559b35f6e = Global.QueueMissionRepeatSave

--- Queues a scan of all gallery photos.
-- Also see [`GET_STATUS_OF_SORTED_LIST_OPERATION`](#\_0xF5BED327CEA362B1)
-- @return Returns true if the operation began.
function Global.QueueOperationToCreateSortedListOfPhotos(scanForSaving)
	return _in(0x2A893980E96B659A, scanForSaving, _r)
end
Global.N_0x2a893980e96b659a = Global.QueueOperationToCreateSortedListOfPhotos

--- Quits the game.
function Global.QuitGame()
	return _in(0xEB6891F03362FB12)
end
Global.N_0xeb6891f03362fb12 = Global.QuitGame
Global.ForceSocialClubUpdate = Global.QuitGame

--- Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
function Global.RaceGalleryAddBlip(x, y, z)
	return _in(0x551DF99658DB6EE8, x, y, z, _ri)
end
Global.N_0x551df99658db6ee8 = Global.RaceGalleryAddBlip

--- If toggle is true, the map is shown in full screen
-- If toggle is false, the map is shown in normal mode
function Global.RaceGalleryFullscreen(toggle)
	return _in(0x5354C5BA2EA868A4, toggle)
end
Global.N_0x5354c5ba2ea868a4 = Global.RaceGalleryFullscreen
Global.SetMapFullScreen = Global.RaceGalleryFullscreen

--- Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
function Global.RaceGalleryNextBlipSprite(spriteId)
	return _in(0x1EAE6DD17B7A5EFA, spriteId)
end
Global.N_0x1eae6dd17b7a5efa = Global.RaceGalleryNextBlipSprite

--- RAISE_CONVERTIBLE_ROOF
function Global.RaiseConvertibleRoof(vehicle, instantlyRaise)
	return _in(0x8F5FB35D7E88FC70, vehicle, instantlyRaise)
end

--- _RAISE_RETRACTABLE_WHEELS
function Global.RaiseRetractableWheels(vehicle)
	return _in(0xF660602546D27BA8, vehicle)
end
Global.RaiseLowerableWheels = Global.RaiseRetractableWheels

--- Creates a broken glass area
function Global.RecordBrokenGlass(x, y, z, radius)
	return _in(0xFBE20329593DEC9D, x, y, z, radius)
end
Global.N_0xfbe20329593dec9d = Global.RecordBrokenGlass

--- REFILL_AMMO_INSTANTLY
function Global.RefillAmmoInstantly(ped)
	return _in(0x8C0D57EA686FAD87, ped, _r)
end
Global.PedSkipNextReloading = Global.RefillAmmoInstantly

--- Refreshes the closest shoreline using the nearest road position.
function Global.RefreshClosestOceanShoreline()
	return _in(0x5D2BFAAB8D956E0E)
end
Global.N_0x5d2bfaab8d956e0e = Global.RefreshClosestOceanShoreline

--- REFRESH_INTERIOR
function Global.RefreshInterior(interiorID)
	return _in(0x41F37C3427C75AE0, interiorID)
end

--- REFRESH_PLAYER_LIST_STATS
function Global.RefreshPlayerListStats(p0)
	return _in(0xE26CCFF8094D8C74, p0, _r)
end
Global.UsingNetworkWeapontype = Global.RefreshPlayerListStats
Global.N_0xe26ccff8094d8c74 = Global.RefreshPlayerListStats

--- REFRESH_WAYPOINT
function Global.RefreshWaypoint()
	return _in(0x81FA173F170560D1)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a set of archetypes with the game engine. These should match `CBaseArchetypeDef` class information from the game.
-- @param factory A function returning a list of archetypes.
function Global.RegisterArchetypes(factory)
	return _in(0x3c2f9037, _mfr(factory))
end

--- REGISTER_BOOL_TO_SAVE
function Global.RegisterBoolToSave(name)
	return _in(0xC8F4131414C835A1, _i, _ts(name))
end

--- Registered commands can be executed by entering them in the client console (this works for client side and server side registered commands). Or by entering them in the server console/through an RCON client (only works for server side registered commands). Or if you use a supported chat resource, like the default one provided in the cfx-server-data repository, then you can enter the command in chat by prefixing it with a `/`.
-- Commands registered using this function can also be executed by resources, using the [`ExecuteCommand` native](#\_0x561C060B).
-- The restricted bool is not used on the client side. Permissions can only be checked on the server side, so if you want to limit your command with an ace permission automatically, make it a server command (by registering it in a server script).
-- **Example result**:
-- ![](https://i.imgur.com/TaCnG09.png)
-- @param commandName The command you want to register.
-- @param handler A handler function that gets called whenever the command is executed.
-- @param restricted If this is a server command and you set this to true, then players will need the command.yourCommandName ace permission to execute this command.
function Global.RegisterCommand(commandName, handler, restricted)
	return _in(0x5fa79b0f, _ts(commandName), _mfr(handler), restricted)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a set of entities with the game engine. These should match `CEntityDef` class information from the game.
-- At this time, this function **should not be used in a live environment**.
-- @param factory A function returning a list of entities.
function Global.RegisterEntities(factory)
	return _in(0x410da7d3, _mfr(factory))
end

--- This can only be run once [`CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY`](#\_0xB56BBBCC2955D9CB) is true, but can be run before [`HAS_CUTSCENE_LOADED`](#\_0xC59F528E9AB9F339)
-- @param cutsceneEntity Entity to put into the cutscene.
-- @param cutsceneEntName cHandle of cutscene entity, i.e Michael, MP\_1, MP\_4, Lamar
-- @param modelHash Not strictly neccasary, often 0 in R\* scripts
-- @param p4 0 for SP, 64 for MP seemingly
function Global.RegisterEntityForCutscene(cutsceneEntity, cutsceneEntName, p2, modelHash, p4)
	return _in(0xE40C1C56DF95C2E8, cutsceneEntity, _ts(cutsceneEntName), p2, _ch(modelHash), p4)
end

--- REGISTER_ENUM_TO_SAVE
function Global.RegisterEnumToSave(name)
	return _in(0x10C2FA78D0E128A1, _i, _ts(name))
end

--- REGISTER_FLOAT_TO_SAVE
function Global.RegisterFloatToSave(name)
	return _in(0x7CAEC29ECB5DFEBB, _i, _ts(name))
end

--- Registers a specified .gfx file as GFx font library.
-- The .gfx file has to be registered with the streamer already.
-- @param fileName The name of the .gfx file, without extension.
function Global.RegisterFontFile(fileName)
	return _in(0x1b3a363, _ts(fileName))
end

--- Registers a specified font name for use with text draw commands.
-- @param fontName The name of the font in the GFx font library.
-- @return An index to use with [SET_TEXT_FONT](#\_0x66E0276CC5F6B9DA) and similar natives.
function Global.RegisterFontId(fontName)
	return _in(0xacf6d8ee, _ts(fontName), _ri)
end

--- Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
function Global.RegisterHatedTargetsAroundPed(ped, radius)
	return _in(0x9222F300BF8354FE, ped, radius)
end

--- _REGISTER_INT64_TO_SAVE
function Global.RegisterInt64ToSave(name)
	return _in(0xA735353C77334EA0, _i, _ts(name))
end
Global.N_0xa735353c77334ea0 = Global.RegisterInt64ToSave

--- REGISTER_INT_TO_SAVE
function Global.RegisterIntToSave(name)
	return _in(0x34C9EE5986258415, _i, _ts(name))
end

--- Registers a key mapping for the current resource.
-- See the related [cookbook post](https://cookbook.fivem.net/2020/01/06/using-the-new-console-key-bindings/) for more information.
-- Below you can find some examples on how to create these keybindings as well as the alternate keybinding syntax, which is preceded by `~!` to indicate that it's an alternate key.
-- @param commandString The command to execute, and the identifier of the binding.
-- @param description A description for in the settings menu.
-- @param defaultMapper The [mapper ID](https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/) to use for the default binding, e.g. `keyboard`.
-- @param defaultParameter The [IO parameter ID](https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/) to use for the default binding, e.g. `f3`.
function Global.RegisterKeyMapping(commandString, description, defaultMapper, defaultParameter)
	return _in(0xd7664fd1, _ts(commandString), _ts(description), _ts(defaultMapper), _ts(defaultParameter))
end

--- REGISTER_NAMED_RENDERTARGET
function Global.RegisterNamedRendertarget(name, p1)
	return _in(0x57D9C12635E25CE3, _ts(name), p1, _r)
end

--- Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
function Global.RegisterNoirScreenEffectThisFrame()
	return _in(0xA44FF770DFBC5DAE)
end
Global.N_0xa44ff770dfbc5dae = Global.RegisterNoirScreenEffectThisFrame

--- REGISTER_NUI_CALLBACK
function Global.RegisterNuiCallback(callbackType, callback)
	return _in(0xc59b980c, _ts(callbackType), _mfr(callback))
end

--- REGISTER_NUI_CALLBACK_TYPE
function Global.RegisterNuiCallbackType(callbackType)
	return _in(0xcd03cda9, _ts(callbackType))
end

--- Registers a script for any object with a specific model hash.
-- BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);
function Global.RegisterObjectScriptBrain(scriptName, modelHash, p2, activationRange, p4, p5)
	return _in(0x0BE84C318BA6EC22, _ts(scriptName), _ch(modelHash), p2, activationRange, p4, p5)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
-- @param ped The ped you want to take the "headshot" of.
-- @return It returns a Pedheadshot handle, which can be used by natives such as [`GET_PEDHEADSHOT_TXD_STRING`](#\_0xDB4EACD4AD0A5D6B)
function Global.RegisterPedheadshot(ped)
	return _in(0x4462658788425076, ped, _ri)
end

--- Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
-- **Result of the example code:**
-- <https://i.imgur.com/iHz8ztn.png>
-- @param ped A ped handle.
-- @return The Pedheadshot handle.
function Global.RegisterPedheadshotTransparent(ped)
	return _in(0x953563CE563143AF, ped, _ri)
end
Global.N_0x953563ce563143af = Global.RegisterPedheadshotTransparent

--- _REGISTER_PEDHEADSHOT_3
function Global.RegisterPedheadshot_3(ped)
	return _in(0xBA8805A1108A2515, ped, _ri)
end
Global.N_0xba8805a1108a2515 = Global.RegisterPedheadshot_3

--- REGISTER_RAW_NUI_CALLBACK
function Global.RegisterRawNuiCallback(callbackType, callback)
	return _in(0xa8ae9c2f, _ts(callbackType), _mfr(callback))
end

--- An internal function which allows the current resource's HLL script runtimes to receive state for the specified event.
-- @param eventName An event name, or "\*" to disable HLL event filtering for this resource.
function Global.RegisterResourceAsEventHandler(eventName)
	return _in(0xd233a168, _ts(eventName))
end

--- REGISTER_SAVE_HOUSE
function Global.RegisterSaveHouse(p0, p1, p2, p3, p5, p6)
	return _in(0xC0714D0A7EEECA54, p0, p1, p2, p3, _i, p5, p6, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.RegisterScriptWithAudio(inChargeOfAudio)
	return _in(0xC6ED9D5092438D91, inChargeOfAudio)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a dynamic streaming asset from the server with the GTA streaming module system.
-- @param resourceName The resource to add the asset to.
-- @param fileName A file name in the resource.
-- @param cacheString The string returned from `REGISTER_RESOURCE_ASSET` on the server.
function Global.RegisterStreamingFileFromCache(resourceName, fileName, cacheString)
	return _in(0xcead2d4b, _ts(resourceName), _ts(fileName), _ts(cacheString))
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a KVP value as an asset with the GTA streaming module system. This function currently won't work.
-- @param kvsKey The KVP key in the current resource to register as an asset.
function Global.RegisterStreamingFileFromKvs(kvsKey)
	return _in(0x1493dcc1, _ts(kvsKey))
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a file from an URL as a streaming asset in the GTA streaming subsystem. This will asynchronously register the asset, and caching is done based on the URL itself - cache headers are ignored.
-- Use `IS_STREAMING_FILE_READY` to check if the asset has been registered successfully.
-- @param registerAs The file name to register as, for example `asset.ydr`.
-- @param url The URL to fetch the asset from.
function Global.RegisterStreamingFileFromUrl(registerAs, url)
	return _in(0xf44bfb95, _ts(registerAs), _ts(url))
end

--- Only used twice in armenian1.c
function Global.RegisterSynchronisedScriptSpeech()
	return _in(0x2131046957F31B04)
end

--- PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.
-- l_216 = RECSBRobber1
function Global.RegisterTarget(ped, target)
	return _in(0x2F25D9AEFA34FBA2, ped, target)
end

--- REGISTER_TEXT_LABEL_TO_SAVE
function Global.RegisterTextLabelToSave(name)
	return _in(0xEDB1232C5BEAE62F, _i, _ts(name))
end

--- Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
-- MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
-- MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
-- MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
-- "tl" prefix sounds like "Text Label"
function Global.RegisterTextLabelToSave_2(name)
	return _in(0x6F7794F28C6B2535, _i, _ts(name))
end
Global.N_0x6f7794f28c6b2535 = Global.RegisterTextLabelToSave_2

--- REGISTER_WORLD_POINT_SCRIPT_BRAIN
function Global.RegisterWorldPointScriptBrain(scriptName, activationRange, p2)
	return _in(0x3CDC7136613284BD, _ts(scriptName), activationRange, p2)
end

--- RELEASE_ALL_COMMERCE_ITEM_IMAGES
function Global.ReleaseAllCommerceItemImages()
	return _in(0x72D0706CD6CCDB58)
end
Global.N_0x72d0706cd6ccdb58 = Global.ReleaseAllCommerceItemImages

--- This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#\_0x7A2D8AD0A9EB9C3F) instead.
function Global.ReleaseAmbientAudioBank()
	return _in(0x65475A218FFAA93D)
end

--- NativeDB Introduced: v1290
function Global.ReleaseBinkMovie(binkMovie)
	return _in(0x04D950EEFA4EED8C, binkMovie)
end

--- Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
-- To disable the keys, use [`0xEC9264727EEC0F28`](#\_0xEC9264727EEC0F28).
function Global.ReleaseControlOfFrontend()
	return _in(0x14621BB1DF14E2B2)
end
Global.N_0x14621bb1df14e2b2 = Global.ReleaseControlOfFrontend

--- This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#\_0x7A2D8AD0A9EB9C3F) instead.
function Global.ReleaseMissionAudioBank()
	return _in(0x0EC92A1BF0857187)
end

--- RELEASE_MOVIE_MESH_SET
function Global.ReleaseMovieMeshSet(movieMeshSet)
	return _in(0xEB119AA014E89183, movieMeshSet)
end

--- RELEASE_NAMED_RENDERTARGET
function Global.ReleaseNamedRendertarget(name)
	return _in(0xE9F6FFE837354DD4, _ts(name), _r)
end

--- Unloads the specified audioBank
function Global.ReleaseNamedScriptAudioBank(audioBank)
	return _in(0x77ED170667F50170, _ts(audioBank))
end

--- RELEASE_PED_PRELOAD_PROP_DATA
function Global.ReleasePedPreloadPropData(ped)
	return _in(0xF79F9DEF0AADE61A, ped)
end
Global.N_0xf79f9def0aade61a = Global.ReleasePedPreloadPropData

--- RELEASE_PED_PRELOAD_VARIATION_DATA
function Global.ReleasePedPreloadVariationData(ped)
	return _in(0x5AAB586FFEC0FD96, ped)
end
Global.N_0x5aab586ffec0fd96 = Global.ReleasePedPreloadVariationData

--- RELEASE_PEDHEADSHOT_IMG_UPLOAD
function Global.ReleasePedheadshotImgUpload(id)
	return _in(0x5D517B27CF6ECD04, id)
end
Global.N_0x5d517b27cf6ecd04 = Global.ReleasePedheadshotImgUpload

--- RELEASE_PRELOAD_MODS
function Global.ReleasePreloadMods(vehicle)
	return _in(0x445D79F995508307, vehicle)
end

--- Unloads all audio banks requested by this script.
function Global.ReleaseScriptAudioBank()
	return _in(0x7A2D8AD0A9EB9C3F)
end

--- Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
-- ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
-- @param entity The entity handle to invalidate.
function Global.ReleaseScriptGuidFromEntity(entity)
	return _in(0x2B3334BCA57CD799, entity)
end
Global.N_0x2b3334bca57cd799 = Global.ReleaseScriptGuidFromEntity
Global.ShapeTestResultEntity = Global.ReleaseScriptGuidFromEntity

--- This should be called once a sound has finished being manipulated by the script so that its SoundId can be released and re-used.
function Global.ReleaseSoundId(soundId)
	return _in(0x353FC880830B88FA, soundId)
end

--- NativeDB Introduced: v323
function Global.ReleaseWeaponAudio()
	return _in(0xCE4AC0439F607045)
end

--- Forces the map menu to reload.
function Global.ReloadMapMenu()
	return _in(0x2916A928514C9827)
end

--- NativeDB Added Parameter 1: Player player
-- NativeDB Added Parameter 2: int a
-- NativeDB Added Parameter 3: int b
function Global.RemoteCheatDetected()
	return _in(0x472841A026D26D8B, _r)
end
Global.N_0x472841a026d26d8b = Global.RemoteCheatDetected

--- REMOVE_ACTION_MODE_ASSET
function Global.RemoveActionModeAsset(asset)
	return _in(0x13E940F88470FA51, _ts(asset))
end

--- _REMOVE_AIR_DEFENSE_ZONE
function Global.RemoveAirDefenseZone(zoneId)
	return _in(0x0ABF535877897560, zoneId, _r)
end
Global.N_0x0abf535877897560 = Global.RemoveAirDefenseZone

--- _REMOVE_ALL_AIR_DEFENSE_ZONES
function Global.RemoveAllAirDefenseZones()
	return _in(0x1E45B34ADEBEE48E)
end
Global.N_0x1e45b34adebee48e = Global.RemoveAllAirDefenseZones

--- REMOVE_ALL_COVER_BLOCKING_AREAS
function Global.RemoveAllCoverBlockingAreas()
	return _in(0xDB6708C0B46F56D8)
end

--- Parameter `p1` does not seem to be used or referenced in game binaries.\
-- **Note:** When called for networked entities, a `CRemoveAllWeaponsEvent` will be created per request.
-- @param ped The ped entity
function Global.RemoveAllPedWeapons(ped, p1)
	return _in(0xF25DF915FA38C5F3, ped, p1)
end

--- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
function Global.RemoveAllPickupsOfType(pickupHash)
	return _in(0x27F9D613092159CF, _ch(pickupHash))
end

--- If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
function Global.RemoveAllProjectilesOfType(weaponHash, explode)
	return _in(0xFC52E0F37E446528, _ch(weaponHash), explode)
end

--- REMOVE_ALL_SHOCKING_EVENTS
function Global.RemoveAllShockingEvents(p0)
	return _in(0xEAABE8FDFA21274C, p0)
end

--- Used in am_mp_property_ext and am_mp_property_int
-- ```
-- ```
-- NativeDB Added Parameter 2: Ped ped
function Global.RemoveAllStickyBombsFromEntity(entity)
	return _in(0x715135F4B82AC90D, entity)
end
Global.N_0x715135f4b82ac90d = Global.RemoveAllStickyBombsFromEntity

--- REMOVE_ANIM_DICT
function Global.RemoveAnimDict(animDict)
	return _in(0xF66A602F829E2A06, _ts(animDict))
end

--- Unloads the specified animation set. An animation set provides movement animations for a ped.
-- Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
function Global.RemoveAnimSet(animSet)
	return _in(0x16350528F93024B3, _ts(animSet))
end

--- Removes the blip from your map.
-- **Note:** This function only works on the script that created the blip, if you wish to remove blips created by other scripts, see [`SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT`](#\_0x86A652570E5F25DD).
-- @param blip Blip handle to remove.
function Global.RemoveBlip(blip)
	return _in(0x86A652570E5F25DD, _ii(blip) --[[ may be optional ]])
end

--- Alias for REMOVE_ANIM_SET.
function Global.RemoveClipSet(clipSet)
	return _in(0x01F73A131C18CD94, _ts(clipSet))
end

--- REMOVE_COVER_POINT
function Global.RemoveCoverPoint(coverpoint)
	return _in(0xAE287C923D891715, coverpoint)
end

--- p0 is the handle returned from _0xFDBF4CDBC07E1706
function Global.RemoveCurrentRise(p0)
	return _in(0xB1252E3E59A82AAF, p0)
end
Global.N_0xb1252e3e59a82aaf = Global.RemoveCurrentRise

--- Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
function Global.RemoveCutFile(cutsceneName)
	return _in(0xD00D76A7DFC9D852, _ts(cutsceneName))
end
Global.N_0xd00d76a7dfc9d852 = Global.RemoveCutFile

--- REMOVE_CUTSCENE
function Global.RemoveCutscene()
	return _in(0x440AF51A3462B86F)
end

--- REMOVE_DECAL
function Global.RemoveDecal(decal)
	return _in(0xED3F346429CCD659, decal)
end

--- REMOVE_DECALS_FROM_OBJECT
function Global.RemoveDecalsFromObject(obj)
	return _in(0xCCF71CBDDF5B6CB9, obj)
end

--- REMOVE_DECALS_FROM_OBJECT_FACING
function Global.RemoveDecalsFromObjectFacing(obj, x, y, z)
	return _in(0xA6F6F70FDC6D144C, obj, x, y, z)
end

--- REMOVE_DECALS_FROM_VEHICLE
function Global.RemoveDecalsFromVehicle(vehicle)
	return _in(0xE91F1B65F2B48D57, vehicle)
end

--- Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
function Global.RemoveDecalsInRange(x, y, z, range)
	return _in(0x5D6B2D4830A67C62, x, y, z, range)
end

--- REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
function Global.RemoveDispatchSpawnBlockingArea(p0)
	return _in(0x264AC28B01B353A5, p0)
end

--- CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
-- Only its NetObj removed and flag `*(v2 + 192) |= 8u` (1604 retail) toggled.
function Global.RemoveDoorFromSystem(doorHash)
	return _in(0x464D8E1427156FE4, _ch(doorHash))
end

--- Removes a dry volume from the game session.
-- See CREATE_DRY_VOLUME for more info
-- @param handle The handle of the dry volume that needs to be removed.
function Global.RemoveDryVolume(handle)
	return _in(0x7bcaa6e7, handle)
end

--- Removes an entity from its current mix group.
-- @param fadeOut Defaults to 0.0
function Global.RemoveEntityFromAudioMixGroup(entity, fadeOut)
	return _in(0x18EB48CFC41F2EA0, entity, fadeOut)
end
Global.N_0x18eb48cfc41f2ea0 = Global.RemoveEntityFromAudioMixGroup

--- REMOVE_FORCED_OBJECT
function Global.RemoveForcedObject(p0, p1, p2, p3, p4)
	return _in(0x61B6775E83C0DB6F, p0, p1, p2, p3, p4)
end

--- REMOVE_FROM_ITEMSET
function Global.RemoveFromItemset(p0, p1)
	return _in(0x25E68244B0177686, p0, p1)
end

--- REMOVE_GROUP
function Global.RemoveGroup(groupId)
	return _in(0x8EB2F69076AF7053, groupId)
end

--- IPL list can be found [here](https://gist.github.com/4mmonium/4c8a076b5f712a7cc64666003009a2e7).
function Global.RemoveIpl(iplName)
	return _in(0xEE6C5AD3ECE0A82D, _ts(iplName))
end

--- REMOVE_MODEL_FROM_CREATOR_BUDGET
function Global.RemoveModelFromCreatorBudget(modelHash)
	return _in(0xF086AD9354FAC3A3, _ch(modelHash))
end
Global.N_0xf086ad9354fac3a3 = Global.RemoveModelFromCreatorBudget

--- p5 requires more research. See also [`CREATE_MODEL_HIDE`](#\_0x8A97BCA30A0CE478) and [`CREATE_MODEL_SWAP`](#\_0x92C47782FDA8B2A3).
-- Network players do not see changes done with this.
-- @param radius The radius specified in gta units
-- @param model The model that you want to make visible
function Global.RemoveModelHide(x, y, z, radius, model, p5)
	return _in(0xD9E3006FB3CBD765, x, y, z, radius, _ch(model), p5)
end

--- REMOVE_MODEL_SWAP
function Global.RemoveModelSwap(x, y, z, radius, originalModel, newModel, p6)
	return _in(0x033C0F9A64E229AE, x, y, z, radius, _ch(originalModel), _ch(newModel), p6)
end

--- Removes the gamer tag associated with the provided ID. This does not happen instantly. Use [IS_MP_GAMER_TAG_FREE](#\_0x595B5178E412E199) to determine when the ID is free for reuse.
-- @param gamerTagId A player ID with a gamer tag or a fake gamer tag ID.
function Global.RemoveMpGamerTag(gamerTagId)
	return _in(0x31698AA80E0223F8, gamerTagId)
end
Global.N_0x31698aa80e0223f8 = Global.RemoveMpGamerTag

--- REMOVE_MULTIPLAYER_BANK_CASH
function Global.RemoveMultiplayerBankCash()
	return _in(0xC7C6789AA1CFEDD0)
end

--- Removes multiplayer cash hud each frame
function Global.RemoveMultiplayerHudCash()
	return _in(0x968F270E39141ECA)
end

--- REMOVE_MULTIPLAYER_WALLET_CASH
function Global.RemoveMultiplayerWalletCash()
	return _in(0x95CF81BD06EE1887)
end
Global.N_0x95cf81bd06ee1887 = Global.RemoveMultiplayerWalletCash

--- REMOVE_NAMED_PTFX_ASSET
function Global.RemoveNamedPtfxAsset(fxName)
	return _in(0x5F61EBBE1A00F96D, _ts(fxName))
end
Global.RemoveNamedPtfxAsset = Global.RemoveNamedPtfxAsset

--- REMOVE_NAVMESH_BLOCKING_OBJECT
function Global.RemoveNavmeshBlockingObject(p0)
	return _in(0x46399A7895957C0E, p0)
end

--- REMOVE_NAVMESH_REQUIRED_REGIONS
function Global.RemoveNavmeshRequiredRegions()
	return _in(0x916F0A3CDEC3445E)
end

--- REMOVE_OBJECT_HIGH_DETAIL_MODEL
function Global.RemoveObjectHighDetailModel(object)
	return _in(0x4A39DB43E47CF3AA, object)
end
Global.N_0x4a39db43e47cf3aa = Global.RemoveObjectHighDetailModel

--- REMOVE_PARTICLE_FX
function Global.RemoveParticleFx(ptfxHandle, p1)
	return _in(0xC401503DFE8D53CF, ptfxHandle, p1)
end

--- REMOVE_PARTICLE_FX_FROM_ENTITY
function Global.RemoveParticleFxFromEntity(entity)
	return _in(0xB8FEAEEBCC127425, entity)
end

--- REMOVE_PARTICLE_FX_IN_RANGE
function Global.RemoveParticleFxInRange(X, Y, Z, radius)
	return _in(0xDD19FA1C6D657305, X, Y, Z, radius)
end

--- Ped will no longer get angry when you stay near him.
function Global.RemovePedDefensiveArea(ped, toggle)
	return _in(0x74D4E028107450A9, ped, toggle)
end

--- Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed.
function Global.RemovePedElegantly(ped)
	return _in(0xAC6D445B994DF95E, _ii(ped) --[[ may be optional ]])
end

--- REMOVE_PED_FROM_GROUP
function Global.RemovePedFromGroup(ped)
	return _in(0xED74007FFB146BC2, ped)
end

--- Remove a helmet from a ped
-- @param ped Ped index.
-- @param instantly Force to remove.
function Global.RemovePedHelmet(ped, instantly)
	return _in(0xA7B2458D0AD6DED8, ped, instantly)
end

--- REMOVE_PED_PREFERRED_COVER_SET
function Global.RemovePedPreferredCoverSet(ped)
	return _in(0xFDDB234CF74073D9, ped)
end
Global.N_0xfddb234cf74073d9 = Global.RemovePedPreferredCoverSet

--- Retracts the hook on the cargobob.
-- Note: after you retract it the natives for dropping the hook no longer work
function Global.RemovePickUpRopeForCargobob(cargobob)
	return _in(0x9768CF648F54C804, cargobob)
end
Global.RetractCargobobHook = Global.RemovePickUpRopeForCargobob

--- REMOVE_PICKUP
function Global.RemovePickup(pickup)
	return _in(0x3288D8ACAECD2AB2, pickup)
end

--- REMOVE_PLAYER_HELMET
function Global.RemovePlayerHelmet(player, p2)
	return _in(0xF3AC26D3CC576528, player, p2)
end

--- REMOVE_POP_MULTIPLIER_AREA
function Global.RemovePopMultiplierArea(id, p1)
	return _in(0xB129E447A2EDA4BF, id, p1)
end
Global.N_0xb129e447a2eda4bf = Global.RemovePopMultiplierArea

--- REMOVE_POP_MULTIPLIER_SPHERE
function Global.RemovePopMultiplierSphere(id, p1)
	return _in(0xE6869BECDD8F2403, id, p1)
end
Global.N_0xe6869becdd8f2403 = Global.RemovePopMultiplierSphere

--- ```
-- Found in the b617d scripts, duplicates removed:
-- AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
-- AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
-- AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
-- AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
-- AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
-- ```
-- For events like cars driving through windows, allows script to unocclude that window
function Global.RemovePortalSettingsOverride(portalSettingsName)
	return _in(0xB4BBFD9CD8B3922B, _ts(portalSettingsName))
end
Global.N_0xb4bbfd9cd8b3922b = Global.RemovePortalSettingsOverride

--- REMOVE_PTFX_ASSET
function Global.RemovePtfxAsset()
	return _in(0x88C6814073DD4A73)
end

--- REMOVE_RELATIONSHIP_GROUP
function Global.RemoveRelationshipGroup(groupHash)
	return _in(0xB6BA2444AB393DA2, _ch(groupHash))
end

--- Experimental natives, please do not use in a live environment.
function Global.RemoveReplaceTexture(origTxd, origTxn)
	return _in(0xa896b20a, _ts(origTxd), _ts(origTxn))
end

--- REMOVE_ROAD_NODE_SPEED_ZONE
function Global.RemoveRoadNodeSpeedZone(speedzone)
	return _in(0x1033371FC8E842A7, speedzone, _r)
end
Global.N_0x1033371fc8e842a7 = Global.RemoveRoadNodeSpeedZone
Global.RemoveSpeedZone = Global.RemoveRoadNodeSpeedZone

--- REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE
function Global.RemoveScaleformScriptHudMovie(hudComponent)
	return _in(0xF44A5456AC3F4F97, hudComponent)
end
Global.N_0xf44a5456ac3f4f97 = Global.RemoveScaleformScriptHudMovie

--- REMOVE_SCENARIO_BLOCKING_AREA
-- @param scenarioBlockingIndex the index of the Scenario blocking area
-- @param bNetwork Optionally networked to all other players
function Global.RemoveScenarioBlockingArea(scenarioBlockingIndex, bNetwork)
	return _in(0x31D16B74C6E29D66, scenarioBlockingIndex, bNetwork)
end

--- REMOVE_SCENARIO_BLOCKING_AREAS
function Global.RemoveScenarioBlockingAreas()
	return _in(0xD37401D78A929A49)
end

--- REMOVE_SCRIPT_FIRE
function Global.RemoveScriptFire(fireHandle)
	return _in(0x7FF548385680673F, fireHandle)
end

--- REMOVE_SHOCKING_EVENT
function Global.RemoveShockingEvent(event)
	return _in(0x2CDA538C44C6CCE5, event, _r)
end

--- REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS
function Global.RemoveShockingEventSpawnBlockingAreas()
	return _in(0x340F1415B68AEADE)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Removes a handler for changes to a state bag.
-- @param cookie The cookie.
function Global.RemoveStateBagChangeHandler(cookie)
	return _in(0xd36be661, cookie)
end

--- Appears to remove stealth kill action from memory
function Global.RemoveStealthKill(hash, p1)
	return _in(0xA6A12939F16D85BE, _ch(hash), p1)
end
Global.N_0xa6a12939f16d85be = Global.RemoveStealthKill

--- REMOVE_STEALTH_MODE_ASSET
function Global.RemoveStealthModeAsset(asset)
	return _in(0x9219857D21F0E842, _ts(asset))
end

--- REMOVE_TCMODIFIER_OVERRIDE
function Global.RemoveTcmodifierOverride(p0)
	return _in(0x15E33297C3E8DC60, _ts(p0))
end
Global.N_0x15e33297c3e8dc60 = Global.RemoveTcmodifierOverride

--- REMOVE_TIMECYCLE_MODIFIER
-- @param modifierName The timecycle modifier name.
function Global.RemoveTimecycleModifier(modifierName)
	return _in(0x36df8612, _ts(modifierName))
end

--- REMOVE_TIMECYCLE_MODIFIER_VAR
-- @param modifierName The name of timecycle modifier.
-- @param varName The name of timecycle variable.
function Global.RemoveTimecycleModifierVar(modifierName, varName)
	return _in(0x5a5e0d05, _ts(modifierName), _ts(varName))
end

--- REMOVE_VEHICLE_ASSET
function Global.RemoveVehicleAsset(vehicleAsset)
	return _in(0xACE699C71AB9DEB5, vehicleAsset)
end

--- REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA
function Global.RemoveVehicleCombatAvoidanceArea(p0)
	return _in(0xE30524E1871F481D, p0)
end
Global.N_0xe30524e1871f481d = Global.RemoveVehicleCombatAvoidanceArea

--- REMOVE_VEHICLE_CREW_EMBLEM
function Global.RemoveVehicleCrewEmblem(vehicle, p1)
	return _in(0xD2300034310557E4, vehicle, p1)
end
Global.N_0xd2300034310557e4 = Global.RemoveVehicleCrewEmblem

--- REMOVE_VEHICLE_HIGH_DETAIL_MODEL
function Global.RemoveVehicleHighDetailModel(vehicle)
	return _in(0x00689CDE5F7C6787, vehicle)
end

--- REMOVE_VEHICLE_MOD
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.RemoveVehicleMod(vehicle, modType)
	return _in(0x92D619E420858204, vehicle, modType)
end

--- See [REQUEST_VEHICLE_RECORDING](#\_0xAF514CABE74CBF15)
function Global.RemoveVehicleRecording(recording, script)
	return _in(0xF1160ACCF98A3FC8, recording, _ts(script))
end

--- Remove the weird shadow applied by [\_SET_VEHICLE_SHADOW_EFFECT](#\_0x2A70BAE8883E4C81)
function Global.RemoveVehicleShadowEffect(vehicle)
	return _in(0xF87D9F2301F7D206, vehicle)
end
Global.N_0xf87d9f2301f7d206 = Global.RemoveVehicleShadowEffect

--- REMOVE_VEHICLE_STUCK_CHECK
function Global.RemoveVehicleStuckCheck(vehicle)
	return _in(0x8386BFB614D06749, vehicle)
end

--- REMOVE_VEHICLE_UPSIDEDOWN_CHECK
function Global.RemoveVehicleUpsidedownCheck(vehicle)
	return _in(0xC53EB42A499A7E90, vehicle)
end

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function Global.RemoveVehicleWindow(vehicle, windowIndex)
	return _in(0xA711568EEDB43069, vehicle, windowIndex)
end

--- REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA
function Global.RemoveVehiclesFromGeneratorsInArea(x1, y1, z1, x2, y2, z2, unk)
	return _in(0x46A1E1A299EC4BBA, x1, y1, z1, x2, y2, z2, unk)
end

--- _REMOVE_WARNING_MESSAGE_LIST_ITEMS
function Global.RemoveWarningMessageListItems()
	return _in(0x6EF54AB721DC6242)
end
Global.N_0x6ef54ab721dc6242 = Global.RemoveWarningMessageListItems

--- REMOVE_WAYPOINT_RECORDING
function Global.RemoveWaypointRecording(name)
	return _in(0xFF1B8B4AA1C25DC8, _ts(name))
end

--- REMOVE_WEAPON_ASSET
function Global.RemoveWeaponAsset(weaponHash)
	return _in(0xAA08EF13F341C8FC, _ch(weaponHash))
end

--- REMOVE_WEAPON_COMPONENT_FROM_PED
function Global.RemoveWeaponComponentFromPed(ped, weaponHash, componentHash)
	return _in(0x1E8BE90C74FB4C09, ped, _ch(weaponHash), _ch(componentHash))
end

--- REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT
function Global.RemoveWeaponComponentFromWeaponObject(weaponObject, addonHash)
	return _in(0xF7D82B0D66777611, weaponObject, _ch(addonHash))
end

--- This native removes a specified weapon from your selected ped.
-- Weapon Hashes: pastebin.com/0wwDZgkF
-- Example:
-- C#:
-- Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
-- C++:
-- WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);
-- The code above removes the knife from the player.
function Global.RemoveWeaponFromPed(ped, weaponHash)
	return _in(0x4899CB088EDF59B8, ped, _ch(weaponHash))
end

--- draws circular marker at pos
-- -1 = none
-- 0 = red
-- 1 = green
-- 2 = blue
-- 3 = green larger
-- 4 = nothing
-- 5 = green small
function Global.RenderFakePickupGlow(x, y, z, colorIndex)
	return _in(0x3430676B11CDF21D, x, y, z, colorIndex)
end
Global.N_0x3430676b11cdf21d = Global.RenderFakePickupGlow
Global.HighlightPlacementCoords = Global.RenderFakePickupGlow

--- ease - smooth transition between the camera's positions
-- easeTime - Time in milliseconds for the transition to happen
-- If you have created a script (rendering) camera, and want to go back to the
-- character (gameplay) camera, call this native with render set to 0.
-- Setting ease to 1 will smooth the transition.
-- ```
-- ```
-- NativeDB Added Parameter 6: Any p5
function Global.RenderScriptCams(render, ease, easeTime, p3, p4)
	return _in(0x07E5B515DB0636FC, render, ease, easeTime, p3, p4)
end

--- Changes the hud color at a given index (hudColorIndex) by another one (hudColorIndex2).
-- HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
function Global.ReplaceHudColour(hudColorIndex, hudColorIndex2)
	return _in(0x1CCC708F0F850613, hudColorIndex, hudColorIndex2)
end
Global.N_0x1ccc708f0f850613 = Global.ReplaceHudColour
Global.SetHudColoursSwitch = Global.ReplaceHudColour

--- Hud colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
function Global.ReplaceHudColourWithRgba(hudColorIndex, r, g, b, a)
	return _in(0xF314CF4F0211894E, hudColorIndex, r, g, b, a)
end
Global.N_0xf314cf4f0211894e = Global.ReplaceHudColourWithRgba
Global.SetHudColour = Global.ReplaceHudColourWithRgba

--- _REPLAY_FREE_CAM_GET_MAX_RANGE
function Global.ReplayFreeCamGetMaxRange()
	return _in(0x8BFCEB5EA1B161B6, _rf)
end
Global.N_0x8bfceb5ea1b161b6 = Global.ReplayFreeCamGetMaxRange

--- PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));
-- From am_armybase.ysc.c4:
-- PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));
-- -----
-- This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7
-- -----
-- crimeType:
-- 1: Firearms possession
-- 2: Person running a red light ("5-0-5")
-- 3: Reckless driver
-- 4: Speeding vehicle (a "5-10")
-- 5: Traffic violation (a "5-0-5")
-- 6: Motorcycle rider without a helmet
-- 7: Vehicle theft (a "5-0-3")
-- 8: Grand Theft Auto
-- 9: ???
-- 10: ???
-- 11: Assault on a civilian (a "2-40")
-- 12: Assault on an officer
-- 13: Assault with a deadly weapon (a "2-45")
-- 14: Officer shot (a "2-45")
-- 15: Pedestrian struck by a vehicle
-- 16: Officer struck by a vehicle
-- 17: Helicopter down (an "AC"?)
-- 18: Civilian on fire (a "2-40")
-- 19: Officer set on fire (a "10-99")
-- 20: Car on fire
-- 21: Air unit down (an "AC"?)
-- 22: An explosion (a "9-96")
-- 23: A stabbing (a "2-45") (also something else I couldn't understand)
-- 24: Officer stabbed (also something else I couldn't understand)
-- 25: Attack on a vehicle ("MDV"?)
-- 26: Damage to property
-- 27: Suspect threatening officer with a firearm
-- 28: Shots fired
-- 29: ???
-- 30: ???
-- 31: ???
-- 32: ???
-- 33: ???
-- 34: A "2-45"
-- 35: ???
-- 36: A "9-25"
-- 37: ???
-- 38: ???
-- 39: ???
-- 40: ???
-- 41: ???
-- 42: ???
-- 43: Possible disturbance
-- 44: Civilian in need of assistance
-- 45: ???
-- 46: ???
function Global.ReportCrime(player, crimeType, wantedLvlThresh)
	return _in(0xE9B09589827545E7, player, crimeType, wantedLvlThresh)
end

--- REPORT_POLICE_SPOTTED_PLAYER
function Global.ReportPoliceSpottedPlayer(player)
	return _in(0xDC64D2C53493ED12, player)
end
Global.N_0xdc64d2c53493ed12 = Global.ReportPoliceSpottedPlayer

--- REQUEST_ACTION_MODE_ASSET
function Global.RequestActionModeAsset(asset)
	return _in(0x290E2780BB7AA598, _ts(asset))
end

--- REQUEST_ADDITIONAL_COLLISION_AT_COORD
function Global.RequestAdditionalCollisionAtCoord(x, y, z)
	return _in(0xC9156DC11411A9EA, x, y, z)
end

--- Request a gxt into the passed slot.
function Global.RequestAdditionalText(gxt, slot)
	return _in(0x71A78003C8E71424, _ts(gxt), slot)
end

--- REQUEST_ADDITIONAL_TEXT_FOR_DLC
function Global.RequestAdditionalTextForDlc(gxt, slot)
	return _in(0x6009F9F1AE90D8A6, _ts(gxt), slot)
end
Global.RequestAdditionalText_2 = Global.RequestAdditionalTextForDlc

--- This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#\_0x2F844A8B08D76685)
-- This native has a new argument on newer game builds:
-- *   **playerBits**:
function Global.RequestAmbientAudioBank(bankName, bOverNetwork)
	return _in(0xFE02FFBED8CA9D99, _ts(bankName), bOverNetwork, _r)
end

--- REQUEST_ANIM_DICT
function Global.RequestAnimDict(animDict)
	return _in(0xD3BD40951412FEF6, _ts(animDict))
end

--- Starts loading the specified animation set. An animation set provides movement animations for a ped. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
function Global.RequestAnimSet(animSet)
	return _in(0x6EA47DAE7FAD0EED, _ts(animSet))
end

--- REQUEST_CLIP_SET
function Global.RequestClipSet(clipSet)
	return _in(0xD2A71E1A77418A49, _ts(clipSet))
end

--- REQUEST_COLLISION_AT_COORD
function Global.RequestCollisionAtCoord(x, y, z)
	return _in(0x07503F7948F491A7, x, y, z)
end

--- REQUEST_COLLISION_FOR_MODEL
function Global.RequestCollisionForModel(model)
	return _in(0x923CB32A3B874FCB, _ch(model))
end

--- REQUEST_COMMERCE_ITEM_IMAGE
function Global.RequestCommerceItemImage(index)
	return _in(0xA2F952104FC6DD4B, index, _r)
end
Global.N_0xa2f952104fc6dd4b = Global.RequestCommerceItemImage

--- Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
function Global.RequestCutFile(cutsceneName)
	return _in(0x06A3524161C502BA, _ts(cutsceneName))
end
Global.N_0x06a3524161c502ba = Global.RequestCutFile

--- REQUEST_CUTSCENE
-- @param cutsceneName Case insensitive
-- @param flags Usually 8
function Global.RequestCutscene(cutsceneName, flags)
	return _in(0x7A86743F475D9E09, _ts(cutsceneName), flags)
end

--- playbackFlags: Which scenes should be played.
-- Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
-- @param flags Usually 8
function Global.RequestCutsceneWithPlaybackList(cutsceneName, playbackFlags, flags)
	return _in(0xC23DE0E91C30B58C, _ts(cutsceneName), playbackFlags, flags)
end
Global.N_0xc23de0e91c30b58c = Global.RequestCutsceneWithPlaybackList
Global.RequestCutsceneEx = Global.RequestCutsceneWithPlaybackList

--- Exemple: REQUEST_IPL("TrevorsTrailerTrash");
function Global.RequestIpl(iplName)
	return _in(0x41B4893843BBDB74, _ts(iplName))
end

--- REQUEST_MENU_PED_MODEL
function Global.RequestMenuPedModel(model)
	return _in(0xA0261AEF7ACFC51E, _ch(model))
end
Global.N_0xa0261aef7acfc51e = Global.RequestMenuPedModel

--- This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#\_0x2F844A8B08D76685)
-- This native has a new argument on newer game builds:
-- *   **playerBits**:
function Global.RequestMissionAudioBank(bankName, bOverNetwork)
	return _in(0x7345BDD95E62E0F2, _ts(bankName), bOverNetwork, _r)
end

--- Request a model (archetype) to be loaded for use by the current script. Use SET_MODEL_AS_NO_LONGER_NEEDED when done using the model in script.
-- @param model The model to request.
function Global.RequestModel(model)
	return _in(0x963D27A58DF860AC, _ch(model))
end

--- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
function Global.RequestModelsInRoom(interior, roomName)
	return _in(0x8A7A40100EDFEC58, interior, _ts(roomName))
end
Global.N_0x8a7a40100edfec58 = Global.RequestModelsInRoom
Global.RequestInteriorRoomByName = Global.RequestModelsInRoom

--- From the b678d decompiled scripts:
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
function Global.RequestNamedPtfxAsset(fxName)
	return _in(0xB80D8756B4668AB6, _ts(fxName))
end

--- Used internally for long range tasks
function Global.RequestPathsPreferAccurateBoundingstruct(x1, y1, x2, y2)
	return _in(0x07FB139B592FA687, x1, y1, x2, y2, _r)
end
Global.N_0x07fb139b592fa687 = Global.RequestPathsPreferAccurateBoundingstruct

--- REQUEST_PED_VEHICLE_VISIBILITY_TRACKING
function Global.RequestPedVehicleVisibilityTracking(ped, p1)
	return _in(0x2BC338A7B21F4608, ped, p1)
end
Global.GetPedFloodInvincibility = Global.RequestPedVehicleVisibilityTracking

--- REQUEST_PED_VISIBILITY_TRACKING
function Global.RequestPedVisibilityTracking(ped)
	return _in(0x7D7A2E43E74E2EB8, ped)
end
Global.N_0x7d7a2e43e74e2eb8 = Global.RequestPedVisibilityTracking

--- REQUEST_PEDHEADSHOT_IMG_UPLOAD
function Global.RequestPedheadshotImgUpload(id)
	return _in(0xF0DAEF2F545BEE25, id, _r)
end
Global.N_0xf0daef2f545bee25 = Global.RequestPedheadshotImgUpload

--- maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
function Global.RequestPtfxAsset()
	return _in(0x944955FB2A3935C8)
end

--- Requests a resource file set with the specified name to be downloaded and mounted on top of the current resource.
-- Resource file sets are specified in `fxmanifest.lua` with the following syntax:
-- ```lua
-- file_set 'addon_ui' {
-- 'ui/addon/index.html',
-- 'ui/addon/**.js',
-- }
-- ```
-- This command will trigger a script error if the request failed.
-- @param setName The name of the file set as specified in `fxmanifest.lua`.
-- @return `TRUE` if the set is mounted, `FALSE` if the request is still pending.
function Global.RequestResourceFileSet(setName)
	return _in(0xe7490533, _ts(setName), _r)
end

--- REQUEST_SCALEFORM_MOVIE
function Global.RequestScaleformMovie(scaleformName)
	return _in(0x11FE353CF9733E6F, _ts(scaleformName), _ri)
end

--- Same as [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F), except it seems to fix stretched scaleforms on ultrawide.
function Global.RequestScaleformMovieInstance(scaleformName)
	return _in(0xC514489CFB8AF806, _ts(scaleformName), _ri)
end

--- Requests a scaleform movie that doesn't render when the game is paused (With [`SET_GAME_PAUSED`](#\_0x577D1284D6873711)).
function Global.RequestScaleformMovieSkipRenderWhilePaused(scaleformName)
	return _in(0xBD06C611BB9048C2, _ts(scaleformName), _ri)
end
Global.RequestScaleformMovie3 = Global.RequestScaleformMovieSkipRenderWhilePaused
Global.RequestScaleformMovieInteractive = Global.RequestScaleformMovieSkipRenderWhilePaused

--- Requests a scaleform movie, which has no widescreen adjustments while rendering (Useful for when your scaleform doesn't fully draw on the screen and borders are visible).
function Global.RequestScaleformMovieWithIgnoreSuperWidescreen(scaleformName)
	return _in(0x65E7E78842E74CDB, _ts(scaleformName), _ri)
end
Global.N_0x65e7e78842e74cdb = Global.RequestScaleformMovieWithIgnoreSuperWidescreen
Global.RequestScaleformMovie_2 = Global.RequestScaleformMovieWithIgnoreSuperWidescreen

--- REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE
function Global.RequestScaleformScriptHudMovie(hudComponent)
	return _in(0x9304881D6F6537EA, hudComponent)
end
Global.N_0x9304881d6f6537ea = Global.RequestScaleformScriptHudMovie
Global.RequestHudScaleform = Global.RequestScaleformScriptHudMovie

--- REQUEST_SCRIPT
function Global.RequestScript(scriptName)
	return _in(0x6EB5F71AA68F2E8E, _ts(scriptName))
end

--- This native has a new argument on newer game builds:
-- *   **playerBits**:
-- @return Requests and returns true/false if the script audio bank has laoded
function Global.RequestScriptAudioBank(bankName, bOverNetwork)
	return _in(0x2F844A8B08D76685, _ts(bankName), bOverNetwork, _r)
end

--- formerly _REQUEST_STREAMED_SCRIPT
function Global.RequestScriptWithNameHash(scriptHash)
	return _in(0xD62A67D26D9653E6, _ch(scriptHash))
end
Global.RequestStreamedScript = Global.RequestScriptWithNameHash

--- REQUEST_STEALTH_MODE_ASSET
function Global.RequestStealthModeAsset(asset)
	return _in(0x2A0A62FCDEE16D4F, _ts(asset))
end

--- This function can requests texture dictonaries from following RPFs:
-- scaleform_generic.rpf
-- scaleform_minigames.rpf
-- scaleform_minimap.rpf
-- scaleform_web.rpf
-- last param isnt a toggle
function Global.RequestStreamedTextureDict(textureDict, p1)
	return _in(0xDFA2EF8E04127DD5, _ts(textureDict), p1)
end

--- REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION
-- @param ped A ped handle.
-- @param name The name of the target request state in the move network file.
-- @return Technically a `void`. Scripts treat this as a boolean, but the game never sets the result, so it will return the ped handle instead.
function Global.RequestTaskMoveNetworkStateTransition(ped, name)
	return _in(0xD01015C7316AE176, ped, _ts(name), _r)
end
Global.N_0xd01015c7316ae176 = Global.RequestTaskMoveNetworkStateTransition

--- Loads the tennis vocalization banks into a couple animal slots.
function Global.RequestTennisBanks(opponentPed)
	return _in(0x4ADA3F19BE4A6047, opponentPed)
end
Global.N_0x4ada3f19be4a6047 = Global.RequestTennisBanks
Global.SetPedTalk = Global.RequestTennisBanks

--- REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
-- vehicle found that have asset's:
-- cargobob3
-- submersible
-- blazer
function Global.RequestVehicleAsset(vehicleHash, vehicleAsset)
	return _in(0x81A15811460FAB3A, _ch(vehicleHash), vehicleAsset)
end

--- REQUEST_VEHICLE_*
function Global.RequestVehicleDashboardScaleformMovie(vehicle)
	return _in(0xDBA3C090E3D74690, vehicle)
end
Global.N_0xdba3c090e3d74690 = Global.RequestVehicleDashboardScaleformMovie

--- REQUEST_VEHICLE_HIGH_DETAIL_MODEL
function Global.RequestVehicleHighDetailModel(vehicle)
	return _in(0xA6E9FDCB2C76785E, vehicle)
end

--- Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
-- For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
-- Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
function Global.RequestVehicleRecording(recording, script)
	return _in(0xAF514CABE74CBF15, recording, _ts(script))
end

--- For a full list of the points, see here: goo.gl/wIH0vn
-- Max number of loaded recordings is 32.
function Global.RequestWaypointRecording(name)
	return _in(0x9EEFB62EB27B5792, _ts(name))
end

--- Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
-- REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
function Global.RequestWeaponAsset(weaponHash, p1, p2)
	return _in(0x5443438F033E29C3, _ch(weaponHash), p1, p2)
end

--- REQUEST_WEAPON_HIGH_DETAIL_MODEL
function Global.RequestWeaponHighDetailModel(weaponObject)
	return _in(0x48164DBB970AC3F0, weaponObject)
end

--- Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
-- ```
-- ```
-- NativeDB Introduced: v1290
function Global.ReserveNetworkLocalObjects(amount)
	return _in(0x797F9C5E661D920E, amount)
end
Global.N_0x797f9c5e661d920e = Global.ReserveNetworkLocalObjects

--- Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
-- ```
-- ```
-- NativeDB Introduced: v1493
function Global.ReserveNetworkLocalPeds(amount)
	return _in(0x2C8DF5D129595281, amount)
end
Global.N_0x2c8df5d129595281 = Global.ReserveNetworkLocalPeds

--- _RESERVE_NETWORK_LOCAL_VEHICLES
function Global.ReserveNetworkLocalVehicles(amount)
	return _in(0x42613035157E4208, amount)
end
Global.N_0x42613035157e4208 = Global.ReserveNetworkLocalVehicles

--- RESERVE_NETWORK_MISSION_OBJECTS
function Global.ReserveNetworkMissionObjects(amount)
	return _in(0x4E5C93BD0C32FBF8, amount)
end

--- RESERVE_NETWORK_MISSION_PEDS
function Global.ReserveNetworkMissionPeds(amount)
	return _in(0xB60FEBA45333D36F, amount)
end

--- RESERVE_NETWORK_MISSION_VEHICLES
function Global.ReserveNetworkMissionVehicles(amount)
	return _in(0x76B02E21ED27A469, amount)
end

--- RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
function Global.ResetAiMeleeWeaponDamageModifier()
	return _in(0x46E56A7CD1D63C3F)
end

--- RESET_AI_WEAPON_DAMAGE_MODIFIER
function Global.ResetAiWeaponDamageModifier()
	return _in(0xEA16670E7BA4743C)
end

--- Begins with RESET_*. Next character in the name is either D or E.
function Global.ResetBenchmarkRecording()
	return _in(0x437138B6A830166A)
end
Global.N_0x437138b6a830166a = Global.ResetBenchmarkRecording

--- Sets the waves intensity back to original (1.0 in most cases).
function Global.ResetDeepOceanScaler()
	return _in(0x5E5E99285AE812DB)
end
Global.N_0x5e5e99285ae812db = Global.ResetDeepOceanScaler
Global.ResetWavesIntensity = Global.ResetDeepOceanScaler
Global.ResetCurrentIntensity = Global.ResetDeepOceanScaler

--- RESET_DISPATCH_IDEAL_SPAWN_DISTANCE
function Global.ResetDispatchIdealSpawnDistance()
	return _in(0x77A84429DD9F0A15)
end

--- RESET_DISPATCH_SPAWN_BLOCKING_AREAS
function Global.ResetDispatchSpawnBlockingAreas()
	return _in(0xAC7BFD5C1D83EA75)
end

--- NativeDB Introduced: v1868
function Global.ResetDispatchSpawnLocation()
	return _in(0x5896F2BD5683A4E1)
end

--- NativeDB Introduced: v323
function Global.ResetDispatchTimeBetweenSpawnAttempts(p0)
	return _in(0xEB2DB0CAD13154B3, p0)
end

--- Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
function Global.ResetEditorValues()
	return _in(0x3353D13F09307691)
end
Global.N_0x3353d13f09307691 = Global.ResetEditorValues

--- RESET_ENTITY_ALPHA
function Global.ResetEntityAlpha(entity)
	return _in(0x9B1E824FFBB7027A, entity)
end

--- RESET_EXCLUSIVE_SCENARIO_GROUP
function Global.ResetExclusiveScenarioGroup()
	return _in(0x4202BBCB8684563D)
end

--- Resets parameters which is used by the game for checking is ped needs to fly through windscreen after a crash to default values.
function Global.ResetFlyThroughWindscreenParams()
	return _in(0x6d712937)
end

--- Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
function Global.ResetGhostedEntityAlpha()
	return _in(0x17330EBF2F2124A8)
end
Global.N_0x17330ebf2f2124a8 = Global.ResetGhostedEntityAlpha

--- RESET_GLOBAL_ACTIONSCRIPT_FLAG
function Global.ResetGlobalActionscriptFlag(flagIndex)
	return _in(0xB99C4E4D9499DF29, flagIndex)
end
Global.N_0xb99c4e4d9499df29 = Global.ResetGlobalActionscriptFlag

--- RESET_GROUP_FORMATION_DEFAULT_SPACING
function Global.ResetGroupFormationDefaultSpacing(groupHandle)
	return _in(0x63DAB4CCB3273205, groupHandle)
end

--- RESET_HUD_COMPONENT_VALUES
function Global.ResetHudComponentValues(id)
	return _in(0x450930E616475D0D, id)
end

--- S*
function Global.ResetInputMappingScheme()
	return _in(0x643ED62D5EA3BEBD)
end
Global.N_0x643ed62d5ea3bebd = Global.ResetInputMappingScheme

--- Resets values from the zoom level data by index to defaults from mapzoomdata.meta.
-- @param index Zoom level index.
function Global.ResetMapZoomDataLevel(index)
	return _in(0x11a5b7ed, index)
end

--- Resets mapdata entity transform matrix to its original state.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapDataHash A mapdata hash from `mapDataLoaded` event.
-- @param entityInternalIdx An internal entity's index.
-- @return True if successful, false if not.
function Global.ResetMapdataEntityMatrix(mapDataHash, entityInternalIdx)
	return _in(0x8143fa4f, mapDataHash, entityInternalIdx, _r)
end

--- Resets the effect of SET_PARTICLE_FX_OVERRIDE
function Global.ResetParticleFxOverride(name)
	return _in(0x89C8553DD3274AAE, _ts(name))
end
Global.N_0x89c8553dd3274aae = Global.ResetParticleFxOverride
Global.ResetParticleFxAssetOldToNew = Global.ResetParticleFxOverride

--- RESET_PAUSED_RENDERPHASES
function Global.ResetPausedRenderphases()
	return _in(0xE1C8709406F2C41C)
end
Global.N_0xe1c8709406f2c41c = Global.ResetPausedRenderphases

--- RESET_PED_AUDIO_FLAGS
function Global.ResetPedAudioFlags(ped)
	return _in(0xF54BB7B61036F335, ped)
end

--- RESET_PED_IN_VEHICLE_CONTEXT
function Global.ResetPedInVehicleContext(ped)
	return _in(0x22EF8FF8778030EB, ped)
end

--- Resets the value for the last vehicle driven by the Ped.
function Global.ResetPedLastVehicle(ped)
	return _in(0xBB8DE8CF6A8DD8BB, ped)
end

--- Restores an overridden ped model personality type to the default value.
-- @param modelHash Ped's model.
function Global.ResetPedModelPersonality(modelHash)
	return _in(0x79a12861, _ch(modelHash))
end

--- RESET_PED_MOVEMENT_CLIPSET
function Global.ResetPedMovementClipset(ped, transitionSpeed)
	return _in(0xAA74EC0CB0AAEA2C, ped, transitionSpeed)
end

--- RESET_PED_RAGDOLL_TIMER
function Global.ResetPedRagdollTimer(ped)
	return _in(0x9FA4664CF62E47E8, ped)
end

--- RESET_PED_STRAFE_CLIPSET
function Global.ResetPedStrafeClipset(ped)
	return _in(0x20510814175EA477, ped)
end

--- RESET_PED_VISIBLE_DAMAGE
function Global.ResetPedVisibleDamage(ped)
	return _in(0x3AC1F7B898F30C05, ped)
end

--- RESET_PED_WEAPON_MOVEMENT_CLIPSET
function Global.ResetPedWeaponMovementClipset(ped)
	return _in(0x97B0DB5B4AA74E77, ped)
end

--- RESET_PLAYER_ARREST_STATE
function Global.ResetPlayerArrestState(player)
	return _in(0x2D03E13C460760D6, player)
end

--- RESET_PLAYER_INPUT_GAIT
function Global.ResetPlayerInputGait(player)
	return _in(0x19531C47A2ABD691, player)
end

--- RESET_PLAYER_STAMINA
function Global.ResetPlayerStamina(player)
	return _in(0xA6F312FCCE9C1DFE, player)
end

--- RESET_RETICULE_VALUES
function Global.ResetReticuleValues()
	return _in(0x12782CE0A636E9F0)
end

--- RESET_SCENARIO_GROUPS_ENABLED
function Global.ResetScenarioGroupsEnabled()
	return _in(0xDD902D0349AFAD3A)
end

--- RESET_SCENARIO_TYPES_ENABLED
function Global.ResetScenarioTypesEnabled()
	return _in(0x0D40EE2A7F2B2D6D)
end

--- This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
-- values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
-- any other scripts attempting to draw.
function Global.ResetScriptGfxAlign()
	return _in(0xE3A3DB414A373DAB)
end
Global.N_0xe3a3db414a373dab = Global.ResetScriptGfxAlign
Global.ScreenDrawPositionEnd = Global.ResetScriptGfxAlign

--- Clears the override set by [OVERRIDE_TREVOR_RAGE](#\_0x13AD665062541A7E)
function Global.ResetTrevorRage()
	return _in(0xE78503B10C4314E0)
end

--- Resets whether or not peds can stand on top of the specified vehicle.
-- Note this flag is not replicated automatically, you will have to manually do so.
-- @param vehicle The vehicle.
function Global.ResetVehiclePedsCanStandOnTopFlag(vehicle)
	return _in(0xdf62cfe2, vehicle)
end

--- Resets the override for [SET_VEHICLE_STARTUP_REV_SOUND](#\_0xF1F8157B8C3F171C)
function Global.ResetVehicleStartupRevSound(vehicle)
	return _in(0xD2DCCD8E16E20997, vehicle)
end
Global.N_0xd2dccd8e16e20997 = Global.ResetVehicleStartupRevSound

--- The inner function has a switch on the second parameter. It's the stuck timer index.
-- Here's some pseudo code I wrote for the inner function:
-- void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
-- {
-- switch (timerIndex)
-- {
-- case 0:
-- unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
-- case 1:
-- unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
-- case 2:
-- unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
-- case 3:
-- unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
-- case 4:
-- unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
-- unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
-- unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
-- unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
-- break;
-- };
-- }
function Global.ResetVehicleStuckTimer(vehicle, nullAttributes)
	return _in(0xD7591B0065AFAA7A, vehicle, nullAttributes)
end

--- RESET_VEHICLE_WHEELS
function Global.ResetVehicleWheels(vehicle, toggle)
	return _in(0x21D2E5662C1F6FED, vehicle, toggle)
end

--- RESET_WANTED_LEVEL_DIFFICULTY
function Global.ResetWantedLevelDifficulty(player)
	return _in(0xB9D0DD990DC141DD, player)
end

--- Resets the water to the games default water.xml.
function Global.ResetWater()
	return _in(0x1da4791)
end

--- NativeDB Introduced: v323
function Global.ResetWorldBoundaryForPlayer()
	return _in(0xDA1DF03D5A315F4E)
end

--- Changes the current frontend menu to the desired frontend menu version.
-- @param menuHash Hash of the frontend menu. See [`ACTIVATE_FRONTEND_MENU`](#\_0xEF01D36B9C9D0C7B) for the list of available menus.
-- @param highlightedTab Menu ID (from PauseMenuLUT (in pause_menu_sp_content.gfx files), but the value - 1000) of which tab to have highlighted on the header, or -1.
function Global.RestartFrontendMenu(menuHash, highlightedTab)
	return _in(0x10706DC6AD2D49C0, _ch(menuHash), highlightedTab)
end

--- In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows the `Disconnecting from GTA Online` warning screen message and quits the game.
-- After quitting, the game process is started again (as the name implies).
function Global.RestartGame()
	return _in(0xE574A662ACAEFBB1)
end
Global.N_0xe574a662acaefbb1 = Global.RestartGame
Global.RestartGame = Global.RestartGame

--- Restarts a conversation that was previously paused with [PAUSE_SCRIPTED_CONVERSATION](#\_0x8530AD776CD72B12)
function Global.RestartScriptedConversation()
	return _in(0x9AEB285D1818C9AC)
end

--- Adds a percentage to a players stamina
-- @param player player to restore the stamina for
-- @param percentage seems to be a percentage that ranges from 0.0 to 1.0 (1.0 being 100%)
function Global.RestorePlayerStamina(player, percentage)
	return _in(0xA352C1B864CAFD33, player, percentage)
end

--- This function will simply bring the dead person back to life.
-- Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
-- Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
-- Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
function Global.ResurrectPed(ped)
	return _in(0x71BC8E838B9C6035, ped)
end

--- _RETURN_TWO
function Global.ReturnTwo(p0)
	return _in(0x40AFB081F8ADD4EE, p0, _ri)
end
Global.N_0x40afb081f8add4ee = Global.ReturnTwo

--- It will revive/cure the injured ped. The condition is ped must not be dead.
-- Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
-- This function is well suited there.
function Global.ReviveInjuredPed(ped)
	return _in(0x8D8ACD8388CD99CE, ped)
end

--- _ROCKSTAR_MESSAGE_GET_STRING
function Global.RockstarMessageGetString()
	return _in(0xDF649C4E9AFDD788, _s)
end
Global.N_0xdf649c4e9afdd788 = Global.RockstarMessageGetString

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function Global.RollDownWindow(vehicle, windowIndex)
	return _in(0x7AD9E6CE657D69E3, vehicle, windowIndex)
end

--- Roll down all the windows of the vehicle passed through the first parameter.
function Global.RollDownWindows(vehicle)
	return _in(0x85796B0549DDE156, vehicle)
end

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function Global.RollUpWindow(vehicle, windowIndex)
	return _in(0x602E548F46E24D59, vehicle, windowIndex)
end

--- ROPE_ARE_TEXTURES_LOADED
function Global.RopeAreTexturesLoaded()
	return _in(0xF2D0E6A75CC05597, _r)
end

--- ROPE_CONVERT_TO_SIMPLE
function Global.RopeConvertToSimple(ropeId)
	return _in(0x5389D48EFA2F079A, ropeId)
end

--- ROPE_DRAW_SHADOW_ENABLED
function Global.RopeDrawShadowEnabled(toggle)
	return _in(0xF159A63806BB5BA8, _i, toggle)
end

--- Forces a rope to a certain length.
function Global.RopeForceLength(ropeId, length)
	return _in(0xD009F759A723DB1B, ropeId, length)
end

--- ROPE_GET_DISTANCE_BETWEEN_ENDS
function Global.RopeGetDistanceBetweenEnds(ropeId)
	return _in(0x73040398DFF9A4A6, ropeId, _rf)
end
Global.GetRopeLength = Global.RopeGetDistanceBetweenEnds

--- Loads rope textures for all ropes in the current scene.
function Global.RopeLoadTextures()
	return _in(0x9B9039DBF2D258C1)
end

--- Reset a rope to a certain length.
function Global.RopeResetLength(ropeId, length)
	return _in(0xC16DE94D9BEA14A0, ropeId, length)
end

--- ROPE_SET_UPDATE_ORDER
function Global.RopeSetUpdateOrder(ropeId, p1)
	return _in(0xDC57A637A20006ED, ropeId, p1)
end
Global.N_0xdc57a637a20006ed = Global.RopeSetUpdateOrder

--- ROPE_SET_UPDATE_PINVERTS
function Global.RopeSetUpdatePinverts(ropeId)
	return _in(0xC8D667EE52114ABA, ropeId)
end

--- Unloads rope textures for all ropes in the current scene.
function Global.RopeUnloadTextures()
	return _in(0x6CE36C35C1AC8163)
end

--- ROUND
function Global.Round(value)
	return _in(0xF2DB717A73826179, value, _ri)
end

--- Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
function Global.SaveBenchmarkRecording()
	return _in(0x37DEB0AA183FB6D8)
end
Global.N_0x37deb0aa183fb6d8 = Global.SaveBenchmarkRecording

--- SAVE_HIGH_QUALITY_PHOTO
function Global.SaveHighQualityPhoto(unused)
	return _in(0x3DEC726C25A11BAC, unused, _r)
end
Global.N_0x3dec726c25a11bac = Global.SaveHighQualityPhoto

--- _SAVE_RECORDING_CLIP
function Global.SaveRecordingClip()
	return _in(0x644546EC5287471B, _r)
end
Global.N_0x644546ec5287471b = Global.SaveRecordingClip

--- SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST
function Global.ScEmailMessageClearRecipList()
	return _in(0x55DF6DB45179236E)
end
Global.N_0x55df6db45179236e = Global.ScEmailMessageClearRecipList

--- SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST
function Global.ScEmailMessagePushGamerToRecipList(networkHandle)
	return _in(0x2330C12A7A605D16, _ii(networkHandle) --[[ may be optional ]])
end

--- sfink: from scripts:
-- func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
-- func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
function Global.ScGamerdataGetBool(name)
	return _in(0x8416FE4E4629D7D7, _ts(name), _r)
end
Global.N_0x8416fe4e4629d7d7 = Global.ScGamerdataGetBool
Global.ScGetIsProfileAttributeSet = Global.ScGamerdataGetBool

--- NativeDB Introduced: v323
function Global.ScGamerdataGetFloat(name, outValue)
	return _in(0xA770C8EEC6FB2AC5, _ts(name), _fi(outValue) --[[ may be optional ]], _r)
end
Global.N_0xa770c8eec6fb2ac5 = Global.ScGamerdataGetFloat

--- NativeDB Introduced: v323
function Global.ScGamerdataGetInt(name, outValue)
	return _in(0xC85A7127E7AD02AA, _ts(name), _ii(outValue) --[[ may be optional ]], _r)
end
Global.N_0xc85a7127e7ad02aa = Global.ScGamerdataGetInt

--- Same as HAS_ACHIEVEMENT_BEEN_PASSED
function Global.ScGetHasAchievementBeenPassed(achievement)
	return _in(0x418DC16FAE452C1C, achievement, _r)
end
Global.N_0x418dc16fae452c1c = Global.ScGetHasAchievementBeenPassed

--- Returns the nickname of the logged-in Rockstar Social Club account.
function Global.ScGetNickname()
	return _in(0x198D161F458ECC7F, _s)
end

--- _SC_INBOX_GET_EMAILS
function Global.ScInboxGetEmails(offset, limit)
	return _in(0x040ADDCBAFA1018A, offset, limit)
end
Global.N_0x040addcbafa1018a = Global.ScInboxGetEmails

--- SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX
function Global.ScInboxGetMessageIsReadAtIndex(msgIndex)
	return _in(0x93028F1DB42BFD08, msgIndex, _r)
end
Global.N_0x93028f1db42bfd08 = Global.ScInboxGetMessageIsReadAtIndex
Global.IsScInboxValid = Global.ScInboxGetMessageIsReadAtIndex

--- SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX
function Global.ScInboxGetMessageTypeAtIndex(msgIndex)
	return _in(0xBB8EA16ECBC976C4, msgIndex, _ri)
end
Global.N_0xbb8ea16ecbc976c4 = Global.ScInboxGetMessageTypeAtIndex
Global.ScInboxMessageInit = Global.ScInboxGetMessageTypeAtIndex

--- SC_INBOX_GET_TOTAL_NUM_MESSAGES
function Global.ScInboxGetTotalNumMessages()
	return _in(0x03A93FF1A2CA0864, _ri)
end
Global.N_0x03a93ff1a2ca0864 = Global.ScInboxGetTotalNumMessages
Global.GetTotalScInboxIds = Global.ScInboxGetTotalNumMessages

--- SC_INBOX_MESSAGE_DO_APPLY
function Global.ScInboxMessageDoApply(p0)
	return _in(0x9A2C8064B6C1E41A, p0, _r)
end
Global.N_0x9a2c8064b6c1e41a = Global.ScInboxMessageDoApply
Global.ScInboxMessagePush = Global.ScInboxMessageDoApply

--- _SC_INBOX_MESSAGE_GET_BOUNTY_DATA
function Global.ScInboxMessageGetBountyData(index, outData)
	return _in(0x87E0052F08BD64E6, index, _ii(outData) --[[ may be optional ]], _r)
end
Global.N_0x87e0052f08bd64e6 = Global.ScInboxMessageGetBountyData

--- _SC_INBOX_MESSAGE_GET_DATA_BOOL
function Global.ScInboxMessageGetDataBool(p0, p1)
	return _in(0xFFE5C16F402D851D, p0, _ts(p1), _r)
end
Global.N_0xffe5c16f402d851d = Global.ScInboxMessageGetDataBool

--- SC_INBOX_MESSAGE_GET_DATA_INT
function Global.ScInboxMessageGetDataInt(p0, context, out)
	return _in(0xA00EFE4082C4056E, p0, _ts(context), _ii(out) --[[ may be optional ]], _r)
end

--- SC_INBOX_MESSAGE_GET_DATA_STRING
function Global.ScInboxMessageGetDataString(p0, context, out)
	return _in(0x7572EF42FC6A9B6D, p0, _ts(context), _ts(out), _r)
end

--- _SC_INBOX_MESSAGE_GET_STRING
function Global.ScInboxMessageGetString(p0)
	return _in(0xF3E31D16CBDCB304, p0, _s)
end
Global.N_0xf3e31d16cbdcb304 = Global.ScInboxMessageGetString

--- SC_INBOX_MESSAGE_GET_UGCDATA
function Global.ScInboxMessageGetUgcdata(p0, p1)
	return _in(0x69D82604A1A5A254, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- _SC_INBOX_MESSAGE_POP
function Global.ScInboxMessagePop(p0)
	return _in(0x2C015348CF19CA1D, p0, _r)
end
Global.N_0x2c015348cf19ca1d = Global.ScInboxMessagePop

--- _SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST
function Global.ScInboxMessagePushGamerToEventRecipList(networkHandle)
	return _in(0xDA024BDBD600F44A, _ii(networkHandle) --[[ may be optional ]])
end
Global.N_0xda024bdbd600f44a = Global.ScInboxMessagePushGamerToEventRecipList

--- _SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT
function Global.ScInboxMessageSendBountyPresenceEvent(data)
	return _in(0x6AFD2CD753FEEF83, _ts(data), _r)
end
Global.N_0x6afd2cd753feef83 = Global.ScInboxMessageSendBountyPresenceEvent

--- _SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT
function Global.ScInboxMessageSendUgcStatUpdateEvent(data)
	return _in(0xA68D3D229F4F3B06, _ts(data))
end
Global.N_0xa68d3d229f4f3b06 = Global.ScInboxMessageSendUgcStatUpdateEvent

--- Social Club native to add license plate for the user
function Global.ScLicenseplateAdd(plateText, plateData, tokenOut)
	return _in(0x1989C6E6F67E76A8, _ts(plateText), _ts(plateData), _ii(tokenOut) --[[ may be optional ]], _r)
end
Global.N_0x1989c6e6f67e76a8 = Global.ScLicenseplateAdd

--- Returns true if the add license plate text request is still pending.
function Global.ScLicenseplateGetAddIsPending(token)
	return _in(0x07C61676E5BB52CD, token, _r)
end
Global.N_0x07c61676e5bb52cd = Global.ScLicenseplateGetAddIsPending

--- Returns a status for adding the license plate
function Global.ScLicenseplateGetAddStatus(token)
	return _in(0x8147FFF6A718E1AD, token, _ri)
end
Global.N_0x8147fff6a718e1ad = Global.ScLicenseplateGetAddStatus

--- Gets number of plates in the response of the get license plates request.
-- Range: \[0, count) can be used as second argument to \_0x1D4446A62D35B0D0 and \_0x2E89990DDFF670C3
function Global.ScLicenseplateGetCount(token)
	return _in(0x700569DBA175A77C, token, _ri)
end
Global.N_0x700569dba175a77c = Global.ScLicenseplateGetCount

--- Checks if the "is valid license plate" request is still pending.
function Global.ScLicenseplateGetIsvalidIsPending(token)
	return _in(0xD302E99EDF0449CF, token, _r)
end
Global.N_0xd302e99edf0449cf = Global.ScLicenseplateGetIsvalidIsPending

--- Gets the status of the is valid license plate request
function Global.ScLicenseplateGetIsvalidStatus(token)
	return _in(0x5C4EBFFA98BDB41C, token, _ri)
end
Global.N_0x5c4ebffa98bdb41c = Global.ScLicenseplateGetIsvalidStatus

--- Gets license plate text related to the get license plate info request
-- @param plateIndex The plate index from the list of result plates. Use SC_LICENSEPLATE_GET_COUNT for the number of plates.
function Global.ScLicenseplateGetPlate(token, plateIndex)
	return _in(0x1D4446A62D35B0D0, token, plateIndex, _s)
end

--- Gets license plate data related to the get license plate info request
-- @param plateIndex The plate index from the list of result plates. Use SC_LICENSEPLATE_GET_COUNT for the number of plates.
function Global.ScLicenseplateGetPlateData(token, plateIndex)
	return _in(0x2E89990DDFF670C3, token, plateIndex, _s)
end
Global.N_0x2e89990ddff670c3 = Global.ScLicenseplateGetPlateData

--- SC native to start a request for if license plate text is valid
function Global.ScLicenseplateIsvalid(plateText, tokenOut)
	return _in(0x0F73393BAC7E6730, _ts(plateText), _ii(tokenOut) --[[ may be optional ]], _r)
end
Global.N_0x0f73393bac7e6730 = Global.ScLicenseplateIsvalid

--- Changes the license plate for the user (no insert).
function Global.ScLicenseplateSetPlateData(oldPlateText, newPlateText, plateData)
	return _in(0xD0EE05FE193646EA, _ts(oldPlateText), _ts(newPlateText), _ts(plateData), _r)
end
Global.N_0xd0ee05fe193646ea = Global.ScLicenseplateSetPlateData

--- NativeDB Introduced: v323
-- NativeDB Added Parameter 1: Hash attrHash
-- NativeDB Added Parameter 2: float value
function Global.ScPresenceAttrSetFloat()
	return _in(0xC4C4575F62534A24, _r)
end
Global.N_0xc4c4575f62534a24 = Global.ScPresenceAttrSetFloat

--- SC_PRESENCE_ATTR_SET_INT
function Global.ScPresenceAttrSetInt(attrHash, value)
	return _in(0x1F1E9682483697C7, _ch(attrHash), value, _r)
end
Global.N_0x1f1e9682483697c7 = Global.ScPresenceAttrSetInt

--- SC_PRESENCE_ATTR_SET_STRING
function Global.ScPresenceAttrSetString(attrHash, value)
	return _in(0x287F1F75D2803595, _ch(attrHash), _ts(value), _r)
end
Global.N_0x287f1f75d2803595 = Global.ScPresenceAttrSetString

--- Starts a task to check an entered string for profanity on the ROS/Social Club services.
-- See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
function Global.ScProfanityCheckString(string, token)
	return _in(0x75632C5ECD7ED843, _ts(string), _ii(token) --[[ may be optional ]], _r)
end
Global.N_0x75632c5ecd7ed843 = Global.ScProfanityCheckString
Global.ScStartCheckStringTask = Global.ScProfanityCheckString

--- _SC_PROFANITY_CHECK_UGC_STRING
function Global.ScProfanityCheckUgcString(string, token)
	return _in(0xEB2BF817463DFA28, _ts(string), _ii(token) --[[ may be optional ]], _r)
end
Global.N_0xeb2bf817463dfa28 = Global.ScProfanityCheckUgcString

--- SC_PROFANITY_GET_CHECK_IS_PENDING
function Global.ScProfanityGetCheckIsPending(token)
	return _in(0x82E4A58BABC15AE7, token, _r)
end
Global.N_0x82e4a58babc15ae7 = Global.ScProfanityGetCheckIsPending
Global.ScGetCheckStringStatus = Global.ScProfanityGetCheckIsPending

--- SC_PROFANITY_GET_CHECK_IS_VALID
function Global.ScProfanityGetCheckIsValid(token)
	return _in(0x1753344C770358AE, token, _r)
end
Global.N_0x1753344c770358ae = Global.ScProfanityGetCheckIsValid
Global.ScHasCheckStringTaskCompleted = Global.ScProfanityGetCheckIsValid

--- SC_PROFANITY_GET_STRING_PASSED
function Global.ScProfanityGetStringPassed(token)
	return _in(0x85535ACF97FC0969, token, _r)
end
Global.N_0x85535acf97fc0969 = Global.ScProfanityGetStringPassed

--- SC_PROFANITY_GET_STRING_STATUS
function Global.ScProfanityGetStringStatus(token)
	return _in(0x930DE22F07B1CCE3, token, _ri)
end
Global.N_0x930de22f07b1cce3 = Global.ScProfanityGetStringStatus

--- Pushes a boolean for the Scaleform function onto the stack.
function Global.ScaleformMovieMethodAddParamBool(value)
	return _in(0xC58424BA936EB458, value)
end
Global.PushScaleformMovieFunctionParameterBool = Global.ScaleformMovieMethodAddParamBool
Global.PushScaleformMovieMethodParameterBool = Global.ScaleformMovieMethodAddParamBool

--- Pushes a float for the Scaleform function onto the stack.
function Global.ScaleformMovieMethodAddParamFloat(value)
	return _in(0xD69736AAE04DB51A, value)
end
Global.PushScaleformMovieFunctionParameterFloat = Global.ScaleformMovieMethodAddParamFloat
Global.PushScaleformMovieMethodParameterFloat = Global.ScaleformMovieMethodAddParamFloat

--- Pushes an integer for the Scaleform function onto the stack.
function Global.ScaleformMovieMethodAddParamInt(value)
	return _in(0xC3D0841A0CC546A6, value)
end
Global.PushScaleformMovieFunctionParameterInt = Global.ScaleformMovieMethodAddParamInt
Global.PushScaleformMovieMethodParameterInt = Global.ScaleformMovieMethodAddParamInt

--- Values:
-- 0 - Dialogue Brief
-- 1 - Help Text Brief
-- 2 - Mission Objective Brief
function Global.ScaleformMovieMethodAddParamLatestBriefString(value)
	return _in(0xEC52C631A1831C03, value)
end
Global.N_0xec52c631a1831c03 = Global.ScaleformMovieMethodAddParamLatestBriefString
Global.ScaleformMovieMethodAddParamIntString = Global.ScaleformMovieMethodAddParamLatestBriefString

--- This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
-- When switching with a controller, the icons update and become the controller's icons.
function Global.ScaleformMovieMethodAddParamPlayerNameString(string)
	return _in(0xE83A3E3557A56640, _ts(string))
end
Global.N_0xe83a3e3557a56640 = Global.ScaleformMovieMethodAddParamPlayerNameString
Global.PushScaleformMovieMethodParameterButtonName = Global.ScaleformMovieMethodAddParamPlayerNameString

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING
function Global.ScaleformMovieMethodAddParamTextureNameString(string)
	return _in(0xBA7148484BD90365, _ts(string))
end
Global.PushScaleformMovieFunctionParameterString = Global.ScaleformMovieMethodAddParamTextureNameString
Global.PushScaleformMovieMethodParameterString = Global.ScaleformMovieMethodAddParamTextureNameString

--- GRAPHICS::\_0x77FE3402004CD1B0(HUD::\_GET_LABEL_TEXT("YACHT_GSY"));
-- GRAPHICS::\_0x77FE3402004CD1B0(PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()));
-- Both \_0xBA7148484BD90365 / \_0x77FE3402004CD1B0 works, but \_0x77FE3402004CD1B0 is usually used for "name" (organisation, players..).
function Global.ScaleformMovieMethodAddParamTextureNameString_2(string)
	return _in(0x77FE3402004CD1B0, _ts(string))
end
Global.N_0x77fe3402004cd1b0 = Global.ScaleformMovieMethodAddParamTextureNameString_2
Global.PushScaleformMovieMethodParameterString_2 = Global.ScaleformMovieMethodAddParamTextureNameString_2

--- If bool Toggle = true so the mobile is hide to screen.
-- If bool Toggle = false so the mobile is show to screen.
function Global.ScriptIsMovingMobilePhoneOffscreen(toggle)
	return _in(0xF511F759238A5122, toggle)
end

--- Overrides wind elevation sounds
function Global.ScriptOverridesWindElevation(override, windElevationHashName)
	return _in(0x70B8EC8FC108A634, override, _ch(windElevationHashName))
end
Global.N_0x70b8ec8fc108a634 = Global.ScriptOverridesWindElevation

--- SCRIPT_RACE_GET_PLAYER_SPLIT_TIME
function Global.ScriptRaceGetPlayerSplitTime(player)
	return _in(0x8EF5573A1F801A5C, player, _i, _i, _r)
end
Global.N_0x8ef5573a1f801a5c = Global.ScriptRaceGetPlayerSplitTime

--- Initializes a script race in GTA:Online and sets up the helper split time system.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param numCheckpoints The total number of checkpoints in the race
-- @param numLaps The total number of laps in the race.
-- @param numPlayers The total number of players participating in the race.
-- @param localPlayer Local player in the race.
function Global.ScriptRaceInit(numCheckpoints, numLaps, numPlayers, localPlayer)
	return _in(0x0A60017F841A54F2, numCheckpoints, numLaps, numPlayers, localPlayer)
end
Global.N_0x0a60017f841a54f2 = Global.ScriptRaceInit

--- Records that a player has successfully passed a checkpoint during a scripted race in GTA:Online. This native should be used after initializing the race with [`SCRIPT_RACE_INIT`](#\_0x0A60017F841A54F2).
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param ped The index of the Ped who hit the checkpoint.
-- @param checkpoint The checkpoint number that the player has passed.
-- @param lap The current lap that the player is on.
-- @param time The time it took for the player to reach this checkpoint from the start of the race or the last checkpoint.
function Global.ScriptRacePlayerHitCheckpoint(ped, checkpoint, lap, time)
	return _in(0x1BB299305C3E8C13, ped, checkpoint, lap, time)
end
Global.N_0x1bb299305c3e8c13 = Global.ScriptRacePlayerHitCheckpoint

--- SCRIPT_RACE_SHUTDOWN
function Global.ScriptRaceShutdown()
	return _in(0x1FF6BF9A63E5757F)
end
Global.N_0x1ff6bf9a63e5757f = Global.ScriptRaceShutdown

--- If the function returns 0, the end of the iteration has been reached.
function Global.ScriptThreadIteratorGetNextThreadId()
	return _in(0x30B4FA1C82DD4B9F, _ri)
end
Global.N_0x30b4fa1c82dd4b9f = Global.ScriptThreadIteratorGetNextThreadId
Global.GetIdOfNextThreadInEnumeration = Global.ScriptThreadIteratorGetNextThreadId

--- Starts a new iteration of the current threads.
-- Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
function Global.ScriptThreadIteratorReset()
	return _in(0xDADFADA5A20143A8)
end
Global.N_0xdadfada5a20143a8 = Global.ScriptThreadIteratorReset
Global.BeginEnumeratingThreads = Global.ScriptThreadIteratorReset

--- NativeDB Introduced: v1290
function Global.SeethroughGetMaxThickness()
	return _in(0x43DBAE39626CE83F, _rf)
end

--- NativeDB Introduced: v323
function Global.SeethroughReset()
	return _in(0x70A64C0234EF522C)
end

--- SEETHROUGH_SET_COLOR_NEAR
function Global.SeethroughSetColorNear(red, green, blue)
	return _in(0x1086127B3A63505E, red, green, blue)
end
Global.N_0x1086127b3a63505e = Global.SeethroughSetColorNear

--- _SEETHROUGH_SET_FADE_END_DISTANCE
function Global.SeethroughSetFadeEndDistance(distance)
	return _in(0x9D75795B9DC6EBBF, distance)
end
Global.N_0x9d75795b9dc6ebbf = Global.SeethroughSetFadeEndDistance

--- _SEETHROUGH_SET_FADE_START_DISTANCE
function Global.SeethroughSetFadeStartDistance(distance)
	return _in(0xA78DE25577300BA1, distance)
end
Global.N_0xa78de25577300ba1 = Global.SeethroughSetFadeStartDistance

--- SEETHROUGH_SET_HEATSCALE
-- @param heatScale min: 0.0 max: 0.75
function Global.SeethroughSetHeatscale(index, heatScale)
	return _in(0xD7D0B00177485411, index, heatScale)
end
Global.N_0xd7d0b00177485411 = Global.SeethroughSetHeatscale

--- _SEETHROUGH_SET_HI_LIGHT_INTENSITY
function Global.SeethroughSetHiLightIntensity(intensity)
	return _in(0x19E50EB6E33E1D28, intensity)
end
Global.N_0x19e50eb6e33e1d28 = Global.SeethroughSetHiLightIntensity

--- _SEETHROUGH_SET_HI_LIGHT_NOISE
function Global.SeethroughSetHiLightNoise(noise)
	return _in(0x1636D7FC127B10D2, noise)
end
Global.N_0x1636d7fc127b10d2 = Global.SeethroughSetHiLightNoise

--- _SEETHROUGH_SET_MAX_THICKNESS
-- @param thickness min: 1.0 max: 10000.0
function Global.SeethroughSetMaxThickness(thickness)
	return _in(0x0C8FAC83902A62DF, thickness)
end
Global.N_0x0c8fac83902a62df = Global.SeethroughSetMaxThickness

--- _SEETHROUGH_SET_NOISE_AMOUNT_MAX
function Global.SeethroughSetNoiseAmountMax(amount)
	return _in(0xFEBFBFDFB66039DE, amount)
end
Global.N_0xfebfbfdfb66039de = Global.SeethroughSetNoiseAmountMax

--- _SEETHROUGH_SET_NOISE_AMOUNT_MIN
function Global.SeethroughSetNoiseAmountMin(amount)
	return _in(0xFF5992E1C9E65D05, amount)
end
Global.N_0xff5992e1c9e65d05 = Global.SeethroughSetNoiseAmountMin

--- Gets the selected entity at the current mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param hitFlags A bit mask of entity types to match.
-- @param precise Whether to do a *precise* test, i.e. of visual coordinates, too.
-- @return An entity handle, or zero.
function Global.SelectEntityAtCursor(hitFlags, precise)
	return _in(0x3dd8130f, hitFlags, precise, _ri)
end

--- Gets the selected entity at the specified mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param fracX Mouse cursor X fraction.
-- @param fracY Mouse cursor Y fraction.
-- @param hitFlags A bit mask of entity types to match.
-- @param precise Whether to do a *precise* test, i.e. of visual coordinates, too.
-- @return An entity handle, or zero.
function Global.SelectEntityAtPos(fracX, fracY, hitFlags, precise)
	return _in(0xafe8d405, fracX, fracY, hitFlags, precise, _ri)
end

--- Sends a message to the specific DUI root page. This is similar to SEND_NUI_MESSAGE.
-- @param duiObject The DUI browser handle.
-- @param jsonString The message, encoded as JSON.
function Global.SendDuiMessage(duiObject, jsonString)
	return _in(0xcd380da9, duiObject, _ts(jsonString))
end

--- Injects a 'mouse down' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
-- @param duiObject The DUI browser handle.
-- @param button Either `'left'`, `'middle'` or `'right'`.
function Global.SendDuiMouseDown(duiObject, button)
	return _in(0x5d01f191, duiObject, _ts(button))
end

--- Injects a 'mouse move' event for a DUI object. Coordinates are in browser space.
-- @param duiObject The DUI browser handle.
-- @param x The mouse X position.
-- @param y The mouse Y position.
function Global.SendDuiMouseMove(duiObject, x, y)
	return _in(0xd9d7a0aa, duiObject, x, y)
end

--- Injects a 'mouse up' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
-- @param duiObject The DUI browser handle.
-- @param button Either `'left'`, `'middle'` or `'right'`.
function Global.SendDuiMouseUp(duiObject, button)
	return _in(0x1d735b93, duiObject, _ts(button))
end

--- Injects a 'mouse wheel' event for a DUI object.
-- @param duiObject The DUI browser handle.
-- @param deltaY The wheel Y delta.
-- @param deltaX The wheel X delta.
function Global.SendDuiMouseWheel(duiObject, deltaY, deltaX)
	return _in(0x2d62133a, duiObject, deltaY, deltaX)
end

--- Sends a message to the `loadingScreen` NUI frame, which contains the HTML page referenced in `loadscreen` resources.
-- @param jsonString The JSON-encoded message.
-- @return A success value.
function Global.SendLoadingScreenMessage(jsonString)
	return _in(0x8bbe6cc0, _ts(jsonString), _r)
end

--- SEND_NUI_MESSAGE
function Global.SendNuiMessage(jsonString)
	return _in(0x78608acb, _ts(jsonString), _r)
end

--- SET_ABILITY_BAR_VALUE
function Global.SetAbilityBarValue(value, maxValue)
	return _in(0x9969599CCFF5D85E, value, maxValue)
end

--- NativeDB Introduced: v1493
function Global.SetAbilityBarVisibilityInMultiplayer(visible)
	return _in(0x1DFEDD15019315A9, visible)
end

--- For Steam.
-- Does nothing and always returns false in the retail version of the game.
function Global.SetAchievementProgress(achievement, progress)
	return _in(0xC2AFFFDABBDC2C5C, achievement, progress, _r)
end
Global.N_0xc2afffdabbdc2c5c = Global.SetAchievementProgress
Global.SetAchievementProgression = Global.SetAchievementProgress

--- SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN
function Global.SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object, toggle)
	return _in(0x406137F8EF90EAF5, object, toggle)
end

--- Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
function Global.SetAggressiveHorns(toggle)
	return _in(0x395BF71085D1B1D9, toggle)
end

--- Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
-- ```
-- NativeDB Introduced: v2189
-- ```
function Global.SetAiGlobalPathNodesType(type)
	return _in(0xF74B1FFA4A15FBEA, type)
end

--- SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
function Global.SetAiMeleeWeaponDamageModifier(modifier)
	return _in(0x66460DEDDD417254, modifier)
end

--- SET_AI_WEAPON_DAMAGE_MODIFIER
function Global.SetAiWeaponDamageModifier(value)
	return _in(0x1B1E2A40A65B8521, value)
end

--- Adds a cooldown between instances of moving and then aiming.
-- Can be optionally used to hinder 'speedboosting'
-- To turn off, set value to 0
-- @param value Number of milliseconds between allowed aiming
function Global.SetAimCooldown(value)
	return _in(0xa42a3dbf, value)
end

--- This can be between 1.0f - 14.9f
-- You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
-- On PC the multiplier can be between 0.0f and 50.0f (inclusive).
function Global.SetAirDragMultiplierForPlayersVehicle(player, multiplier)
	return _in(0xCA7DC8329F0A1E9E, player, multiplier)
end

--- SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE
function Global.SetAllLowPriorityVehicleGeneratorsActive(active)
	return _in(0x608207E7A8FB787C, active)
end

--- Toggles a global boolean, name is probably a hash collision but describes its functionality.
function Global.SetAllPathsCacheBoundingstruct(toggle)
	return _in(0x228E5C6AD4D74BFD, toggle)
end
Global.N_0x228e5c6ad4d74bfd = Global.SetAllPathsCacheBoundingstruct

--- Sets whether all random peds will run away from the player if they are agitated (threatened) (bool=true), or if they will stand their ground (bool=false).
-- @param player The Player ID for whom you want to set this behavior.
-- @param toggle true/false.
function Global.SetAllRandomPedsFlee(player, toggle)
	return _in(0x056E0FE8534C2949, player, toggle)
end

--- SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
function Global.SetAllRandomPedsFleeThisFrame(player)
	return _in(0x471D2FF42A94B4F2, player)
end

--- SET_ALL_VEHICLE_GENERATORS_ACTIVE
function Global.SetAllVehicleGeneratorsActive()
	return _in(0x34AD89078831A4BC)
end

--- SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA
function Global.SetAllVehicleGeneratorsActiveInArea(x1, y1, z1, x2, y2, z2, p6, p7)
	return _in(0xC12321827687FE4D, x1, y1, z1, x2, y2, z2, p6, p7)
end

--- NativeDB Introduced: v1868
function Global.SetAllowAbilityBarInMultiplayer(toggle)
	return _in(0x889329C80FE5963C, toggle)
end

--- SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME
function Global.SetAmbientPedRangeMultiplierThisFrame(multiplier)
	return _in(0x0B919E1FB47CC4E0, multiplier)
end
Global.N_0x0b919e1fb47cc4e0 = Global.SetAmbientPedRangeMultiplierThisFrame

--- SET_AMBIENT_PEDS_DROP_MONEY
function Global.SetAmbientPedsDropMoney(p0)
	return _in(0x6B0E6172C9A4D902, p0)
end
Global.N_0x6b0e6172c9a4d902 = Global.SetAmbientPedsDropMoney

--- SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME
-- @param range Most likely a value between 0.0 and 1.0.
function Global.SetAmbientVehicleRangeMultiplierThisFrame(range)
	return _in(0x90B6DA738A9A25DA, range)
end
Global.N_0x90b6da738a9a25da = Global.SetAmbientVehicleRangeMultiplierThisFrame
Global.SetSomeVehicleDensityMultiplierThisFrame = Global.SetAmbientVehicleRangeMultiplierThisFrame

--- Sets the specified ped to use a specific voice different to the one associated with their model.
function Global.SetAmbientVoiceName(ped, voiceName)
	return _in(0x6C8065A3B780185B, ped, _ts(voiceName))
end

--- Sets the specified ped to use a specific voice different to the one associated with their model.
function Global.SetAmbientVoiceNameHash(ped, hash)
	return _in(0x9A53DED9921DE990, ped, _ch(hash))
end
Global.N_0x9a53ded9921de990 = Global.SetAmbientVoiceNameHash
Global.SetAmbientVoiceNameHash = Global.SetAmbientVoiceNameHash

--- SET_AMBIENT_ZONE_LIST_STATE
-- @param enabled Enables/disables a list of ambient zones for the duration of this script
-- @param forceUpdate Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
function Global.SetAmbientZoneListState(zoneListName, enabled, forceUpdate)
	return _in(0x9748FA4DE50CCE3E, _ts(zoneListName), enabled, forceUpdate)
end

--- SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT
-- @param enabled Enables/disables a list of ambient zones persistently
-- @param forceUpdate Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
function Global.SetAmbientZoneListStatePersistent(ambientZone, enabled, forceUpdate)
	return _in(0xF3638DAE8C4045E1, _ts(ambientZone), enabled, forceUpdate)
end

--- SET_AMBIENT_ZONE_STATE
-- @param enabled Enables/disables an ambient zone for the duration of this script
-- @param forceUpdate Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
function Global.SetAmbientZoneState(zoneName, enabled, forceUpdate)
	return _in(0xBDA07E5950085E46, _ts(zoneName), enabled, forceUpdate)
end

--- SET_AMBIENT_ZONE_STATE_PERSISTENT
-- @param enabled Enables/disables an ambient zone for the duration of this script
-- @param forceUpdate Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
function Global.SetAmbientZoneStatePersistent(zoneName, enabled, forceUpdate)
	return _in(0x1D6650420CEC9D3B, _ts(zoneName), enabled, forceUpdate)
end

--- SET_AMMO_IN_CLIP
function Global.SetAmmoInClip(ped, weaponHash, ammo)
	return _in(0xDCD2A934D65CB497, ped, _ch(weaponHash), ammo, _r)
end

--- SET_ANIM_LOOPED
function Global.SetAnimLooped(p0, p1, p2, p3)
	return _in(0x70033C3CC29A1FF4, p0, p1, p2, p3)
end

--- NativeDB Introduced: v2372
function Global.SetAnimPhase(entity, p1, p2, p3)
	return _in(0xDDF3CB5A0A4C0B49, entity, p1, p2, p3)
end
Global.N_0xddf3cb5a0a4c0b49 = Global.SetAnimPhase
Global.SetAnimPlaybackTime = Global.SetAnimPhase

--- SET_ANIM_RATE
function Global.SetAnimRate(p0, p1, p2, p3)
	return _in(0x032D49C5E359C847, p0, p1, p2, p3)
end

--- SET_ANIM_WEIGHT
function Global.SetAnimWeight(p0, p1, p2, p3, p4)
	return _in(0x207F1A47C0342F48, p0, p1, p2, p3, p4)
end

--- cpp
-- enum eAudAnimalMood {
-- AUD_ANIMAL_MOOD_ANGRY,
-- AUD_ANIMAL_MOOD_PLAYFUL,
-- AUD_ANIMAL_MOOD_NUM_MOODS
-- }
-- @param mood Refer to eAudAnimalMood
function Global.SetAnimalMood(animal, mood)
	return _in(0xCC97B29285B1DC3B, animal, mood)
end

--- Does not affect weapons, particles, fire/explosions, flashlights or the sun.
-- When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
-- Used in Humane Labs Heist for EMP.
-- @param state True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
function Global.SetArtificialLightsState(state)
	return _in(0x1268615ACE24D504, state)
end
Global.SetBlackout = Global.SetArtificialLightsState

--- If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.SetArtificialLightsStateAffectsVehicles(toggle)
	return _in(0xE2B187C0939B3D32, toggle)
end

--- Generic interface to toggle audio functionality, with auto-reset on script termination and support for multiple script threads
-- ```
-- Possible flag names:
-- "ActivateSwitchWheelAudio"
-- "AllowAmbientSpeechInSlowMo"
-- "AllowCutsceneOverScreenFade"
-- "AllowForceRadioAfterRetune"
-- "AllowPainAndAmbientSpeechToPlayDuringCutscene"
-- "AllowPlayerAIOnMission"
-- "AllowPoliceScannerWhenPlayerHasNoControl"
-- "AllowRadioDuringSwitch"
-- "AllowRadioOverScreenFade"
-- "AllowScoreAndRadio"
-- "AllowScriptedSpeechInSlowMo"
-- "AvoidMissionCompleteDelay"
-- "DisableAbortConversationForDeathAndInjury"
-- "DisableAbortConversationForRagdoll"
-- "DisableBarks"
-- "DisableFlightMusic"
-- "DisableReplayScriptStreamRecording"
-- "EnableHeadsetBeep"
-- "ForceConversationInterrupt"
-- "ForceSeamlessRadioSwitch"
-- "ForceSniperAudio"
-- "FrontendRadioDisabled"
-- "HoldMissionCompleteWhenPrepared"
-- "IsDirectorModeActive"
-- "IsPlayerOnMissionForSpeech"
-- "ListenerReverbDisabled"
-- "LoadMPData"
-- "MobileRadioInGame"
-- "OnlyAllowScriptTriggerPoliceScanner"
-- "PlayMenuMusic"
-- "PoliceScannerDisabled"
-- "ScriptedConvListenerMaySpeak"
-- "SpeechDucksScore"
-- "SuppressPlayerScubaBreathing"
-- "WantedMusicDisabled"
-- "WantedMusicOnMission"
-- -------------------------------
-- No added flag names between b393d and b573d, including b573d.
-- #######################################################################
-- "IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
-- -----------------------------------------------------------------------
-- All flag IDs and hashes:
-- ID: 01 | Hash: 0x20A7858F
-- ID: 02 | Hash: 0xA11C2259
-- ID: 03 | Hash: 0x08DE4700
-- ID: 04 | Hash: 0x989F652F
-- ID: 05 | Hash: 0x3C9E76BA
-- ID: 06 | Hash: 0xA805FEB0
-- ID: 07 | Hash: 0x4B94EA26
-- ID: 08 | Hash: 0x803ACD34
-- ID: 09 | Hash: 0x7C741226
-- ID: 10 | Hash: 0x31DB9EBD
-- ID: 11 | Hash: 0xDF386F18
-- ID: 12 | Hash: 0x669CED42
-- ID: 13 | Hash: 0x51F22743
-- ID: 14 | Hash: 0x2052B35C
-- ID: 15 | Hash: 0x071472DC
-- ID: 16 | Hash: 0xF9928BCC
-- ID: 17 | Hash: 0x7ADBDD48
-- ID: 18 | Hash: 0xA959BA1A
-- ID: 19 | Hash: 0xBBE89B60
-- ID: 20 | Hash: 0x87A08871
-- ID: 21 | Hash: 0xED1057CE
-- ID: 22 | Hash: 0x1584AD7A
-- ID: 23 | Hash: 0x8582CFCB
-- ID: 24 | Hash: 0x7E5E2FB0
-- ID: 25 | Hash: 0xAE4F72DB
-- ID: 26 | Hash: 0x5D16D1FA
-- ID: 27 | Hash: 0x06B2F4B8
-- ID: 28 | Hash: 0x5D4CDC96
-- ID: 29 | Hash: 0x8B5A48BA
-- ID: 30 | Hash: 0x98FBD539
-- ID: 31 | Hash: 0xD8CB0473
-- ID: 32 | Hash: 0x5CBB4874
-- ID: 33 | Hash: 0x2E9F93A9
-- ID: 34 | Hash: 0xD93BEA86
-- ID: 35 | Hash: 0x92109B7D
-- ID: 36 | Hash: 0xB7EC9E4D
-- ID: 37 | Hash: 0xCABDBB1D
-- ID: 38 | Hash: 0xB3FD4A52
-- ID: 39 | Hash: 0x370D94E5
-- ID: 40 | Hash: 0xA0F7938F
-- ID: 41 | Hash: 0xCBE1CE81
-- ID: 42 | Hash: 0xC27F1271
-- ID: 43 | Hash: 0x9E3258EB
-- ID: 44 | Hash: 0x551CDA5B
-- ID: 45 | Hash: 0xCB6D663C
-- ID: 46 | Hash: 0x7DACE87F
-- ID: 47 | Hash: 0xF9DE416F
-- ID: 48 | Hash: 0x882E6E9E
-- ID: 49 | Hash: 0x16B447E7
-- ID: 50 | Hash: 0xBD867739
-- ID: 51 | Hash: 0xA3A58604
-- ID: 52 | Hash: 0x7E046BBC
-- ID: 53 | Hash: 0xD95FDB98
-- ID: 54 | Hash: 0x5842C0ED
-- ID: 55 | Hash: 0x285FECC6
-- ID: 56 | Hash: 0x9351AC43
-- ID: 57 | Hash: 0x50032E75
-- ID: 58 | Hash: 0xAE6D0D59
-- ID: 59 | Hash: 0xD6351785
-- ID: 60 | Hash: 0xD25D71BC
-- ID: 61 | Hash: 0x1F7F6423
-- ID: 62 | Hash: 0xE24C3AA6
-- ID: 63 | Hash: 0xBFFDD2B7
-- ```
function Global.SetAudioFlag(flagName, toggle)
	return _in(0xB9EFD5C25018725A, _ts(flagName), toggle)
end

--- SET_AUDIO_SCENE_VARIABLE
-- @param scene name of the scene
-- @param variableName name of the variable to add/change
-- @param value value to set the variable to
function Global.SetAudioSceneVariable(scene, variableName, value)
	return _in(0xEF21A9EF089A2668, _ts(scene), _ts(variableName), value)
end

--- Set a delay in milliseconds for the audio to be cleaned up when the script finishes.
function Global.SetAudioScriptCleanupTime(timeMs)
	return _in(0xA5F377B175A699C5, timeMs)
end
Global.N_0xa5f377b175a699c5 = Global.SetAudioScriptCleanupTime

--- Needs to be called every frame.
-- ```cpp
-- enum audSpecialEffectMode
-- {
-- kSpecialEffectModeNormal = 0,
-- kSpecialEffectModeUnderwater = 1,
-- kSpecialEffectModeStoned = 2,
-- kSpecialEffectModePauseMenu = 3,
-- kSpecialEffectModeSlowMotion = 4,
-- kSpecialEffectModeDrunkStage01 = 5,
-- kSpecialEffectModeDrunkStage02 = 6,
-- kSpecialEffectModeDrunkStage03 = 7,
-- NUM_AUDSPECIALEFFECTMODE
-- };
-- ```
-- @param mode Audio mode to apply this frame
function Global.SetAudioSpecialEffectMode(mode)
	return _in(0x12561FCBB62D5B9C, mode)
end
Global.N_0x12561fcbb62d5b9c = Global.SetAudioSpecialEffectMode

--- Sets a floating-point parameter for a submix effect.
-- @param submixId The submix.
-- @param effectSlot The effect slot for the submix. It is expected that the effect is set in this slot beforehand.
-- @param paramIndex The parameter index for the effect.
-- @param paramValue The parameter value to set.
function Global.SetAudioSubmixEffectParamFloat(submixId, effectSlot, paramIndex, paramValue)
	return _in(0x9a209b3c, submixId, effectSlot, paramIndex, paramValue)
end

--- Sets an integer parameter for a submix effect.
-- @param submixId The submix.
-- @param effectSlot The effect slot for the submix. It is expected that the effect is set in this slot beforehand.
-- @param paramIndex The parameter index for the effect.
-- @param paramValue The parameter value to set.
function Global.SetAudioSubmixEffectParamInt(submixId, effectSlot, paramIndex, paramValue)
	return _in(0x77fae2b8, submixId, effectSlot, paramIndex, paramValue)
end

--- Assigns a RadioFX effect to a submix effect slot.
-- The parameter values for this effect are as follows (backticks are used to represent hashes):
-- | Index | Type | Description |
-- |-|-|-|
-- | \`enabled\` | int | Enables or disables RadioFX on this DSP. |
-- | \`default\` | int | Sets default parameters for the RadioFX DSP and enables it. |
-- | \`freq_low\` | float |  |
-- | \`freq_hi\` | float |  |
-- | \`fudge\` | float |  |
-- | \`rm_mod_freq\` | float |  |
-- | \`rm_mix\` | float |  |
-- | \`o_freq_lo\` | float |  |
-- | \`o_freq_hi\` | float |  |
-- @param submixId The submix.
-- @param effectSlot The effect slot for the submix.
function Global.SetAudioSubmixEffectRadioFx(submixId, effectSlot)
	return _in(0xaaa94d53, submixId, effectSlot)
end

--- Sets the volumes for the sound channels in a submix effect.
-- Values can be between 0.0 and 1.0.
-- Channel 5 and channel 6 are not used in voice chat but are believed to be center and LFE channels.
-- Output slot starts at 0 for the first ADD_AUDIO_SUBMIX_OUTPUT call then incremented by 1 on each subsequent call.
-- @param submixId The submix.
-- @param outputSlot The output slot index.
-- @param frontLeftVolume The volume for the front left channel.
-- @param frontRightVolume The volume for the front right channel.
-- @param rearLeftVolume The volume for the rear left channel.
-- @param rearRightVolume The volume for the rear right channel.
-- @param channel5Volume The volume for channel 5.
-- @param channel6Volume The volume for channel 6.
function Global.SetAudioSubmixOutputVolumes(submixId, outputSlot, frontLeftVolume, frontRightVolume, rearLeftVolume, rearRightVolume, channel5Volume, channel6Volume)
	return _in(0x825dc0d1, submixId, outputSlot, frontLeftVolume, frontRightVolume, rearLeftVolume, rearRightVolume, channel5Volume, channel6Volume)
end

--- Sets the priority for the given vehicle. This is a hint for the audio system as to what LOD the
-- vehicle should use.
-- 'High' priority will bump up the activation range significantly and prevent it
-- from dropping when the vehicle is not within the view frustrum.
-- 'Max' will attempt to keep the vehicle at maximum LOD regardless of how far it is from the listener or what it is currently doing. Be careful with this!
-- There is a hard limit of 5 simulataneous granular cars (including the player) so we are quite limited on the number
-- we can play at once, so setting vehicles to max priority will reduce the number of engines availble for regular NPC vehicles
-- ```cpp
-- enum eAudVehiclePriority {
-- AUDIO_VEHICLE_PRIORITY_NORMAL = 0,
-- AUDIO_VEHICLE_PRIORITY_MEDIUM = 1,
-- AUDIO_VEHICLE_PRIORITY_MAX = 2,
-- AUDIO_VEHICLE_PRIORITY_HIGH = 3,
-- }
-- ```
function Global.SetAudioVehiclePriority(vehicle, priority)
	return _in(0xE5564483E407F914, vehicle, priority)
end

--- SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE
function Global.SetAutoGiveParachuteWhenEnterPlane(player, toggle)
	return _in(0x9F343285A00B4BB6, player, toggle)
end

--- SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE
function Global.SetAutoGiveScubaGearWhenExitVehicle(player, toggle)
	return _in(0xD2B315B6689D537D, player, toggle)
end
Global.N_0xd2b315b6689d537d = Global.SetAutoGiveScubaGearWhenExitVehicle

--- SET_BACKFACECULLING
function Global.SetBackfaceculling(toggle)
	return _in(0x23BA6B0C2AD7B0D3, toggle)
end
Global.N_0x23ba6b0c2ad7b0d3 = Global.SetBackfaceculling

--- SET_BALANCE_ADD_MACHINE
function Global.SetBalanceAddMachine(contentId, contentTypeName)
	return _in(0x815E5E3073DA1D67, _ts(contentId), _ts(contentTypeName), _r)
end

--- SET_BALANCE_ADD_MACHINES
function Global.SetBalanceAddMachines(dataCount, contentTypeName)
	return _in(0xB8322EEB38BE7C26, _i, dataCount, _ts(contentTypeName), _r)
end

--- _SET_BEAST_MODE_ACTIVE
function Global.SetBeastModeActive(player)
	return _in(0x438822C279B73B93, player)
end
Global.N_0x438822c279b73b93 = Global.SetBeastModeActive

--- Toggles the big minimap state like in GTA:Online.
-- To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#\_0xFFF65C63).
-- @param toggleBigMap Enable or disable the expanded minimap.
-- @param showFullMap Enable or disable the full map from being shown on the minimap, requires p0 to be true.
function Global.SetBigmapActive(toggleBigMap, showFullMap)
	return _in(0x231C8F89D0539D8F, toggleBigMap, showFullMap)
end
Global.SetRadarBigmapEnabled = Global.SetBigmapActive

--- Only works on bikes, both X and Y work in the -1 - 1 range.
-- X forces the bike to turn left or right (-1, 1)
-- Y forces the bike to lean to the left or to the right (-1, 1)
-- Example with X -1/Y 1
-- http://i.imgur.com/TgIuAPJ.jpg
function Global.SetBikeOnStand(vehicle, x, y)
	return _in(0x9CFA4896C3A53CBB, vehicle, x, y)
end
Global.SetBikeLeanAngle = Global.SetBikeOnStand

--- Creates an integer (usually 1) for a BINK movie to be called with other natives.
-- [List of all BINK movies (alphabetically ordered) as of b2802](https://gist.github.com/ItsJunction/8046f28c29ea8ff2821e9e4f933f595f)
-- @param name The BINK movie to play (with or without file extension).
function Global.SetBinkMovie(name)
	return _in(0x338D9F609FD632DB, _ts(name), _ri)
end
Global.SetBinkMovieRequested = Global.SetBinkMovie

--- Seeks a BINK movie to a specified position.
-- @param binkMovie The movie that is being played.
-- @param progress As a percentage (0.0 - 100.0).
function Global.SetBinkMovieTime(binkMovie, progress)
	return _in(0x0CB6B3446855B57A, binkMovie, progress)
end
Global.SetBinkMovieProgress = Global.SetBinkMovieTime

--- NativeDB Introduced: v1868
function Global.SetBinkMovieUnk_2(binkMovie, p1)
	return _in(0xF816F2933752322D, binkMovie, p1)
end

--- binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)
-- ```
-- ```
-- NativeDB Introduced: v1290
function Global.SetBinkMovieVolume(binkMovie, value)
	return _in(0xAFF33B1178172223, binkMovie, value)
end
Global.SetBinkMovieUnk = Global.SetBinkMovieVolume

--- NativeDB Introduced: v1290
function Global.SetBinkShouldSkip(binkMovie, shouldSkip)
	return _in(0x6805D58CAA427B72, binkMovie, shouldSkip)
end
Global.N_0x6805d58caa427b72 = Global.SetBinkShouldSkip

--- This sets bit [offset] of [address] to on.
-- The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
-- Example:
-- MISC::SET_BIT(&bitAddress, 1);
-- To check if this bit has been enabled:
-- MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
-- Please note, this method may assign a value to [address] when used.
function Global.SetBit(offset)
	return _in(0x933D6A9EEC1BACD0, _i, offset)
end

--- SET_BITS_IN_RANGE
function Global.SetBitsInRange(rangeStart, rangeEnd, p3)
	return _in(0x8EF07E15701D61ED, _i, rangeStart, rangeEnd, p3)
end

--- Sets alpha-channel for blip color.
-- Example:
-- Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);
-- HUD::SET_BLIP_COLOUR(blip , 3);
-- HUD::SET_BLIP_ALPHA(blip , 64);
function Global.SetBlipAlpha(blip, alpha)
	return _in(0x45FF974EEE1C8734, blip, alpha)
end

--- Allows the user to set a blip as friendly or enemy based on the toggle.
-- @param blip The blip handle
-- @param toggle True for friendly, false for enemy
function Global.SetBlipAsFriendly(blip, toggle)
	return _in(0x6F6F290102C02AB4, blip, toggle)
end

--- SET_BLIP_AS_MISSION_CREATOR_BLIP
function Global.SetBlipAsMissionCreatorBlip(blip, toggle)
	return _in(0x24AC0137444F9FD5, blip, toggle)
end

--- Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
-- @param blip The blip handle.
-- @param toggle True to only display the blip as 'short range', false to display the blip from a longer distance.
function Global.SetBlipAsShortRange(blip, toggle)
	return _in(0xBE8BE4FE60E27B72, blip, toggle)
end

--- SET_BLIP_BRIGHT
function Global.SetBlipBright(blip, toggle)
	return _in(0xB203913733F27884, blip, toggle)
end

--- Examples result:
-- ![](https://i.imgur.com/skY6vAJ.png)
-- **index:**
-- ```
-- 1 = No distance shown in legend
-- 2 = Distance shown in legend
-- 7 = "Other Players" category, also shows distance in legend
-- 10 = "Property" category
-- 11 = "Owned Property" category
-- ```
-- Any other value behaves like `index = 1`, `index` wraps around after 255
-- Blips with categories `7`, `10` or `11` will all show under the specific categories listing in the map legend, regardless of sprite or name.
-- **Legend entries**
-- | index | Legend entry | Label |
-- | --- | --- | --- |
-- | 7 | Other Players | `BLIP_OTHPLYR` |
-- | 10 | Property | `BLIP_PROPCAT` |
-- | 11 | Owned Property | `BLIP_APARTCAT` |
-- @param blip The blip to change the category index of
-- @param index The category index to change to
function Global.SetBlipCategory(blip, index)
	return _in(0x234CDD44D996FD9A, blip, index)
end

--- SET_BLIP_COLOUR
-- @param color See [blip colors here](https://docs.fivem.net/docs/game-references/blips/#blip-colors)
function Global.SetBlipColour(blip, color)
	return _in(0x03D7FB09E75D6B7E, blip, color)
end

--- SET_BLIP_COORDS
function Global.SetBlipCoords(blip, posX, posY, posZ)
	return _in(0xAE2AF67E9D9AF65D, blip, posX, posY, posZ)
end

--- **displayId Behaviour**
-- | display ID 	| Behaviour                                                   	|
-- |------------	|-------------------------------------------------------------	|
-- | 0          	| Doesn't show up, ever, anywhere.                            	|
-- | 1          	| Doesn't show up, ever, anywhere.                            	|
-- | 2          	| Shows on both main map and minimap. (Selectable on map)     	|
-- | 3          	| Shows on main map only. (Selectable on map)                 	|
-- | 4          	| Shows on main map only. (Selectable on map)                 	|
-- | 5          	| Shows on minimap only.                                      	|
-- | 6          	| Shows on both main map and minimap. (Selectable on map)     	|
-- | 7          	| Doesn't show up, ever, anywhere.                            	|
-- | 8          	| Shows on both main map and minimap. (Not selectable on map) 	|
-- | 9          	| Shows on minimap only.                                      	|
-- | 10         	| Shows on both main map and minimap. (Not selectable on map) 	|
-- Anything higher than 10 seems to be exactly the same as 10.
-- Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
function Global.SetBlipDisplay(blip, displayId)
	return _in(0x9029B2F3DA924928, blip, displayId)
end

--- Must be toggled before being queued for animation
function Global.SetBlipDisplayIndicatorOnBlip(blip, toggle)
	return _in(0xC4278F70131BAA6D, blip, toggle)
end
Global.N_0xc4278f70131baa6d = Global.SetBlipDisplayIndicatorOnBlip

--- SET_BLIP_FADE
function Global.SetBlipFade(blip, opacity, duration)
	return _in(0x2AEE8F8390D2298C, blip, opacity, duration)
end

--- Sets the interval in milliseconds before flashing the blip.
-- @param blip The blip to change flashing interval
-- @param interval Interval in milliseconds before flashing the blip
function Global.SetBlipFlashInterval(blip, interval)
	return _in(0xAA51DB313C010A7E, blip, interval)
end

--- Flashes blip for time in milliseconds before stopping.
-- @param blip The blip to start flashing
-- @param duration Time in milliseconds to flash the blip before stopping
function Global.SetBlipFlashTimer(blip, duration)
	return _in(0xD3CD6FD297AE87CC, blip, duration)
end

--- SET_BLIP_FLASHES
function Global.SetBlipFlashes(blip, toggle)
	return _in(0xB14552383D39CE3E, blip, toggle)
end

--- SET_BLIP_FLASHES_ALTERNATE
function Global.SetBlipFlashesAlternate(blip, toggle)
	return _in(0x2E8D9498C56DD0D1, blip, toggle)
end

--- SET_BLIP_HIDDEN_ON_LEGEND
function Global.SetBlipHiddenOnLegend(blip, toggle)
	return _in(0x54318C915D27E4CE, blip, toggle)
end
Global.N_0x54318c915d27e4ce = Global.SetBlipHiddenOnLegend

--- SET_BLIP_HIGH_DETAIL
function Global.SetBlipHighDetail(blip, toggle)
	return _in(0xE2590BC29220CEBB, blip, toggle)
end

--- Doesn't work if the label text of gxtEntry is >= 80.
function Global.SetBlipNameFromTextFile(blip, gxtEntry)
	return _in(0xEAA0FFE120D92784, blip, _ts(gxtEntry))
end

--- SET_BLIP_NAME_TO_PLAYER_NAME
function Global.SetBlipNameToPlayerName(blip, player)
	return _in(0x127DE7B20C60A6A3, blip, player)
end

--- See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
function Global.SetBlipPriority(blip, priority)
	return _in(0xAE9FC9EF6A9FAC79, blip, priority)
end

--- After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
function Global.SetBlipRotation(blip, rotation)
	return _in(0xF87683CDF73C3F6E, blip, rotation)
end

--- Enable / disable showing route for the Blip-object.
function Global.SetBlipRoute(blip, enabled)
	return _in(0x4F7D8A9BFB0B43E9, blip, enabled)
end

--- SET_BLIP_ROUTE_COLOUR
function Global.SetBlipRouteColour(blip, colour)
	return _in(0x837155CD2F63DA09, blip, colour)
end

--- SET_BLIP_SCALE
function Global.SetBlipScale(blip, scale)
	return _in(0xD38744167B2FA257, blip, scale)
end

--- See https://imgur.com/a/lLkEsMN
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.SetBlipScaleTransformation(blip, xScale, yScale)
	return _in(0xCD6524439909C979, blip, xScale, yScale)
end

--- SET_BLIP_SECONDARY_COLOUR
function Global.SetBlipSecondaryColour(blip, r, g, b)
	return _in(0x14892474891E09EB, blip, r, g, b)
end

--- NativeDB Added Parameter 3: Any p2
function Global.SetBlipShowCone(blip, toggle)
	return _in(0x13127EC3665E8EE1, blip, toggle)
end

--- Makes a blip go small when off the minimap.
-- SET_BLIP_AS_*
function Global.SetBlipShrink(blip, toggle)
	return _in(0x2B6D467DAB714E8D, blip, toggle)
end
Global.N_0x2b6d467dab714e8d = Global.SetBlipShrink

--- Sets the displayed sprite for a specific blip.
-- There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
-- @param blip The blip to change.
-- @param spriteId The sprite ID to set.
function Global.SetBlipSprite(blip, spriteId)
	return _in(0xDF735600A4696DAF, blip, spriteId)
end

--- Does not require whole number/integer rotations.
function Global.SetBlipSquaredRotation(blip, heading)
	return _in(0xA8B6AFDAC320AC87, blip, heading)
end
Global.N_0xa8b6afdac320ac87 = Global.SetBlipSquaredRotation

--- works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
function Global.SetBlockingOfNonTemporaryEvents(ped, toggle)
	return _in(0x9F8AA94D6D97DBF4, ped, toggle)
end

--- SET_BOAT_ANCHOR
function Global.SetBoatAnchor(vehicle, toggle)
	return _in(0x75DBEC174AEEAD10, vehicle, toggle)
end

--- Sets the boat boom position for the `TR3` trailer.
-- Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
-- To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#\_0x6636C535F6CC2725).
-- @param vehicle The TR3 vehicle.
-- @param ratio A value between 0.0 (left) and 1.0 (back)
function Global.SetBoatBoomPositionRatio(vehicle, ratio)
	return _in(0xF488C566413B4232, vehicle, ratio)
end
Global.N_0xf488c566413b4232 = Global.SetBoatBoomPositionRatio

--- SET_BOAT_DISABLE_AVOIDANCE
function Global.SetBoatDisableAvoidance(vehicle, p1)
	return _in(0x0A6A279F3AA4FD70, vehicle, p1)
end
Global.N_0x0a6a279f3aa4fd70 = Global.SetBoatDisableAvoidance

--- _SET_BOAT_FROZEN_WHEN_ANCHORED
function Global.SetBoatFrozenWhenAnchored(vehicle, toggle)
	return _in(0xE3EBAAE484798530, vehicle, toggle)
end
Global.N_0xe3ebaae484798530 = Global.SetBoatFrozenWhenAnchored

--- _SET_BOAT_IS_SINKING
function Global.SetBoatIsSinking(vehicle)
	return _in(0xBD32E46AA95C1DD2, vehicle)
end
Global.N_0xbd32e46aa95c1dd2 = Global.SetBoatIsSinking
Global.SetBoatSinking = Global.SetBoatIsSinking

--- _SET_BOAT_MOVEMENT_RESISTANCE
function Global.SetBoatMovementResistance(vehicle, value)
	return _in(0xE842A9398079BD82, vehicle, value)
end
Global.N_0xe842a9398079bd82 = Global.SetBoatMovementResistance
Global.SetBoatAnchorBuoyancyCoefficient = Global.SetBoatMovementResistance

--- SET_BOAT_SINKS_WHEN_WRECKED
function Global.SetBoatSinksWhenWrecked(vehicle, toggle)
	return _in(0x8F719973E1445BA2, vehicle, toggle)
end
Global.N_0x8f719973e1445ba2 = Global.SetBoatSinksWhenWrecked
Global.SetBoatExplodesOnWreckedAction = Global.SetBoatSinksWhenWrecked

--- SET_CALMING_QUAD_BOUNDS
-- @param waterQuad The calming quad index
-- @param minX The minX coordinate
-- @param minY The minY coordinate
-- @param maxX The maxX coordinate
-- @param maxY The maxY coordinate
-- @return Returns true on success.
function Global.SetCalmingQuadBounds(waterQuad, minX, minY, maxX, maxY)
	return _in(0xc5945bd9, waterQuad, minX, minY, maxX, maxY, _r)
end

--- SET_CALMING_QUAD_DAMPENING
-- @param calmingQuad The calming quad
-- @param dampening The dampening value
-- @return Returns true on success.
function Global.SetCalmingQuadDampening(calmingQuad, dampening)
	return _in(0x67977501, calmingQuad, dampening, _r)
end

--- Set camera as active/inactive.
function Global.SetCamActive(cam, active)
	return _in(0x026FB97D0A425F84, cam, active)
end

--- Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
function Global.SetCamActiveWithInterp(camTo, camFrom, duration, easeLocation, easeRotation)
	return _in(0x9FBDA379383A52A4, camTo, camFrom, duration, easeLocation, easeRotation)
end

--- Allows you to aim and shoot at the direction the camera is facing.
function Global.SetCamAffectsAiming(cam, toggle)
	return _in(0x8C1DC7770C51DC8D, cam, toggle)
end

--- SET_CAM_ANIM_CURRENT_PHASE
function Global.SetCamAnimCurrentPhase(cam, phase)
	return _in(0x4145A4C44FF3B5A6, cam, phase)
end

--- Makes the minimap follow a scripted camera's rotation instead of the gameplay cam.
-- @param cam Cam handle returned by [CREATE_CAM](#\_0xC3981DCE61D9E13F)
-- @param toggle Whether or not this camera should control the minimap heading.
function Global.SetCamControlsMiniMapHeading(cam, toggle)
	return _in(0x661B5C8654ADD825, cam, toggle)
end
Global.N_0x661b5c8654add825 = Global.SetCamControlsMiniMapHeading

--- Sets the position of the cam.
function Global.SetCamCoord(cam, posX, posY, posZ)
	return _in(0x4D41783FB745E42E, cam, posX, posY, posZ)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.SetCamDebugName(camera, name)
	return _in(0x1B93E0107865DD40, camera, _ts(name))
end

--- This native has its name defined inside its codE
function Global.SetCamDofFnumberOfLens(camera, p1)
	return _in(0x7DD234D6F3914C5B, camera, p1)
end
Global.N_0x7dd234d6f3914c5b = Global.SetCamDofFnumberOfLens

--- Native name labeled within its code
function Global.SetCamDofFocalLengthMultiplier(camera, multiplier)
	return _in(0x47B595D60664CFFA, camera, multiplier)
end
Global.N_0x47b595d60664cffa = Global.SetCamDofFocalLengthMultiplier

--- This native has a name defined inside its code
function Global.SetCamDofFocusDistanceBias(camera, p1)
	return _in(0xC669EEA5D031B7DE, camera, p1)
end
Global.N_0xc669eea5d031b7de = Global.SetCamDofFocusDistanceBias

--- This native has a name defined inside its code
function Global.SetCamDofMaxNearInFocusDistance(camera, p1)
	return _in(0xC3654A441402562D, camera, p1)
end
Global.N_0xc3654a441402562d = Global.SetCamDofMaxNearInFocusDistance

--- This native has a name defined inside its code
function Global.SetCamDofMaxNearInFocusDistanceBlendLevel(camera, p1)
	return _in(0x2C654B4943BDDF7C, camera, p1)
end
Global.N_0x2c654b4943bddf7c = Global.SetCamDofMaxNearInFocusDistanceBlendLevel

--- SET_CAM_DOF_PLANES
function Global.SetCamDofPlanes(cam, p1, p2, p3, p4)
	return _in(0x3CF48F6F96E749DC, cam, p1, p2, p3, p4)
end

--- Specifies how much the DoF effect should be applied (Set using [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), etc.)
-- @param cam The camera handle
-- @param dofStrength Depth of Field strength (between 0.0 and 1.0)
function Global.SetCamDofStrength(cam, dofStrength)
	return _in(0x5EE29B4D7D5DF897, cam, dofStrength)
end

--- if p0 is 0, effect is cancelled
-- if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
-- if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
function Global.SetCamEffect(p0)
	return _in(0x80C8B1846639BB19, p0)
end

--- SET_CAM_FAR_CLIP
function Global.SetCamFarClip(cam, farClip)
	return _in(0xAE306F2A904BF86E, cam, farClip)
end

--- Specifies when the camera should stop being in focus. Can be used together with [`SET_USE_HI_DOF`](#\_0xA13B0222F3D94A94), [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.
-- ### Usage Example
-- A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- @param cam The camera handle
-- @param farDOF Distance in in standard units
function Global.SetCamFarDof(cam, farDOF)
	return _in(0xEDD91296CD01AEE0, cam, farDOF)
end

--- Adjusts the field of view (FOV) for a specified camera, allowing for a wider or narrower perspective of the game world. The field of view is measured in degrees and affects how much of the game world is visible at any given moment through the camera.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param cam The camera whose FOV is being set.
-- @param fieldOfView The new FOV value, in degrees. Valid range is from `1.0f` (minimum FOV, for a very narrow view) to `130.0f` (maximum FOV, for a very wide view).
function Global.SetCamFov(cam, fieldOfView)
	return _in(0xB13C14F66A00D047, cam, fieldOfView)
end

--- The native seems to only be called once.
-- The native is used as so,
-- CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));
-- In the exile1 script.
function Global.SetCamInheritRollVehicle(cam, p1)
	return _in(0x45F1DE9C34B93AE6, cam, p1)
end

--- SET_CAM_MOTION_BLUR_STRENGTH
function Global.SetCamMotionBlurStrength(cam, strength)
	return _in(0x6F0F77FBA9A8F2E6, cam, strength)
end

--- SET_CAM_NEAR_CLIP
function Global.SetCamNearClip(cam, nearClip)
	return _in(0xC7848EFCCC545182, cam, nearClip)
end

--- Specifies when the camera should start being in focus. Can be used together with [`SET_USE_HI_DOF`](#\_0xA13B0222F3D94A94), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.
-- ### Usage Example
-- A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- @param cam The camera handle
-- @param nearDOF Distance in in standard units
function Global.SetCamNearDof(cam, nearDOF)
	return _in(0x3FA4BF0A7AB7DE2C, cam, nearDOF)
end

--- SET_CAM_PARAMS
-- @param transitionSpeed The speed of transition/interpolation to these new values
-- @param rotationOrder The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
function Global.SetCamParams(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, transitionSpeed, p9, p10, rotationOrder)
	return _in(0xBFD8727AEA3CCEBA, cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, transitionSpeed, p9, p10, rotationOrder)
end

--- Sets the rotation of the camera.
-- @param cam The camera handle to use, in order to change the rotation
-- @param rotX Rotation on X
-- @param rotY Rotation on Y
-- @param rotZ Rotation on Z
-- @param rotationOrder The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
function Global.SetCamRot(cam, rotX, rotY, rotZ, rotationOrder)
	return _in(0x85973643155D0B07, cam, rotX, rotY, rotZ, rotationOrder)
end

--- SET_CAM_SHAKE_AMPLITUDE
function Global.SetCamShakeAmplitude(cam, amplitude)
	return _in(0xD93DB43B82BC0D00, cam, amplitude)
end

--- I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
function Global.SetCamSplineDuration(cam, timeDuration)
	return _in(0x1381539FEE034CDA, cam, timeDuration)
end

--- SET_CAM_SPLINE_NODE_EASE
function Global.SetCamSplineNodeEase(cam, p1, p2, p3)
	return _in(0x83B8201ED82A9A2D, cam, p1, p2, p3)
end
Global.N_0x83b8201ed82a9a2d = Global.SetCamSplineNodeEase

--- SET_CAM_SPLINE_NODE_EXTRA_FLAGS
function Global.SetCamSplineNodeExtraFlags(cam, p1, flags)
	return _in(0x7BF1A54AE67AC070, cam, p1, flags)
end
Global.N_0x7bf1a54ae67ac070 = Global.SetCamSplineNodeExtraFlags

--- SET_CAM_SPLINE_NODE_VELOCITY_SCALE
function Global.SetCamSplineNodeVelocityScale(cam, p1, scale)
	return _in(0xA6385DEB180F319F, cam, p1, scale)
end
Global.N_0xa6385deb180f319f = Global.SetCamSplineNodeVelocityScale

--- SET_CAM_SPLINE_PHASE
function Global.SetCamSplinePhase(cam, p1)
	return _in(0x242B5874F0A4E052, cam, p1)
end

--- Sets the smoothing style for a DEFAULT_SPLINE_CAMERA
-- Ranges from 0 to 3 in rockstar scripts although there are actually 26
-- ```
-- 0: No lead-in or lead-out smoothing
-- 1: Smooth lead-in
-- 2: Smooth lead-out
-- 3: Both lead-in and lead-out are smoothed
-- 4-6: Longer speed up, lead-in, lead-out, and both in order as above.
-- 6: see above, but missed a node in testing(?)
-- 7: Smoothed lead-in, longer smoothed lead-out
-- 8: Longer lead-in and lead-out than 6, didn't drop node
-- 9: Constant acceleration
-- 10: Constant deceleration. Dropped 2 nodes in testing.
-- 11: Same as 0
-- 12: 10 but slower lead-in, reaches end node less early
-- 13: Extremely close to 3, slightly longer lead-in/lead-out
-- 14: Constant acceleration, dropped last 2 nodes in testing and halted (?)
-- 15: Very similar to 10, did not drop any nodes.
-- 16: Long lead-in, dropped 2 nodes in testing, very long leadout.
-- 17: Constant acceleration, slower speed-up than 9
-- 18: Same as 17 is to 9, slightly longer lead-out, lingers at end node
-- 19: Very long lead in and out
-- 20: Very long, gradual lead-in acceleration at start, gets extremely fast
-- 21: Same as 20 but for constant deceleration
-- 22: 20 and 21 combined, long linger at end node. Dropped 2 nodes in testing
-- 23: Constant acceleration, doesn't complete path before it stops
-- 24: Same as 23 but with constant deceleration, but completes path
-- 25: 23 and 24 combined, insanely fast at middle.
-- 26: No noticable lead-in, misses last 2 nodes in testing
-- 27+: Alternates between 0 and 26
-- ```
-- The above is documented and graphed at [Spline Cam Interp Graphs](https://docs.google.com/spreadsheets/d/1ejyiMcEYrhhQOL0mLe8664UN-vU4Oh-SBqQnVcKlFIk/edit?usp=sharing)
-- ```
-- Using 1-3 will result in misalignment from the passed durations for the spline nodes, the overall duration will remain but other nodes will be shortened if smoothing anything.
-- Graph below demonstrates interpolation between 0-1000 and back 10 times.
-- ![](https://i.imgur.com/cixWh7m.png)
-- ## Parameters
-- * **cam**: The DEFAULT_SPLINE_CAMERA to apply the smoothing to
-- * **smoothingStyle**: 0 to 3, 0 no additional smoothing, 1 smooth lead-in, 2 smooth lead-out, 3 smooth lead-in & lead-out
-- ```
function Global.SetCamSplineSmoothingStyle(cam, smoothingStyle)
	return _in(0xD1B0F412F109EA5D, cam, smoothingStyle)
end
Global.N_0xd1b0f412f109ea5d = Global.SetCamSplineSmoothingStyle

--- Enables or disables the usage of a shallow DOF. Needs to be set to true to use [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), etc. Doesn't need to be called every tick.
-- ### Usage Example
-- A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- @param cam The camera handle
-- @param toggle Boolean if the camera should use a shallow depth of field or not
function Global.SetCamUseShallowDofMode(cam, toggle)
	return _in(0x16A96863A17552BB, cam, toggle)
end

--- SET_CAM_VIEW_MODE_FOR_CONTEXT
-- @param context The view context; see [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
-- @param viewMode The view mode; see [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A).
function Global.SetCamViewModeForContext(context, viewMode)
	return _in(0x2A2173E46DAECD12, context, viewMode)
end
Global.N_0x2a2173e46daecd12 = Global.SetCamViewModeForContext

--- _SET_CAMBERED_WHEELS_DISABLED
function Global.SetCamberedWheelsDisabled(vehicle, toggle)
	return _in(0x1201E8A3290A3B98, vehicle, toggle)
end
Global.N_0x1201e8a3290a3b98 = Global.SetCamberedWheelsDisabled

--- Setting ped to true allows the ped to shoot "friendlies".
-- p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
-- p1 = false & p2 = false for unable to aim at.
-- p1 = true & p2 = false for able to aim at.
function Global.SetCanAttackFriendly(ped, toggle, p2)
	return _in(0xB3B1CB349FF9C75D, ped, toggle, p2)
end

--- SET_CAN_AUTO_VAULT_ON_ENTITY
function Global.SetCanAutoVaultOnEntity(entity, toggle)
	return _in(0xE12ABE5E3A389A6C, entity, toggle)
end
Global.N_0xe12abe5e3a389a6c = Global.SetCanAutoVaultOnEntity

--- SET_CAN_CLIMB_ON_ENTITY
function Global.SetCanClimbOnEntity(entity, toggle)
	return _in(0xA80AE305E0A3044F, entity, toggle)
end
Global.N_0xa80ae305e0a3044f = Global.SetCanClimbOnEntity

--- Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](#\_0xB4771B9AAF4E68E4) except for all weapons.
function Global.SetCanPedEquipAllWeapons(ped, toggle)
	return _in(0xEFF296097FF1E509, ped, toggle)
end
Global.N_0xeff296097ff1e509 = Global.SetCanPedEquipAllWeapons

--- Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
function Global.SetCanPedEquipWeapon(ped, weaponHash, toggle)
	return _in(0xB4771B9AAF4E68E4, ped, _ch(weaponHash), toggle)
end
Global.N_0xb4771b9aaf4e68e4 = Global.SetCanPedEquipWeapon
Global.SetCanPedSelectWeapon = Global.SetCanPedEquipWeapon

--- Hardcoded to not work in multiplayer.
function Global.SetCanResprayVehicle(vehicle, state)
	return _in(0x52BBA29D5EC69356, vehicle, state)
end

--- SET_CAR_BOOT_OPEN
function Global.SetCarBootOpen(vehicle)
	return _in(0xFC40CBF7B90CA77C, vehicle)
end
Global.N_0xfc40cbf7b90ca77c = Global.SetCarBootOpen

--- Something to do with "high speed bump severity"?
-- if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {
-- VEHICLE::_84FD40F56075E816(0.0);
-- sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);
-- }
function Global.SetCarHighSpeedBumpSeverityMultiplier(multiplier)
	return _in(0x84FD40F56075E816, multiplier)
end
Global.N_0x84fd40f56075e816 = Global.SetCarHighSpeedBumpSeverityMultiplier

--- Prevents a specified entity from being detached from a Cargobob, even in the event of collisions.
-- @param cargobob The Cargobob helicopter from which the entity is not to be detached
-- @param entity The entity to remain attached to the Cargobob.
function Global.SetCargobobExcludeFromPickupEntity(cargobob, entity)
	return _in(0x1F34B0626C594380, cargobob, entity)
end
Global.N_0x1f34b0626c594380 = Global.SetCargobobExcludeFromPickupEntity

--- Stops cargobob from being able to detach the attached vehicle.
function Global.SetCargobobForceDontDetachVehicle(cargobob, toggle)
	return _in(0x571FEB383F629926, cargobob, toggle)
end
Global.N_0x571feb383f629926 = Global.SetCargobobForceDontDetachVehicle
Global.SetCargobobHookCanDetach = Global.SetCargobobForceDontDetachVehicle

--- Stops the cargobob from being able to attach any vehicle
-- ```
-- ```
-- NativeDB Introduced: v1180
function Global.SetCargobobHookCanAttach(vehicle, toggle)
	return _in(0x94A68DA412C4007D, vehicle, toggle)
end
Global.N_0x94a68da412c4007d = Global.SetCargobobHookCanAttach

--- Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
function Global.SetCargobobPickupMagnetActive(cargobob, isActive)
	return _in(0x9A665550F8DA349B, cargobob, isActive)
end
Global.CargobobMagnetGrabVehicle = Global.SetCargobobPickupMagnetActive
Global.SetCargobobPickupMagnetActive = Global.SetCargobobPickupMagnetActive

--- SET_CARGOBOB_PICKUP_MAGNET_EFFECT_RADIUS
function Global.SetCargobobPickupMagnetEffectRadius(vehicle, p1)
	return _in(0xA17BAD153B51547E, vehicle, p1)
end
Global.N_0xa17bad153b51547e = Global.SetCargobobPickupMagnetEffectRadius

--- SET_CARGOBOB_PICKUP_MAGNET_FALLOFF
function Global.SetCargobobPickupMagnetFalloff(vehicle, p1)
	return _in(0x685D5561680D088B, vehicle, p1)
end
Global.N_0x685d5561680d088b = Global.SetCargobobPickupMagnetFalloff

--- SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH
function Global.SetCargobobPickupMagnetPullRopeLength(cargobob, p1)
	return _in(0x6D8EAC07506291FB, cargobob, p1)
end
Global.N_0x6d8eac07506291fb = Global.SetCargobobPickupMagnetPullRopeLength

--- SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH
function Global.SetCargobobPickupMagnetPullStrength(cargobob, p1)
	return _in(0xED8286F71A819BAA, cargobob, p1)
end
Global.N_0xed8286f71a819baa = Global.SetCargobobPickupMagnetPullStrength

--- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF
function Global.SetCargobobPickupMagnetReducedFalloff(cargobob, p1)
	return _in(0x66979ACF5102FD2F, cargobob, p1)
end
Global.N_0x66979acf5102fd2f = Global.SetCargobobPickupMagnetReducedFalloff

--- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH
function Global.SetCargobobPickupMagnetReducedStrength(cargobob, vehicle)
	return _in(0xE301BD63E9E13CF0, cargobob, vehicle)
end
Global.N_0xe301bd63e9e13cf0 = Global.SetCargobobPickupMagnetReducedStrength

--- SET_CARGOBOB_PICKUP_MAGNET_STRENGTH
function Global.SetCargobobPickupMagnetStrength(cargobob, strength)
	return _in(0xBCBFCD9D1DAC19E2, cargobob, strength)
end
Global.N_0xbcbfcd9d1dac19e2 = Global.SetCargobobPickupMagnetStrength
Global.SetCargobobPickupMagnetStrength = Global.SetCargobobPickupMagnetStrength

--- SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER
function Global.SetCargobobPickupRopeDampingMultiplier(cargobob, p1)
	return _in(0xCF1182F682F65307, cargobob, p1)
end
Global.N_0xcf1182f682f65307 = Global.SetCargobobPickupRopeDampingMultiplier

--- SET_CARGOBOB_PICKUP_ROPE_TYPE
function Global.SetCargobobPickupRopeType(vehicle, state)
	return _in(0x0D5F65A8F4EBDAB5, vehicle, state)
end
Global.N_0x0d5f65a8f4ebdab5 = Global.SetCargobobPickupRopeType

--- SET_CG_AT_BOUNDCENTER
function Global.SetCgAtBoundcenter(entity)
	return _in(0xBE520D9761FF811F, entity)
end

--- SET_CGOFFSET
function Global.SetCgoffset(entity, x, y, z)
	return _in(0xD8FA3908D7B86904, entity, x, y, z)
end

--- Sets the cylinder height of the checkpoint.
-- Parameters:
-- * nearHeight - The height of the checkpoint when inside of the radius.
-- * farHeight - The height of the checkpoint when outside of the radius.
-- * radius - The radius of the checkpoint.
function Global.SetCheckpointCylinderHeight(checkpoint, nearHeight, farHeight, radius)
	return _in(0x2707AAE9D9297D89, checkpoint, nearHeight, farHeight, radius)
end

--- This multiplies the height of the icon inside a checkpoint with the default height of about 2 units above the checkpoint's coordinates.
-- @param checkpoint The checkpoint the multiplier should be applied to.
-- @param height_multiplier The multiplier for the icon height above the checkpoint's coordinates. Default is 1.0
function Global.SetCheckpointIconHeight(checkpoint, height_multiplier)
	return _in(0x4B5B4DA5D79F1943, checkpoint, height_multiplier)
end
Global.N_0x4b5b4da5d79f1943 = Global.SetCheckpointIconHeight
Global.SetCheckpointScale = Global.SetCheckpointIconHeight

--- _SET_CHECKPOINT_ICON_SCALE
function Global.SetCheckpointIconScale(checkpoint, scale)
	return _in(0x44621483FF966526, checkpoint, scale)
end
Global.N_0x44621483ff966526 = Global.SetCheckpointIconScale

--- Sets the checkpoint color.
function Global.SetCheckpointRgba(checkpoint, red, green, blue, alpha)
	return _in(0x7167371E8AD747F7, checkpoint, red, green, blue, alpha)
end

--- Sets the checkpoint icon color.
function Global.SetCheckpointRgba2(checkpoint, red, green, blue, alpha)
	return _in(0xB9EA40907C680580, checkpoint, red, green, blue, alpha)
end
Global.SetCheckpointIconRgba = Global.SetCheckpointRgba2

--- SET_CINEMATIC_BUTTON_ACTIVE
function Global.SetCinematicButtonActive(p0)
	return _in(0x51669F7D1FB53D9F, p0)
end

--- SET_CINEMATIC_CAM_SHAKE_AMPLITUDE
function Global.SetCinematicCamShakeAmplitude(p0)
	return _in(0xC724C701C30B2FE7, p0)
end

--- Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
function Global.SetCinematicModeActive(toggle)
	return _in(0xDCF0754AC3D6FD4E, toggle)
end

--- SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE
function Global.SetCinematicNewsChannelActiveThisUpdate()
	return _in(0xDC9DA9E8789F5246)
end
Global.N_0xdc9da9e8789f5246 = Global.SetCinematicNewsChannelActiveThisUpdate

--- SET_CLOCK_DATE
function Global.SetClockDate(day, month, year)
	return _in(0xB096419DF0D06CE7, day, month, year)
end

--- SET_CLOCK_TIME(12, 34, 56);
function Global.SetClockTime(hour, minute, second)
	return _in(0x47C3B5848C3E45D8, hour, minute, second)
end

--- Overrides the cloud settings, which are normally controlled by the weather, with the specified named version. This native allows for custom cloud formations and behaviors that deviate from the default settings associated with the game's current weather conditions.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param overrideSettingsName The name of the cloud settings to use. Use a empty string to clear the override and return to the default settings.
function Global.SetCloudSettingsOverride(overrideSettingsName)
	return _in(0x02DEAAC8F8EA7FE7, _ts(overrideSettingsName))
end
Global.N_0x02deaac8f8ea7fe7 = Global.SetCloudSettingsOverride

--- Allows modification of the cloud opacity. It can also be used in other contexts, such as when the player is in a switch state [`IS_PLAYER_SWITCH_IN_PROGRESS`](#\_0xD9D2CFFF49FAB35F).
-- @param opacity The opacity value to set for clouds.
function Global.SetCloudsAlpha(opacity)
	return _in(0xF36199225D6D8C86, opacity)
end
Global.N_0xf36199225d6d8c86 = Global.SetCloudsAlpha
Global.SetCloudHatOpacity = Global.SetCloudsAlpha

--- SET_COLOUR_OF_NEXT_TEXT_COMPONENT
function Global.SetColourOfNextTextComponent(hudColor)
	return _in(0x39BBF623FC803EAC, hudColor)
end
Global.N_0x39bbf623fc803eac = Global.SetColourOfNextTextComponent
Global.SetNotificationColorNext = Global.SetColourOfNextTextComponent

--- SET_COMBAT_FLOAT
-- @param combatType A value between 0-14, See [`GET_COMBAT_FLOAT`](#\_0x52DFF8A10508090A) for a list of possible parameters.
function Global.SetCombatFloat(ped, combatType, p2)
	return _in(0xFF41B4B141ED981C, ped, combatType, p2)
end

--- _SET_CONTROL_LIGHT_EFFECT_COLOR
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function Global.SetControlLightEffectColor(padIndex, red, green, blue)
	return _in(0x8290252FFF36ACB5, padIndex, red, green, blue)
end
Global.N_0x8290252fff36acb5 = Global.SetControlLightEffectColor
Global.SetControlGroupColor = Global.SetControlLightEffectColor

--- This is for simulating player input.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @param amount An unbounded normal value.
function Global.SetControlNormal(padIndex, control, amount)
	return _in(0xE8A25867FBA3B05E, padIndex, control, amount, _r)
end
Global.N_0xe8a25867fba3b05e = Global.SetControlNormal

--- Sets whether or not scripted conversation flow should be controlled by anim triggers
-- @param enable Pass in true to set conversation flow to be controlled by animation triggers.
function Global.SetConversationAudioControlledByAnim(enable)
	return _in(0x0B568201DD99F0EB, enable)
end
Global.N_0x0b568201dd99f0eb = Global.SetConversationAudioControlledByAnim

--- Used to determine whether conversation should use robot speech or not
-- @param isPlaceHolder Whether or not the conversation should use robot speech or not
function Global.SetConversationAudioPlaceholder(isPlaceHolder)
	return _in(0x61631F5DF50D1C34, isPlaceHolder)
end
Global.N_0x61631f5df50d1c34 = Global.SetConversationAudioPlaceholder

--- This allows for the vehicle's roof to be put on when set to true, and removed when set to false, provided that the vehicle has a version with a roof and a version without a roof.
-- #### Vehicles with both roofed and roofless versions (others may exist; this list is compiled from decompiled scripts).
-- *   chino
-- *   voltic
-- *   buccaneer
-- *   buccaneer2
-- *   chino2
-- *   faction
-- *   faction2
-- *   mamba
-- @param vehicle The vehicle to which the roof state will be applied.
-- @param toggle Boolean value where `true` adds the roof and `false` removes it, applicable only if the vehicle has a version with and without a roof.
function Global.SetConvertibleRoof(vehicle, toggle)
	return _in(0xF39C4F538B5124C2, vehicle, toggle)
end

--- SET_CONVERTIBLE_ROOF_LATCH_STATE
function Global.SetConvertibleRoofLatchState(vehicle, state)
	return _in(0x1A78AD3D8240536F, vehicle, state)
end
Global.N_0x1a78ad3d8240536f = Global.SetConvertibleRoofLatchState

--- SET_CREATE_RANDOM_COPS
function Global.SetCreateRandomCops(toggle)
	return _in(0x102E68B2024D536D, toggle)
end

--- SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS
function Global.SetCreateRandomCopsNotOnScenarios(toggle)
	return _in(0x8A4986851C4EF6E7, toggle)
end

--- SET_CREATE_RANDOM_COPS_ON_SCENARIOS
function Global.SetCreateRandomCopsOnScenarios(toggle)
	return _in(0x444CB7D7DBE6973D, toggle)
end

--- Requires a component_at_*_flsh to be attached to the weapon object
function Global.SetCreateWeaponObjectLightSource(object, toggle)
	return _in(0xBCE595371A5FBAAF, object, toggle)
end
Global.N_0xbce595371a5fbaaf = Global.SetCreateWeaponObjectLightSource

--- SET_CREDITS_ACTIVE
function Global.SetCreditsActive(toggle)
	return _in(0xB938B7E6D3C0620C, toggle)
end

--- SET_CURRENT_PED_VEHICLE_WEAPON
function Global.SetCurrentPedVehicleWeapon(ped, weaponHash)
	return _in(0x75C55983C2C39DAA, ped, _ch(weaponHash), _r)
end

--- SET_CURRENT_PED_WEAPON
function Global.SetCurrentPedWeapon(ped, weaponHash, bForceInHand)
	return _in(0xADF692B254977C0C, ped, _ch(weaponHash), bForceInHand)
end

--- SET_CURRENT_PLAYER_TCMODIFIER
function Global.SetCurrentPlayerTcmodifier(modifierName)
	return _in(0xBBF327DED94E4DEB, _ts(modifierName))
end
Global.N_0xbbf327ded94e4deb = Global.SetCurrentPlayerTcmodifier

--- _SET_CURSOR_LOCATION
function Global.SetCursorLocation(x, y)
	return _in(0xFC695459D4D0E219, x, y, _r)
end
Global.N_0xfc695459d4d0e219 = Global.SetCursorLocation

--- Queues up a custom track list on the specified radio station. The content in the track list will be played as soon as possible.
-- The station does not have to be frozen.
-- @param forceNow wheter or not to interrupt the current track on the tracklist
function Global.SetCustomRadioTrackList(radioStation, trackListName, forceNow)
	return _in(0x4E404A9361F75BB2, _ts(radioStation), _ts(trackListName), forceNow)
end
Global.N_0x4e404a9361f75bb2 = Global.SetCustomRadioTrackList

--- ```
-- All occurrences found in b617d, sorted alphabetically and identical lines removed:
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
-- ```
-- Add a suffix to the cutscene audio name. Call before loading the cutscene.
function Global.SetCutsceneAudioOverride(name)
	return _in(0x3B4BF5F0859204D9, _ts(name))
end

--- SET_CUTSCENE_CAN_BE_SKIPPED
function Global.SetCutsceneCanBeSkipped(p0)
	return _in(0x41FAA8FB2ECE8720, p0)
end
Global.N_0x41faa8fb2ece8720 = Global.SetCutsceneCanBeSkipped

--- Only used in networked environment with MP cutscenes
-- @param cutsceneEntName MP\_1, MP\_2, etc
-- @param p1 Always 0 in R\* scripts
-- @param p2 Always 1 in R\* scripts
function Global.SetCutsceneEntityStreamingFlags(cutsceneEntName, p1, p2)
	return _in(0x4C61C75BEE8184C2, _ts(cutsceneEntName), p1, p2)
end
Global.N_0x4c61c75bee8184c2 = Global.SetCutsceneEntityStreamingFlags

--- SET_CUTSCENE_FADE_VALUES
function Global.SetCutsceneFadeValues(p0, p1, p2, p3)
	return _in(0x8093F23ABACCC7D4, p0, p1, p2, p3)
end

--- Sets cutscene location, used for multiplayer apartments/businesses.
-- @param p4 Often -1, 0 or 1
function Global.SetCutsceneOrigin(x, y, z, heading, p4)
	return _in(0xB812B3FD1C01CF27, x, y, z, heading, p4)
end

--- See [`SET_PED_COMPONENT_VARIATION`](#\_0x262B14F48D29DE80)
function Global.SetCutscenePedComponentVariation(cutsceneEntName, componentId, drawableId, textureId, modelHash)
	return _in(0xBA01E7B6DEEFBBC9, _ts(cutsceneEntName), componentId, drawableId, textureId, _ch(modelHash))
end

--- Sets the components for a cutscene ped, this will take precendence over the cutscene's component overrides. This does not require the entity be registered.
-- See
-- @param cutsceneEntName cut file cHandle, i.e Michael, Lamar, Franklin, MP\_1-MP\_4 etc
-- @param ped Ped to copy components from
-- @param modelHash Not strictly neccasary, can be 0
function Global.SetCutscenePedComponentVariationFromPed(cutsceneEntName, ped, modelHash)
	return _in(0x2A56C06EBEF2B0D9, _ts(cutsceneEntName), ped, _ch(modelHash))
end
Global.N_0x2a56c06ebef2b0d9 = Global.SetCutscenePedComponentVariationFromPed

--- See [`SET_PED_PROP_INDEX`](#\_0x93376B65A266EB5F)
-- @param cutsceneEntName i.e Michael, Trevor, MP\_1, MP\_4
function Global.SetCutscenePedPropVariation(cutsceneEntName, componentId, drawableId, textureId, modelHash)
	return _in(0x0546524ADE2E9723, _ts(cutsceneEntName), componentId, drawableId, textureId, _ch(modelHash))
end
Global.N_0x0546524ade2e9723 = Global.SetCutscenePedPropVariation

--- Only used twice in R* scripts
function Global.SetCutsceneTriggerArea(p0, p1, p2, p3, p4, p5)
	return _in(0x9896CE4721BE84BA, p0, p1, p2, p3, p4, p5)
end

--- SET_DAMPING
function Global.SetDamping(entity, vertex, value)
	return _in(0xEEA3B200A6FEB65B, entity, vertex, value)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.SetDebugLinesAndSpheresDrawingActive(enabled)
	return _in(0x175B6BFC15CDD0C5, enabled)
end

--- SET_DECISION_MAKER
function Global.SetDecisionMaker(ped, name)
	return _in(0xB604A2942ADED0EE, ped, _ch(name))
end

--- Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
-- Works only ~200 meters around the player.
function Global.SetDeepOceanScaler(intensity)
	return _in(0xB96B00E976BE977F, intensity)
end
Global.N_0xb96b00e976be977f = Global.SetDeepOceanScaler
Global.SetWavesIntensity = Global.SetDeepOceanScaler
Global.SetCurrentIntensity = Global.SetDeepOceanScaler

--- Sets the default number plate text pattern for vehicles seen on the local client with the specified plate index as their *default* index (`plateProbabilities` from carvariations).
-- For consistency, this should be used with the same value on all clients, since vehicles *without* custom text will use a seeded random number generator with this pattern to determine the default plate text.
-- The default value is `11AAA111`, and using this or a NULL string will revert to the default game RNG.
-- ### Pattern string format
-- *   `1` will lead to a random number from 0-9.
-- *   `A` will lead to a random letter from A-Z.
-- *   `.` will lead to a random letter *or* number, with 50% probability of being either.
-- *   `^1` will lead to a literal `1` being emitted.
-- *   `^A` will lead to a literal `A` being emitted.
-- *   Any other character will lead to said character being emitted.
-- *   A string shorter than 8 characters will be padded on the right.
-- @param plateIndex A plate index, or `-1` to set a default for any indices that do not have a specific value.
-- @param pattern A number plate pattern string, or a null value to reset to default.
function Global.SetDefaultVehicleNumberPlateTextPattern(plateIndex, pattern)
	return _in(0x79780fd2, plateIndex, _ts(pattern))
end

--- Only used with the "akula" and "annihilator2" in the decompiled native scripts.
-- ```
-- NativeDB Introduced: v1290
-- ```
function Global.SetDeployHeliStubWings(vehicle, deploy, p2)
	return _in(0xB251E0B33E58B424, vehicle, deploy, p2)
end
Global.N_0xb251e0b33e58b424 = Global.SetDeployHeliStubWings

--- SET_*
function Global.SetDirectorModeClearTriggeredFlag()
	return _in(0x2632482FD6B9AB87)
end
Global.N_0x2632482fd6b9ab87 = Global.SetDirectorModeClearTriggeredFlag

--- SET_DISABLE_AMBIENT_MELEE_MOVE
function Global.SetDisableAmbientMeleeMove(player, toggle)
	return _in(0x2E8AABFA40A84F8C, player, toggle)
end

--- Disables the additional physics forces applied to BMX bikes that enable them to perform tricks.
-- ```
-- NativeDB Introduced: v463
-- ```
-- @param disableExtraTrickForces Set to `true` to disable the extra forces applied for tricks on BMX bicycles, making the bike behave more like a regular bicycle without trick capabilities. Set to `false` to allow BMX bikes to perform tricks normally.
function Global.SetDisableBmxExtraTrickForces(disableExtraTrickForces)
	return _in(0x26D99D5A82FD18E8, disableExtraTrickForces)
end
Global.N_0x26d99d5a82fd18e8 = Global.SetDisableBmxExtraTrickForces

--- SET_DISABLE_BREAKING
function Global.SetDisableBreaking(object, toggle)
	return _in(0x5CEC1A84620E7D5B, object, toggle)
end

--- SET_DISABLE_DECAL_RENDERING_THIS_FRAME
function Global.SetDisableDecalRenderingThisFrame()
	return _in(0x4B5CFC83122DF602)
end
Global.N_0x4b5cfc83122df602 = Global.SetDisableDecalRenderingThisFrame

--- Prevents a vehicle from exploding upon sustaining body damage from physical collisions. This can be used to increase the durability of vehicles in high-impact scenarios, such as races or combat situations, by preventing them from being destroyed due to collision-induced body damage.
-- For helicopters, you might want to check [`SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE`](#\_0xEDBC8405B3895CC9) instead.
-- ```
-- NativeDB Introduced: v1290
-- ```
-- @param vehicle The vehicle to apply this setting to.
-- @param disableExplode `true` to disable explosion from body damage on collision; `false` to allow explosions as normal.
function Global.SetDisableExplodeFromBodyDamageOnCollision(vehicle, disableExplode)
	return _in(0x26E13D440E7F6064, vehicle, disableExplode)
end
Global.N_0x26e13d440e7f6064 = Global.SetDisableExplodeFromBodyDamageOnCollision

--- SET_DISABLE_FRAG_DAMAGE
function Global.SetDisableFragDamage(object, toggle)
	return _in(0x01BA3AED21C16CFB, object, toggle)
end

--- Prevents a helicopter from exploding due to relatively minor body damage. This native can be particularly useful in gameplay scenarios or missions where helicopters are subject to damage that would not realistically cause an explosion, ensuring they remain operational unless subjected to more significant damage.
-- ```
-- NativeDB Introduced: v1103
-- ```
-- @param helicopter The helicopter to apply this setting to.
-- @param disableExplode `true` to disable explosion from body damage on collision; `false` to allow explosions as normal.
function Global.SetDisableHeliExplodeFromBodyDamage(helicopter, disableExplode)
	return _in(0xEDBC8405B3895CC9, helicopter, disableExplode)
end
Global.N_0xedbc8405b3895cc9 = Global.SetDisableHeliExplodeFromBodyDamage

--- Disables wings for `Deluxo` and `Oppressor MK II`. For the Deluxo, it retracts the wings immediately, preventing flight. For the Oppressor Mk II, the wings retract after landing and take-off is not possible, though it can still glide if launched into the air.
-- @param vehicle The vehicle to which the toggle will be applied.
-- @param toggle Boolean parameter where setting `true` disables the vehicle's wings, preventing flight. Setting it to `false` allows the vehicle to fly as usual.
function Global.SetDisableHoverModeFlight(vehicle, toggle)
	return _in(0x2D55FE374D5FDB91, vehicle, toggle)
end
Global.SetVehicleHoverTransformActive = Global.SetDisableHoverModeFlight

--- SET_DISABLE_PRETEND_OCCUPANTS
function Global.SetDisablePretendOccupants(vehicle, toggle)
	return _in(0x25367DE49D64CF16, vehicle, toggle)
end
Global.N_0x25367de49d64cf16 = Global.SetDisablePretendOccupants

--- SET_DISABLE_RANDOM_TRAINS_THIS_FRAME
function Global.SetDisableRandomTrainsThisFrame(toggle)
	return _in(0xD4B8E3D1917BC86B, toggle)
end
Global.N_0xd4b8e3d1917bc86b = Global.SetDisableRandomTrainsThisFrame
Global.SetSomethingMultiplierThisFrame = Global.SetDisableRandomTrainsThisFrame

--- _SET_DISABLE_SUPERDUMMY_MODE
function Global.SetDisableSuperdummyMode(vehicle, p1)
	return _in(0xB088E9A47AE6EDD5, vehicle, p1)
end
Global.N_0xb088e9a47ae6edd5 = Global.SetDisableSuperdummyMode

--- Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
-- ```
-- NativeDB Introduced: v1365
-- ```
function Global.SetDisableTurretMovementThisFrame(vehicle, turretIdx)
	return _in(0xE615BB7A7752C76A, vehicle, turretIdx)
end
Global.N_0xe615bb7a7752c76a = Global.SetDisableTurretMovementThisFrame
Global.SetDisableTurretMovement = Global.SetDisableTurretMovementThisFrame

--- SET_DISABLE_VEHICLE_ENGINE_FIRES
function Global.SetDisableVehicleEngineFires(vehicle, toggle)
	return _in(0x91A0BD635321F145, vehicle, toggle)
end
Global.N_0x91a0bd635321f145 = Global.SetDisableVehicleEngineFires

--- True stops vtols from switching modes. Doesn't stop the sound though.
-- ```
-- ```
-- NativeDB Introduced: v1290
function Global.SetDisableVehicleFlightNozzlePosition(vehicle, direction)
	return _in(0xCE2B43770B655F8F, vehicle, direction)
end
Global.SetPlaneVtolAnimationDisabled = Global.SetDisableVehicleFlightNozzlePosition

--- SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE
function Global.SetDisableVehiclePetrolTankDamage(vehicle, toggle)
	return _in(0x37C8252A7C92D017, vehicle, toggle)
end

--- SET_DISABLE_VEHICLE_PETROL_TANK_FIRES
function Global.SetDisableVehiclePetrolTankFires(vehicle, toggle)
	return _in(0x465BF26AB9684352, vehicle, toggle)
end
Global.N_0x465bf26ab9684352 = Global.SetDisableVehiclePetrolTankFires

--- NativeDB Introduced: v1604
function Global.SetDisableVehicleUnk(toggle)
	return _in(0x143921E45EC44D62, toggle)
end

--- NativeDB Introduced: v1604
function Global.SetDisableVehicleUnk_2(toggle)
	return _in(0x211E95CE9903940C, toggle)
end

--- R\* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
-- @param vehicle The vehicle to toggle this for.
-- @param toggle True disables the collision, false enables the collision
function Global.SetDisableVehicleWindowCollisions(vehicle, toggle)
	return _in(0x1087BC8EC540DAEB, vehicle, toggle)
end
Global.N_0x1087bc8ec540daeb = Global.SetDisableVehicleWindowCollisions

--- This native sets the app id for the discord rich presence implementation.
-- @param appId A valid Discord API App Id, can be generated at https://discordapp.com/developers/applications/
function Global.SetDiscordAppId(appId)
	return _in(0x6a02254d, _ts(appId))
end

--- Sets a clickable button to be displayed in a player's Discord rich presence.
-- @param index The button index, either 0 or 1.
-- @param label The text to display on the button.
-- @param url The URL to open when clicking the button. This has to start with `fivem://connect/` or `https://`.
function Global.SetDiscordRichPresenceAction(index, label, url)
	return _in(0xcbbc3fac, index, _ts(label), _ts(url))
end

--- This native sets the image asset for the discord rich presence implementation.
-- @param assetName The name of a valid asset registered on Discordapp's developer dashboard. note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
function Global.SetDiscordRichPresenceAsset(assetName)
	return _in(0x53dfd530, _ts(assetName))
end

--- This native sets the small image asset for the discord rich presence implementation.
-- @param assetName The name of a valid asset registered on Discordapp's developer dashboard. Note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
function Global.SetDiscordRichPresenceAssetSmall(assetName)
	return _in(0xf61d04c4, _ts(assetName))
end

--- This native sets the hover text of the small image asset for the discord rich presence implementation.
-- @param text Text to be displayed when hovering over small image asset. Note that you must also set a valid small image asset using the SET_DISCORD_RICH_PRESENCE_ASSET_SMALL native.
function Global.SetDiscordRichPresenceAssetSmallText(text)
	return _in(0x35e62b6a, _ts(text))
end

--- This native sets the hover text of the image asset for the discord rich presence implementation.
-- @param text Text to be displayed when hovering over image asset. Note that you must also set a valid image asset using the SET_DISCORD_RICH_PRESENCE_ASSET native.
function Global.SetDiscordRichPresenceAssetText(text)
	return _in(0xb029d2fa, _ts(text))
end

--- SET_DISPATCH_COPS_FOR_PLAYER
function Global.SetDispatchCopsForPlayer(player, toggle)
	return _in(0xDB172424876553F4, player, toggle)
end

--- SET_DISPATCH_IDEAL_SPAWN_DISTANCE
function Global.SetDispatchIdealSpawnDistance(p0)
	return _in(0x6FE601A64180D423, p0)
end

--- SET_DISPATCH_SPAWN_LOCATION
function Global.SetDispatchSpawnLocation(x, y, z)
	return _in(0xD10F442036302D50, x, y, z)
end
Global.N_0xd10f442036302d50 = Global.SetDispatchSpawnLocation

--- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS
function Global.SetDispatchTimeBetweenSpawnAttempts(p0, p1)
	return _in(0x44F7CBC1BEB3327D, p0, p1)
end

--- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER
function Global.SetDispatchTimeBetweenSpawnAttemptsMultiplier(p0, p1)
	return _in(0x48838ED9937A15D1, p0, p1)
end

--- Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
function Global.SetDistantCarsEnabled(toggle)
	return _in(0xF796359A959DF65D, toggle)
end
Global.N_0xf796359a959df65d = Global.SetDistantCarsEnabled
Global.DisplayDistantVehicles = Global.SetDistantCarsEnabled

--- This is a NOP function. It does nothing at all.
function Global.SetDitchPoliceModels(toggle)
	return _in(0x42CBE54462D92634, toggle)
end

--- Sets the on-screen drawing origin for draw-functions in world coordinates.
-- The effect can be reset by calling [`CLEAR_DRAW_ORIGIN`](#\_0xFF0B610F6BE0D7AF) and is limited to 32 different origins each frame.
function Global.SetDrawOrigin(x, y, z, p3)
	return _in(0xAA0008F3BBB8F416, x, y, z, p3)
end

--- NativeDB Introduced: v2372
function Global.SetDriftTyresEnabled(vehicle, toggle)
	return _in(0x5AC79C98C5C17F05, vehicle, toggle)
end

--- SET_DRIVE_TASK_CRUISE_SPEED
function Global.SetDriveTaskCruiseSpeed(driver, cruiseSpeed)
	return _in(0x5C9B84BD7D31D908, driver, cruiseSpeed)
end

--- This native is used to set the driving style for specific ped.
-- Driving styles id seems to be:
-- 786468
-- 262144
-- 786469
-- http://gtaforums.com/topic/822314-guide-driving-styles/
function Global.SetDriveTaskDrivingStyle(ped, drivingStyle)
	return _in(0xDACE1BE37D88AF67, ped, drivingStyle)
end

--- SET_DRIVE_TASK_MAX_CRUISE_SPEED
function Global.SetDriveTaskMaxCruiseSpeed(p0, p1)
	return _in(0x404A5AA9B9F0B746, p0, p1)
end

--- For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
function Global.SetDrivebyTaskTarget(shootingPed, targetPed, targetVehicle, x, y, z)
	return _in(0xE5B302114D8162EE, shootingPed, targetPed, targetVehicle, x, y, z)
end

--- The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
function Global.SetDriverAbility(driver, ability)
	return _in(0xB195FFA8042FC5C3, driver, ability)
end

--- range 0.0f - 1.0f
function Global.SetDriverAggressiveness(driver, aggressiveness)
	return _in(0xA731F608CA104E3C, driver, aggressiveness)
end

--- Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
function Global.SetDriverRacingModifier(driver, modifier)
	return _in(0xDED5AF5A0EA4B297, driver, modifier)
end
Global.N_0xded5af5a0ea4b297 = Global.SetDriverRacingModifier

--- Navigates the specified DUI browser to a different URL.
-- @param duiObject The DUI browser handle.
-- @param url The new URL.
function Global.SetDuiUrl(duiObject, url)
	return _in(0xf761d9f3, duiObject, _ts(url))
end

--- Retunes a named static emitter to the specified station
function Global.SetEmitterRadioStation(emitterName, radioStation)
	return _in(0xACF57305B12AF907, _ts(emitterName), _ts(radioStation))
end

--- Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
-- ```
-- ```
-- NativeDB Introduced: v1604
function Global.SetEnableArenaPropPhysics(entity, toggle, p2)
	return _in(0x911024442F4898F0, entity, toggle, p2)
end
Global.N_0x911024442f4898f0 = Global.SetEnableArenaPropPhysics

--- NativeDB Introduced: v1604
function Global.SetEnableArenaPropPhysicsOnPed(entity, toggle, p2, ped)
	return _in(0xB20834A7DD3D8896, entity, toggle, p2, ped)
end
Global.N_0xb20834a7dd3d8896 = Global.SetEnableArenaPropPhysicsOnPed

--- Used with [SET_ENABLE_HANDCUFFS](#\_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
function Global.SetEnableBoundAnkles(ped, toggle)
	return _in(0xC52E0F855C58FC2E, ped, toggle)
end

--- ped can not pull out a weapon when true
function Global.SetEnableHandcuffs(ped, toggle)
	return _in(0xDF1AF8B5D56542FA, ped, toggle)
end

--- SET_ENABLE_PED_ENVEFF_SCALE
function Global.SetEnablePedEnveffScale(ped, toggle)
	return _in(0xD2C5AA0C0E8D0F1E, ped, toggle)
end

--- Enables diving motion when underwater.
function Global.SetEnableScuba(ped, toggle)
	return _in(0xF99F62004024D506, ped, toggle)
end

--- NativeDB Introduced: v1493
function Global.SetEnableScubaGearLight(ped, toggle)
	return _in(0xEE2476B9EE4A094F, ped, toggle)
end

--- Enable/Disables global slipstream physics
function Global.SetEnableVehicleSlipstreaming(toggle)
	return _in(0xE6C0C80B8C867537, toggle)
end
Global.N_0xe6c0c80b8c867537 = Global.SetEnableVehicleSlipstreaming

--- This native sets the entity's alpha level.
-- @param entity The entity to change the alpha for.
-- @param alphaLevel The alpha level ranges from 0 to 255, but changes occur every 20% (every 51).
-- @param skin Whether or not to change the alpha of the entity's skin.
function Global.SetEntityAlpha(entity, alphaLevel, skin)
	return _in(0x44A0870B7E92D7C0, entity, alphaLevel, skin)
end

--- SET_ENTITY_ALWAYS_PRERENDER
function Global.SetEntityAlwaysPrerender(entity, toggle)
	return _in(0xACAD101E1FB66689, entity, toggle)
end

--- NativeDB Introduced: v2372
function Global.SetEntityAngularVelocity(entity, x, y, z)
	return _in(0x8339643499D1222E, entity, x, y, z)
end
Global.N_0x8339643499d1222e = Global.SetEntityAngularVelocity

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetEntityAnimCurrentTime(entity, animDictionary, animName, time)
	return _in(0x4487C259F0F70977, entity, _ts(animDictionary), _ts(animName), time)
end

--- SET_ENTITY_ANIM_SPEED
function Global.SetEntityAnimSpeed(entity, animDictionary, animName, speedMultiplier)
	return _in(0x28D1A16553C51776, entity, _ts(animDictionary), _ts(animName), speedMultiplier)
end

--- Assigns an existing entity to be owned by the current script. If the entity was not owned by a script yet, this also means the entity will remain persistent until released.
-- Note that this is not needed right after creating an entity as a script-created entity will automatically be assigned.
-- @param entity An entity handle.
-- @param scriptHostObject Whether or not to assign script info to this entity, if set to false the entity will only be protected from despawning locally.
-- @param bGrabFromOtherScript Changes the entity so it's owned by the current script if the entity is already a mission entity. This will only work on entities the machine has control of (non-remote entities).
function Global.SetEntityAsMissionEntity(entity, scriptHostObject, bGrabFromOtherScript)
	return _in(0xAD738C3085FE7E11, entity, scriptHostObject, bGrabFromOtherScript)
end

--- Marks the specified entity (ped, vehicle or object) as no longer needed.
-- Entities marked as no longer needed, will be deleted as the engine sees fit.
function Global.SetEntityAsNoLongerNeeded(entity)
	return _in(0xB736A491E64A32CF, _ii(entity) --[[ may be optional ]])
end

--- SET_ENTITY_CAN_BE_DAMAGED
function Global.SetEntityCanBeDamaged(entity, toggle)
	return _in(0x1760FFA8AB074D66, entity, toggle)
end

--- SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP
function Global.SetEntityCanBeDamagedByRelationshipGroup(entity, bCanBeDamaged, relGroup)
	return _in(0xE22D8FDE858B8119, entity, bCanBeDamaged, relGroup)
end

--- Sets whether the entity can be targeted without being in line-of-sight.
function Global.SetEntityCanBeTargetedWithoutLos(entity, toggle)
	return _in(0xD3997889736FD899, entity, toggle)
end

--- True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
function Global.SetEntityCleanupByEngine(entity, toggle)
	return _in(0x3910051CCECDB00C, entity, toggle)
end
Global.N_0x3910051ccecdb00c = Global.SetEntityCleanupByEngine
Global.SetEntityRegister = Global.SetEntityCleanupByEngine
Global.SetEntitySomething = Global.SetEntityCleanupByEngine

--- SET_ENTITY_COLLISION
function Global.SetEntityCollision(entity, toggle, keepPhysics)
	return _in(0x1A9205C1B9EE827F, entity, toggle, keepPhysics)
end

--- SET_ENTITY_COMPLETELY_DISABLE_COLLISION
function Global.SetEntityCompletelyDisableCollision(entity, toggle, keepPhysics)
	return _in(0x9EBC85ED0FFFE51C, entity, toggle, keepPhysics)
end
Global.N_0x9ebc85ed0fffe51c = Global.SetEntityCompletelyDisableCollision
Global.SetEntityCollision_2 = Global.SetEntityCompletelyDisableCollision

--- Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
-- @param entity The entity to change coordinates for.
-- @param xPos The X coordinate.
-- @param yPos The Y coordinate.
-- @param zPos The Z coordinate, ground level.
-- @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @param deadFlag Whether to disable physics for dead peds, too, and not just living peds.
-- @param ragdollFlag A special flag used for ragdolling peds.
-- @param clearArea Whether to clear any entities in the target area.
function Global.SetEntityCoords(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
	return _in(0x06843DA7060A026B, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
end

--- Teleports an entity to specified coordinates directly, with options to maintain certain behaviors post-teleportation.
-- **Note**:
-- *   This native allows precise placement of entities without the usual adjustments for collision or interaction with the environment that may occur with other teleportation natives.
-- *   The `keepTasks` and `keepIK` parameters are specifically useful for maintaining the current state of a ped, ensuring actions or animations are not abruptly stopped due to the teleportation.
-- *   Setting `doWarp` to `false` is useful when simulating continuous movement or when the entity should interact with its immediate surroundings upon arrival.
-- @param entity The entity to reposition.
-- @param x X coordinate for the new position.
-- @param y Y coordinate for the new position.
-- @param z Z coordinate for the new position.
-- @param keepTasks If `true`, the tasks currently assigned to the ped are not removed upon teleportation. Applies only to peds.
-- @param keepIK If `true`, the Inverse Kinematics (IK) on the ped are not reset upon teleportation. Applies only to peds.
-- @param doWarp If `false`, the entity will maintain continuous motion and will not clear contacts nor create space for itself upon teleportation.
function Global.SetEntityCoordsNoOffset(entity, x, y, z, keepTasks, keepIK, doWarp)
	return _in(0x239A3351AC1DA385, entity, x, y, z, keepTasks, keepIK, doWarp)
end

--- SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET
function Global.SetEntityCoordsWithoutPlantsReset(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
	return _in(0x621873ECE1178967, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
end
Global.SetEntityCoords_2 = Global.SetEntityCoordsWithoutPlantsReset

--- SET_ENTITY_*
function Global.SetEntityDecalsDisabled(entity, p1)
	return _in(0x2C2E3DC128F44309, entity, p1)
end
Global.N_0x2c2e3dc128f44309 = Global.SetEntityDecalsDisabled

--- Draws an outline around a given entity. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param entity A valid entity handle.
-- @param enabled Whether or not to draw an outline.
function Global.SetEntityDrawOutline(entity, enabled)
	return _in(0x76180407, entity, enabled)
end

--- Sets color for entity outline. `255, 0, 255, 255` by default.
-- @param red Red component of color.
-- @param green Green component of color.
-- @param blue Blue component of color.
-- @param alpha Alpha component of color, ignored for shader `0`.
function Global.SetEntityDrawOutlineColor(red, green, blue, alpha)
	return _in(0xb41a56c2, red, green, blue, alpha)
end

--- Sets variant of shader that will be used to draw entity outline.
-- Variants are:
-- *   **0**: Default value, gauss shader.
-- *   **1**: 2px wide solid color outline.
-- *   **2**: Fullscreen solid color except for entity.
-- @param shader An outline shader variant.
function Global.SetEntityDrawOutlineShader(shader)
	return _in(0x5261a01a, shader)
end

--- SET_ENTITY_DYNAMIC
function Global.SetEntityDynamic(entity, toggle)
	return _in(0x1718DE8E3F2823CA, entity, toggle)
end

--- SET_ENTITY_FOR_NULL_CONV_PED
function Global.SetEntityForNullConvPed(speakerConversationIndex, entity)
	return _in(0x892B6AB8F33606F5, speakerConversationIndex, entity)
end
Global.N_0x892b6ab8f33606f5 = Global.SetEntityForNullConvPed

--- SET_ENTITY_HAS_GRAVITY
function Global.SetEntityHasGravity(entity, toggle)
	return _in(0x4A4722448F18EEF5, entity, toggle)
end

--- Set the heading of an entity in degrees also known as "Yaw".
-- @param entity The entity to set the heading for.
-- @param heading The heading in degrees.
function Global.SetEntityHeading(entity, heading)
	return _in(0x8E2530AA8ADA980E, entity, heading)
end

--- health >= 0
-- male ped ~= 100 - 200
-- female ped ~= 0 - 100
-- ```
-- NativeDB Added Parameter 3: int p2
-- ```
function Global.SetEntityHealth(entity, health)
	return _in(0x6B76DC1F3AE6E6A3, entity, health)
end

--- SET_ENTITY_ICON_COLOR
function Global.SetEntityIconColor(entity, red, green, blue, alpha)
	return _in(0x1D5F595CCAE2E238, entity, red, green, blue, alpha)
end

--- SET_ENTITY_ICON_VISIBILITY
function Global.SetEntityIconVisibility(entity, toggle)
	return _in(0xE0E8BEECCA96BA31, entity, toggle)
end

--- Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
-- If you use this for a ped and you want Ragdoll to stay enabled, then do:
-- *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
-- Use this if you want to get the invincibility status:
-- bool IsPedInvincible(Ped ped)
-- {
-- auto addr = getScriptHandleBaseAddress(ped);
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x188);
-- return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
-- }
-- return false;
-- }
function Global.SetEntityInvincible(entity, toggle)
	return _in(0x3882114BDE571AD4, entity, toggle)
end

--- SET_ENTITY_IS_TARGET_PRIORITY
function Global.SetEntityIsTargetPriority(entity, p1, p2)
	return _in(0xEA02E132F5C68722, entity, p1, p2)
end

--- SET_ENTITY_LIGHTS
function Global.SetEntityLights(entity, toggle)
	return _in(0x7CFBA6A80BDF3874, entity, toggle)
end

--- Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
-- Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
-- ```
-- NativeDB Added Parameter 3: Any p2
-- ```
function Global.SetEntityLoadCollisionFlag(entity, toggle)
	return _in(0x0DC7CABAB1E9B67E, entity, toggle)
end

--- Sets the provided entity not visible for yourself for the current frame.
function Global.SetEntityLocallyInvisible(entity)
	return _in(0xE135A9FF3F5D05D8, entity)
end

--- Sets the provided entity visible for yourself for the current frame.
-- @param entity The entity to set locally visible.
function Global.SetEntityLocallyVisible(entity)
	return _in(0x241E289B5C059EDC, entity)
end

--- LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
function Global.SetEntityLodDist(entity, value)
	return _in(0x5927F96A78577363, entity, value)
end

--- Sets an entity's matrix. Arguments are in the same order as with GET_ENTITY_MATRIX.
-- @param entity A valid entity handle.
function Global.SetEntityMatrix(entity, forwardX, forwardY, forwardZ, rightX, rightY, rightZ, upX, upY, upZ, atX, atY, atZ)
	return _in(0xfb0639b, entity, forwardX, forwardY, forwardZ, rightX, rightY, rightZ, upX, upY, upZ, atX, atY, atZ)
end

--- For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849
function Global.SetEntityMaxHealth(entity, value)
	return _in(0x166E7CF68597D8B5, entity, value)
end

--- SET_ENTITY_MAX_SPEED
-- @param entity Entity to apply a maximum speed on
-- @param speed Speed in meters per second
function Global.SetEntityMaxSpeed(entity, speed)
	return _in(0x0E46A3FCBDE2A1B1, entity, speed)
end

--- SET_ENTITY_MOTION_BLUR
function Global.SetEntityMotionBlur(entity, toggle)
	return _in(0x295D82A8559F9150, entity, toggle)
end

--- Calling this function disables collision between two entities.
-- The importance of the order for entity1 and entity2 is unclear.
-- The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
function Global.SetEntityNoCollisionEntity(entity1, entity2, thisFrameOnly)
	return _in(0xA53ED5520C07654A, entity1, entity2, thisFrameOnly)
end

--- SET_ENTITY_ONLY_DAMAGED_BY_PLAYER
function Global.SetEntityOnlyDamagedByPlayer(entity, toggle)
	return _in(0x79F020FF9EDC0748, entity, toggle)
end

--- SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP
function Global.SetEntityOnlyDamagedByRelationshipGroup(entity, p1, relationshipHash)
	return _in(0x7022BD828FA0B082, entity, p1, _ch(relationshipHash))
end

--- _SET_ENTITY_PROOF_UNK
function Global.SetEntityProofUnk(entity, toggle)
	return _in(0x15F944730C832252, entity, toggle)
end
Global.N_0x15f944730c832252 = Global.SetEntityProofUnk

--- Enable / disable each type of damage.
-- --------------
-- p7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);
function Global.SetEntityProofs(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)
	return _in(0xFAEE099C6F890BB8, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)
end

--- w is the correct parameter name!
function Global.SetEntityQuaternion(entity, x, y, z, w)
	return _in(0x77B21BE7AC540F07, entity, x, y, z, w)
end

--- SET_ENTITY_RECORDS_COLLISIONS
function Global.SetEntityRecordsCollisions(entity, toggle)
	return _in(0x0A50A1EEDAD01E65, entity, toggle)
end

--- SET_ENTITY_RENDER_SCORCHED
function Global.SetEntityRenderScorched(entity, toggle)
	return _in(0x730F5F8D3F0F2050, entity, toggle)
end

--- Sets the rotation of a specified entity in the game world.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param entity The entity to rotate.
-- @param pitch The pitch (X-axis) rotation in degrees.
-- @param roll The roll (Y-axis) rotation in degrees.
-- @param yaw The yaw (Z-axis) rotation in degrees.
-- @param rotationOrder Specifies the order in which yaw, pitch, and roll are applied, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9) for the available rotation orders.
-- @param bDeadCheck Usually set to `true`. Determines whether to check if the entity is dead before applying the rotation.
function Global.SetEntityRotation(entity, pitch, roll, yaw, rotationOrder, bDeadCheck)
	return _in(0x8524A8B0171D5E07, entity, pitch, roll, yaw, rotationOrder, bDeadCheck)
end

--- Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
-- 0 = green
-- 1 = red
-- 2 = yellow
-- 3 = reset changes
-- changing lights may not change the behavior of vehicles
function Global.SetEntityTrafficlightOverride(entity, state)
	return _in(0x57C5DB656185EAC4, entity, state)
end

--- Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
function Global.SetEntityVelocity(entity, x, y, z)
	return _in(0x1C99BB7B6E96D16F, entity, x, y, z)
end

--- Toggle the visibility of a given entity.
-- @param entity The entity to change the visibility of
-- @param toggle Whether or not the entity will be visible
-- @param unk Always 0 in scripts
function Global.SetEntityVisible(entity, toggle, unk)
	return _in(0xEA1C610A04DB6BBB, entity, toggle, unk)
end

--- SET_ENTITY_VISIBLE_IN_CUTSCENE
function Global.SetEntityVisibleInCutscene(p0, p1, p2)
	return _in(0xE0031D3C8F36AB82, p0, p1, p2)
end

--- SET_EVERYONE_IGNORE_PLAYER
function Global.SetEveryoneIgnorePlayer(player, toggle)
	return _in(0x8EEDA153AD141BA4, player, toggle)
end

--- Groups found in the scripts used with this native:
-- "AMMUNATION",
-- "QUARRY",
-- "Triathlon_1",
-- "Triathlon_2",
-- "Triathlon_3"
function Global.SetExclusiveScenarioGroup(scenarioGroup)
	return _in(0x535E97E1F7FC0C6A, _ts(scenarioGroup))
end

--- SET_EXPLOSIVE_AMMO_THIS_FRAME
function Global.SetExplosiveAmmoThisFrame(player)
	return _in(0xA66C71C98D5F2CFB, player)
end

--- SET_EXPLOSIVE_MELEE_THIS_FRAME
function Global.SetExplosiveMeleeThisFrame(player)
	return _in(0xFF1BED81BFDC0FE0, player)
end

--- _SET_EXTRA_TIMECYCLE_MODIFIER
function Global.SetExtraTimecycleModifier(modifierName)
	return _in(0x5096FD9CCB49056D, _ts(modifierName))
end

--- Clipsets:
-- "facials@gen_female@base"
-- "facials@gen_male@base"
-- "facials@p_m_zero@base"
-- Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#\_0xFFC24B988B938B38):
-- "mood_drunk\_1"
-- "mood_stressed\_1"
-- "mood_happy\_1"
-- "mood_talking\_1"
-- ```
-- NativeDB Introduced: v1493
-- ```
function Global.SetFacialClipsetOverride(ped, animDict)
	return _in(0x5687C7F05B39E401, ped, _ts(animDict))
end
Global.N_0x5687c7f05b39e401 = Global.SetFacialClipsetOverride

--- SET_FACIAL_IDLE_ANIM_OVERRIDE
function Global.SetFacialIdleAnimOverride(ped, animName, animDict)
	return _in(0xFFC24B988B938B38, ped, _ts(animName), _ts(animDict))
end

--- Sets whether the game should fade in after the player dies or is arrested.
function Global.SetFadeInAfterDeathArrest(toggle)
	return _in(0xDA66D2796BA33F12, toggle)
end

--- SET_FADE_IN_AFTER_LOAD
function Global.SetFadeInAfterLoad(toggle)
	return _in(0xF3D78F59DFE18D79, toggle)
end

--- Sets whether the game should fade out after the player is arrested.
function Global.SetFadeOutAfterArrest(toggle)
	return _in(0x1E0B4DC0D990A4E7, toggle)
end

--- Sets whether the game should fade out after the player dies.
function Global.SetFadeOutAfterDeath(toggle)
	return _in(0x4A18E01DF2C87B86, toggle)
end

--- Overrides the position of the main player blip for the current frame.
-- @param x X coord of the position.
-- @param y Y coord of the position.
function Global.SetFakePausemapPlayerPositionThisFrame(x, y)
	return _in(0x77E2DD177910E1CF, x, y)
end
Global.N_0x77e2dd177910e1cf = Global.SetFakePausemapPlayerPositionThisFrame
Global.SetPlayerBlipPositionThisFrame = Global.SetFakePausemapPlayerPositionThisFrame

--- Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
-- Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
function Global.SetFakeWantedLevel(fakeWantedLevel)
	return _in(0x1454F2448DE30163, fakeWantedLevel)
end

--- SET_FAR_DRAW_VEHICLES
function Global.SetFarDrawVehicles(toggle)
	return _in(0x26324F33423F3CC3, toggle)
end

--- SET_FIRE_AMMO_THIS_FRAME
function Global.SetFireAmmoThisFrame(player)
	return _in(0x11879CDD803D30F4, player)
end

--- SET_FIRE_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.SetFireSpreadRate(p0)
	return _in(0x8F390AC4155099BA, p0)
end

--- SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE
function Global.SetFirstPersonAimCamNearClipThisUpdate(distance)
	return _in(0x0AF7B437918103B3, distance)
end
Global.N_0x0af7b437918103b3 = Global.SetFirstPersonAimCamNearClipThisUpdate
Global.SetFirstPersonCamNearClip = Global.SetFirstPersonAimCamNearClipThisUpdate

--- SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
function Global.SetFirstPersonAimCamZoomFactor(zoomFactor)
	return _in(0x70894BD0915C5BCA, zoomFactor)
end
Global.N_0x70894bd0915c5bca = Global.SetFirstPersonAimCamZoomFactor

--- _SET_FIRST_PERSON_CAM_PITCH_RANGE
function Global.SetFirstPersonCamPitchRange(minAngle, maxAngle)
	return _in(0xBCFC632DB7673BF0, minAngle, maxAngle)
end
Global.N_0xbcfc632db7673bf0 = Global.SetFirstPersonCamPitchRange

--- Purpose of p0 and p1 unknown.
function Global.SetFlash(p0, p1, fadeIn, duration, fadeOut)
	return _in(0x0AB84296FED9CFC6, p0, p1, fadeIn, duration, fadeOut)
end

--- Enables/disables flashlight on ped's weapon.
-- ```
-- NativeDB Introduced: v2060
-- ```
function Global.SetFlashLightEnabled(ped, toggle)
	return _in(0x988DB6FE9B3AC000, ped, toggle)
end

--- SET_FLASH_LIGHT_FADE_DISTANCE
function Global.SetFlashLightFadeDistance(distance)
	return _in(0xCEA66DAD478CD39B, distance, _ri)
end

--- Allows Weapon-Flashlight beams to stay visible while moving. Normally it only stays on while aiming.
-- @param state On/Off
function Global.SetFlashLightKeepOnWhileMoving(state)
	return _in(0x7635b349, state)
end

--- SET_FLOATING_HELP_TEXT_SCREEN_POSITION
function Global.SetFloatingHelpTextScreenPosition(hudIndex, x, y)
	return _in(0x7679CC1BCEBE3D4C, hudIndex, x, y)
end
Global.N_0x7679cc1bcebe3d4c = Global.SetFloatingHelpTextScreenPosition

--- ### Arrow Positions
-- *   0 = Off / No arrow
-- *   1 = Top
-- *   2 = Left
-- *   3 = Bottom
-- *   4 = Right
-- ### Note
-- Any numeric value greater than 4 will result in a right arrow (Index 4)
-- ### Important
-- Needs to be called every frame
-- ![Preview of the provided example code](https://forum.cfx.re/uploads/default/original/4X/7/f/3/7f319bc93c3a00b8829bd4ac8dddc235fbf3a9ef.png)
-- @param hudIndex The hud index for the floating help message
-- @param style Value 0 won't show an arrow at all. Values 1, 2 and -2 will display an arrow.
-- @param hudColor https://docs.fivem.net/docs/game-references/hud-colors/
-- @param alpha Value for the help box opacity, from 0-255. Anything greater will simply ignore the alpha value. Always 191 in R\* scripts.
-- @param arrowPosition Used to set the arrow positon. No value will hide the arrow
-- @param boxOffset Offset for the floating help box. Note: Arrow stays fixed
function Global.SetFloatingHelpTextStyle(hudIndex, style, hudColor, alpha, arrowPosition, boxOffset)
	return _in(0x788E7FD431BD67F1, hudIndex, style, hudColor, alpha, arrowPosition, boxOffset)
end
Global.N_0x788e7fd431bd67f1 = Global.SetFloatingHelpTextStyle

--- SET_FLOATING_HELP_TEXT_TO_ENTITY
function Global.SetFloatingHelpTextToEntity(hudIndex, entity, offsetX, offsetY)
	return _in(0xB094BC1DB4018240, hudIndex, entity, offsetX, offsetY)
end
Global.N_0xb094bc1db4018240 = Global.SetFloatingHelpTextToEntity

--- SET_FLOATING_HELP_TEXT_WORLD_POSITION
function Global.SetFloatingHelpTextWorldPosition(hudIndex, x, y, z)
	return _in(0x784BA7E0ECEB4178, hudIndex, x, y, z)
end
Global.N_0x784ba7e0eceb4178 = Global.SetFloatingHelpTextWorldPosition

--- SET_FLY_CAM_COORD_AND_CONSTRAIN
function Global.SetFlyCamCoordAndConstrain(cam, x, y, z)
	return _in(0xC91C6C55199308CA, cam, x, y, z)
end
Global.N_0xc91c6c55199308ca = Global.SetFlyCamCoordAndConstrain

--- SET_FLY_CAM_HORIZONTAL_RESPONSE
function Global.SetFlyCamHorizontalResponse(cam, p1, p2, p3)
	return _in(0x503F5920162365B2, cam, p1, p2, p3)
end
Global.N_0x503f5920162365b2 = Global.SetFlyCamHorizontalResponse

--- SET_FLY_CAM_MAX_HEIGHT
function Global.SetFlyCamMaxHeight(cam, height)
	return _in(0xF9D02130ECDD1D77, cam, height)
end
Global.N_0xf9d02130ecdd1d77 = Global.SetFlyCamMaxHeight
Global.SetCameraRange = Global.SetFlyCamMaxHeight

--- _SET_FLY_CAM_VERTICAL_SPEED_MULTIPLIER
function Global.SetFlyCamVerticalSpeedMultiplier(cam, p1, p2, p3)
	return _in(0xE827B9382CFB41BA, cam, p1, p2, p3)
end
Global.N_0xe827b9382cfb41ba = Global.SetFlyCamVerticalSpeedMultiplier

--- Sets some in-game parameters which is used for checks is ped needs to fly through windscreen after a crash.
-- @param vehMinSpeed Vehicle minimum speed (default 35.0).
-- @param unkMinSpeed Unknown minimum speed (default 40.0).
-- @param unkModifier Unknown modifier (default 17.0).
-- @param minDamage Minimum damage (default 2000.0).
-- @return A bool indicating if parameters was set successfully.
function Global.SetFlyThroughWindscreenParams(vehMinSpeed, unkMinSpeed, unkModifier, minDamage)
	return _in(0x4d3118ed, vehMinSpeed, unkMinSpeed, unkModifier, minDamage, _r)
end

--- It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
function Global.SetFocusEntity(entity)
	return _in(0x198F77705FA0931D, entity)
end

--- Override the area where the camera will render the terrain.
-- p3, p4 and p5 are usually set to 0.0
function Global.SetFocusPosAndVel(x, y, z, offsetX, offsetY, offsetZ)
	return _in(0xBB7454BAFF08FE25, x, y, z, offsetX, offsetY, offsetZ)
end
Global.SetFocusArea = Global.SetFocusPosAndVel

--- From the scripts:
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
function Global.SetFollowPedCamThisUpdate(camName, p1)
	return _in(0x44A113DD6FFC48D1, _ts(camName), p1, _r)
end
Global.SetFollowPedCamCutsceneChat = Global.SetFollowPedCamThisUpdate

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function Global.SetFollowPedCamViewMode(viewMode)
	return _in(0x5A4F9EDF1673F704, viewMode)
end

--- NativeDB Introduced: v1365
-- @param seatIndex See [IS_TURRET_SEAT](#\_0xE33FFA906CE74880)
function Global.SetFollowTurretSeatCam(seatIndex)
	return _in(0x5C90CAB09951A12F, seatIndex)
end
Global.N_0x5c90cab09951a12f = Global.SetFollowTurretSeatCam

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function Global.SetFollowVehicleCamViewMode(viewMode)
	return _in(0xAC253D7842768F48, viewMode)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function Global.SetFollowVehicleCamZoomLevel(zoomLevel)
	return _in(0x19464CB6E4078C8A, zoomLevel)
end

--- SET_FORCE_FOOTSTEP_UPDATE
function Global.SetForceFootstepUpdate(ped, toggle)
	return _in(0x129466ED55140F8D, ped, toggle)
end
Global.N_0x129466ed55140f8d = Global.SetForceFootstepUpdate

--- SET_FORCE_HD_VEHICLE
function Global.SetForceHdVehicle(vehicle, toggle)
	return _in(0x97CE68CB032583F0, vehicle, toggle)
end
Global.N_0x97ce68cb032583f0 = Global.SetForceHdVehicle

--- SET_FORCE_OBJECT_THIS_FRAME
function Global.SetForceObjectThisFrame(x, y, z, p3)
	return _in(0xF538081986E49E9D, x, y, z, p3)
end

--- Forces footstep tracks on all surfaces.
-- USE_/USING_*
function Global.SetForcePedFootstepsTracks(toggle)
	return _in(0xAEEDAD1420C65CC0, toggle)
end

--- NativeDB Introduced: v1180
function Global.SetForcePlayerToJump(player)
	return _in(0xA1183BCFEE0F93D1, player)
end
Global.N_0xa1183bcfee0f93d1 = Global.SetForcePlayerToJump

--- SET_FORCE_STEP_TYPE
function Global.SetForceStepType(ped, p1, type, p3)
	return _in(0xCB968B53FC7F916D, ped, p1, type, p3)
end
Global.N_0xcb968b53fc7f916d = Global.SetForceStepType

--- Forces vehicle trails on all surfaces.
-- USE_/USING_*
function Global.SetForceVehicleTrails(toggle)
	return _in(0x4CC7F0FEA5283FE0, toggle)
end

--- X,Y position of boat is frozen in place when anchored and its engine disabled, only the Z value changes. Requires 0xE3EBAAE484798530 to be set to true.
-- SET_FORCED_ZENITH_QUADTREE?
function Global.SetForcedBoatLocationWhenAnchored(vehicle, toggle)
	return _in(0xB28B1FE5BFADD7F5, vehicle, toggle)
end
Global.N_0xb28b1fe5bfadd7f5 = Global.SetForcedBoatLocationWhenAnchored

--- 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
function Global.SetForkliftForkHeight(vehicle, height)
	return _in(0x37EBBF3117BD6A25, vehicle, height)
end
Global.N_0x37ebbf3117bd6a25 = Global.SetForkliftForkHeight

--- SET_FRONTEND_ACTIVE
function Global.SetFrontendActive(active)
	return _in(0x745711A75AB09277, active)
end

--- Allows the radio to be played in the frontend.
function Global.SetFrontendRadioActive(active)
	return _in(0xF7F26C6E9CC9EBB8, active)
end

--- Sets fuel consumption rate multiplier for all vehicles operated by a player. This is a way to slow down or speed up fuel consumption for all vehicles at a time. If 0 - it practically means that fuel will not be consumed. By default is set to 1.
-- When the multiplier is set to 1 a default 65 litre gas tank car with average fuel consumption can stay idle for ~16.67 hours or run with max RPM for ~2.5 hours.
-- To customize fuel consumption per vehicle / vehicle class use [`SET_HANDLING_FLOAT`](#\_0x90DD01C)/[`SET_VEHICLE_HANDLING_FLOAT`](#\_0x488C86D2) natives with `fieldName` equal to `fPetrolConsumptionRate`. By default it is set to 0.5 for all vehicles.
-- @param multiplier Global fuel consumption multiplier. If negative - 0 will be used instead.
function Global.SetFuelConsumptionRateMultiplier(multiplier)
	return _in(0x845f3e5c, multiplier)
end

--- Turns on and off fuel consumption in all vehicles operated by a player. NPC operated vehicles will not consume fuel to avoid traffic disruptions.
-- The default Gta5 behaviour is fuel consumption turned off.
-- @param state True to turn on. False to turn off.
function Global.SetFuelConsumptionState(state)
	return _in(0x81dad03e, state)
end

--- Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
function Global.SetGamePaused(toggle)
	return _in(0x577D1284D6873711, toggle)
end

--- SET_GAME_PAUSES_FOR_STREAMING
function Global.SetGamePausesForStreaming(toggle)
	return _in(0x717CD6E6FAEBBEDC, toggle)
end

--- SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE
function Global.SetGameplayCamFollowPedThisUpdate(ped)
	return _in(0x8BBACBF51DA047A8, ped)
end
Global.N_0x8bbacbf51da047a8 = Global.SetGameplayCamFollowPedThisUpdate

--- Sets gameplay camera to hash
-- ```
-- ```
-- NativeDB Introduced: v1180
function Global.SetGameplayCamHash(camName)
	return _in(0x425A920FDB9A0DDA, _ts(camName))
end
Global.N_0x425a920fdb9a0dda = Global.SetGameplayCamHash

--- _SET_GAMEPLAY_CAM_RAW_PITCH
function Global.SetGameplayCamRawPitch(pitch)
	return _in(0x759E13EBC1C15C5A, pitch)
end

--- Does nothing
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.SetGameplayCamRawYaw(yaw)
	return _in(0x103991D4A307D472, yaw)
end

--- Sets the camera position relative to heading in float from -360 to +360.
-- Heading is alwyas 0 in aiming camera.
function Global.SetGameplayCamRelativeHeading(heading)
	return _in(0xB4EC2312F4E5B1F1, heading)
end

--- This native sets the camera's pitch (rotation on the x-axis).
-- @param angle the angle to rotate the camera by
-- @param scalingFactor always seems to be set to 1.0 in native calls
function Global.SetGameplayCamRelativePitch(angle, scalingFactor)
	return _in(0x6D0858B8EDFD2B7D, angle, scalingFactor)
end

--- _SET_GAMEPLAY_CAM_RELATIVE_ROTATION
function Global.SetGameplayCamRelativeRotation(roll, pitch, yaw)
	return _in(0x48608C3464F58AB4, roll, pitch, yaw)
end
Global.N_0x48608c3464f58ab4 = Global.SetGameplayCamRelativeRotation

--- Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
function Global.SetGameplayCamShakeAmplitude(amplitude)
	return _in(0xA87E00932DB4D85D, amplitude)
end

--- From b617 scripts:
-- CAM::_21E253A7F8DA5DFB("DINGHY");
-- CAM::_21E253A7F8DA5DFB("ISSI2");
-- CAM::_21E253A7F8DA5DFB("SPEEDO");
function Global.SetGameplayCamVehicleCamera(vehicleName)
	return _in(0x21E253A7F8DA5DFB, _ts(vehicleName))
end
Global.N_0x21e253a7f8da5dfb = Global.SetGameplayCamVehicleCamera

--- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA_NAME
function Global.SetGameplayCamVehicleCameraName(vehicleModel)
	return _in(0x11FA5D3479C7DD47, _ch(vehicleModel))
end
Global.N_0x11fa5d3479c7dd47 = Global.SetGameplayCamVehicleCameraName

--- SET_GAMEPLAY_COORD_HINT
function Global.SetGameplayCoordHint(x, y, z, duration, blendOutDuration, blendInDuration, unk)
	return _in(0xD51ADCD2D8BC0FB3, x, y, z, duration, blendOutDuration, blendInDuration, unk)
end

--- p6 & p7 - possibly length or time
function Global.SetGameplayEntityHint(entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)
	return _in(0x189E955A8313E298, entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)
end

--- _SET_GAMEPLAY_HINT_ANIM_CLOSEUP
function Global.SetGameplayHintAnimCloseup(toggle)
	return _in(0xE3433EADAAF7EE40, toggle)
end
Global.GetIsMultiplayerBrief = Global.SetGameplayHintAnimCloseup
Global.N_0xe3433eadaaf7ee40 = Global.SetGameplayHintAnimCloseup

--- _SET_GAMEPLAY_HINT_ANIM_OFFSETX
function Global.SetGameplayHintAnimOffsetx(xOffset)
	return _in(0x5D7B620DAE436138, xOffset)
end
Global.N_0x5d7b620dae436138 = Global.SetGameplayHintAnimOffsetx

--- _SET_GAMEPLAY_HINT_ANIM_OFFSETY
function Global.SetGameplayHintAnimOffsety(yOffset)
	return _in(0xC92717EF615B6704, yOffset)
end
Global.N_0xc92717ef615b6704 = Global.SetGameplayHintAnimOffsety

--- SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET
function Global.SetGameplayHintBaseOrbitPitchOffset(value)
	return _in(0xD1F8363DFAD03848, value)
end
Global.N_0xd1f8363dfad03848 = Global.SetGameplayHintBaseOrbitPitchOffset
Global.SetGameplayHintAngle = Global.SetGameplayHintBaseOrbitPitchOffset

--- SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR
function Global.SetGameplayHintFollowDistanceScalar(value)
	return _in(0xF8BDBF3D573049A1, value)
end
Global.N_0xf8bdbf3d573049a1 = Global.SetGameplayHintFollowDistanceScalar
Global.SetGameplayHintAnimOffsetz = Global.SetGameplayHintFollowDistanceScalar

--- SET_GAMEPLAY_HINT_FOV
function Global.SetGameplayHintFov(FOV)
	return _in(0x513403FB9C56211F, FOV)
end

--- SET_GAMEPLAY_OBJECT_HINT
function Global.SetGameplayObjectHint(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x83E87508A2CA2AC6, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- SET_GAMEPLAY_PED_HINT
function Global.SetGameplayPedHint(p0, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration)
	return _in(0x2B486269ACD548D3, p0, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration)
end

--- Focuses the camera on the specified vehicle.
-- @param vehicle The vehicle to focus on.
-- @param offsetX Position offset X
-- @param offsetY Position offset Y
-- @param offsetZ Position offset Z
-- @param time Effect duration
-- @param easeInTime Effect fade in duration
-- @param easeOutTime EFfect fade out duration
function Global.SetGameplayVehicleHint(vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
	return _in(0xA2297E18F3E71C2E, vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
end

--- SET_GARBAGE_TRUCKS
function Global.SetGarbageTrucks(toggle)
	return _in(0x2AFD795EEAC8D30D, toggle)
end

--- Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
-- 'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
-- @param alpha A value between 1 and 254. Default: 128
function Global.SetGhostedEntityAlpha(alpha)
	return _in(0x658500AE6D723A7E, alpha)
end
Global.N_0x658500ae6d723a7e = Global.SetGhostedEntityAlpha

--- Birds will try to reach the given height.
function Global.SetGlobalMinBirdFlightHeight(height)
	return _in(0x6C6B148586F934F7, height)
end

--- SET_GPS_ACTIVE
function Global.SetGpsActive(active)
	return _in(0x3BD3F52BA9B1E4E8, active)
end

--- SET_GPS_CUSTOM_ROUTE_RENDER
-- @param radarThickness The width of the GPS route on the radar
-- @param mapThickness The width of the GPS route on the map
function Global.SetGpsCustomRouteRender(toggle, radarThickness, mapThickness)
	return _in(0x900086F371220B6F, toggle, radarThickness, mapThickness)
end
Global.N_0x900086f371220b6f = Global.SetGpsCustomRouteRender

--- SET_GPS_DISABLED_ZONE
function Global.SetGpsDisabledZone(x1, y1, z1, x2, y2, z2)
	return _in(0xDC20483CD3DD5201, x1, y1, z1, x2, y2, z2)
end

--- Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
-- You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
-- **Setting a waypoint at the same coordinate:**
-- Disabled Zone: <https://i.imgur.com/P9VUuxM.png>
-- Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
-- @param x1 X coordinate of first vector.
-- @param y1 Y coordinate of first vector.
-- @param z1 Z coordinate of first vector.
-- @param x2 X coordinate of second vector.
-- @param y2 Y coordinate of second vector.
-- @param z2 Z coordinate of second vector.
-- @param index Index of zone.
function Global.SetGpsDisabledZoneAtIndex(x1, y1, z1, x2, y2, z2, index)
	return _in(0xD0BC1C6FB18EE154, x1, y1, z1, x2, y2, z2, index)
end
Global.N_0xd0bc1c6fb18ee154 = Global.SetGpsDisabledZoneAtIndex

--- Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
-- Doesn't seem like the flags are actually read by the game at all.
function Global.SetGpsFlags(p0, p1)
	return _in(0x5B440763A4C8D15B, p0, p1)
end

--- SET_GPS_FLASHES
function Global.SetGpsFlashes(toggle)
	return _in(0x320D0E0D936A0E9B, toggle)
end

--- SET_GPS_MULTI_ROUTE_RENDER
function Global.SetGpsMultiRouteRender(toggle)
	return _in(0x3DDA37128DD1ACA8, toggle)
end
Global.N_0x3dda37128dd1aca8 = Global.SetGpsMultiRouteRender

--- level can be from 0 to 3
-- 0: 9.8
-- 1: 2.4
-- 2: 0.1 - very low
-- 3: 0.0
function Global.SetGravityLevel(level)
	return _in(0x740E14FAD5842351, level)
end

--- 0: Freedom to move
-- 1: Circle Around Leader
-- 2: Alternative Circle Around Leader
-- 3: Line, with Leader at center
-- 4: Arrow Formation
-- 5: "V" Formation
-- 6: Line Follow Formation
-- 7: Single Formation
-- 8: Pairwise
function Global.SetGroupFormation(groupId, formationType)
	return _in(0xCE2F5FC3AF7E8C1E, groupId, formationType)
end

--- SET_GROUP_FORMATION_SPACING
function Global.SetGroupFormationSpacing(groupId, p1, p2, p3)
	return _in(0x1D9D45004C28C916, groupId, p1, p2, p3)
end

--- Sets the range at which members will automatically leave the group.
function Global.SetGroupSeparationRange(groupHandle, separationRange)
	return _in(0x4102C7858CFEE4E4, groupHandle, separationRange)
end

--- _SET_HANDLE_ROCKSTAR_MESSAGE_VIA_SCRIPT
function Global.SetHandleRockstarMessageViaScript(toggle)
	return _in(0xBFA0A56A817C6C7D, toggle)
end
Global.N_0xbfa0a56a817c6c7d = Global.SetHandleRockstarMessageViaScript

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingField('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The value to set.
function Global.SetHandlingField(vehicle, class_, fieldName, value)
	return _in(0xfe8064e3, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingFloat('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The floating-point value to set.
function Global.SetHandlingFloat(vehicle, class_, fieldName, value)
	return _in(0x90dd01c, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The integer value to set.
function Global.SetHandlingInt(vehicle, class_, fieldName, value)
	return _in(0x8ab3f46c, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingVector('AIRTUG', 'CHandlingData', 'vecCentreOfMassOffset', vector3(0.0, 0.0, -5.0))`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The Vector3 value to set.
function Global.SetHandlingVector(vehicle, class_, fieldName, value)
	return _in(0x7f9d543, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets profile setting 866
-- SET_*
function Global.SetHasContentUnlocksFlags(value)
	return _in(0xDAC073C7901F9E15, value)
end
Global.N_0xdac073c7901f9e15 = Global.SetHasContentUnlocksFlags

--- SET_HD_AREA
function Global.SetHdArea(x, y, z, radius)
	return _in(0xB85F26619073E775, x, y, z, radius)
end

--- Preview: https://gfycat.com/MaleRareAmazonparrot
-- @param id From 0 to 3.
function Global.SetHeadBlendPaletteColor(ped, r, g, b, id)
	return _in(0xCC9682B8951C5229, ped, r, g, b, id)
end
Global.N_0xcc9682b8951c5229 = Global.SetHeadBlendPaletteColor

--- SET_HEALTH_HUD_DISPLAY_VALUES
function Global.SetHealthHudDisplayValues(health, capacity, wasAdded)
	return _in(0x3F5CC444DCAAA8F2, health, capacity, wasAdded)
end
Global.N_0x3f5cc444dcaaa8f2 = Global.SetHealthHudDisplayValues

--- Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
-- this native works on planes to?
function Global.SetHeliBladesFullSpeed(vehicle)
	return _in(0xA178472EBB8AE60D, vehicle)
end

--- Sets the speed of the helicopter blades in percentage of the full speed.
-- vehicleHandle: The helicopter.
-- speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
function Global.SetHeliBladesSpeed(vehicle, speed)
	return _in(0xFD280B4D7F3ABC4D, vehicle, speed)
end

--- Set a specific offset for helis chasing target in combat
-- ```
-- NativeDB Introduced: v1180
-- ```
-- @param vehicle Helicopter for which the combat offset is being set.
-- @param x Offset along the X-axis (left/right) relative to the helicopter's current position and orientation
-- @param y Offset along the Y-axis (forward/backward) relative to the helicopter's current position and orientation
-- @param z Offset along the Z-axis (up/down) relative to the helicopter's current position and orientation.
function Global.SetHeliCombatOffset(vehicle, x, y, z)
	return _in(0x0A3F820A9A9A9AC5, vehicle, x, y, z)
end
Global.N_0x0a3f820a9a9a9ac5 = Global.SetHeliCombatOffset

--- _SET_HELI_MAIN_ROTOR_HEALTH
function Global.SetHeliMainRotorHealth(vehicle, health)
	return _in(0x4056EA1105F5ABD7, vehicle, health)
end
Global.N_0x4056ea1105f5abd7 = Global.SetHeliMainRotorHealth

--- SET_HELI_TAIL_EXPLODE_THROW_DASHBOARD
function Global.SetHeliTailExplodeThrowDashboard(vehicle, p1)
	return _in(0x3EC8BF18AA453FE9, vehicle, p1)
end
Global.WasCounterActivated = Global.SetHeliTailExplodeThrowDashboard
Global.N_0x3ec8bf18aa453fe9 = Global.SetHeliTailExplodeThrowDashboard

--- _SET_HELI_TAIL_ROTOR_HEALTH
function Global.SetHeliTailRotorHealth(vehicle, health)
	return _in(0xFE205F38AAA58E5B, vehicle, health)
end
Global.N_0xfe205f38aaa58e5b = Global.SetHeliTailRotorHealth

--- SET_HELI_TURBULENCE_SCALAR
function Global.SetHeliTurbulenceScalar(vehicle, p1)
	return _in(0xE6F13851780394DA, vehicle, p1)
end
Global.N_0xe6f13851780394da = Global.SetHeliTurbulenceScalar

--- value between 0.0 and 1.0
function Global.SetHelicopterRollPitchYawMult(helicopter, multiplier)
	return _in(0x6E0859B530A365CC, helicopter, multiplier)
end

--- _SET_HELP_MESSAGE_TEXT_STYLE
function Global.SetHelpMessageTextStyle(style, hudColor, alpha, p3, p4)
	return _in(0xB9C362BABECDDC7A, style, hudColor, alpha, p3, p4)
end
Global.N_0xb9c362babecddc7a = Global.SetHelpMessageTextStyle

--- SET_HIDOF_OVERRIDE
function Global.SetHidofOverride(p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
	return _in(0xBA3D65906822BED5, p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
end
Global.N_0xba3d65906822bed5 = Global.SetHidofOverride
Global.SetHidofEnvBlurParams = Global.SetHidofOverride

--- SET_HIGH_FALL_TASK
function Global.SetHighFallTask(ped, duration, p2, p3)
	return _in(0x8C825BDC7741D37C, ped, duration, p2, p3)
end

--- SET_HORN_ENABLED
function Global.SetHornEnabled(vehicle, toggle)
	return _in(0x76D683C108594D0E, vehicle, toggle)
end

--- This native allows opening or closing the wings of the Deluxo/Oppressor. For the Deluxo, wing deployment depends on sufficient altitude.
-- @param vehicle The vehicle to which the ratio will be applied.
-- @param ratio Between 0.0 and 1.0. 0.0 is wings closed, 1.0 is wings open.
function Global.SetHoverModeWingRatio(vehicle, ratio)
	return _in(0x70A252F60A3E036B, vehicle, ratio)
end
Global.SetSpecialflightWingRatio = Global.SetHoverModeWingRatio

--- See [SET_SCRIPT_GFX_ALIGN](#\_0xB8A850F20A067EB6) for details about how gfx align works.
-- @param id The hud component id.
-- @param horizontalAlign The horizontal alignment.
-- @param verticalAlign The vertical alignment.
function Global.SetHudComponentAlign(id, horizontalAlign, verticalAlign)
	return _in(0xeed219f2, id, horizontalAlign, verticalAlign)
end

--- SET_HUD_COMPONENT_POSITION
function Global.SetHudComponentPosition(id, x, y)
	return _in(0xAABB1F56E2A17CED, id, x, y)
end

--- SET_HUD_COMPONENT_SIZE
-- @param id The hud component id.
-- @param x New size X.
-- @param y New size Y.
function Global.SetHudComponentSize(id, x, y)
	return _in(0x7644a9fa, id, x, y)
end

--- _SET_HYDRAULIC_RAISED
function Global.SetHydraulicRaised(vehicle, toggle)
	return _in(0x28B18377EB6E25F6, vehicle, toggle)
end
Global.N_0x28b18377eb6e25f6 = Global.SetHydraulicRaised

--- _SET_HYDRAULIC_WHEEL_STATE
function Global.SetHydraulicWheelState(vehicle, state)
	return _in(0x8EA86DF356801C7D, vehicle, state)
end
Global.N_0x8ea86df356801c7d = Global.SetHydraulicWheelState

--- Sets vehicle wheel hydraulic states transition. Known states:
-- 0 - reset
-- 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
-- 2 - jump using wheel
function Global.SetHydraulicWheelStateTransition(vehicle, wheelId, state, value, p4)
	return _in(0xC24075310A8B9CD1, vehicle, wheelId, state, value, p4)
end
Global.N_0xc24075310a8b9cd1 = Global.SetHydraulicWheelStateTransition

--- Works only on vehicles that support hydraulic.
function Global.SetHydraulicWheelValue(vehicle, wheelId, value)
	return _in(0x84EA99C62CB3EF0C, vehicle, wheelId, value)
end
Global.N_0x84ea99c62cb3ef0c = Global.SetHydraulicWheelValue
Global.SetHydraulicState = Global.SetHydraulicWheelValue

--- SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS
function Global.SetIgnoreLowPriorityShockingEvents(player, toggle)
	return _in(0x596976B02B6B5700, player, toggle)
end

--- SET_IGNORE_NO_GPS_FLAG
function Global.SetIgnoreNoGpsFlag(toggle)
	return _in(0x72751156E7678833, toggle)
end

--- See: SET_BLIP_ROUTE
function Global.SetIgnoreSecondaryRouteNodes(toggle)
	return _in(0x1FC289A0C3FF470F, toggle)
end
Global.N_0x1fc289a0c3ff470f = Global.SetIgnoreSecondaryRouteNodes

--- SET_IK_TARGET
function Global.SetIkTarget(ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
	return _in(0xC32779C16FCEECD9, ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
end

--- SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE
function Global.SetInVehicleCamStateThisUpdate(p0, p1)
	return _in(0xE9EA16D6E54CDCA4, p0, p1)
end
Global.N_0xe9ea16d6e54cdca4 = Global.SetInVehicleCamStateThisUpdate

--- SET_INCIDENT_REQUESTED_UNITS
function Global.SetIncidentRequestedUnits(incidentId, dispatchService, numUnits)
	return _in(0xB08B85D860E7BA3C, incidentId, dispatchService, numUnits)
end
Global.N_0xb08b85d860e7ba3c = Global.SetIncidentRequestedUnits

--- SET_INCIDENT_*
function Global.SetIncidentUnk(incidentId, p1)
	return _in(0xD261BA3E7E998072, incidentId, p1)
end
Global.N_0xd261ba3e7e998072 = Global.SetIncidentUnk

--- SET_INITIAL_PLAYER_STATION
function Global.SetInitialPlayerStation(radioStation)
	return _in(0x88795F13FACDA88D, _ts(radioStation))
end

--- SET_INPUT_EXCLUSIVE
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function Global.SetInputExclusive(padIndex, control)
	return _in(0xEDE476E5EE29EDB1, padIndex, control)
end

--- Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
function Global.SetInstancePriorityHint(flag)
	return _in(0xC5F0A8EBD3F361CE, flag)
end
Global.SetUnkMapFlag = Global.SetInstancePriorityHint

--- Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
-- @param toggle toggles the instance priority mode
function Global.SetInstancePriorityMode(toggle)
	return _in(0x9BAE5AD2508DF078, toggle)
end
Global.EnableMpDlcMaps = Global.SetInstancePriorityMode
Global.UseFreemodeMapBehavior = Global.SetInstancePriorityMode
Global.LowerMapPropDensity = Global.SetInstancePriorityMode

--- SET_INTERIOR_ACTIVE
function Global.SetInteriorActive(interiorID, toggle)
	return _in(0xE37B76C387BE28ED, interiorID, toggle)
end

--- _SET_INTERIOR_ENTITY_SET_COLOR
function Global.SetInteriorEntitySetColor(interior, entitySetName, color)
	return _in(0xC1F1920BAF281317, interior, _ts(entitySetName), color)
end
Global.SetInteriorPropColor = Global.SetInteriorEntitySetColor

--- SET_INTERIOR_PORTAL_CORNER_POSITION
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param cornerIndex Interior corner index.
function Global.SetInteriorPortalCornerPosition(interiorId, portalIndex, cornerIndex, posX, posY, posZ)
	return _in(0x87f43553, interiorId, portalIndex, cornerIndex, posX, posY, posZ)
end

--- SET_INTERIOR_PORTAL_ENTITY_FLAG
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param entityIndex Portal entity index.
-- @param flag New flag value.
function Global.SetInteriorPortalEntityFlag(interiorId, portalIndex, entityIndex, flag)
	return _in(0x8349cd76, interiorId, portalIndex, entityIndex, flag)
end

--- SET_INTERIOR_PORTAL_FLAG
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param flag New flag value.
function Global.SetInteriorPortalFlag(interiorId, portalIndex, flag)
	return _in(0x88b2355e, interiorId, portalIndex, flag)
end

--- SET_INTERIOR_PORTAL_ROOM_FROM
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param roomFrom New value.
function Global.SetInteriorPortalRoomFrom(interiorId, portalIndex, roomFrom)
	return _in(0x298fc783, interiorId, portalIndex, roomFrom)
end

--- SET_INTERIOR_PORTAL_ROOM_TO
-- @param interiorId The target interior.
-- @param portalIndex Interior portal index.
-- @param roomTo New value.
function Global.SetInteriorPortalRoomTo(interiorId, portalIndex, roomTo)
	return _in(0x58982680, interiorId, portalIndex, roomTo)
end

--- SET_INTERIOR_ROOM_EXTENTS
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
function Global.SetInteriorRoomExtents(interiorId, roomIndex, bbMinX, bbMinY, bbMinZ, bbMaxX, bbMaxY, bbMaxZ)
	return _in(0x4fdcf51e, interiorId, roomIndex, bbMinX, bbMinY, bbMinZ, bbMaxX, bbMaxY, bbMaxZ)
end

--- SET_INTERIOR_ROOM_FLAG
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
-- @param flag New flag value.
function Global.SetInteriorRoomFlag(interiorId, roomIndex, flag)
	return _in(0x5518d60b, interiorId, roomIndex, flag)
end

--- SET_INTERIOR_ROOM_TIMECYCLE
-- @param interiorId The target interior.
-- @param roomIndex Interior room index.
-- @param timecycleHash Timecycle hash.
function Global.SetInteriorRoomTimecycle(interiorId, roomIndex, timecycleHash)
	return _in(0x31c9a848, interiorId, roomIndex, timecycleHash)
end

--- NativeDB Introduced: v2372
function Global.SetInteriorZoomLevelDecreased(toggle)
	return _in(0x7EC8ABA5E74B3D7A, toggle)
end
Global.N_0x7ec8aba5e74b3d7a = Global.SetInteriorZoomLevelDecreased

--- NativeDB Introduced: v1493
function Global.SetInteriorZoomLevelIncreased(toggle)
	return _in(0x504DFE62A1692296, toggle)
end
Global.N_0x504dfe62a1692296 = Global.SetInteriorZoomLevelIncreased

--- Enables the specified island. For more information, see islandhopper.meta
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param islandName The name of the island to be enabled or disabled.
-- @param toggle A boolean value where `true` enables the island and `false` disables it.
function Global.SetIslandEnabled(islandName, toggle)
	return _in(0x9A9D1BA639675CF1, _ts(islandName), toggle)
end
Global.SetIslandHopperEnabled = Global.SetIslandEnabled

--- SET_LAST_DRIVEN_VEHICLE
function Global.SetLastDrivenVehicle(vehicle)
	return _in(0xACFB2463CC22BED2, vehicle)
end
Global.N_0xacfb2463cc22bed2 = Global.SetLastDrivenVehicle

--- Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
-- ```
-- NativeDB Introduced: v1604
-- ```
function Global.SetLaunchControlEnabled(toggle)
	return _in(0xAA6A6098851C396F, toggle)
end
Global.N_0xaa6a6098851c396f = Global.SetLaunchControlEnabled

--- SET_LIGHTS_CUTOFF_DISTANCE_TWEAK
function Global.SetLightsCutoffDistanceTweak(distance)
	return _in(0xBC3CCA5844452B06, distance)
end
Global.N_0xbc3cca5844452b06 = Global.SetLightsCutoffDistanceTweak

--- Formerly incorrectly named `USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR` due to incorrect treatment of console vs. PC native registration.
-- Native name guessed through ordering.
-- ```
-- NativeDB Added Parameter 2: BOOL p1
-- ```
function Global.SetLocalPlayerAsGhost(toggle)
	return _in(0x5FFE9B4144F9712F, toggle)
end

--- SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS
function Global.SetLocalPlayerCanCollectPortablePickups(p0)
	return _in(0x78857FC65CADB909, p0)
end
Global.N_0x78857fc65cadb909 = Global.SetLocalPlayerCanCollectPortablePickups

--- Maximum amount of pickup models that can be disallowed is 30.
-- SET_LOCAL_PLAYER_*
function Global.SetLocalPlayerCanUsePickupsWithThisModel(modelHash, toggle)
	return _in(0x88EAEC617CD26926, _ch(modelHash), toggle)
end
Global.N_0x88eaec617cd26926 = Global.SetLocalPlayerCanUsePickupsWithThisModel

--- SET_LOCAL_PLAYER_INVISIBLE_LOCALLY
function Global.SetLocalPlayerInvisibleLocally(p0)
	return _in(0xE5F773C1A1D9D168, p0)
end

--- SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE
function Global.SetLocalPlayerVisibleInCutscene(p0, p1)
	return _in(0xD1065D68947E7B6E, p0, p1)
end

--- SET_LOCAL_PLAYER_VISIBLE_LOCALLY
function Global.SetLocalPlayerVisibleLocally(p0)
	return _in(0x7619364C82D3BF14, p0)
end

--- _SET_MAIN_PLAYER_BLIP_COLOUR
function Global.SetMainPlayerBlipColour(color)
	return _in(0x7B21E0BB01E8224A, color)
end
Global.N_0x7b21e0bb01e8224a = Global.SetMainPlayerBlipColour

--- Sets whether or not `SHUTDOWN_LOADING_SCREEN` automatically shuts down the NUI frame for the loading screen. If this is enabled,
-- you will have to manually invoke `SHUTDOWN_LOADING_SCREEN_NUI` whenever you want to hide the NUI loading screen.
-- @param manualShutdown TRUE to manually shut down the loading screen NUI.
function Global.SetManualShutdownLoadingScreenNui(manualShutdown)
	return _in(0x1722c938, manualShutdown)
end

--- Sets values to the zoom level data by index.
-- @param index Zoom level index.
-- @param zoomScale fZoomScale value.
-- @param zoomSpeed fZoomSpeed value.
-- @param scrollSpeed fScrollSpeed value.
-- @param tilesX vTiles X.
-- @param tilesY vTiles Y.
function Global.SetMapZoomDataLevel(index, zoomScale, zoomSpeed, scrollSpeed, tilesX, tilesY)
	return _in(0x447c718e, index, zoomScale, zoomSpeed, scrollSpeed, tilesX, tilesY)
end

--- Possible p0 values:
-- "prologue"
-- "Prologue_Main"
function Global.SetMapdatacullboxEnabled(name, toggle)
	return _in(0xAF12610C644A35C9, _ts(name), toggle)
end
Global.N_0xaf12610c644a35c9 = Global.SetMapdatacullboxEnabled

--- SET_MAX_ARMOUR_HUD_DISPLAY
function Global.SetMaxArmourHudDisplay(maximumValue)
	return _in(0x06A320535F5F0248, maximumValue)
end
Global.N_0x06a320535f5f0248 = Global.SetMaxArmourHudDisplay

--- SET_MAX_HEALTH_HUD_DISPLAY
function Global.SetMaxHealthHudDisplay(maximumValue)
	return _in(0x975D66A0BC17064C, maximumValue)
end
Global.N_0x975d66a0bc17064c = Global.SetMaxHealthHudDisplay

--- SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER
function Global.SetMaxNumPortablePickupsCarriedByPlayer(modelHash, p1)
	return _in(0x0BF3B3BD47D79C08, _ch(modelHash), p1)
end
Global.N_0x0bf3b3bd47d79c08 = Global.SetMaxNumPortablePickupsCarriedByPlayer

--- SET_MAX_WANTED_LEVEL
function Global.SetMaxWantedLevel(maxWantedLevel)
	return _in(0xAA5F02DB48D704B9, maxWantedLevel)
end

--- If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so..
function Global.SetMicrophonePosition(p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)
	return _in(0xB6AE90EDDE95C762, p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)
end

--- Overrides how many real ms are equal to one game minute.
-- A setter for [`GetMillisecondsPerGameMinute`](#\_0x2F8B4D1C595B11DB).
-- @param value Milliseconds.
function Global.SetMillisecondsPerGameMinute(value)
	return _in(0x36ca2554, value)
end

--- SET_MINIGAME_IN_PROGRESS
function Global.SetMinigameInProgress(toggle)
	return _in(0x19E00D7322C6F85B, toggle)
end

--- Argument must be 0.0f or above 38.0f, or it will be ignored.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.SetMinimapAltitudeIndicatorLevel(altitude, p1)
	return _in(0xD201F3FF917A506D, altitude, p1)
end
Global.SetMinimapAttitudeIndicatorLevel = Global.SetMinimapAltitudeIndicatorLevel

--- SET_MINIMAP_BLOCK_WAYPOINT
function Global.SetMinimapBlockWaypoint(toggle)
	return _in(0x58FADDED207897DC, toggle)
end

--- Sets the type for the minimap blip clipping object to be either rectangular or rounded.
-- @param type 0 for rectangular, 1 for rounded.
function Global.SetMinimapClipType(type)
	return _in(0xb8b4490c, type)
end

--- This native is used to colorize/toggle certain map components like the army base.
-- Component IDs 6 through 14 are used by the freemode event King of the Castle in GTA Online.
-- ### An incomplete list of component IDs:
-- *   **0**: Los Santos International Airport yellow runway markers
-- *   **1**: Sandy Shores Airfield yellow runway markers
-- *   **2**: McKenzie Field yellow runway markers
-- *   **6**: Vespucci Beach lifeguard building
-- *   **7**: Top level zone of Alien Camp (Hippy Camp)
-- *   **8**: Paleto Bay fire station drill tower
-- *   **9** Land Act Dam tower
-- *   **10** Pala Springs Aerial Tramway
-- *   **11** Galileo Observatory power unit
-- *   **12** Small zone (empty "interior") near Central Los Santos Medical Center
-- *   **13** Richman Mansion grotto
-- *   **14** 2 Alien Camp (Hippy Camp) circles
-- *   **15** Fort Zancudo
-- @param componentID The component ID to change.
-- @param toggle True to enable/colorize, false to disable.
-- @param hudColor The hudcolor index, the list of hud colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/).
-- @return Hardcoded to always return 1 (int)
function Global.SetMinimapComponent(componentID, toggle, hudColor)
	return _in(0x75A9A10948D1DEA6, componentID, toggle, hudColor, _ri)
end

--- Overrides the minimap component data (from `common:/data/ui/frontend.xml`) for a specified component.
-- @param name The name of the minimap component to override.
-- @param alignX Equivalent to the `alignX` field in `frontend.xml`.
-- @param alignY Equivalent to the `alignY` field in `frontend.xml`.
-- @param posX Equivalent to the `posX` field in `frontend.xml`.
-- @param posY Equivalent to the `posY` field in `frontend.xml`.
-- @param sizeX Equivalent to the `sizeX` field in `frontend.xml`.
-- @param sizeY Equivalent to the `sizeY` field in `frontend.xml`.
function Global.SetMinimapComponentPosition(name, alignX, alignY, posX, posY, sizeX, sizeY)
	return _in(0x3e882b23, _ts(name), _ts(alignX), _ts(alignY), posX, posY, sizeX, sizeY)
end

--- SET_MINIMAP_FOW_REVEAL_COORDINATE
function Global.SetMinimapFowRevealCoordinate(x, y, z)
	return _in(0x0923DBF87DFF735E, x, y, z)
end
Global.N_0x0923dbf87dff735e = Global.SetMinimapFowRevealCoordinate

--- Not much is known so far on what it does *exactly*.
-- All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
-- You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
-- You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
-- Use [`SET_MINIMAP_GOLF_COURSE_OFF()`](#\_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
-- @param hole The ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.
function Global.SetMinimapGolfCourse(hole)
	return _in(0x71BDB63DBAF8DA59, hole)
end
Global.N_0x71bdb63dbaf8da59 = Global.SetMinimapGolfCourse

--- SET_MINIMAP_GOLF_COURSE_OFF
function Global.SetMinimapGolfCourseOff()
	return _in(0x35EDD5B2E3FF01C0)
end
Global.N_0x35edd5b2e3ff01c0 = Global.SetMinimapGolfCourseOff

--- If true, the entire map will be revealed.
function Global.SetMinimapHideFow(toggle)
	return _in(0xF8DEE0A5600CBB93, toggle)
end
Global.N_0xf8dee0a5600cbb93 = Global.SetMinimapHideFow
Global.SetMinimapRevealed = Global.SetMinimapHideFow

--- Toggles the North Yankton map
function Global.SetMinimapInPrologue(toggle)
	return _in(0x9133955F1A2DA957, toggle)
end
Global.SetDrawMapVisible = Global.SetMinimapInPrologue
Global.SetNorthYanktonMap = Global.SetMinimapInPrologue

--- SET_MINIMAP_IN_SPECTATOR_MODE
function Global.SetMinimapInSpectatorMode(toggle, ped)
	return _in(0x1A5CD7752DD28CD3, toggle, ped)
end
Global.KeyHudColour = Global.SetMinimapInSpectatorMode

--- Sets the display info for a minimap overlay.
-- @param miniMap The minimap overlay ID.
-- @param x The X position for the overlay. This is equivalent to a game coordinate X.
-- @param y The Y position for the overlay. This is equivalent to a game coordinate Y, except that it's inverted (gfxY = -gameY).
-- @param xScale The X scale for the overlay. This is equivalent to the Flash \_xscale property, therefore 100 = 100%.
-- @param yScale The Y scale for the overlay. This is equivalent to the Flash \_yscale property.
-- @param alpha The alpha value for the overlay. This is equivalent to the Flash \_alpha property, therefore 100 = 100%.
function Global.SetMinimapOverlayDisplay(miniMap, x, y, xScale, yScale, alpha)
	return _in(0x6a48b3ca, miniMap, x, y, xScale, yScale, alpha)
end

--- Enables or disables the sonar sweep animation on the minimap.
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param toggle A boolean value where `true` activates the sonar sweep animation on the minimap, and `false` turns it off.
-- @return This native does not return any value.
function Global.SetMinimapSonarSweep(toggle)
	return _in(0x6B50FC8749632EC1, toggle)
end
Global.SetMinimapSonarEnabled = Global.SetMinimapSonarSweep

--- If true, the player can't save the game.
-- If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
-- ^ also, if the mission flag is already set, the function does nothing at all
function Global.SetMissionFlag(toggle)
	return _in(0xC4301E5121A0ED73, toggle)
end

--- SET_MISSION_NAME
function Global.SetMissionName(p0, name)
	return _in(0x5F28ECF5FC84772F, p0, _ts(name))
end

--- _SET_MISSION_NAME_2
function Global.SetMissionName_2(p0, name)
	return _in(0xE45087D85F468BC2, p0, _ts(name))
end
Global.N_0xe45087d85f468bc2 = Global.SetMissionName_2

--- p1 is always 0
function Global.SetMissionTrainAsNoLongerNeeded(p1)
	return _in(0xBBE7648349B49BE8, _i, p1)
end

--- SET_MISSION_TRAIN_COORDS
function Global.SetMissionTrainCoords(train, x, y, z)
	return _in(0x591CA673AA6AB736, train, x, y, z)
end

--- Toggles depth of field on the cellphone camera.
-- @param toggle true/false to toggle DOF.
function Global.SetMobilePhoneDofState(toggle)
	return _in(0x375A706A5C2FD084, toggle)
end
Global.N_0x375a706a5c2fd084 = Global.SetMobilePhoneDofState
Global.SetMobilePhoneUnk = Global.SetMobilePhoneDofState

--- SET_MOBILE_PHONE_POSITION
function Global.SetMobilePhonePosition(posX, posY, posZ)
	return _in(0x693A5C6D6734085B, posX, posY, posZ)
end

--- SET_MOBILE_PHONE_RADIO_STATE
function Global.SetMobilePhoneRadioState(state)
	return _in(0xBF286C554784F3DF, state)
end

--- Last parameter is unknown and always zero.
function Global.SetMobilePhoneRotation(rotX, rotY, rotZ, p3)
	return _in(0xBB779C0CA917E865, rotX, rotY, rotZ, p3)
end

--- The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
function Global.SetMobilePhoneScale(scale)
	return _in(0xCBDD322A73D6D932, scale)
end

--- SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY
function Global.SetMobileRadioEnabledDuringGameplay(toggle)
	return _in(0x1098355A16064BB3, toggle)
end

--- Releases the script ownership assigned by REQUEST_MODEL. This command should be used when done using a specific model hash in script.
-- @param model The model to release ownership of.
function Global.SetModelAsNoLongerNeeded(model)
	return _in(0xE532F5D78798DAAB, _ch(model))
end

--- **This native is deprecated and does nothing!**
function Global.SetModelHeadlightConfiguration(modelHash, ratePerSecond, headlightRotation, invertRotation)
	return _in(0x7f6b8d75, _ch(modelHash), ratePerSecond, headlightRotation, invertRotation)
end

--- Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function Global.SetMountedWeaponTarget(shootingPed, targetPed, targetVehicle, x, y, z)
	return _in(0xCCD892192C6D2BB9, shootingPed, targetPed, targetVehicle, x, y, z)
end

--- Shows the cursor on screen for one frame.
function Global.SetMouseCursorActiveThisFrame()
	return _in(0xAAE7CE1D63167423)
end
Global.ShowCursorThisFrame = Global.SetMouseCursorActiveThisFrame

--- Changes the mouse cursor's sprite.
-- public enum CursorType
-- {
-- None = 0,
-- Normal = 1,
-- TransparentNormal = 2,
-- PreGrab = 3,
-- Grab = 4,
-- MiddleFinger = 5,
-- LeftArrow = 6,
-- RightArrow = 7,
-- UpArrow = 8,
-- DownArrow = 9,
-- HorizontalExpand = 10,
-- Add = 11,
-- Remove = 12,
-- }
function Global.SetMouseCursorSprite(spriteId)
	return _in(0x8DB8CFFD58B62552, spriteId)
end
Global.N_0x8db8cffd58b62552 = Global.SetMouseCursorSprite
Global.SetCursorSprite = Global.SetMouseCursorSprite

--- Shows/hides the frontend cursor on the pause menu or similar menus.
-- Clicking off and then on the game window will show it again.
-- @param enable Set to false to disable the cursor, true to enable it.
function Global.SetMouseCursorVisibleInMenus(enable)
	return _in(0x98215325A695E78A, enable)
end
Global.N_0x98215325a695e78a = Global.SetMouseCursorVisibleInMenus

--- name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
function Global.SetMovementModeOverride(ped, name)
	return _in(0x781DE8FA214E87D2, ped, _ts(name))
end
Global.N_0x781de8fa214e87d2 = Global.SetMovementModeOverride

--- Sets flag's sprite transparency. 0-255.
function Global.SetMpGamerTagAlpha(gamerTagId, component, alpha)
	return _in(0xD48FE545CD46F857, gamerTagId, component, alpha)
end
Global.N_0xd48fe545cd46f857 = Global.SetMpGamerTagAlpha

--- SET_MP_GAMER_TAG_BIG_TEXT
function Global.SetMpGamerTagBigText(gamerTagId, string)
	return _in(0x7B7723747CCB55B6, gamerTagId, _ts(string))
end
Global.N_0x7b7723747ccb55b6 = Global.SetMpGamerTagBigText
Global.SetMpGamerTagChatting = Global.SetMpGamerTagBigText

--- Sets a gamer tag's component colour
-- @param gamerTagId a gamerTagId obtained using  for example: [`CREATE_FAKE_MP_GAMER_TAG`](#\_0xBFEFE3321A3F5015).
-- @param component a component id, see the full list here: [link](https://docs.fivem.net/docs/game-references/gamer-tags/#components-list)
-- @param hudColorIndex a hud color index, see the full list here: [link](https://docs.fivem.net/docs/game-references/hud-colors/)
function Global.SetMpGamerTagColour(gamerTagId, component, hudColorIndex)
	return _in(0x613ED644950626AE, gamerTagId, component, hudColorIndex)
end
Global.N_0x613ed644950626ae = Global.SetMpGamerTagColour

--- By default, the player health value shown by a gamer tag's health bar is synchronised with the health of the ped it is attached to.
-- This native disables that behaviour, allowing [`_SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH`](#\_0x1563FE35E9928E67) to have an effect.
-- @param toggle If player health synchronisation should be disabled.
function Global.SetMpGamerTagDisablePlayerHealthSync(gamerTagId, toggle)
	return _in(0xD29EC58C2F6B5014, gamerTagId, toggle)
end
Global.N_0xd29ec58c2f6b5014 = Global.SetMpGamerTagDisablePlayerHealthSync
Global.SetMpGamerHealthBarDisplay = Global.SetMpGamerTagDisablePlayerHealthSync

--- Should be enabled as component (2). Has 0 alpha by default.
-- @param gamerTagId a gamerTagId obtained using  for example: [CREATE_FAKE_MP_GAMER_TAG](https://runtime.fivem.net/doc/natives/?\_0xBFEFE3321A3F5015)
-- @param hudColorIndex a hud color index, see the full list here: [link](https://docs.fivem.net/docs/game-references/hud-colors/)
function Global.SetMpGamerTagHealthBarColour(gamerTagId, hudColorIndex)
	return _in(0x3158C77A7E888AB4, gamerTagId, hudColorIndex)
end
Global.N_0x3158c77a7e888ab4 = Global.SetMpGamerTagHealthBarColour
Global.SetMpGamerTagHealthBarColor = Global.SetMpGamerTagHealthBarColour

--- displays wanted star above head
function Global.SetMpGamerTagMpBagLargeCount(gamerTagId, count)
	return _in(0x9C16459B2324B2CF, gamerTagId, count)
end
Global.N_0x9b9aa95688f78dd3 = Global.SetMpGamerTagMpBagLargeCount
Global.SetMpGamerTagUnk = Global.SetMpGamerTagMpBagLargeCount

--- SET_MP_GAMER_TAG_NAME
function Global.SetMpGamerTagName(gamerTagId, string)
	return _in(0xDEA2B8283BAA3944, gamerTagId, _ts(string))
end
Global.N_0xdea2b8283baa3944 = Global.SetMpGamerTagName

--- Manually sets the player health value for a gamer tag, using the maximum health to calculate what percentage of the bar should be filled.
-- Has no effect unless [\_SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC](#\_0xD29EC58C2F6B5014) has been called prior to disable synchronisation with the attached ped.
-- @param health The amount the health the player has.
-- @param maximumHealth The maximum amount of health the player could have.
function Global.SetMpGamerTagOverridePlayerHealth(gamerTagId, health, maximumHealth)
	return _in(0x1563FE35E9928E67, gamerTagId, health, maximumHealth)
end
Global.N_0x1563fe35e9928e67 = Global.SetMpGamerTagOverridePlayerHealth
Global.SetMpGamerHealthBarMax = Global.SetMpGamerTagOverridePlayerHealth

--- Sets the health bar of a gamer tag to show the health of the last (or current) vehicle of the ped the gamer tag is attached to.
-- The vehicle health value is stored separate from the player health and using it won't clear any player health overrides.
-- @param toggle If vehicle health should be displayed instead of player health.
function Global.SetMpGamerTagUseVehicleHealth(gamerTagId, toggle)
	return _in(0xA67F9C46D612B6F1, gamerTagId, toggle)
end
Global.N_0xa67f9c46d612b6f1 = Global.SetMpGamerTagUseVehicleHealth
Global.SetMpGamerTagIcons = Global.SetMpGamerTagUseVehicleHealth

--- cpp
-- enum eMpGamerTagComponent
-- {
-- MP_TAG_GAMER_NAME,
-- MP_TAG_CREW_TAG,
-- MP_TAG_HEALTH_ARMOUR,
-- MP_TAG_BIG_TEXT,
-- MP_TAG_AUDIO_ICON,
-- MP_TAG_USING_MENU,
-- MP_TAG_PASSIVE_MODE,
-- MP_TAG_WANTED_STARS,
-- MP_TAG_DRIVER,
-- MP_TAG_CO_DRIVER,
-- MP_TAG_TAGGED,
-- MP_TAG_GAMER_NAME_NEARBY,
-- MP_TAG_ARROW,
-- MP_TAG_PACKAGES,
-- MP_TAG_INV_IF_PED_FOLLOWING,
-- MP_TAG_RANK_TEXT,
-- MP_TAG_TYPING,
-- MP_TAG_BAG_LARGE,
-- MP_TAG_ARROW,
-- MP_TAG_GANG_CEO,
-- MP_TAG_GANG_BIKER,
-- MP_TAG_BIKER_ARROW,
-- MP_TAG_MC_ROLE_PRESIDENT,
-- MP_TAG_MC_ROLE_VICE_PRESIDENT,
-- MP_TAG_MC_ROLE_ROAD_CAPTAIN,
-- MP_TAG_MC_ROLE_SARGEANT,
-- MP_TAG_MC_ROLE_ENFORCER,
-- MP_TAG_MC_ROLE_PROSPECT,
-- MP_TAG_TRANSMITTER,
-- MP_TAG_BOMB
-- };
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SetMpGamerTagVisibility(gamerTagId, component, toggle)
	return _in(0x63BB75ABEDC1F6A0, gamerTagId, component, toggle)
end
Global.N_0x63bb75abedc1f6a0 = Global.SetMpGamerTagVisibility

--- Sets the visibility of all components of the gamer tag to the specified value.
-- @param toggle The new visibility state of all gamer tag components.
function Global.SetMpGamerTagVisibilityAll(gamerTagId, toggle)
	return _in(0xEE76FF7E6A0166B0, gamerTagId, toggle)
end
Global.N_0xee76ff7e6a0166b0 = Global.SetMpGamerTagVisibilityAll
Global.SetMpGamerTag_ = Global.SetMpGamerTagVisibilityAll
Global.SetMpGamerTag = Global.SetMpGamerTagVisibilityAll
Global.SetMpGamerTagEnabled = Global.SetMpGamerTagVisibilityAll

--- displays wanted star above head
function Global.SetMpGamerTagWantedLevel(gamerTagId, wantedlvl)
	return _in(0xCF228E2AA03099C3, gamerTagId, wantedlvl)
end
Global.N_0xcf228e2aa03099c3 = Global.SetMpGamerTagWantedLevel

--- Sets whether all tags should group (normal game behavior) or should remain independent and above each ped's respective head when in a vehicle.
-- @param enabled Whether tags should use normal game behavior. Default is true.
function Global.SetMpGamerTagsUseVehicleBehavior(enabled)
	return _in(0x7a27bc93, enabled)
end

--- Sets the maximum distance at which all tags will be visible and which beyond will not be displayed. Distance is measured from the camera position.
-- @param distance The visible distance. Default is 100.0f.
function Global.SetMpGamerTagsVisibleDistance(distance)
	return _in(0xd61676b3, distance)
end

--- Preview image:
-- ![](https://i.imgur.com/1BTmdyv.png)
-- To change the bank balance use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "BANK_BALANCE" to whatever value you need to.
function Global.SetMultiplayerBankCash()
	return _in(0xDD21B55DF695CD0A)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetMultiplayerHudCash(p0, p1)
	return _in(0xFD1D220394BCB824, p0, p1)
end

--- Preview image:
-- ![](https://i.imgur.com/1BTmdyv.png)
-- To change money value use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "MP0\_WALLET_BALANCE" to whatever value you need to.
function Global.SetMultiplayerWalletCash()
	return _in(0xC2D15BEF167E27BC)
end
Global.N_0xc2d15bef167e27bc = Global.SetMultiplayerWalletCash

--- SET_NETWORK_CUTSCENE_ENTITIES
function Global.SetNetworkCutsceneEntities(toggle)
	return _in(0xAAA553E7DD28A457, toggle)
end
Global.N_0xaaa553e7dd28a457 = Global.SetNetworkCutsceneEntities

--- Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
function Global.SetNetworkEnableVehiclePositionCorrection(vehicle, toggle)
	return _in(0x838DA0936A24ED4D, vehicle, toggle)
end
Global.N_0x838da0936a24ed4d = Global.SetNetworkEnableVehiclePositionCorrection

--- SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER
function Global.SetNetworkIdAlwaysExistsForPlayer(netId, player, toggle)
	return _in(0xA8A024587329F36A, netId, player, toggle)
end
Global.N_0xa8a024587329f36a = Global.SetNetworkIdAlwaysExistsForPlayer
Global.SetNetworkIdSyncToPlayer = Global.SetNetworkIdAlwaysExistsForPlayer

--- Whether or not another player is allowed to take control of the entity
function Global.SetNetworkIdCanMigrate(netId, toggle)
	return _in(0x299EEB23175895FC, netId, toggle)
end

--- SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES
function Global.SetNetworkIdExistsOnAllMachines(netId, toggle)
	return _in(0xE05E81A888FA63C8, netId, toggle)
end

--- SET_NETWORK_ID_VISIBLE_IN_CUTSCENE
function Global.SetNetworkIdVisibleInCutscene(netId, p1, p2)
	return _in(0xA6928482543022B4, netId, p1, p2)
end

--- SET_NETWORK_VEHICLE_AS_GHOST
function Global.SetNetworkVehicleAsGhost(vehicle, toggle)
	return _in(0x6274C4712850841E, vehicle, toggle)
end
Global.N_0x6274c4712850841e = Global.SetNetworkVehicleAsGhost
Global.SetNetworkObjectNonContact = Global.SetNetworkVehicleAsGhost

--- rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
function Global.SetNetworkVehiclePositionUpdateMultiplier(vehicle, multiplier)
	return _in(0xA2A707979FE754DC, vehicle, multiplier)
end
Global.N_0xa2a707979fe754dc = Global.SetNetworkVehiclePositionUpdateMultiplier
Global.SetNetworkVehicleBlenderDistanceMultiplier = Global.SetNetworkVehiclePositionUpdateMultiplier

--- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
function Global.SetNetworkVehicleRespotTimer(netId, time)
	return _in(0xEC51713AB6EC36E8, netId, time)
end

--- SET_NEW_WAYPOINT
function Global.SetNewWaypoint(x, y)
	return _in(0xFE43368D2AA4F2FC, x, y)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetNextDesiredMoveState(p0)
	return _in(0xF1B9F16E89E2C93A, p0)
end

--- SET_NEXT_PLAYER_TCMODIFIER
function Global.SetNextPlayerTcmodifier(modifierName)
	return _in(0xBF59707B3E5ED531, _ts(modifierName))
end
Global.N_0xbf59707b3e5ed531 = Global.SetNextPlayerTcmodifier

--- Enables Night Vision.
-- Example:
-- C#: Function.Call(Hash.SET_NIGHTVISION, true);
-- C++: GRAPHICS::SET_NIGHTVISION(true);
-- BOOL toggle:
-- true = turns night vision on for your player.
-- false = turns night vision off for your player.
function Global.SetNightvision(toggle)
	return _in(0x18F621F7A5B1F85D, toggle)
end

--- SET_NO_LOADING_SCREEN
function Global.SetNoLoadingScreen(toggle)
	return _in(0x5262CC1995D07E09, toggle)
end

--- SET_NOISEOVERIDE
function Global.SetNoiseoveride(toggle)
	return _in(0xE787BF1C5CF823C9, toggle)
end

--- SET_NOISINESSOVERIDE
function Global.SetNoisinessoveride(value)
	return _in(0xCB6A7C3BB17A0C67, value)
end

--- SET_NUI_FOCUS
function Global.SetNuiFocus(hasFocus, hasCursor)
	return _in(0x5b98ae30, hasFocus, hasCursor)
end

--- SET_NUI_FOCUS_KEEP_INPUT
function Global.SetNuiFocusKeepInput(keepInput)
	return _in(0x3ff5e5f8, keepInput)
end

--- SET_NUMBER_OF_PARKED_VEHICLES
function Global.SetNumberOfParkedVehicles(value)
	return _in(0xCAA15F13EBD417FF, value)
end

--- Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
function Global.SetObjectAllowLowLodBuoyancy(object, toggle)
	return _in(0x4D89D607CB3DD1D2, object, toggle)
end
Global.N_0x4d89d607cb3dd1d2 = Global.SetObjectAllowLowLodBuoyancy
Global.SetObjectCanClimbOn = Global.SetObjectAllowLowLodBuoyancy

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function Global.SetObjectAsNoLongerNeeded(object)
	return _in(0x3AE22DEB5BA5A3E6, _ii(object) --[[ may be optional ]])
end

--- Overrides a flag on the object which determines if the object should be avoided by a vehicle in task: CTaskVehicleGoToPointWithAvoidanceAutomobile.
-- Tested on vehicles that were created by the vehicle generators.
function Global.SetObjectForceVehiclesToAvoid(object, toggle)
	return _in(0x77F33F2CCF64B3AA, object, toggle)
end
Global.N_0x77f33f2ccf64b3aa = Global.SetObjectForceVehiclesToAvoid
Global.SetObjectSomething = Global.SetObjectForceVehiclesToAvoid

--- Sets color of embedded light source.
-- Only appears in am_mp_nightclub.c for the nightclub dancefloor.
-- Not sure what p1 does, seems to only ever be '1' in scripts.
-- ```
-- NativeDB Introduced: v1493
-- ```
function Global.SetObjectLightColor(object, p1, r, g, b)
	return _in(0x5F048334B4A4E774, object, p1, r, g, b, _ri)
end

--- rage::phArchetypeDamp
-- p9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive.
function Global.SetObjectPhysicsParams(object, mass, gravityFactor, linearC, linearV, linearV2, angularC, angularV, angularV2, p9, maxAngSpeed, buoyancyFactor)
	return _in(0xF6DF6E90DE7DF90F, object, mass, gravityFactor, linearC, linearV, linearV2, angularC, angularV, angularV2, p9, maxAngSpeed, buoyancyFactor)
end

--- _SET_OBJECT_STUNT_PROP_DURATION
function Global.SetObjectStuntPropDuration(object, duration)
	return _in(0xDF6CA0330F2E737B, object, duration)
end
Global.N_0xdf6ca0330f2e737b = Global.SetObjectStuntPropDuration

--- Sets the intensity of Speed Boost and Slow Down props.
-- The corresponding values for Speed Boosts in the Creator are:\
-- Weak: `15`\
-- Normal: `25`\
-- Strong: `35`\
-- Extra Strong: `45`\
-- Ultra Strong: `100`
-- For Slow Downs:\
-- Weak: `44`\
-- Normal: `30`\
-- Strong: `16`
-- @param object A Speed Boost or Slow Down prop
-- @param intensity Ranges from `1`-`254`, other values are ignored. Higher values will increase the effect of Speed Boosts and decrease the effect of Slow Downs.
function Global.SetObjectStuntPropSpeedup(object, intensity)
	return _in(0x96EE0EBA0163DF80, object, intensity)
end
Global.N_0x96ee0eba0163df80 = Global.SetObjectStuntPropSpeedup

--- SET_OBJECT_TARGETTABLE
function Global.SetObjectTargettable(object, targettable)
	return _in(0x8A7391690F5AFD81, object, targettable)
end

--- enum ObjectPaintVariants
-- {
-- Pacific = 0,
-- Azure = 1,
-- Nautical = 2,
-- Continental = 3,
-- Battleship = 4,
-- Intrepid = 5,
-- Uniform = 6,
-- Classico = 7,
-- Mediterranean = 8,
-- Command = 9,
-- Mariner = 10,
-- Ruby = 11,
-- Vintage = 12,
-- Pristine = 13,
-- Merchant = 14,
-- Voyager = 15
-- };
function Global.SetObjectTextureVariation(object, textureVariation)
	return _in(0x971DA0055324D033, object, textureVariation)
end
Global.N_0x971da0055324d033 = Global.SetObjectTextureVariation
Global.SetObjectTextureVariant = Global.SetObjectTextureVariation

--- Enables or disables the opening of a vehicle's rear doors in the event of a sticky bomb explosion. This native is effective for armored vehicles, such as the Stockade (Brinks vehicle), allowing the rear doors to be opened through controlled explosions, which might otherwise remain locked due to the vehicle nature.
-- @param vehicle The vehicle to apply this setting to.
-- @param toggle A boolean value where `true` allows the rear doors to open upon explosion, and `false` prevents them from opening.
-- @return This native does not return any value.
function Global.SetOpenRearDoorsOnExplosion(vehicle, toggle)
	return _in(0x1B212B26DD3C04DF, vehicle, toggle)
end
Global.N_0x1b212b26dd3c04df = Global.SetOpenRearDoorsOnExplosion

--- Set state to true to extend the wings, false to retract them.
-- @param vehicle The vehicle (tested with oppressor only)
-- @param extend Set to true to extend the wings, false to retract them.
function Global.SetOppressorTransformState(vehicle, extend)
	return _in(0x544996C0081ABDEB, vehicle, extend)
end
Global.N_0x544996c0081abdeb = Global.SetOppressorTransformState

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function Global.SetOverrideWeather(weatherType)
	return _in(0xA43D5C6FE51ADBEF, _ts(weatherType))
end

--- p0 always seems to be 0
-- duration in milliseconds
-- frequency should range from about 10 (slow vibration) to 255 (very fast)
-- example:
-- SET_PAD_SHAKE(0, 100, 200);
function Global.SetPadShake(padIndex, duration, frequency)
	return _in(0x48B3886C1358D0D5, padIndex, duration, frequency)
end

--- SET_PARACHUTE_TASK_TARGET
function Global.SetParachuteTaskTarget(ped, x, y, z)
	return _in(0xC313379AF0FCEDA7, ped, x, y, z)
end

--- SET_PARACHUTE_TASK_THRUST
function Global.SetParachuteTaskThrust(ped, thrust)
	return _in(0x0729BAC1B8C64317, ped, thrust)
end

--- SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
function Global.SetParkedVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0xEAE6DCC7EEE3DB1D, multiplier)
end

--- SET_PARTICLE_FX_BULLET_IMPACT_SCALE
function Global.SetParticleFxBulletImpactScale(scale)
	return _in(0x27E32866E9A5C416, scale)
end
Global.N_0x27e32866e9a5c416 = Global.SetParticleFxBulletImpactScale

--- SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE
function Global.SetParticleFxCamInsideNonplayerVehicle(vehicle, p1)
	return _in(0xACEE6F360FC1F6B6, vehicle, p1)
end

--- SET_PARTICLE_FX_CAM_INSIDE_VEHICLE
function Global.SetParticleFxCamInsideVehicle(p0)
	return _in(0xEEC4047028426510, p0)
end

--- SET_PARTICLE_FX_LOOPED_ALPHA
function Global.SetParticleFxLoopedAlpha(ptfxHandle, alpha)
	return _in(0x726845132380142E, ptfxHandle, alpha)
end

--- only works on some fx's
-- p4 = 0
function Global.SetParticleFxLoopedColour(ptfxHandle, r, g, b, p4)
	return _in(0x7F8F65877F88783B, ptfxHandle, r, g, b, p4)
end

--- SET_PARTICLE_FX_LOOPED_EVOLUTION
function Global.SetParticleFxLoopedEvolution(ptfxHandle, propertyName, amount, noNetwork)
	return _in(0x5F0C4B5B1C393BE2, ptfxHandle, _ts(propertyName), amount, noNetwork)
end

--- SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST
function Global.SetParticleFxLoopedFarClipDist(ptfxHandle, range)
	return _in(0xDCB194B85EF7B541, ptfxHandle, range)
end
Global.SetParticleFxLoopedRange = Global.SetParticleFxLoopedFarClipDist

--- SET_PARTICLE_FX_LOOPED_OFFSETS
function Global.SetParticleFxLoopedOffsets(ptfxHandle, x, y, z, rotX, rotY, rotZ)
	return _in(0xF7DDEBEC43483C43, ptfxHandle, x, y, z, rotX, rotY, rotZ)
end

--- SET_PARTICLE_FX_LOOPED_SCALE
function Global.SetParticleFxLoopedScale(ptfxHandle, scale)
	return _in(0xB44250AAA456492D, ptfxHandle, scale)
end

--- Usage example for C#:
-- Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
-- Note: the argument alpha ranges from 0.0f-1.0f !
function Global.SetParticleFxNonLoopedAlpha(alpha)
	return _in(0x77168D722C58B2FC, alpha)
end

--- Only works on some fx's, while on others it might SEEM to work "properly", but the colors can be "strange" or even completly different from what you've expected. Reason for this is that those fx's might already have colors "baked into them" which then start to act as a "mixing palette", resulting in a different color than expected. A hypothetical example of this would be if the fx itself is already full (bright) red (RGB: 1.0, 0.0, 0.0) and you then set the color to (bright) green (RGB: 0.0, 1.0, 0.0), that it MIGHT result in Yellow (RGB: 1.0, 1.0, 0.0).
-- This doc previously stated that the set color is **NOT** networked, however it does actually turns out to be networked. Tested with all fireworks effects and several other FX effects resulted in colored fx effects on all clients when used in combination with [START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD](#\_0xF56B8137DF10135D).
-- This might however not be the case for all types of particle fx's, so it's recommended to test this thoroughly with multiple clients before releasing your script for example.
-- @param r Red (0.0 - 1.0)
-- @param g Green (0.0 - 1.0)
-- @param b Blue (0.0 - 1.0)
function Global.SetParticleFxNonLoopedColour(r, g, b)
	return _in(0x26143A59EF48B262, r, g, b)
end

--- NativeDB Introduced: v2699
function Global.SetParticleFxNonLoopedEmitterScale(p0, p1, scale)
	return _in(0x1E2E01C00837D26E, p0, p1, scale)
end

--- SET_PARTICLE_FX_OVERRIDE
function Global.SetParticleFxOverride(oldAsset, newAsset)
	return _in(0xEA1E2D93F6F75ED9, _ts(oldAsset), _ts(newAsset))
end
Global.SetPtfxAssetOld_2New = Global.SetParticleFxOverride
Global.SetParticleFxAssetOldToNew = Global.SetParticleFxOverride

--- SET_PARTICLE_FX_SHOOTOUT_BOAT
function Global.SetParticleFxShootoutBoat(p0)
	return _in(0x96EF97DAEB89BEF5, p0)
end

--- This native is deprecated.
-- If you're looking to:
-- *   Toggle the pause menu on, use [`ACTIVATE_FRONTEND_MENU`](#\_0xEF01D36B9C9D0C7B)
-- *   Toggle the pause menu off, use [`SET_FRONTEND_ACTIVE`](#\_0x745711A75AB09277)
-- *   Disable toggling the pause menu, use [`DISABLE_FRONTEND_THIS_FRAME`](#\_0x6D3465A73092F0E6)
function Global.SetPauseMenuActive(toggle)
	return _in(0xDF47FC56C71569CF, toggle)
end

--- Toggles the light state for the pause menu ped in frontend menus.
-- This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#\_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
-- Example:
-- On: ![lights on](https://vespura.com/hi/i/2019-04-01\_16-09\_540ee\_1015.png)
-- Off: ![lights off](https://vespura.com/hi/i/2019-04-01\_16-10\_8b5e7\_1016.png)
-- @param state True enables the light, false disables the light.
function Global.SetPauseMenuPedLighting(state)
	return _in(0x3CA6050692BC61B0, state)
end
Global.N_0x3ca6050692bc61b0 = Global.SetPauseMenuPedLighting

--- Toggles the pause menu ped sleep state for frontend menus.
-- [Example GIF](https://vespura.com/hi/i/2019-04-01\_15-51\_8ed38\_1014.gif)
-- @param state 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
function Global.SetPauseMenuPedSleepState(state)
	return _in(0xECF128344E9FF9F1, state)
end
Global.N_0xecf128344e9ff9f1 = Global.SetPauseMenuPedSleepState

--- accuracy = 0-100, 100 being perfectly accurate
function Global.SetPedAccuracy(ped, accuracy)
	return _in(0x7AEFB85C1D49DEB6, ped, accuracy)
end

--- if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
-- If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
function Global.SetPedAiBlipForcedOn(ped, toggle)
	return _in(0x0C4BBF625CA98C4E, ped, toggle)
end
Global.N_0x0c4bbf625ca98c4e = Global.SetPedAiBlipForcedOn
Global.IsAiBlipAlwaysShown = Global.SetPedAiBlipForcedOn

--- SET_PED_AI_BLIP_GANG_ID
function Global.SetPedAiBlipGangId(ped, gangId)
	return _in(0xE52B8E7F85D39A08, ped, gangId)
end
Global.N_0xe52b8e7f85d39a08 = Global.SetPedAiBlipGangId
Global.SetAiBlipType = Global.SetPedAiBlipGangId

--- SET_PED_AI_BLIP_HAS_CONE
function Global.SetPedAiBlipHasCone(ped, toggle)
	return _in(0x3EED80DFF7325CAA, ped, toggle)
end
Global.HideSpecialAbilityLockonOperation = Global.SetPedAiBlipHasCone

--- SET_PED_AI_BLIP_NOTICE_RANGE
function Global.SetPedAiBlipNoticeRange(ped, range)
	return _in(0x97C65887D4B37FA9, ped, range)
end
Global.N_0x97c65887d4b37fa9 = Global.SetPedAiBlipNoticeRange
Global.SetAiBlipMaxDistance = Global.SetPedAiBlipNoticeRange

--- _SET_PED_AI_BLIP_SPRITE
function Global.SetPedAiBlipSprite(ped, spriteId)
	return _in(0xFCFACD0DB9D7A57D, ped, spriteId)
end
Global.N_0xfcfacd0db9d7a57d = Global.SetPedAiBlipSprite

--- value ranges from 0 to 3.
function Global.SetPedAlertness(ped, value)
	return _in(0xDBA71115ED9941A6, ped, value)
end

--- SET_PED_ALLOW_VEHICLES_OVERRIDE
function Global.SetPedAllowVehiclesOverride(ped, toggle)
	return _in(0x3C028C636A414ED9, ped, toggle)
end

--- SET_PED_ALLOWED_TO_DUCK
function Global.SetPedAllowedToDuck(ped, toggle)
	return _in(0xDA1F1B7BE1A8766F, ped, toggle)
end

--- ```
-- stance:
-- 0 = idle
-- 1 = walk
-- 2 = running
-- p5 = usually set to true
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetPedAlternateMovementAnim(ped, stance, animDictionary, animationName, p4, p5)
	return _in(0x90A43CC281FFAB46, ped, stance, _ts(animDictionary), _ts(animationName), p4, p5)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetPedAlternateWalkAnim(ped, animDict, animName, p3, p4)
	return _in(0x6C60394CB4F75E9A, ped, _ts(animDict), _ts(animName), p3, p4)
end

--- NativeDB Added Parameter 4: BOOL p3
function Global.SetPedAmmo(ped, weaponHash, ammo)
	return _in(0x14E56BC5B5DB6A19, ped, _ch(weaponHash), ammo)
end

--- SET_PED_AMMO_BY_TYPE
function Global.SetPedAmmoByType(ped, ammoType, ammo)
	return _in(0x5FD1E1F011E76D7E, ped, _ch(ammoType), ammo)
end

--- SET_PED_AMMO_TO_DROP
function Global.SetPedAmmoToDrop(ped, ammo)
	return _in(0xA4EFEF9440A5B0EF, ped, ammo)
end

--- SET_PED_ANGLED_DEFENSIVE_AREA
function Global.SetPedAngledDefensiveArea(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xC7F76DF27A5045A1, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
function Global.SetPedAoBlobRendering(ped, toggle)
	return _in(0x2B5AA717A181FB4C, ped, toggle)
end
Global.N_0x2b5aa717a181fb4c = Global.SetPedAoBlobRendering

--- Sets the armor of the specified ped.
-- ped: The Ped to set the armor of.
-- amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
function Global.SetPedArmour(ped, amount)
	return _in(0xCEA04D83135264CC, ped, amount)
end

--- Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
function Global.SetPedAsCop(ped, toggle)
	return _in(0xBB03C38DD3FB7FFD, ped, toggle)
end

--- SET_PED_AS_ENEMY
function Global.SetPedAsEnemy(ped, toggle)
	return _in(0x02A0C9720B854BFA, ped, toggle)
end

--- SET_PED_AS_GROUP_LEADER
function Global.SetPedAsGroupLeader(ped, groupId)
	return _in(0x2A7819605465FBCE, ped, groupId)
end

--- SET_PED_AS_GROUP_MEMBER
function Global.SetPedAsGroupMember(ped, groupId)
	return _in(0x9F3480FE65DB31B5, ped, groupId)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function Global.SetPedAsNoLongerNeeded(ped)
	return _in(0x2595DD4236549CE3, _ii(ped) --[[ may be optional ]])
end

--- Enables/disables ped's "loud" footstep sound.
-- ```
-- ```
-- NativeDB Introduced: v1493
function Global.SetPedAudioFootstepLoud(ped, toggle)
	return _in(0x0653B735BFBDFE87, ped, toggle)
end
Global.N_0x0653b735bfbdfe87 = Global.SetPedAudioFootstepLoud

--- _SET_PED_AUDIO_GENDER
function Global.SetPedAudioGender(ped, p1)
	return _in(0xA5342D390CDA41D6, ped, p1)
end
Global.N_0xa5342d390cda41d6 = Global.SetPedAudioGender

--- SET_PED_BLEND_FROM_PARENTS
function Global.SetPedBlendFromParents(ped, father, mother, fathersSide, mothersSide)
	return _in(0x137BBD05230DB22D, ped, father, mother, fathersSide, mothersSide)
end

--- SET_PED_BLOCKS_PATHING_WHEN_DEAD
function Global.SetPedBlocksPathingWhenDead(ped, toggle)
	return _in(0x576594E8D64375E2, ped, toggle)
end
Global.N_0x576594e8d64375e2 = Global.SetPedBlocksPathingWhenDead

--- SET_PED_BOUNDS_ORIENTATION
function Global.SetPedBoundsOrientation(ped, p1, p2, p3, p4, p5)
	return _in(0x4F5F651ACCC9C4CF, ped, p1, p2, p3, p4, p5)
end

--- SET_PED_CAN_ARM_IK
function Global.SetPedCanArmIk(ped, toggle)
	return _in(0x6C3B4D6D13B4C841, ped, toggle)
end

--- SET_PED_CAN_BE_DRAGGED_OUT
function Global.SetPedCanBeDraggedOut(ped, toggle)
	return _in(0xC1670E958EEE24E5, ped, toggle)
end

--- state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
function Global.SetPedCanBeKnockedOffVehicle(ped, state)
	return _in(0x7A6535691B477C48, ped, state)
end

--- SET_PED_CAN_BE_SHOT_IN_VEHICLE
function Global.SetPedCanBeShotInVehicle(ped, toggle)
	return _in(0xC7EF1BA83230BA07, ped, toggle)
end

--- SET_PED_CAN_BE_TARGETED_WHEN_INJURED
function Global.SetPedCanBeTargetedWhenInjured(ped, toggle)
	return _in(0x638C03B0F9878F57, ped, toggle)
end

--- SET_PED_CAN_BE_TARGETED_WITHOUT_LOS
function Global.SetPedCanBeTargetedWithoutLos(ped, toggle)
	return _in(0x4328652AE5769C71, ped, toggle)
end

--- SET_PED_CAN_BE_TARGETTED
function Global.SetPedCanBeTargetted(ped, toggle)
	return _in(0x63F58F7C80513AAD, ped, toggle)
end

--- SET_PED_CAN_BE_TARGETTED_BY_PLAYER
function Global.SetPedCanBeTargettedByPlayer(ped, player, toggle)
	return _in(0x66B57B72E0836A76, ped, player, toggle)
end

--- SET_PED_CAN_BE_TARGETTED_BY_TEAM
function Global.SetPedCanBeTargettedByTeam(ped, team, toggle)
	return _in(0xBF1CA77833E58F2C, ped, team, toggle)
end

--- It simply makes the said ped to cower behind cover object(wall, desk, car)
-- Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
function Global.SetPedCanCowerInCover(ped, toggle)
	return _in(0xCB7553CDCEF4A735, ped, toggle)
end

--- SET_PED_CAN_EVASIVE_DIVE
function Global.SetPedCanEvasiveDive(ped, toggle)
	return _in(0x6B7A646C242A7059, ped, toggle)
end

--- SET_PED_CAN_HEAD_IK
function Global.SetPedCanHeadIk(ped, toggle)
	return _in(0xC11C18092C5530DC, ped, toggle)
end

--- SET_PED_CAN_LEG_IK
function Global.SetPedCanLegIk(ped, toggle)
	return _in(0x73518ECE2485412B, ped, toggle)
end

--- It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
-- This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
-- @param ped The target ped
-- @param loseProps true = allow props to fall off, false = don't let props fall off
-- @param p2 purpose unknown, usually 0
function Global.SetPedCanLosePropsOnDamage(ped, loseProps, p2)
	return _in(0xE861D0B05C7662B8, ped, loseProps, p2)
end
Global.N_0xe861d0b05c7662b8 = Global.SetPedCanLosePropsOnDamage

--- SET_PED_CAN_PEEK_IN_COVER
function Global.SetPedCanPeekInCover(ped, toggle)
	return _in(0xC514825C507E3736, ped, toggle)
end

--- SET_PED_CAN_PLAY_AMBIENT_ANIMS
function Global.SetPedCanPlayAmbientAnims(ped, toggle)
	return _in(0x6373D1349925A70E, ped, toggle)
end

--- SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS
function Global.SetPedCanPlayAmbientBaseAnims(ped, toggle)
	return _in(0x0EB0585D15254740, ped, toggle)
end

--- Prevents a ped from playing ambient idle animations.
-- **Note:** This native must be called every frame.
-- @param ped Ped index.
-- @param bDisableIdleAnims If true, prevents a ped from playing an idle animation this frame.
-- @param bStopCurrentAnim If true and the ped is playing an idle animation, the clip is stopped.
function Global.SetPedCanPlayAmbientIdles(ped, bDisableIdleAnims, bStopCurrentAnim)
	return _in(0x8FD89A6240813FD0, ped, bDisableIdleAnims, bStopCurrentAnim)
end
Global.N_0x8fd89a6240813fd0 = Global.SetPedCanPlayAmbientIdles

--- SET_PED_CAN_PLAY_GESTURE_ANIMS
function Global.SetPedCanPlayGestureAnims(ped, toggle)
	return _in(0xBAF20C5432058024, ped, toggle)
end

--- _SET_PED_CAN_PLAY_INJURED_ANIMS
function Global.SetPedCanPlayInjuredAnims(ped, p1)
	return _in(0x33A60D8BDD6E508C, ped, p1)
end
Global.N_0x33a60d8bdd6e508c = Global.SetPedCanPlayInjuredAnims

--- p2 usually 0
function Global.SetPedCanPlayVisemeAnims(ped, toggle, p2)
	return _in(0xF833DDBA3B104D43, ped, toggle, p2)
end

--- SET_PED_CAN_RAGDOLL
function Global.SetPedCanRagdoll(ped, toggle)
	return _in(0xB128377056A54E2A, ped, toggle)
end

--- SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT
function Global.SetPedCanRagdollFromPlayerImpact(ped, toggle)
	return _in(0xDF993EE5E90ABA25, ped, toggle)
end

--- SET_PED_CAN_SMASH_GLASS
function Global.SetPedCanSmashGlass(ped, p1, p2)
	return _in(0x1CCE141467FF42A2, ped, p1, p2)
end

--- SET_PED_CAN_SWITCH_WEAPON
function Global.SetPedCanSwitchWeapon(ped, toggle)
	return _in(0xED7F7EFE9FABF340, ped, toggle)
end

--- This only will teleport the ped to the group leader if the group leader teleports (sets coords).
-- Only works in singleplayer
function Global.SetPedCanTeleportToGroupLeader(pedHandle, groupHandle, toggle)
	return _in(0x2E2F4240B3F24647, pedHandle, groupHandle, toggle)
end

--- SET_PED_CAN_TORSO_IK
function Global.SetPedCanTorsoIk(ped, toggle)
	return _in(0xF2B7106D37947CE0, ped, toggle)
end

--- SET_PED_CAN_TORSO_REACT_IK
function Global.SetPedCanTorsoReactIk(ped, p1)
	return _in(0xF5846EDB26A98A24, ped, p1)
end
Global.N_0xf5846edb26a98a24 = Global.SetPedCanTorsoReactIk

--- SET_PED_CAN_TORSO_VEHICLE_IK
function Global.SetPedCanTorsoVehicleIk(ped, p1)
	return _in(0x6647C5F6F5792496, ped, p1)
end
Global.N_0x6647c5f6f5792496 = Global.SetPedCanTorsoVehicleIk

--- SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT
function Global.SetPedCanUseAutoConversationLookat(ped, toggle)
	return _in(0xEC4686EC06434678, ped, toggle)
end

--- Overrides the ped's collision capsule radius for the current tick.
-- Must be called every tick to be effective.
-- Setting this to 0.001 will allow warping through some objects.
function Global.SetPedCapsule(ped, value)
	return _in(0x364DF566EC833DE2, ped, value)
end

--- SET_PED_CHANCE_OF_FIRING_BLANKS
function Global.SetPedChanceOfFiringBlanks(ped, xBias, yBias)
	return _in(0x8378627201D5497D, ped, xBias, yBias)
end

--- NativeDB Introduced: v1493
function Global.SetPedClothEventsEnabled(ped, enabled)
	return _in(0x29DA3CA8D8B2692D, ped, enabled)
end
Global.N_0x29da3ca8d8b2692d = Global.SetPedClothEventsEnabled
Global.SetPedAudioFootstepQuiet = Global.SetPedClothEventsEnabled

--- SET_PED_CLOTH_PACKAGE_INDEX
function Global.SetPedClothPackageIndex(ped, p1)
	return _in(0x78C4E9961DB3EB5B, ped, p1)
end
Global.N_0x78c4e9961db3eb5b = Global.SetPedClothPackageIndex

--- SET_PED_CLOTH_PRONE
function Global.SetPedClothProne(p0, p1)
	return _in(0x82A3D6D9CC2CB8E3, p0, p1)
end
Global.N_0x82a3d6d9cc2cb8e3 = Global.SetPedClothProne

--- 100 would equal attack
-- less then 50ish would mean run away
-- Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:
-- 0: CA_Poor
-- 1: CA_Average
-- 2: CA_Professional
-- Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.
function Global.SetPedCombatAbility(ped, p1)
	return _in(0xC7622C0D36B2FDA8, ped, p1)
end

--- These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
-- So far, these are the equivalents found:
-- ```cpp
-- enum eCombatAttribute
-- {
-- CA_INVALID = -1,
-- CA_USE_COVER = 0, // AI will only use cover if this is set
-- CA_USE_VEHICLE = 1, // AI will only use vehicles if this is set
-- CA_DO_DRIVEBYS = 2, // AI will only driveby from a vehicle if this is set
-- CA_LEAVE_VEHICLES = 3, // Will be forced to stay in a ny vehicel if this isn't set
-- CA_CAN_USE_DYNAMIC_STRAFE_DECISIONS	= 4, // This ped can make decisions on whether to strafe or not based on distance to destination, recent bullet events, etc.
-- CA_ALWAYS_FIGHT = 5, // Ped will always fight upon getting threat response task
-- CA_FLEE_WHILST_IN_VEHICLE = 6, // If in combat and in a vehicle, the ped will flee rather than attacking
-- CA_JUST_FOLLOW_VEHICLE = 7, // If in combat and chasing in a vehicle, the ped will keep a distance behind rather than ramming
-- CA_PLAY_REACTION_ANIMS = 8, // Deprecated
-- CA_WILL_SCAN_FOR_DEAD_PEDS = 9, // Peds will scan for and react to dead peds found
-- CA_IS_A_GUARD = 10, // Deprecated
-- CA_JUST_SEEK_COVER = 11, // The ped will seek cover only
-- CA_BLIND_FIRE_IN_COVER = 12, // Ped will only blind fire when in cover
-- CA_AGGRESSIVE = 13, // Ped may advance
-- CA_CAN_INVESTIGATE = 14, // Ped can investigate events such as distant gunfire, footsteps, explosions etc
-- CA_CAN_USE_RADIO = 15, // Ped can use a radio to call for backup (happens after a reaction)
-- CA_CAN_CAPTURE_ENEMY_PEDS = 16, // Deprecated
-- CA_ALWAYS_FLEE = 17, // Ped will always flee upon getting threat response task
-- CA_CAN_TAUNT_IN_VEHICLE = 20, // Ped can do unarmed taunts in vehicle
-- CA_CAN_CHASE_TARGET_ON_FOOT = 21, // Ped will be able to chase their targets if both are on foot and the target is running away
-- CA_WILL_DRAG_INJURED_PEDS_TO_SAFETY = 22, // Ped can drag injured peds to safety
-- CA_REQUIRES_LOS_TO_SHOOT = 23, // Ped will require LOS to the target it is aiming at before shooting
-- CA_USE_PROXIMITY_FIRING_RATE = 24, // Ped is allowed to use proximity based fire rate (increasing fire rate at closer distances)
-- CA_DISABLE_SECONDARY_TARGET = 25, // Normally peds can switch briefly to a secondary target in combat, setting this will prevent that
-- CA_DISABLE_ENTRY_REACTIONS = 26, // This will disable the flinching combat entry reactions for peds, instead only playing the turn and aim anims
-- CA_PERFECT_ACCURACY = 27, // Force ped to be 100% accurate in all situations (added by Jay Reinebold)
-- CA_CAN_USE_FRUSTRATED_ADVANCE	= 28, // If we don't have cover and can't see our target it's possible we will advance, even if the target is in cover
-- CA_MOVE_TO_LOCATION_BEFORE_COVER_SEARCH = 29, // This will have the ped move to defensive areas and within attack windows before performing the cover search
-- CA_CAN_SHOOT_WITHOUT_LOS = 30, // Allow shooting of our weapon even if we don't have LOS (this isn't X-ray vision as it only affects weapon firing)
-- CA_MAINTAIN_MIN_DISTANCE_TO_TARGET = 31, // Ped will try to maintain a min distance to the target, even if using defensive areas (currently only for cover finding + usage)
-- CA_CAN_USE_PEEKING_VARIATIONS	= 34, // Allows ped to use steamed variations of peeking anims
-- CA_DISABLE_PINNED_DOWN = 35, // Disables pinned down behaviors
-- CA_DISABLE_PIN_DOWN_OTHERS = 36, // Disables pinning down others
-- CA_OPEN_COMBAT_WHEN_DEFENSIVE_AREA_IS_REACHED = 37, // When defensive area is reached the area is cleared and the ped is set to use defensive combat movement
-- CA_DISABLE_BULLET_REACTIONS = 38, // Disables bullet reactions
-- CA_CAN_BUST = 39, // Allows ped to bust the player
-- CA_IGNORED_BY_OTHER_PEDS_WHEN_WANTED = 40, // This ped is ignored by other peds when wanted
-- CA_CAN_COMMANDEER_VEHICLES = 41, // Ped is allowed to "jack" vehicles when needing to chase a target in combat
-- CA_CAN_FLANK = 42, // Ped is allowed to flank
-- CA_SWITCH_TO_ADVANCE_IF_CANT_FIND_COVER = 43,	// Ped will switch to advance if they can't find cover
-- CA_SWITCH_TO_DEFENSIVE_IF_IN_COVER = 44, // Ped will switch to defensive if they are in cover
-- CA_CLEAR_PRIMARY_DEFENSIVE_AREA_WHEN_REACHED = 45, // Ped will clear their primary defensive area when it is reached
-- CA_CAN_FIGHT_ARMED_PEDS_WHEN_NOT_ARMED = 46, // Ped is allowed to fight armed peds when not armed
-- CA_ENABLE_TACTICAL_POINTS_WHEN_DEFENSIVE = 47, // Ped is not allowed to use tactical points if set to use defensive movement (will only use cover)
-- CA_DISABLE_COVER_ARC_ADJUSTMENTS = 48, // Ped cannot adjust cover arcs when testing cover safety (atm done on corner cover points when  ped usingdefensive area + no LOS)
-- CA_USE_ENEMY_ACCURACY_SCALING	= 49, // Ped may use reduced accuracy with large number of enemies attacking the same local player target
-- CA_CAN_CHARGE = 50, // Ped is allowed to charge the enemy position
-- CA_REMOVE_AREA_SET_WILL_ADVANCE_WHEN_DEFENSIVE_AREA_REACHED = 51, // When defensive area is reached the area is cleared and the ped is set to use will advance movement
-- CA_USE_VEHICLE_ATTACK = 52, // Use the vehicle attack mission during combat (only works on driver)
-- CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS = 53, // Use the vehicle attack mission during combat if the vehicle has mounted guns (only works on driver)
-- CA_ALWAYS_EQUIP_BEST_WEAPON = 54, // Always equip best weapon in combat
-- CA_CAN_SEE_UNDERWATER_PEDS = 55, // Ignores in water at depth visibility check
-- CA_DISABLE_AIM_AT_AI_TARGETS_IN_HELIS = 56, // Will prevent this ped from aiming at any AI targets that are in helicopters
-- CA_DISABLE_SEEK_DUE_TO_LINE_OF_SIGHT = 57, // Disables peds seeking due to no clear line of sight
-- CA_DISABLE_FLEE_FROM_COMBAT = 58, // To be used when releasing missions peds if we don't want them fleeing from combat (mission peds already prevent flee)
-- CA_DISABLE_TARGET_CHANGES_DURING_VEHICLE_PURSUIT = 59, // Disables target changes during vehicle pursuit
-- CA_CAN_THROW_SMOKE_GRENADE = 60, // Ped may throw a smoke grenade at player loitering in combat
-- CA_CLEAR_AREA_SET_DEFENSIVE_IF_DEFENSIVE_CANNOT_BE_REACHED = 62, // Will clear a set defensive area if that area cannot be reached
-- CA_DISABLE_BLOCK_FROM_PURSUE_DURING_VEHICLE_CHASE = 64, // Disable block from pursue during vehicle chases
-- CA_DISABLE_SPIN_OUT_DURING_VEHICLE_CHASE = 65, // Disable spin out during vehicle chases
-- CA_DISABLE_CRUISE_IN_FRONT_DURING_BLOCK_DURING_VEHICLE_CHASE = 66, // Disable cruise in front during block during vehicle chases
-- CA_CAN_IGNORE_BLOCKED_LOS_WEIGHTING = 67, // Makes it more likely that the ped will continue targeting a target with blocked los for a few seconds
-- CA_DISABLE_REACT_TO_BUDDY_SHOT = 68, // Disables the react to buddy shot behaviour.
-- CA_PREFER_NAVMESH_DURING_VEHICLE_CHASE = 69, // Prefer pathing using navmesh over road nodes
-- CA_ALLOWED_TO_AVOID_OFFROAD_DURING_VEHICLE_CHASE = 70, // Ignore road edges when avoiding
-- CA_PERMIT_CHARGE_BEYOND_DEFENSIVE_AREA = 71, // Permits ped to charge a target outside the assigned defensive area.
-- CA_USE_ROCKETS_AGAINST_VEHICLES_ONLY = 72, // This ped will switch to an RPG if target is in a vehicle, otherwise will use alternate weapon.
-- CA_DISABLE_TACTICAL_POINTS_WITHOUT_CLEAR_LOS = 73, // Disables peds moving to a tactical point without clear los
-- CA_DISABLE_PULL_ALONGSIDE_DURING_VEHICLE_CHASE = 74, // Disables pull alongside during vehicle chase
-- CA_DISABLE_ALL_RANDOMS_FLEE = 78,	// If set on a ped, they will not flee when all random peds flee is set to TRUE (they are still able to flee due to other reasons)
-- CA_WILL_GENERATE_DEAD_PED_SEEN_SCRIPT_EVENTS = 79, // This ped will send out a script DeadPedSeenEvent when they see a dead ped
-- CA_USE_MAX_SENSE_RANGE_WHEN_RECEIVING_EVENTS = 80, // This will use the receiving peds sense range rather than the range supplied to the communicate event
-- CA_RESTRICT_IN_VEHICLE_AIMING_TO_CURRENT_SIDE = 81, // When aiming from a vehicle the ped will only aim at targets on his side of the vehicle
-- CA_USE_DEFAULT_BLOCKED_LOS_POSITION_AND_DIRECTION = 82, // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
-- CA_REQUIRES_LOS_TO_AIM = 83, // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
-- CA_CAN_CRUISE_AND_BLOCK_IN_VEHICLE = 84, // Allow vehicles spawned infront of target facing away to enter cruise and wait to block approaching target
-- CA_PREFER_AIR_COMBAT_WHEN_IN_AIRCRAFT = 85, // Peds flying aircraft will prefer to target other aircraft over entities on the ground
-- CA_ALLOW_DOG_FIGHTING = 86, //Allow peds flying aircraft to use dog fighting behaviours
-- CA_PREFER_NON_AIRCRAFT_TARGETS = 87, // This will make the weight of targets who aircraft vehicles be reduced greatly compared to targets on foot or in ground based vehicles
-- CA_PREFER_KNOWN_TARGETS_WHEN_COMBAT_CLOSEST_TARGET = 88, //When peds are tasked to go to combat, they keep searching for a known target for a while before forcing an unknown one
-- CA_FORCE_CHECK_ATTACK_ANGLE_FOR_MOUNTED_GUNS = 89, // Only allow mounted weapons to fire if within the correct attack angle (default 25-degree cone). On a flag in order to keep exiting behaviour and only fix in specific cases.
-- CA_BLOCK_FIRE_FOR_VEHICLE_PASSENGER_MOUNTED_GUNS = 90 // Blocks the firing state for passenger-controlled mounted weapons. Existing flags CA_USE_VEHICLE_ATTACK and CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS only work for drivers.
-- };
-- ```
-- @param ped The ped to set attributes to.
-- @param attributeIndex The attribute index to set. See `eCombatAttribute` enum.
-- @param enabled A boolean to enable/disable the attribute (true/false).
function Global.SetPedCombatAttributes(ped, attributeIndex, enabled)
	return _in(0x9F7794730795E019, ped, attributeIndex, enabled)
end

--- 0 - Stationary (Will just stand in place)
-- 1 - Defensive (Will try to find cover and very likely to blind fire)
-- 2 - Offensive (Will attempt to charge at enemy but take cover as well)
-- 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
function Global.SetPedCombatMovement(ped, combatMovement)
	return _in(0x4D9CA1009AFBD057, ped, combatMovement)
end

--- Define the scope within which the ped will engage in combat with the target.
-- ```cpp
-- enum eCombatRange {
-- CR_NEAR = 0, // keeps within 5-15m
-- CR_MEDIUM, // keeps within 7-30m
-- CR_FAR, // keeps within 15-40m
-- CR_VERY_FAR // keeps within 22-45m
-- };
-- ```
-- @param ped Ped index
-- @param range See `eCombatRange` enum.
function Global.SetPedCombatRange(ped, range)
	return _in(0x3C606747B23E497B, ped, range)
end

--- This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
-- ### MP Freemode list of components
-- **0**: Face
-- **1**: Mask
-- **2**: Hair
-- **3**: Torso
-- **4**: Leg
-- **5**: Parachute / bag
-- **6**: Shoes
-- **7**: Accessory
-- **8**: Undershirt
-- **9**: Kevlar
-- **10**: Badge
-- **11**: Torso 2
-- List of Component IDs
-- ```cpp
-- // Components
-- enum ePedVarComp
-- {
-- PV_COMP_INVALID = 0xFFFFFFFF,
-- PV_COMP_HEAD = 0, // "HEAD"
-- PV_COMP_BERD = 1, // "BEARD"
-- PV_COMP_HAIR = 2, // "HAIR"
-- PV_COMP_UPPR = 3, // "UPPER"
-- PV_COMP_LOWR = 4, // "LOWER"
-- PV_COMP_HAND = 5, // "HAND"
-- PV_COMP_FEET = 6, // "FEET"
-- PV_COMP_TEEF = 7, // "TEETH"
-- PV_COMP_ACCS = 8, // "ACCESSORIES"
-- PV_COMP_TASK = 9, // "TASK"
-- PV_COMP_DECL = 10, // "DECL"
-- PV_COMP_JBIB = 11, // "JBIB"
-- PV_COMP_MAX = 12,
-- };
-- ```
-- @param ped The ped handle.
-- @param componentId The component that you want to set.
-- @param drawableId The drawable id that is going to be set. Refer to [GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS](#\_0x27561561732A7842).
-- @param textureId The texture id of the drawable. Refer to [GET_NUMBER_OF_PED_TEXTURE_VARIATIONS](#\_0x8F7156A3142A6BAD).
-- @param paletteId 0 to 3.
function Global.SetPedComponentVariation(ped, componentId, drawableId, textureId, paletteId)
	return _in(0x262B14F48D29DE80, ped, componentId, drawableId, textureId, paletteId)
end

--- cpp
-- // Potential names and hash collisions included as comments
-- enum ePedConfigFlags {
-- _0x67D1A445 = 0,
-- _0xC63DE95E = 1,
-- CPED_CONFIG_FLAG_NoCriticalHits = 2,
-- CPED_CONFIG_FLAG_DrownsInWater = 3,
-- CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
-- _0x37D196F4 = 5,
-- _0xE2462399 = 6,
-- CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
-- _0xEDDEB838 = 8,
-- _0xB398B6FD = 9,
-- _0xF6664E68 = 10,
-- _0xA05E7CA3 = 11,
-- _0xCE394045 = 12,
-- CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
-- _0xCD8D1411 = 14,
-- _0xB031F1A9 = 15,
-- _0xFE65BEE3 = 16,
-- CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
-- _0x380165BD = 18,
-- _0x07C045C7 = 19,
-- _0x583B5E2D = 20,
-- _0x475EDA58 = 21,
-- _0x8629D05B = 22,
-- _0x1522968B = 23,
-- CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
-- _0x4CC09C4B = 25,
-- _0x034F3053 = 26,
-- _0xD91BA7CC = 27,
-- _0x5C8DC66E = 28,
-- _0x8902EAA0 = 29,
-- _0x6580B9D2 = 30,
-- _0x0EF7A297 = 31,
-- _0x6BF86E5B = 32,
-- CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
-- CPED_CONFIG_FLAG_HasHelmet = 34,
-- CPED_CONFIG_FLAG_UseHelmet = 35,
-- _0xEEB3D630 = 36,
-- _0xB130D17B = 37,
-- _0x5F071200 = 38,
-- CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
-- _0xC287AAFF = 40,
-- _0x203328CC = 41,
-- CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
-- CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
-- CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
-- _0xEC4A8ACF = 45,
-- _0xDB115BFA = 46,
-- CPED_CONFIG_FLAG_PedBeingDeleted = 47,
-- CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
-- _0xF8E99565 = 49,
-- _0xDD17FEE6 = 50,
-- _0x7ED9B2C9 = 51,
-- _0x655E8618 = 52,
-- _0x5A6C1F6E = 53,
-- _0xD749FC41 = 54,
-- _0x357F63F3 = 55,
-- _0xC5E60961 = 56,
-- _0x29275C3E = 57,
-- CPED_CONFIG_FLAG_IsFiring = 58,
-- CPED_CONFIG_FLAG_WasFiring = 59,
-- CPED_CONFIG_FLAG_IsStanding = 60,
-- CPED_CONFIG_FLAG_WasStanding = 61,
-- CPED_CONFIG_FLAG_InVehicle = 62,
-- CPED_CONFIG_FLAG_OnMount = 63,
-- CPED_CONFIG_FLAG_AttachedToVehicle = 64,
-- CPED_CONFIG_FLAG_IsSwimming = 65,
-- CPED_CONFIG_FLAG_WasSwimming = 66,
-- CPED_CONFIG_FLAG_IsSkiing = 67,
-- CPED_CONFIG_FLAG_IsSitting = 68,
-- CPED_CONFIG_FLAG_KilledByStealth = 69,
-- CPED_CONFIG_FLAG_KilledByTakedown = 70,
-- CPED_CONFIG_FLAG_Knockedout = 71,
-- _0x3E3C4560 = 72,
-- _0x2994C7B7 = 73,
-- _0x6D59D275 = 74,
-- CPED_CONFIG_FLAG_UsingCoverPoint = 75,
-- CPED_CONFIG_FLAG_IsInTheAir = 76,
-- _0x2D493FB7 = 77,
-- CPED_CONFIG_FLAG_IsAimingGun = 78,
-- _0x14D69875 = 79,
-- _0x40B05311 = 80,
-- _0x8B230BC5 = 81,
-- _0xC74E5842 = 82,
-- _0x9EA86147 = 83,
-- _0x674C746C = 84,
-- _0x3E56A8C2 = 85,
-- _0xC144A1EF = 86,
-- _0x0548512D = 87,
-- _0x31C93909 = 88,
-- _0xA0269315 = 89,
-- _0xD4D59D4D = 90,
-- _0x411D4420 = 91,
-- _0xDF4AEF0D = 92,
-- CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
-- _0x300E4CD3 = 94,
-- _0xF1C5BF04 = 95,
-- _0x89C2EF13 = 96,
-- CPED_CONFIG_FLAG_VaultFromCover = 97,
-- _0x02A852C8 = 98,
-- _0x3D9407F1 = 99,
-- _0x319B4558 = 100,
-- CPED_CONFIG_FLAG_ForcedAim = 101,
-- _0xB942D71A = 102,
-- _0xD26C55A8 = 103,
-- _0xB89E703B = 104,
-- CPED_CONFIG_FLAG_ForceReload = 105,
-- _0xD9E73DA2 = 106,
-- _0xFF71DC2C = 107,
-- _0x1E27E8D8 = 108,
-- _0xF2C53966 = 109,
-- _0xC4DBE247 = 110,
-- _0x83C0A4BF = 111,
-- _0x0E0FAF8C = 112,
-- _0x26616660 = 113,
-- _0x43B80B79 = 114,
-- _0x0D2A9309 = 115,
-- _0x12C1C983 = 116,
-- CPED_CONFIG_FLAG_BumpedByPlayer = 117,
-- _0xE586D504 = 118,
-- _0x52374204 = 119,
-- CPED_CONFIG_FLAG_IsHandCuffed = 120,
-- CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
-- CPED_CONFIG_FLAG_DisableMelee = 122,
-- _0xFE714397 = 123,
-- _0xB3E660BD = 124,
-- _0x5FED6BFD = 125,
-- _0xC9D6F66F = 126,
-- _0x519BC986 = 127,
-- CPED_CONFIG_FLAG_CanBeAgitated = 128,
-- _0x9A4B617C = 129, // CPED_CONFIG_FLAG_FaceDirInsult
-- _0xDAB70E9F = 130,
-- _0xE569438A = 131,
-- _0xBBC77D6D = 132,
-- _0xCB59EF0F = 133,
-- _0x8C5EA971 = 134,
-- CPED_CONFIG_FLAG_IsScuba = 135,
-- CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
-- _0xDCE59B58 = 137,
-- CPED_CONFIG_FLAG_RidingTrain = 138,
-- CPED_CONFIG_FLAG_ArrestResult = 139,
-- CPED_CONFIG_FLAG_CanAttackFriendly = 140,
-- _0x98A4BE43 = 141,
-- _0x6901E731 = 142,
-- _0x9EC9BF6C = 143,
-- _0x42841A8F = 144,
-- CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
-- CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
-- CPED_CONFIG_FLAG_StairsDetected = 147,
-- CPED_CONFIG_FLAG_SlopeDetected = 148,
-- _0x1A15670B = 149,
-- _0x61786EE5 = 150,
-- _0xCB9186BD = 151,
-- _0xF0710152 = 152,
-- _0x43DFE310 = 153,
-- _0xC43C624E = 154,
-- CPED_CONFIG_FLAG_CanPerformArrest = 155,
-- CPED_CONFIG_FLAG_CanPerformUncuff = 156,
-- CPED_CONFIG_FLAG_CanBeArrested = 157,
-- _0xF7960FF5 = 158,
-- _0x59564113 = 159,
-- _0x0C6C3099 = 160,
-- _0x645F927A = 161,
-- _0xA86549B9 = 162,
-- _0x8AAF337A = 163,
-- _0x13BAA6E7 = 164,
-- _0x5FB9D1F5 = 165,
-- CPED_CONFIG_FLAG_IsInjured = 166,
-- _0x6398A20B = 167,
-- _0xD8072639 = 168,
-- _0xA05B1845 = 169,
-- _0x83F6D220 = 170,
-- _0xD8430331 = 171,
-- _0x4B547520 = 172,
-- _0xE66E1406 = 173,
-- _0x1C4BFE0C = 174,
-- _0x90008BFA = 175,
-- _0x07C7A910 = 176,
-- _0xF15F8191 = 177,
-- _0xCE4E8BE2 = 178,
-- _0x1D46E4F2 = 179,
-- CPED_CONFIG_FLAG_IsInCustody = 180,
-- _0xE4FD9B3A = 181,
-- _0x67AE0812 = 182,
-- CPED_CONFIG_FLAG_IsAgitated = 183,
-- CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
-- _0x7B2D325E = 185,
-- CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
-- CPED_CONFIG_FLAG_HasHurtStarted = 187,
-- CPED_CONFIG_FLAG_DisableHurt = 188,
-- CPED_CONFIG_FLAG_PlayerIsWeird = 189,
-- _0x32FC208B = 190,
-- _0x0C296E5A = 191,
-- _0xE63B73EC = 192,
-- _0x04E9CC80 = 193,
-- CPED_CONFIG_FLAG_UsingScenario = 194,
-- CPED_CONFIG_FLAG_VisibleOnScreen = 195,
-- _0xD88C58A1 = 196,
-- _0x5A3DCF43 = 197, // CPED_CONFIG_FLAG_AvoidUnderSide
-- _0xEA02B420 = 198,
-- _0x3F559CFF = 199,
-- _0x8C55D029 = 200,
-- _0x5E6466F6 = 201,
-- _0xEB5AD706 = 202,
-- _0x0EDDDDE7 = 203,
-- _0xA64F7B1D = 204,
-- _0x48532CBA = 205,
-- _0xAA25A9E7 = 206,
-- _0x415B26B9 = 207,
-- CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
-- CPED_CONFIG_FLAG_DodgedPlayer = 209,
-- _0x67405504 = 210,
-- _0x75DDD68C = 211,
-- _0x2AD879B4 = 212,
-- _0x51486F91 = 213,
-- _0x32F79E21 = 214,
-- _0xBF099213 = 215,
-- _0x054AC8E2 = 216,
-- _0x14E495CC = 217,
-- _0x3C7DF9DF = 218,
-- _0x848FFEF2 = 219,
-- CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
-- _0x2618E1CF = 221,
-- _0x84F722FA = 222,
-- _0xD1B87B1F = 223,
-- _0x728AA918 = 224,
-- CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
-- CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
-- _0x59E91185 = 227,
-- _0x1EA7225F = 228,
-- CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
-- _0x6DCA7D88 = 230,
-- _0xFC3E572D = 231,
-- _0x08E9F9CF = 232,
-- _0x2D3BA52D = 233,
-- _0xFD2F53EA = 234,
-- _0x31A1B03B = 235,
-- CPED_CONFIG_FLAG_IsHoldingProp = 236,
-- _0x82ED0A66 = 237, // CPED_CONFIG_FLAG_BlocksPathingWhenDead
-- _0xCE57C9A3 = 238,
-- _0x26149198 = 239,
-- _0x1B33B598 = 240,
-- _0x719B6E87 = 241,
-- _0x13E8E8E8 = 242,
-- _0xF29739AE = 243,
-- _0xABEA8A74 = 244,
-- _0xB60EA2BA = 245,
-- _0x536B0950 = 246,
-- _0x0C754ACA = 247,
-- CPED_CONFIG_FLAG_DisableVehicleSeatRandomAnimations = 248,
-- _0x12659168 = 249,
-- _0x1BDF2F04 = 250,
-- _0x7728FAA3 = 251,
-- _0x6A807ED8 = 252,
-- CPED_CONFIG_FLAG_OnStairs = 253,
-- _0xE1A2F73F = 254,
-- _0x5B3697C8 = 255,
-- _0xF1EB20A9 = 256,
-- _0x8B7DF407 = 257,
-- _0x329DCF1A = 258,
-- _0x8D90DD1B = 259,
-- _0xB8A292B7 = 260,
-- _0x8374B087 = 261,
-- _0x2AF558F0 = 262,
-- _0x82251455 = 263,
-- _0x30CF498B = 264,
-- _0xE1CD50AF = 265,
-- _0x72E4AE48 = 266,
-- _0xC2657EA1 = 267,
-- _0x29FF6030 = 268,
-- _0x8248A5EC = 269,
-- CPED_CONFIG_FLAG_OnStairSlope = 270,
-- _0xA0897933 = 271,
-- CPED_CONFIG_FLAG_DontBlipCop = 272,
-- CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
-- _0xF7823618 = 274,
-- _0xDC305CCE = 275, // CPED_CONFIG_FLAG_KillWhenTrapped
-- CPED_CONFIG_FLAG_EdgeDetected = 276,
-- _0x92B67896 = 277,
-- _0xCAD677C9 = 278,
-- CPED_CONFIG_FLAG_AvoidTearGas = 279,
-- _0x5276AC7B = 280,
-- _0x1032692A = 281,
-- _0xDA23E7F1 = 282,
-- _0x9139724D = 283,
-- _0xA1457461 = 284,
-- _0x4186E095 = 285,
-- _0xAC68E2EB = 286,
-- CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
-- CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
-- _0x1B9EE8A1 = 289,
-- _0xF3F5758C = 290,
-- _0x2A9307F1 = 291,
-- _0x7403D216 = 292,
-- _0xA06A3C6C = 293,
-- CPED_CONFIG_FLAG_DisableShockingEvents = 294,
-- _0xF8DA25A5 = 295,
-- _0x7EF55802 = 296,
-- _0xB31F1187 = 297,
-- _0x84315402 = 298,
-- _0x0FD69867 = 299,
-- _0xC7829B67 = 300,
-- CPED_CONFIG_FLAG_DisablePedConstraints = 301,
-- _0x6D23CF25 = 302,
-- _0x2ADA871B = 303,
-- _0x47BC8A58 = 304,
-- _0xEB692FA5 = 305,
-- _0x4A133C50 = 306,
-- _0xC58099C3 = 307,
-- _0xF3D76D41 = 308,
-- _0xB0EEE9F2 = 309,
-- CPED_CONFIG_FLAG_IsInCluster = 310,
-- _0x0FA153EF = 311,
-- _0xD73F5CD3 = 312,
-- _0xD4136C22 = 313,
-- _0xE404CA6B = 314,
-- _0xB9597446 = 315,
-- _0xD5C98277 = 316,
-- _0xD5060A9C = 317,
-- _0x3E5F1CBB = 318,
-- _0xD8BE1D54 = 319,
-- _0x0B1F191F = 320,
-- _0xC995167A = 321,
-- CPED_CONFIG_FLAG_HasHighHeels = 322,
-- _0x86B01E54 = 323,
-- _0x3A56FE15 = 324,
-- _0xC03B736C = 325, // CPED_CONFIG_FLAG_SpawnedAtScenario
-- _0xBBF47729 = 326,
-- _0x22B668A8 = 327,
-- _0x2624D4D4 = 328,
-- CPED_CONFIG_FLAG_DisableTalkTo = 329,
-- CPED_CONFIG_FLAG_DontBlip = 330,
-- CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
-- _0x630F55F3 = 332,
-- _0x150468FD = 333,
-- _0x914EBD6B = 334,
-- _0x79AF3B6D = 335,
-- _0x75C7A632 = 336,
-- _0x52D530E2 = 337,
-- _0xDB2A90E0 = 338,
-- _0x5922763D = 339,
-- _0x12ADB567 = 340,
-- _0x105C8518 = 341,
-- _0x106F703D = 342,
-- _0xED152C3E = 343,
-- _0xA0EFE6A8 = 344,
-- _0xBF348C82 = 345,
-- _0xCDDFE830 = 346,
-- _0x7B59BD9B = 347,
-- _0x0124C788 = 348,
-- CPED_CONFIG_FLAG_EquipJetpack = 349,
-- _0x08D361A5 = 350,
-- _0xE13D1F7C = 351,
-- _0x40E25FB9 = 352,
-- _0x930629D9 = 353,
-- _0xECCF0C7F = 354,
-- _0xB6E9613B = 355,
-- _0x490C0478 = 356,
-- _0xE8865BEA = 357,
-- _0xF3C34A29 = 358,
-- CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
-- _0xF660E115 = 360,
-- _0xAB0E6DED = 361,
-- CPED_CONFIG_FLAG_HasReserveParachute = 362,
-- CPED_CONFIG_FLAG_UseReserveParachute = 363,
-- _0x5C5D9CD3 = 364,
-- _0x8F7701F3 = 365,
-- _0xBC4436AD = 366,
-- _0xD7E07D37 = 367,
-- _0x03C4FD24 = 368,
-- _0x7675789A = 369,
-- _0xB7288A88 = 370,
-- _0xC06B6291 = 371,
-- _0x95A4A805 = 372,
-- _0xA8E9A042 = 373,
-- CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
-- _0xBAC674B3 = 375,
-- _0x147F1FFB = 376,
-- _0x4376DD79 = 377,
-- _0xCD3DB518 = 378,
-- _0xFE4BA4B6 = 379,
-- _0x5DF03A55 = 380,
-- _0xBCD816CD = 381,
-- _0xCF02DD69 = 382,
-- _0xF73AFA2E = 383,
-- _0x80B9A9D0 = 384,
-- _0xF601F7EE = 385,
-- _0xA91350FC = 386,
-- _0x3AB23B96 = 387,
-- CPED_CONFIG_FLAG_IsClimbingLadder = 388,
-- CPED_CONFIG_FLAG_HasBareFeet = 389,
-- _0xB4B1CD4C = 390,
-- _0x5459AFB8 = 391,
-- _0x54F27667 = 392,
-- _0xC11D3E8F = 393,
-- _0x5419EB3E = 394,
-- _0x82D8DBB4 = 395,
-- _0x33B02D2F = 396,
-- _0xAE66176D = 397,
-- _0xA2692593 = 398,
-- _0x714C7E31 = 399,
-- _0xEC488AC7 = 400,
-- _0xAE398504 = 401,
-- _0xABC58D72 = 402,
-- _0x5E5B9591 = 403,
-- _0x6BA1091E = 404,
-- _0x77840177 = 405,
-- _0x1C7ACAC4 = 406,
-- _0x124420E9 = 407,
-- _0x75A65587 = 408,
-- _0xDFD2D55B = 409,
-- _0xBDD39919 = 410,
-- _0x43DEC267 = 411,
-- _0xE42B7797 = 412,
-- CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
-- _0x4F8149F5 = 414,
-- _0xDD9ECA7A = 415,
-- _0x9E7EF9D2 = 416,
-- _0x2C6ED942 = 417,
-- CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
-- _0xA488727D = 419,
-- _0xCFF5F6DE = 420,
-- _0x6D614599 = 421,
-- CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
-- _0xFE401D26 = 423,
-- CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
-- _0x2B42AE82 = 425,
-- _0x7A95734F = 426,
-- _0xDF4D8617 = 427,
-- _0x578F1F14 = 428,
-- CPED_CONFIG_FLAG_DisableStartEngine = 429,
-- CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
-- _0x153C9500 = 431,
-- _0xCB7A632E = 432,
-- _0xDE727981 = 433,
-- CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
-- _0x12BBB935 = 435,
-- _0xAD0A1277 = 436,
-- _0xEA6AA46A = 437,
-- CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
-- _0xCB7F3A1E = 439,
-- _0x50178878 = 440,
-- _0x051B4F0D = 441,
-- _0x2FC3DECC = 442,
-- _0xC0030B0B = 443,
-- _0xBBDAF1E9 = 444,
-- _0x944FE59C = 445,
-- _0x506FBA39 = 446,
-- _0xDD45FE84 = 447,
-- _0xE698AE75 = 448,
-- _0x199633F8 = 449,
-- CPED_CONFIG_FLAG_PedIsArresting = 450,
-- CPED_CONFIG_FLAG_IsDecoyPed = 451,
-- _0x3A251D83 = 452,
-- _0xA56F6986 = 453,
-- _0x1D19C622 = 454,
-- _0xB68D3EAB = 455,
-- CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
-- _0x4BD5EBAD = 457,
-- }
function Global.SetPedConfigFlag(ped, flagId, value)
	return _in(0x1913FE4CBF41C463, ped, flagId, value)
end

--- teleports ped to coords along with the vehicle ped is in
function Global.SetPedCoordsKeepVehicle(ped, posX, posY, posZ)
	return _in(0x9AFEFF481A85AB2E, ped, posX, posY, posZ)
end

--- SET_PED_COORDS_NO_GANG
function Global.SetPedCoordsNoGang(ped, posX, posY, posZ)
	return _in(0x87052FE446E07247, ped, posX, posY, posZ)
end

--- Found in the b617d scripts:
-- PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
-- SET_PED_MO*
function Global.SetPedCoverClipsetOverride(ped, p1)
	return _in(0x9DBA107B4937F809, ped, _ts(p1))
end
Global.N_0x9dba107b4937f809 = Global.SetPedCoverClipsetOverride

--- p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
function Global.SetPedCowerHash(ped, p1)
	return _in(0xA549131166868ED3, ped, _ts(p1))
end

--- Has 5 parameters since latest patches.
function Global.SetPedCurrentWeaponVisible(ped, visible, deselectWeapon, p3, p4)
	return _in(0x0725A4CCFDED9A70, ped, visible, deselectWeapon, p3, p4)
end

--- Sets Ped Default Clothes
function Global.SetPedDefaultComponentVariation(ped)
	return _in(0x45EEE61580806D63, ped)
end

--- SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED
function Global.SetPedDefensiveAreaAttachedToPed(ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0x4EF47FE21698A8B6, ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- SET_PED_DEFENSIVE_AREA_DIRECTION
function Global.SetPedDefensiveAreaDirection(ped, p1, p2, p3, p4)
	return _in(0x413C6C763A4AFFAD, ped, p1, p2, p3, p4)
end

--- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED
function Global.SetPedDefensiveSphereAttachedToPed(ped, target, xOffset, yOffset, zOffset, radius, p6)
	return _in(0xF9B8F91AAD3B953E, ped, target, xOffset, yOffset, zOffset, radius, p6)
end
Global.N_0xf9b8f91aad3b953e = Global.SetPedDefensiveSphereAttachedToPed

--- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE
function Global.SetPedDefensiveSphereAttachedToVehicle(ped, target, xOffset, yOffset, zOffset, radius, p6)
	return _in(0xE4723DB6E736CCFF, ped, target, xOffset, yOffset, zOffset, radius, p6)
end
Global.N_0xe4723db6e736ccff = Global.SetPedDefensiveSphereAttachedToVehicle

--- **Usage:** Call this native every frame
-- @param multiplier Adjust from 0.0 (minimum, indicating no pedestrians in the street) to 1.0 (maximum, representing a normal amount of pedestrians on the street).
function Global.SetPedDensityMultiplierThisFrame(multiplier)
	return _in(0x95E3D6257B166CF2, multiplier)
end

--- SET_PED_DESIRED_HEADING
function Global.SetPedDesiredHeading(ped, heading)
	return _in(0xAA5A7ECE2AA8FE70, ped, heading)
end

--- SET_PED_DESIRED_MOVE_BLEND_RATIO
function Global.SetPedDesiredMoveBlendRatio(ped, p1)
	return _in(0x1E982AC8716912C5, ped, p1)
end

--- SET_PED_DIES_IN_SINKING_VEHICLE
function Global.SetPedDiesInSinkingVehicle(ped, toggle)
	return _in(0xD718A22995E2B4BC, ped, toggle)
end

--- SET_PED_DIES_IN_VEHICLE
function Global.SetPedDiesInVehicle(ped, toggle)
	return _in(0x2A30922C90C9B42C, ped, toggle)
end

--- SET_PED_DIES_IN_WATER
function Global.SetPedDiesInWater(ped, toggle)
	return _in(0x56CEF0AC79073BDE, ped, toggle)
end

--- SET_PED_DIES_INSTANTLY_IN_WATER
function Global.SetPedDiesInstantlyInWater(ped, toggle)
	return _in(0xEEB64139BA29A7CF, ped, toggle)
end

--- SET_PED_DIES_WHEN_INJURED
function Global.SetPedDiesWhenInjured(ped, toggle)
	return _in(0x5BA7919BED300023, ped, toggle)
end

--- SET_PED_DRIVE_BY_CLIPSET_OVERRIDE
function Global.SetPedDriveByClipsetOverride(ped, clipset)
	return _in(0xED34AB6C5CB36520, ped, _ts(clipset))
end

--- SET_PED_DROPS_INVENTORY_WEAPON
function Global.SetPedDropsInventoryWeapon(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount)
	return _in(0x208A1888007FC0E6, ped, _ch(weaponHash), xOffset, yOffset, zOffset, ammoCount)
end

--- SET_PED_DROPS_WEAPON
function Global.SetPedDropsWeapon(ped)
	return _in(0x6B7513D9966FBEC0, ped)
end

--- SET_PED_DROPS_WEAPONS_WHEN_DEAD
function Global.SetPedDropsWeaponsWhenDead(ped, toggle)
	return _in(0x476AE72C1D19D1A8, ped, toggle)
end

--- This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
function Global.SetPedDucking(ped, toggle)
	return _in(0x030983CA930B692D, ped, toggle)
end

--- This native sets the glow intensity of illuminated clothing items.
-- This native does **NOT** need to be executed every tick.
-- This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
-- Glow intensity is a value between `0.0` and `1.0`.
-- In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
-- Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
-- Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
-- Intensity: `1.0`:
-- ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)
-- Intensity: `0.0`:
-- ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)
-- **Examples code result**:
-- ![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)
-- (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
-- @param ped The ped to set the glow intensity on.
-- @param intensity The glow intensity, value between `0.0` and `1.0`.
function Global.SetPedEmissiveIntensity(ped, intensity)
	return _in(0x4E90D746056E273D, ped, intensity)
end
Global.N_0x4e90d746056e273d = Global.SetPedEmissiveIntensity
Global.SetPedIlluminatedClothingGlowIntensity = Global.SetPedEmissiveIntensity

--- SET_PED_ENABLE_WEAPON_BLOCKING
function Global.SetPedEnableWeaponBlocking(ped, toggle)
	return _in(0x97A790315D3831FD, ped, toggle)
end

--- Something related to the environmental effects natives.
-- In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
function Global.SetPedEnveffColorModulator(ped, r, g, b)
	return _in(0xD69411AA0CEBF9E9, ped, r, g, b)
end
Global.N_0xd69411aa0cebf9e9 = Global.SetPedEnveffColorModulator

--- Values look to be between 0.0 and 1.0
-- From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
-- You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
function Global.SetPedEnveffScale(ped, value)
	return _in(0xBF29516833893561, ped, value)
end

--- Used for freemode (online) characters.
-- Indices:
-- 1.  black
-- 2.  very light blue/green
-- 3.  dark blue
-- 4.  brown
-- 5.  darker brown
-- 6.  light brown
-- 7.  blue
-- 8.  light blue
-- 9.  pink
-- 10. yellow
-- 11. purple
-- 12. black
-- 13. dark green
-- 14. light brown
-- 15. yellow/black pattern
-- 16. light colored spiral pattern
-- 17. shiny red
-- 18. shiny half blue/half red
-- 19. half black/half light blue
-- 20. white/red perimter
-- 21. green snake
-- 22. red snake
-- 23. dark blue snake
-- 24. dark yellow
-- 25. bright yellow
-- 26. all black
-- 27. red small pupil
-- 28. devil blue/black
-- 29. white small pupil
-- 30. glossed over
function Global.SetPedEyeColor(ped, index)
	return _in(0x50B56988B170AFDF, ped, index)
end

--- Sets the various freemode face features, e.g. nose length, chin shape.
-- **Indexes (From 0 to 19):**
-- Parentheses indicate morph scale/direction as in (-1.0 to 1.0)
-- *   **0**: Nose Width (Thin/Wide)
-- *   **1**: Nose Peak (Up/Down)
-- *   **2**: Nose Length (Long/Short)
-- *   **3**: Nose Bone Curveness (Crooked/Curved)
-- *   **4**: Nose Tip (Up/Down)
-- *   **5**: Nose Bone Twist (Left/Right)
-- *   **6**: Eyebrow (Up/Down)
-- *   **7**: Eyebrow (In/Out)
-- *   **8**: Cheek Bones (Up/Down)
-- *   **9**: Cheek Sideways Bone Size (In/Out)
-- *   **10**: Cheek Bones Width (Puffed/Gaunt)
-- *   **11**: Eye Opening (Both) (Wide/Squinted)
-- *   **12**: Lip Thickness (Both) (Fat/Thin)
-- *   **13**: Jaw Bone Width (Narrow/Wide)
-- *   **14**: Jaw Bone Shape (Round/Square)
-- *   **15**: Chin Bone (Up/Down)
-- *   **16**: Chin Bone Length (In/Out or Backward/Forward)
-- *   **17**: Chin Bone Shape (Pointed/Square)
-- *   **18**: Chin Hole (Chin Bum)
-- *   **19**: Neck Thickness (Thin/Thick)
-- **Note:**
-- You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
-- @param ped The ped entity
-- @param index An integer ranging from 0 to 19
-- @param scale A float ranging from -1.0 to 1.0
function Global.SetPedFaceFeature(ped, index, scale)
	return _in(0x71A5C1DBA060049E, ped, index, scale)
end

--- FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
-- FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
-- FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
-- FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
-- FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
-- FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
-- FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
-- FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
-- FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
-- FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
-- FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
-- FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
-- FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
-- FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
-- FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
-- FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
-- if anyone is interested firing pattern info: pastebin.com/Px036isB
function Global.SetPedFiringPattern(ped, patternHash)
	return _in(0x9AC577F5A12AD8A9, ped, _ch(patternHash))
end

--- bit 15 (0x8000) = force cower
function Global.SetPedFleeAttributes(ped, attributeFlags, enable)
	return _in(0x70A2D1137C8ED7C9, ped, attributeFlags, enable)
end

--- p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
-- p2 is always true.
function Global.SetPedGadget(ped, gadgetHash, p2)
	return _in(0xD0D7B1E680ED4A1A, ped, _ch(gadgetHash), p2)
end

--- SET_PED_GENERATES_DEAD_BODY_EVENTS
function Global.SetPedGeneratesDeadBodyEvents(ped, toggle)
	return _in(0x7FB17BA2E7DECA5B, ped, toggle)
end

--- From the scripts:
-- PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
-- "ANIM_GROUP_GESTURE_MISS_FRA0");
-- PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
-- "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
function Global.SetPedGestureGroup(ped, animGroupGesture)
	return _in(0xDDF803377F94AAA8, ped, _ts(animGroupGesture))
end

--- SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE
function Global.SetPedGetOutUpsideDownVehicle(ped, toggle)
	return _in(0xBC0ED94165A48BC2, ped, toggle)
end

--- enable or disable the gravity of a ped
-- Examples:
-- PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);
-- PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);
function Global.SetPedGravity(ped, toggle)
	return _in(0x9FF447B6B6AD960A, ped, toggle)
end

--- SET_PED_GROUP_MEMBER_PASSENGER_INDEX
function Global.SetPedGroupMemberPassengerIndex(ped, index)
	return _in(0x0BDDB8D9EC6BCF3C, ped, index)
end

--- Sets the tint index for the hair on the specified ped.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param ped The Ped whose hair tint is to be set.
-- @param colorID The tint index for the primary hair color.
-- @param highlightColorID The tint index for the hair highlight color.
function Global.SetPedHairTint(ped, colorID, highlightColorID)
	return _in(0x4CFFC65454C93A49, ped, colorID, highlightColorID)
end
Global.SetPedHairColor = Global.SetPedHairTint

--- This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
-- See gtaforums.com/topic/884370-native-research-ai-blips for further information.
function Global.SetPedHasAiBlip(ped, hasCone)
	return _in(0xD30C50DF888D58B5, ped, hasCone)
end
Global.N_0xd30c50df888d58b5 = Global.SetPedHasAiBlip
Global.SetPedEnemyAiBlip = Global.SetPedHasAiBlip
Global.SetPedAiBlip = Global.SetPedHasAiBlip

--- _SET_PED_HAS_AI_BLIP_WITH_COLOR
-- @param color See [`SET_BLIP_COLOUR`](#\_0x03D7FB09E75D6B7E).
function Global.SetPedHasAiBlipWithColor(ped, hasCone, color)
	return _in(0xB13DCB4C6FAAD238, ped, hasCone, color)
end
Global.N_0xb13dcb4c6faad238 = Global.SetPedHasAiBlipWithColor

--- For more info please refer to [this](https://gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained) topic.
-- **Other information:**
-- IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.</br>
-- This native function is often called prior to calling natives such as:
-- *   [`SetPedHairColor`](#\_0xBB43F090)
-- *   [`SetPedHeadOverlayColor`](#\_0x78935A27)
-- *   [`SetPedHeadOverlay`](#\_0xD28DBA90)
-- *   [`SetPedFaceFeature`](#\_0x6C8D4458)
-- @param ped The ped entity
-- @param shapeFirstID Controls the shape of the first ped's face
-- @param shapeSecondID Controls the shape of the second ped's face
-- @param shapeThirdID Controls the shape of the third ped's face
-- @param skinFirstID Controls the first id's skin tone
-- @param skinSecondID Controls the second id's skin tone
-- @param skinThirdID Controls the third id's skin tone
-- @param shapeMix 0.0 - 1.0 Of whose characteristics to take Mother -> Father (shapeFirstID and shapeSecondID)
-- @param skinMix 0.0 - 1.0 Of whose characteristics to take Mother -> Father (skinFirstID and skinSecondID)
-- @param thirdMix Overrides the others in favor of the third IDs.
-- @param isParent IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
function Global.SetPedHeadBlendData(ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
	return _in(0x9414E18B9434C2FE, ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
end

--- ```
-- OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
-- overlayID       Part                  Index, to disable
-- 0               Blemishes             0 - 23, 255
-- 1               Facial Hair           0 - 28, 255
-- 2               Eyebrows              0 - 33, 255
-- 3               Ageing                0 - 14, 255
-- 4               Makeup                0 - 74, 255
-- 5               Blush                 0 - 6, 255
-- 6               Complexion            0 - 11, 255
-- 7               Sun Damage            0 - 10, 255
-- 8               Lipstick              0 - 9, 255
-- 9               Moles/Freckles        0 - 17, 255
-- 10              Chest Hair            0 - 16, 255
-- 11              Body Blemishes        0 - 11, 255
-- 12              Add Body Blemishes    0 - 1, 255
-- ```
-- **Note:**
-- You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
-- @param ped The ped entity
-- @param overlayID The overlay id displayed up above.
-- @param index An integer representing the index (from 0 to `_GET_NUM_OVERLAY_VALUES(overlayID)-1`)
-- @param opacity A float ranging from 0.0 to 1.0
function Global.SetPedHeadOverlay(ped, overlayID, index, opacity)
	return _in(0x48F44967FA05CC1E, ped, overlayID, index, opacity)
end

--- ```
-- Used for freemode (online) characters.
-- Called after SET_PED_HEAD_OVERLAY().
-- ```
-- **Note:**
-- You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
-- @param ped The ped entity
-- @param overlayID An integer representing the overlay id
-- @param colorType 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
-- @param colorID An integer representing the primary color id
-- @param secondColorID An integer representing the secondary color id
function Global.SetPedHeadOverlayColor(ped, overlayID, colorType, colorID, secondColorID)
	return _in(0x497BF74A7B9CB952, ped, overlayID, colorType, colorID, secondColorID)
end

--- SET_PED_HEARING_RANGE
function Global.SetPedHearingRange(ped, value)
	return _in(0x33A8F7F7D5F7F33C, ped, value)
end

--- SET_PED_HEATSCALE_OVERRIDE
function Global.SetPedHeatscaleOverride(ped, heatScale)
	return _in(0xC1F6EBF9A3D55538, ped, heatScale)
end
Global.N_0xc1f6ebf9a3d55538 = Global.SetPedHeatscaleOverride

--- Sets whether a pedestrian should wear a helmet.
-- @param ped Ped index.
-- @param bEnable Boolean value that indicates whether the helmet should be worn or not.
function Global.SetPedHelmet(ped, bEnable)
	return _in(0x560A43136EB58105, ped, bEnable)
end

--- SET_PED_HELMET_FLAG
function Global.SetPedHelmetFlag(ped, helmetFlag)
	return _in(0xC0E78D5C2CE3EB25, ped, helmetFlag)
end

--- NativeDB Added Parameter 3: BOOL p2
-- @param ped The ped handle.
-- @param propIndex The prop index to set the helmet to. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F).
function Global.SetPedHelmetPropIndex(ped, propIndex)
	return _in(0x26D83693ED99291C, ped, propIndex)
end

--- SET_PED_HELMET_TEXTURE_INDEX
function Global.SetPedHelmetTextureIndex(ped, textureIndex)
	return _in(0xF1550C4BD22582E2, ped, textureIndex)
end

--- _SET_PED_HELMET_UNK
function Global.SetPedHelmetUnk(ped, p1, p2, p3)
	return _in(0x3F7325574E41B44D, ped, p1, p2, p3)
end
Global.N_0x3f7325574e41b44d = Global.SetPedHelmetUnk

--- SET_PED_HIGHLY_PERCEPTIVE
function Global.SetPedHighlyPerceptive(ped, toggle)
	return _in(0x52D59AB61DDC05DD, ped, toggle)
end
Global.N_0x52d59ab61ddc05dd = Global.SetPedHighlyPerceptive

--- SET_PED_ID_RANGE
function Global.SetPedIdRange(ped, value)
	return _in(0xF107E836A70DCE05, ped, value)
end

--- PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
function Global.SetPedInVehicleContext(ped, context)
	return _in(0x530071295899A8C6, ped, _ch(context))
end

--- SET_PED_INCREASED_AVOIDANCE_RADIUS
function Global.SetPedIncreasedAvoidanceRadius(ped)
	return _in(0x570389D1C3DE3C6B, ped)
end
Global.N_0x570389d1c3de3c6b = Global.SetPedIncreasedAvoidanceRadius

--- SET_PED_INFINITE_AMMO
function Global.SetPedInfiniteAmmo(ped, toggle, weaponHash)
	return _in(0x3EDCB0505123623B, ped, toggle, _ch(weaponHash))
end

--- SET_PED_INFINITE_AMMO_CLIP
function Global.SetPedInfiniteAmmoClip(ped, toggle)
	return _in(0x183DADC6AA953186, ped, toggle)
end

--- SET_PED_INTO_VEHICLE
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669). -2 for the first available seat.
function Global.SetPedIntoVehicle(ped, vehicle, seatIndex)
	return _in(0xF75B0D629E1C063D, ped, vehicle, seatIndex)
end

--- Sets the ped so they sound drunk
function Global.SetPedIsDrunk(ped, toggle)
	return _in(0x95D2D383D5396B8A, ped, toggle)
end

--- SET_PED_KEEP_TASK
function Global.SetPedKeepTask(ped, toggle)
	return _in(0x971D38760FBC02EF, ped, toggle)
end

--- "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
function Global.SetPedLegIkMode(ped, mode)
	return _in(0xC396F5B86FF9FEBD, ped, mode)
end

--- SET_PED_LOD_MULTIPLIER
function Global.SetPedLodMultiplier(ped, multiplier)
	return _in(0xDC2C5C242AAC342B, ped, multiplier)
end

--- sets the maximum health of a ped
-- I think it's never been used in any script
function Global.SetPedMaxHealth(ped, value)
	return _in(0xF5F6378C4F3419D3, ped, value)
end

--- SET_PED_MAX_MOVE_BLEND_RATIO
function Global.SetPedMaxMoveBlendRatio(ped, value)
	return _in(0x433083750C5E064A, ped, value)
end

--- SET_PED_MAX_TIME_IN_WATER
function Global.SetPedMaxTimeInWater(ped, value)
	return _in(0x43C851690662113D, ped, value)
end

--- Set the maximum time a ped can stay underwater. Maximum seems to be 50 seconds.
-- @param ped Ped id.
-- @param value Time in seconds. Maximum is 50.0, any value above will be changed to 50.0.
function Global.SetPedMaxTimeUnderwater(ped, value)
	return _in(0x6BA428C528D9E522, ped, value)
end

--- Override the limits on the number and types of melee combatants. The game is limited to at most ten combatants among the three types: primary, secondary, and observers.
-- This native infers the number of observers based on the primary and secondary counts.
-- @param primaryCount The number of peds that engage in combat (default: 1)
-- @param secondaryCount The number of peds that engage in taunting (default: 3)
-- @param populationPedCount The maximum number of population peds (ambient and scenario) that can engage in combat (default: 3)
function Global.SetPedMeleeCombatLimits(primaryCount, secondaryCount, populationPedCount)
	return _in(0x8e51ec29, primaryCount, secondaryCount, populationPedCount)
end

--- Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
function Global.SetPedMinGroundTimeForStungun(ped, ms)
	return _in(0xFA0675AB151073FA, ped, ms)
end

--- SET_PED_MIN_MOVE_BLEND_RATIO
function Global.SetPedMinMoveBlendRatio(ped, value)
	return _in(0x01A898D26E2333DD, ped, value)
end

--- SET_PED_MODEL_IS_SUPPRESSED
function Global.SetPedModelIsSuppressed(model, toggle)
	return _in(0xE163A4BCE4DE6F11, _ch(model), toggle)
end

--- Overrides a ped model personality type.
-- @param modelHash Ped's model.
-- @param personalityHash Personality hash.
function Global.SetPedModelPersonality(modelHash, personalityHash)
	return _in(0x46f6b38b, _ch(modelHash), _ch(personalityHash))
end

--- Maximum possible amount of money on MP is 2000. ~JX
-- -----------------------------------------------------------------------------
-- Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
function Global.SetPedMoney(ped, amount)
	return _in(0xA9C8960E8684C1B5, ped, amount)
end

--- SET_PED_MOTION_BLUR
function Global.SetPedMotionBlur(ped, toggle)
	return _in(0x0A986918B102B448, ped, toggle)
end

--- SET_PED_MOVE_ANIMS_BLEND_OUT
function Global.SetPedMoveAnimsBlendOut(ped)
	return _in(0x9E8C908F41584ECD, ped)
end

--- Min: 0.00
-- Max: 10.00
-- Can be used in combo with fast run cheat.
-- When value is set to 10.00:
-- Sprinting without fast run cheat: 66 m/s
-- Sprinting with fast run cheat: 77 m/s
-- Needs to be looped!
-- Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
function Global.SetPedMoveRateOverride(ped, value)
	return _in(0x085BF80FA50A39D1, ped, value)
end

--- List of movement clipsets:
-- Thanks to elsewhat for list.
-- "ANIM_GROUP_MOVE_BALLISTIC"
-- "ANIM_GROUP_MOVE_LEMAR_ALLEY"
-- "clipset@move@trash_fast_turn"
-- "FEMALE_FAST_RUNNER"
-- "missfbi4prepp1_garbageman"
-- "move_characters@franklin@fire"
-- "move_characters@Jimmy@slow@"
-- "move_characters@michael@fire"
-- "move_f@flee@a"
-- "move_f@scared"
-- "move_f@sexy@a"
-- "move_heist_lester"
-- "move_injured_generic"
-- "move_lester_CaneUp"
-- "move_m@bag"
-- "MOVE_M@BAIL_BOND_NOT_TAZERED"
-- "MOVE_M@BAIL_BOND_TAZERED"
-- "move_m@brave"
-- "move_m@casual@d"
-- "move_m@drunk@moderatedrunk"
-- "MOVE_M@DRUNK@MODERATEDRUNK"
-- "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
-- "MOVE_M@DRUNK@SLIGHTLYDRUNK"
-- "MOVE_M@DRUNK@VERYDRUNK"
-- "move_m@fire"
-- "move_m@gangster@var_e"
-- "move_m@gangster@var_f"
-- "move_m@gangster@var_i"
-- "move_m@JOG@"
-- "MOVE_M@PRISON_GAURD"
-- "MOVE_P_M_ONE"
-- "MOVE_P_M_ONE_BRIEFCASE"
-- "move_p_m_zero_janitor"
-- "move_p_m_zero_slow"
-- "move_ped_bucket"
-- "move_ped_crouched"
-- "move_ped_mop"
-- "MOVE_M@FEMME@"
-- "MOVE_F@FEMME@"
-- "MOVE_M@GANGSTER@NG"
-- "MOVE_F@GANGSTER@NG"
-- "MOVE_M@POSH@"
-- "MOVE_F@POSH@"
-- "MOVE_M@TOUGH_GUY@"
-- "MOVE_F@TOUGH_GUY@"
-- ~ NotCrunchyTaco
-- @param transitionSpeed time in seconds it takes to transition from one movement clipset to another.
function Global.SetPedMovementClipset(ped, clipSet, transitionSpeed)
	return _in(0xAF8A94EDE7712BEF, ped, _ts(clipSet), transitionSpeed)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
-- *untested but char *name could also be a hash for a localized string
function Global.SetPedNameDebug(ped, name)
	return _in(0x98EFA132A4117BE1, ped, _ts(name))
end

--- SET_PED_NEVER_LEAVES_GROUP
function Global.SetPedNeverLeavesGroup(ped, toggle)
	return _in(0x3DBFC55D5C9BB447, ped, toggle)
end

--- The distance between these points, is the diagonal of a box (remember it's 3D).
function Global.SetPedNonCreationArea(x1, y1, z1, x2, y2, z2)
	return _in(0xEE01041D559983EA, x1, y1, z1, x2, y2, z2)
end

--- SET_PED_PANIC_EXIT_SCENARIO
function Global.SetPedPanicExitScenario(ped, x, y, z)
	return _in(0xFE07FF6495D52E2A, ped, x, y, z, _ri)
end
Global.N_0xfe07ff6495d52e2a = Global.SetPedPanicExitScenario

--- SET_PED_PARACHUTE_TINT_INDEX
function Global.SetPedParachuteTintIndex(ped, tintIndex)
	return _in(0x333FC8DB079B7186, ped, tintIndex)
end

--- SET_PED_PATH_AVOID_FIRE
function Global.SetPedPathAvoidFire(ped, avoidFire)
	return _in(0x4455517B28441E60, ped, avoidFire)
end

--- SET_PED_PATH_CAN_DROP_FROM_HEIGHT
function Global.SetPedPathCanDropFromHeight(ped, Toggle)
	return _in(0xE361C5C71C431A4F, ped, Toggle)
end

--- SET_PED_PATH_CAN_USE_CLIMBOVERS
function Global.SetPedPathCanUseClimbovers(ped, Toggle)
	return _in(0x8E06A6FE76C9EFF4, ped, Toggle)
end

--- SET_PED_PATH_CAN_USE_LADDERS
function Global.SetPedPathCanUseLadders(ped, Toggle)
	return _in(0x77A5B103C87F476E, ped, Toggle)
end

--- Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
function Global.SetPedPathClimbCostModifier(ped, modifier)
	return _in(0x88E32DB8C1A4AA4B, ped, modifier)
end
Global.N_0x88e32db8c1a4aa4b = Global.SetPedPathClimbCostModifier

--- SET_PED_PATH_MAY_ENTER_WATER
function Global.SetPedPathMayEnterWater(ped, mayEnterWater)
	return _in(0xF35425A4204367EC, ped, mayEnterWater)
end
Global.SetPedPathsWidthPlant = Global.SetPedPathMayEnterWater

--- SET_PED_PATH_PREFER_TO_AVOID_WATER
function Global.SetPedPathPreferToAvoidWater(ped, avoidWater)
	return _in(0x38FE1EC73743793C, ped, avoidWater)
end

--- NativeDB Added Parameter 7: Any p6
function Global.SetPedPathsBackToOriginal(p0, p1, p2, p3, p4, p5)
	return _in(0xE04B48F2CC926253, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Added Parameter 8: Any p7
function Global.SetPedPathsInArea(x1, y1, z1, x2, y2, z2, unknown)
	return _in(0x34F060F4BF92E018, x1, y1, z1, x2, y2, z2, unknown)
end

--- Sets the palette index of a ped's phone.
-- | Value | Color      |
-- | :---: | :-----:    |
-- |  `0`  | Light Blue |
-- |  `1`  | Green      |
-- |  `2`  | Red        |
-- |  `3`  | Orange     |
-- |  `4`  | Grey       |
-- |  `5`  | Purple     |
-- |  `6`  | Pink       |
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param ped The Ped whose phone palette is to be set.
-- @param index The index of the color palette to apply to the ped's phone.
function Global.SetPedPhonePaletteIdx(ped, index)
	return _in(0x83A169EABCDB10A2, ped, index)
end
Global.N_0x83a169eabcdb10a2 = Global.SetPedPhonePaletteIdx

--- i could be time. Only example in the decompiled scripts uses it as -1.
function Global.SetPedPinnedDown(ped, pinned, i)
	return _in(0xAAD6D1ACF08F4612, ped, pinned, i, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.
-- ```
function Global.SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped, toggle)
	return _in(0x94D94BF1A75AED3D, ped, toggle)
end

--- Sets the memory budget level for ped population.
-- @param budgetLevel Ranges from `0` to `3`, where `0` is lowest (no peds) and `3` is the full budget level.
function Global.SetPedPopulationBudget(budgetLevel)
	return _in(0x8C95333CFC3340F3, budgetLevel)
end

--- SET_PED_PREFERRED_COVER_SET
function Global.SetPedPreferredCoverSet(ped, itemSet)
	return _in(0x8421EB4DA7E391B9, ped, itemSet)
end
Global.N_0x8421eb4da7e391b9 = Global.SetPedPreferredCoverSet

--- SET_PED_PRELOAD_PROP_DATA
-- @param ped The ped handle.
-- @param componentId The component that you want to set. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId The drawable id that is going to be set. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- @param textureId The texture id of the drawable. Refer to [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171).
function Global.SetPedPreloadPropData(ped, componentId, drawableId, textureId)
	return _in(0x2B16A3BFF1FBCE49, ped, componentId, drawableId, textureId, _r)
end
Global.N_0x2b16a3bff1fbce49 = Global.SetPedPreloadPropData
Global.IsPedPropValid = Global.SetPedPreloadPropData

--- from extreme3.c4
-- PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
-- p1 is probably componentId
function Global.SetPedPreloadVariationData(ped, slot, drawableId, textureId)
	return _in(0x39D55A620FCB6A3A, ped, slot, drawableId, textureId, _ri)
end
Global.N_0x39d55a620fcb6a3a = Global.SetPedPreloadVariationData

--- This is only called once in the scripts.
-- sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
-- sub_1CA8("WORLD_HUMAN_SMOKING", 2);
-- PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
function Global.SetPedPrimaryLookat(ped, lookAt)
	return _in(0xCD17B554996A8D9E, ped, lookAt)
end

--- This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
-- ### MP Freemode list of props
-- **0**: Hats
-- **1**: Glasses
-- **2**: Ears
-- **6**: Watches
-- **7**: Bracelets
-- List of Prop IDs
-- ```cpp
-- // Props
-- enum eAnchorPoints
-- {
-- ANCHOR_HEAD = 0, // "p_head"
-- ANCHOR_EYES = 1, // "p_eyes"
-- ANCHOR_EARS = 2, // "p_ears"
-- ANCHOR_MOUTH = 3, // "p_mouth"
-- ANCHOR_LEFT_HAND = 4, // "p_lhand"
-- ANCHOR_RIGHT_HAND = 5, // "p_rhand"
-- ANCHOR_LEFT_WRIST = 6, // "p_lwrist"
-- ANCHOR_RIGHT_WRIST = 7, // "p_rwrist"
-- ANCHOR_HIP = 8, // "p_lhip"
-- ANCHOR_LEFT_FOOT = 9, // "p_lfoot"
-- ANCHOR_RIGHT_FOOT = 10, // "p_rfoot"
-- ANCHOR_PH_L_HAND = 11, // "ph_lhand"
-- ANCHOR_PH_R_HAND = 12, // "ph_rhand"
-- NUM_ANCHORS = 13,
-- };
-- ```
-- @param ped The ped handle.
-- @param componentId The component that you want to set. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId The drawable id that is going to be set. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- @param textureId The texture id of the drawable. Refer to [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171).
-- @param attach Attached or not.
function Global.SetPedPropIndex(ped, componentId, drawableId, textureId, attach)
	return _in(0x93376B65A266EB5F, ped, componentId, drawableId, textureId, attach)
end

--- SET_PED_RACE_AND_VOICE_GROUP
-- @param pvgHash PedVoiceGroup hash, defaults to 0
function Global.SetPedRaceAndVoiceGroup(ped, pedRace, pvgHash)
	return _in(0x1B7ABE26CBCBF8C7, ped, pedRace, pvgHash)
end
Global.N_0x1b7abe26cbcbf8c7 = Global.SetPedRaceAndVoiceGroup

--- SET_PED_RAGDOLL_FORCE_FALL
function Global.SetPedRagdollForceFall(ped)
	return _in(0x01F6594B923B9251, ped)
end

--- Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
-- Needs to be recalled after each ragdoll from a Collision.
function Global.SetPedRagdollOnCollision(ped, toggle)
	return _in(0xF0A4F1BBF4FA7497, ped, toggle)
end

--- p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.
function Global.SetPedRandomComponentVariation(ped, p1)
	return _in(0xC8A9481A01E63C28, ped, p1)
end

--- SET_PED_RANDOM_PROPS
-- @param ped The ped handle.
function Global.SetPedRandomProps(ped)
	return _in(0xC44AA05345C992C6, ped)
end

--- SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
function Global.SetPedRelationshipGroupDefaultHash(ped, hash)
	return _in(0xADB3F206518799E8, ped, _ch(hash))
end

--- SET_PED_RELATIONSHIP_GROUP_HASH
function Global.SetPedRelationshipGroupHash(ped, hash)
	return _in(0xC80A74AC829DDD92, ped, _ch(hash))
end

--- SET_PED_RESERVE_PARACHUTE_TINT_INDEX
function Global.SetPedReserveParachuteTintIndex(ped, p1)
	return _in(0xE88DA0751C22A2AD, ped, p1)
end

--- PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
-- Known values:
function Global.SetPedResetFlag(ped, flagId, doReset)
	return _in(0xC1E8A365BF3B29F2, ped, flagId, doReset)
end

--- This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models. It works on freemode and player_\* models.
function Global.SetPedScubaGearVariation(ped)
	return _in(0x36C6984C3ED0C911, ped)
end
Global.N_0x36c6984c3ed0c911 = Global.SetPedScubaGearVariation

--- SET_PED_SEEING_RANGE
function Global.SetPedSeeingRange(ped, value)
	return _in(0xF29CF591C4BF6CEE, ped, value)
end

--- Returns handle of the projectile.
function Global.SetPedShootOrdnanceWeapon(ped, p1)
	return _in(0xB4C8D77C80C0421E, ped, p1, _ri)
end
Global.N_0xb4c8d77c80c0421e = Global.SetPedShootOrdnanceWeapon

--- shootRate 0-1000
function Global.SetPedShootRate(ped, shootRate)
	return _in(0x614DA022990752DC, ped, shootRate)
end

--- Fires a weapon at a coordinate using a ped.
-- @param ped Ped index.
function Global.SetPedShootsAtCoord(ped, x, y, z, toggle)
	return _in(0x96A05E4FB321B1BA, ped, x, y, z, toggle)
end

--- When this ped receives its next script task, they will exit from their scenario using the normal scenario exit.
-- Exiting the scenario may take several frames while the ped is playing the exit animation.
-- If the ped is not currently using a scenario at the time of the command or 0,0,0 is specified as the reaction position,
-- then the ped will by default attempt to direct their exit forwards.
-- @param ped the ped who should play a normal (unhurried) exit the next time they are given a script command.
-- @param x X Coordinate.
-- @param y Y Coordinate.
-- @param z Z Coordinate.
-- @return Returns true if the position was successfully set.
function Global.SetPedShouldPlayDirectedScenarioExit(ped, x, y, z)
	return _in(0xEC6935EBE0847B90, ped, x, y, z, _r)
end
Global.N_0xec6935ebe0847b90 = Global.SetPedShouldPlayDirectedScenarioExit

--- SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
function Global.SetPedShouldPlayFleeScenarioExit(ped, p1, p2, p3)
	return _in(0xEEED8FAFEC331A70, ped, p1, p2, p3, _ri)
end
Global.N_0xeeed8fafec331a70 = Global.SetPedShouldPlayFleeScenarioExit

--- SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT
function Global.SetPedShouldPlayImmediateScenarioExit(ped)
	return _in(0xF1C03A5352243A30, ped)
end
Global.N_0xf1c03a5352243a30 = Global.SetPedShouldPlayImmediateScenarioExit

--- SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT
function Global.SetPedShouldPlayNormalScenarioExit(ped)
	return _in(0xA3A9299C4F2ADB98, ped)
end
Global.N_0xa3a9299c4f2adb98 = Global.SetPedShouldPlayNormalScenarioExit

--- SET_PED_SPHERE_DEFENSIVE_AREA
function Global.SetPedSphereDefensiveArea(ped, x, y, z, radius, p5, p6)
	return _in(0x9D3151A373974804, ped, x, y, z, radius, p5, p6)
end

--- SET_PED_STAY_IN_VEHICLE_WHEN_JACKED
function Global.SetPedStayInVehicleWhenJacked(ped, toggle)
	return _in(0xEDF4079F9D54C9A1, ped, toggle)
end

--- p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
function Global.SetPedStealthMovement(ped, p1, action)
	return _in(0x88CBB5CEB96B7BD2, ped, p1, _ts(action))
end

--- SET_PED_STEERS_AROUND_OBJECTS
function Global.SetPedSteersAroundObjects(ped, toggle)
	return _in(0x1509C089ADC208BF, ped, toggle)
end

--- SET_PED_STEERS_AROUND_PEDS
function Global.SetPedSteersAroundPeds(ped, toggle)
	return _in(0x46F2193B3AD1D891, ped, toggle)
end

--- SET_PED_STEERS_AROUND_VEHICLES
function Global.SetPedSteersAroundVehicles(ped, toggle)
	return _in(0xEB6FB9D48DDE23EC, ped, toggle)
end

--- SET_PED_STRAFE_CLIPSET
function Global.SetPedStrafeClipset(ped, clipSet)
	return _in(0x29A28F3F8CF6D854, ped, _ts(clipSet))
end

--- Ped no longer takes critical damage modifiers if set to FALSE.
-- Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
function Global.SetPedSuffersCriticalHits(ped, toggle)
	return _in(0xEBD76F2359F190AC, ped, toggle)
end

--- Sweat is set to 100.0 or 0.0 in the decompiled scripts.
function Global.SetPedSweat(ped, sweat)
	return _in(0x27B0405F59637D1F, ped, sweat)
end

--- Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.
function Global.SetPedTargetLossResponse(ped, responseType)
	return _in(0x0703B9079823DA4A, ped, responseType)
end

--- SET_PED_TO_INFORM_RESPECTED_FRIENDS
function Global.SetPedToInformRespectedFriends(ped, radius, maxFriends)
	return _in(0x112942C6E708F70B, ped, radius, maxFriends)
end

--- SET_PED_TO_LOAD_COVER
function Global.SetPedToLoadCover(ped, toggle)
	return _in(0x332B562EEDA62399, ped, toggle)
end

--- p4/p5: Unusued in TU27
-- ### Ragdoll Types
-- **0**: CTaskNMRelax
-- **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
-- **Else**: CTaskNMBalance
-- @param time1 Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.
function Global.SetPedToRagdoll(ped, time1, time2, ragdollType, p4, p5, p6)
	return _in(0xAE99FB955581844A, ped, time1, time2, ragdollType, p4, p5, p6, _r)
end

--- Return variable is never used in R*'s scripts.
-- Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
-- x, y, and z are coordinates, most likely to where the ped will fall.
-- p7 is probably the force of the fall, but untested, so I left the variable name the same.
-- p8 to p13 are always 0f in R*'s scripts.
-- (Simplified) Example of the usage of the function from R*'s scripts:
-- ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);
function Global.SetPedToRagdollWithFall(ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xD76632D99E4966C8, ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13, _r)
end

--- Purpose: The game's default values for these make shooting while traveling Left quite a bit slower than shooting while traveling right (This could be a game-balance thing?)
-- Default Min: -45 Degrees
-- Default Max: 135 Degrees
-- ```
-- \ ,- ~ ||~ - ,
-- , ' \    x   x    ' ,
-- ```
-- ,      \    x    x   x  ,
-- ,         \  x     x      ,
-- ,            \     x    x  ,
-- ,              \      x    ,
-- ,                \   x     ,
-- ,                 \   x x ,
-- ,                  \  x ,
-- ,                 , '
-- ' - , \_ \_ \_ ,  '  \\
-- If the transition angle is within the shaded portion (x), there will be no transition(Quicker)
-- The angle corresponds to where you are looking(North on the circle) vs. the heading of your Ped.
-- Note: For some reason,
-- You can set these values to whatever you'd like with this native, but keep in mind that the transitional spin is only clockwise for some reason.
-- I'd personally recommend something like -135/135
-- @param min Leftside angle on the above diagram
-- @param max Rightside angle on the above diagram
function Global.SetPedTurningThresholds(min, max)
	return _in(0xb300f03, min, max)
end

--- p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
function Global.SetPedUsingActionMode(ped, p1, p2, action)
	return _in(0xD75ACCF5E0FB5367, ped, p1, p2, _ts(action))
end

--- NativeDB Added Parameter 5: Any p4
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.SetPedVehicleForcedSeatUsage(ped, vehicle, seatIndex, flags)
	return _in(0x952F06BEECD775CC, ped, vehicle, seatIndex, flags)
end
Global.N_0x952f06beecd775cc = Global.SetPedVehicleForcedSeatUsage

--- SET_PED_VISUAL_FIELD_CENTER_ANGLE
function Global.SetPedVisualFieldCenterAngle(ped, angle)
	return _in(0x3B6405E8AB34A907, ped, angle)
end

--- SET_PED_VISUAL_FIELD_MAX_ANGLE
function Global.SetPedVisualFieldMaxAngle(ped, value)
	return _in(0x70793BDCA1E854D4, ped, value)
end

--- This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
function Global.SetPedVisualFieldMaxElevationAngle(ped, angle)
	return _in(0x78D0B67629D75856, ped, angle)
end

--- SET_PED_VISUAL_FIELD_MIN_ANGLE
function Global.SetPedVisualFieldMinAngle(ped, value)
	return _in(0x2DB492222FB21E26, ped, value)
end

--- This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
function Global.SetPedVisualFieldMinElevationAngle(ped, angle)
	return _in(0x7A276EB2C224D70F, ped, angle)
end

--- SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE
function Global.SetPedVisualFieldPeripheralRange(ped, range)
	return _in(0x9C74B0BC831B753A, ped, range)
end

--- Calls the same internal function [`_SET_PED_VOICE_GROUP`](#\_0x7CDC8C3B89F661B3) calls, but passes `voiceGroupHash` (defined as a parameter in the referenced native) as `0`.
function Global.SetPedVoiceFull(ped)
	return _in(0x40CF0D12D142A9E8, ped)
end
Global.N_0x40cf0d12d142a9e8 = Global.SetPedVoiceFull
Global.SetPedScream = Global.SetPedVoiceFull

--- From the scripts:
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
function Global.SetPedVoiceGroup(ped, voiceGroupHash)
	return _in(0x7CDC8C3B89F661B3, ped, _ch(voiceGroupHash))
end
Global.N_0x7cdc8c3b89f661b3 = Global.SetPedVoiceGroup

--- Dat151RelType == 29
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.SetPedVoiceGroupRace(ped, voiceGroupHash)
	return _in(0x0BABC1345ABBFB16, ped, _ch(voiceGroupHash))
end

--- Overrides the calculated ped density that is used to modulate the ambient ped walla sounds (in exteriors only)
-- If you want to use this for interiors, use [SET_PED_INTERIOR_WALLA_DENSITY](#\_0x8BF907833BE275DE)
-- @param density desired walla density
-- @param applyValue how much the desired density affects the actual one
function Global.SetPedWallaDensity(density, applyValue)
	return _in(0x149AEE66F0CB3A99, density, applyValue)
end
Global.N_0x149aee66f0cb3a99 = Global.SetPedWallaDensity

--- SET_PED_WAYPOINT_ROUTE_OFFSET
function Global.SetPedWaypointRouteOffset(p0, p1, p2, p3)
	return _in(0xED98E10B0AFCE4B4, p0, p1, p2, p3, _ri)
end

--- _SET_PED_WEAPON_LIVERY_COLOR
function Global.SetPedWeaponLiveryColor(ped, weaponHash, camoComponentHash, colorIndex)
	return _in(0x9FE5633880ECD8ED, ped, _ch(weaponHash), _ch(camoComponentHash), colorIndex)
end
Global.N_0x9fe5633880ecd8ed = Global.SetPedWeaponLiveryColor

--- SET_PED_WEAPON_MOVEMENT_CLIPSET
function Global.SetPedWeaponMovementClipset(ped, clipSet)
	return _in(0x2622E35B77D3ACA2, ped, _ts(clipSet))
end

--- tintIndex can be the following:
-- 0 : Default/Black
-- 1 : Green
-- 2 : Gold
-- 3 : Pink
-- 4 : Army
-- 5 : LSPD
-- 6 : Orange
-- 7 : Platinum
-- tintIndex for MK2 weapons :
-- 0 : Classic Black
-- 1 : Classic Gray
-- 2 : Classic Two-Tone
-- 3 : Classic White
-- 4 : Classic Beige
-- 5 : Classic Green
-- 6 : Classic Blue
-- 7 : Classic Earth
-- 8 : Classic Brown & Black
-- 9 : Red Contrast
-- 10 : Blue Contrast
-- 11 : Yellow Contrast
-- 12 : Orange Contrast
-- 13 : Bold Pink
-- 14 : Bold Purple & Yellow
-- 15 : Bold Orange
-- 16 : Bold Green & Purple
-- 17 : Bold Red Features
-- 18 : Bold Green Features
-- 19 : Bold Cyan Features
-- 20 : Bold Yellow Features
-- 21 : Bold Red & White
-- 22 : Bold Blue & White
-- 23 : Metallic Gold
-- 24 : Metallic Platinum
-- 25 : Metallic Gray & Lilac
-- 26 : Metallic Purple & Lime
-- 27 : Metallic Red
-- 28 : Metallic Green
-- 29 : Metallic Blue
-- 30 : Metallic White & Aqua
-- 31 : Metallic Orange & Yellow
-- 32 : Mettalic Red and Yellow
-- @param ped The target ped
-- @param weaponHash The target weapon hash
-- @param tintIndex Tint for weapon hash
function Global.SetPedWeaponTintIndex(ped, weaponHash, tintIndex)
	return _in(0x50969B9B89ED5738, ped, _ch(weaponHash), tintIndex)
end

--- combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
function Global.SetPedWetnessEnabledThisFrame(ped)
	return _in(0xB5485E4907B53019, ped)
end

--- It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
function Global.SetPedWetnessHeight(ped, height)
	return _in(0x44CB6447D2571AA0, ped, height)
end

--- Configures an entity to either allow or prevent it from being picked up by Cargobobs.
-- ```
-- NativeDB Introduced: v1180
-- ```
-- @param entity The entity to be configured for pick up by Cargobob.
-- @param toggle A boolean value where `true` prevents the entity from being picked up by Cargobobs, and `false` allows it.
function Global.SetPickUpByCargobobDisabled(entity, toggle)
	return _in(0xD7B80E7C3BEFC396, entity, toggle)
end
Global.N_0xd7b80e7c3befc396 = Global.SetPickUpByCargobobDisabled

--- SET_PICKUP_AMMO_AMOUNT_SCALER
function Global.SetPickupAmmoAmountScaler(p0)
	return _in(0xE620FD3512A04F18, p0)
end
Global.N_0xe620fd3512a04f18 = Global.SetPickupAmmoAmountScaler

--- SET_PICKUP_GENERATION_RANGE_MULTIPLIER
function Global.SetPickupGenerationRangeMultiplier(multiplier)
	return _in(0x318516E02DE3ECE2, multiplier)
end
Global.N_0x318516e02de3ece2 = Global.SetPickupGenerationRangeMultiplier

--- _SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE
function Global.SetPickupHiddenWhenUncollectable(p0, p1)
	return _in(0x3ED2B83AB2E82799, p0, p1)
end
Global.N_0x3ed2b83ab2e82799 = Global.SetPickupHiddenWhenUncollectable

--- SET_PICKUP_REGENERATION_TIME
function Global.SetPickupRegenerationTime(pickup, duration)
	return _in(0x78015C9B4B3ECC9D, pickup, duration)
end

--- min: 1.9f, max: 100.0f
function Global.SetPickupRopeLengthForCargobob(cargobob, length1, length2, state)
	return _in(0x877C1EAEAC531023, cargobob, length1, length2, state)
end
Global.N_0x877c1eaeac531023 = Global.SetPickupRopeLengthForCargobob
Global.SetCargobobHookPosition = Global.SetPickupRopeLengthForCargobob

--- _SET_PICKUP_UNCOLLECTABLE
function Global.SetPickupUncollectable(p0, p1)
	return _in(0x1C1B69FAE509BA97, p0, p1)
end
Global.N_0x1c1b69fae509ba97 = Global.SetPickupUncollectable

--- Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
function Global.SetPlaneEngineHealth(vehicle, health)
	return _in(0x2A86A0475B6A1434, vehicle, health)
end
Global.N_0x2a86a0475b6a1434 = Global.SetPlaneEngineHealth

--- _SET_PLANE_PROPELLERS_HEALTH
function Global.SetPlanePropellersHealth(plane, health)
	return _in(0x4C815EB175086F84, plane, health)
end
Global.N_0x4c815eb175086f84 = Global.SetPlanePropellersHealth

--- SET_PLANE_RESIST_TO_EXPLOSION
function Global.SetPlaneResistToExplosion(vehicle, toggle)
	return _in(0xE16142B94664DEFD, vehicle, toggle)
end
Global.N_0xe16142b94664defd = Global.SetPlaneResistToExplosion

--- Adjusts the scale of damage applied to a specified section of a plane.
-- In the decompiled scripts the `damageScale` is always set to `0f` (maybe to disable damages on the specified section)
-- ```cpp
-- enum ePlaneDamageSection {
-- WING_L = 0,
-- WING_R = 1,
-- TAIL = 2,
-- ENGINE_L = 3,
-- ENGINE_R = 4,
-- ELEVATOR_L = 5,
-- ELEVATOR_R = 6,
-- AILERON_L = 7,
-- AILERON_R = 8,
-- RUDDER = 9,
-- RUDDER_2 = 10,
-- AIRBRAKE_L = 11,
-- AIRBRAKE_R = 12
-- }
-- ```
-- ```
-- NativeDB Introduced: v1290
-- ```
-- @param vehicle Plane to which the damage scale adjustment will be applied.
-- @param damageSection Specific section of the plane, as defined in the `ePlaneDamageSection` enum, where the damage scale will be adjusted.
-- @param damageScale A float value representing the scale of damage to be applied to the specified section.
-- @return This native does not return any value.
function Global.SetPlaneSectionDamageScale(vehicle, damageSection, damageScale)
	return _in(0x0BBB9A7A8FFE931B, vehicle, damageSection, damageScale)
end
Global.N_0x0bbb9a7a8ffe931b = Global.SetPlaneSectionDamageScale

--- This native sets the turbulence multiplier. It only works for planes.
-- 0.0 = no turbulence at all.
-- 1.0 = heavy turbulence.
-- Works by just calling it once, does not need to be called every tick.
-- @param vehicle The plane to set the multiplier for
-- @param multiplier The turbulence multiplier. Value between 0.0 and 1.0
function Global.SetPlaneTurbulenceMultiplier(vehicle, multiplier)
	return _in(0xAD2D28A1AFDFF131, vehicle, multiplier)
end
Global.N_0xad2d28a1afdff131 = Global.SetPlaneTurbulenceMultiplier

--- SET_PLAYBACK_SPEED
function Global.SetPlaybackSpeed(vehicle, speed)
	return _in(0x6683AB880E427778, vehicle, speed)
end

--- Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
function Global.SetPlaybackToUseAi(vehicle, drivingStyle)
	return _in(0xA549C3B37EA28131, vehicle, drivingStyle)
end

--- Time is number of milliseconds before reverting, zero for indefinitely.
function Global.SetPlaybackToUseAiTryToRevertBackLater(vehicle, time, drivingStyle, p3)
	return _in(0x6E63860BBB190730, vehicle, time, drivingStyle, p3)
end

--- _SET_PLAYER_AIR_DEFENSE_ZONE_FLAG
function Global.SetPlayerAirDefenseZoneFlag(player, zoneId, enable)
	return _in(0xECDC202B25E5CF48, player, zoneId, enable)
end
Global.N_0xecdc202b25e5cf48 = Global.SetPlayerAirDefenseZoneFlag

--- Sets a player ped to use his ANGRY speech contexts
function Global.SetPlayerAngry(ped, isAngry)
	return _in(0xEA241BB04110F091, ped, isAngry)
end

--- SET_PLAYER_BLUETOOTH_STATE
function Global.SetPlayerBluetoothState(player, state)
	return _in(0x5DC40A8869C22141, player, state)
end
Global.N_0x5dc40a8869c22141 = Global.SetPlayerBluetoothState

--- Sets whether this player can be hassled by gangs.
function Global.SetPlayerCanBeHassledByGangs(player, toggle)
	return _in(0xD5E460AD7020A246, player, toggle)
end

--- Sets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.
-- This is a toggle, it does not have to be ran every frame.
-- Example:
-- ```lua
-- SetPlayerCanDoDriveBy(PlayerId(), false)
-- ```
-- @param player The player to target.
-- @param toggle If set to false, disables the players ability to do drive bys.
function Global.SetPlayerCanDoDriveBy(player, toggle)
	return _in(0x6E8834B52EC20C77, player, toggle)
end

--- SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL
function Global.SetPlayerCanLeaveParachuteSmokeTrail(player, enabled)
	return _in(0xF401B182DBA8AF53, player, enabled)
end

--- Sets whether this player can take cover.
function Global.SetPlayerCanUseCover(player, toggle)
	return _in(0xD465A8599DFF6814, player, toggle)
end

--- 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
function Global.SetPlayerClothLockCounter(value)
	return _in(0x14D913B777DFF5DA, value)
end

--- Every occurrence was either 0 or 2.
function Global.SetPlayerClothPackageIndex(index)
	return _in(0x9F7BBA2EA6372500, index)
end

--- SET_PLAYER_CLOTH_PIN_FRAMES
function Global.SetPlayerClothPinFrames(player, p1)
	return _in(0x749FADDF97DFE930, player, p1)
end

--- Flags:
-- SPC_AMBIENT_SCRIPT = (1 << 1),
-- SPC_CLEAR_TASKS = (1 << 2),
-- SPC_REMOVE_FIRES = (1 << 3),
-- SPC_REMOVE_EXPLOSIONS = (1 << 4),
-- SPC_REMOVE_PROJECTILES = (1 << 5),
-- SPC_DEACTIVATE_GADGETS = (1 << 6),
-- SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
-- SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
-- SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
-- SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
-- SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
-- SPC_ALLOW_PAD_SHAKE = (1 << 12)
-- See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
function Global.SetPlayerControl(player, bHasControl, flags)
	return _in(0x8D32347D6D4C40A2, player, bHasControl, flags)
end

--- _SET_PLAYER_FALL_DISTANCE
function Global.SetPlayerFallDistance(player, distance)
	return _in(0xEFD79FA81DFBA9CB, player, distance)
end
Global.N_0xefd79fa81dfba9cb = Global.SetPlayerFallDistance

--- SET_PLAYER_FORCE_SKIP_AIM_INTRO
function Global.SetPlayerForceSkipAimIntro(player, toggle)
	return _in(0x7651BC64AE59E128, player, toggle)
end

--- SET_PLAYER_FORCED_AIM
function Global.SetPlayerForcedAim(player, toggle)
	return _in(0x0FEE4F80AC44A726, player, toggle)
end

--- SET_PLAYER_FORCED_ZOOM
function Global.SetPlayerForcedZoom(player, toggle)
	return _in(0x75E7D505F2B15902, player, toggle)
end

--- SET_PLAYER_HAS_RESERVE_PARACHUTE
function Global.SetPlayerHasReserveParachute(player)
	return _in(0x7DDAB28D31FAC363, player)
end

--- _SET_PLAYER_HEALTH_RECHARGE_LIMIT
-- @param player The local player ID.
-- @param limit A value between 0.0 and 1.0, 0.5 is default.
function Global.SetPlayerHealthRechargeLimit(player, limit)
	return _in(0xC388A0F065F5BC34, player, limit)
end
Global.N_0xc388a0f065f5bc34 = Global.SetPlayerHealthRechargeLimit

--- SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
-- @param player The local player ID.
-- @param regenRate The recharge multiplier, a value between 0.0 and 1.0.
function Global.SetPlayerHealthRechargeMultiplier(player, regenRate)
	return _in(0x5DB660B38DD98A31, player, regenRate)
end

--- NativeDB Introduced: v1180
function Global.SetPlayerHomingRocketDisabled(player, p1)
	return _in(0xEE4EBDD2593BA844, player, p1)
end
Global.N_0xee4ebdd2593ba844 = Global.SetPlayerHomingRocketDisabled

--- Make the player impervious to all forms of damage.
-- @param player The player index.
function Global.SetPlayerInvincible(player, bInvincible)
	return _in(0x239528EACDC3E7DE, player, bInvincible)
end

--- _SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED
function Global.SetPlayerInvincibleKeepRagdollEnabled(player, toggle)
	return _in(0x6BC97F4F4BB3C04B, player, toggle)
end
Global.N_0x6bc97f4f4bb3c04b = Global.SetPlayerInvincibleKeepRagdollEnabled

--- SET_PLAYER_INVISIBLE_LOCALLY
function Global.SetPlayerInvisibleLocally(player, toggle)
	return _in(0x12B37D54667DB0B8, player, toggle)
end

--- If toggle is true, the ped's head is shown in the pause menu
-- If toggle is false, the ped's head is not shown in the pause menu
function Global.SetPlayerIsInAnimalForm(toggle)
	return _in(0x4EBB7E87AA0DBED4, toggle)
end
Global.N_0x4ebb7e87aa0dbed4 = Global.SetPlayerIsInAnimalForm
Global.ShowPedInPauseMenu = Global.SetPlayerIsInAnimalForm

--- If toggle is true, hides special ability bar / character name in the pause menu
-- If toggle is false, shows special ability bar / character name in the pause menu
-- SET_PLAYER_*
function Global.SetPlayerIsInDirectorMode(toggle)
	return _in(0x808519373FD336A3, toggle)
end
Global.N_0x808519373fd336a3 = Global.SetPlayerIsInDirectorMode
Global.SetDirectorMode = Global.SetPlayerIsInDirectorMode

--- SET_PLAYER_LEAVE_PED_BEHIND
function Global.SetPlayerLeavePedBehind(player, toggle)
	return _in(0xFF300C7649724A0B, player, toggle)
end
Global.N_0xff300c7649724a0b = Global.SetPlayerLeavePedBehind

--- Used to toggle the square up aim.
-- @param player The player ID to toggle the lock on for.
-- @param toggle Set to false to prevent lock on, set to true to allow for lock on.
function Global.SetPlayerLockon(player, toggle)
	return _in(0x5C8B2F450EE4328E, player, toggle)
end

--- Affects the range of auto aim target.
function Global.SetPlayerLockonRangeOverride(player, range)
	return _in(0x29961D490E5814FD, player, range)
end

--- Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4
function Global.SetPlayerMaxArmour(player, value)
	return _in(0x77DFCCF5948B8C71, player, value)
end

--- SET_PLAYER_MAX_STAMINA
-- @param playerId The player index
-- @param maxStamina The value you want to set
-- @return Did you manage to set the value.
function Global.SetPlayerMaxStamina(playerId, maxStamina)
	return _in(0x35594f67, playerId, maxStamina, _r)
end

--- Establishes a reset flag to prevent the player from entering any vehicle. Not that this native must be called every frame.
-- @param player The player index.
function Global.SetPlayerMayNotEnterAnyVehicle(player)
	return _in(0x1DE37BBF9E9CC14A, player)
end

--- Limit the player to only enter this vehicle. Note set vehicle to false if you want them to access any vehicle.
-- @param player The player index.
-- @param vehicle Vehicle id.
function Global.SetPlayerMayOnlyEnterThisVehicle(player, vehicle)
	return _in(0x8026FF78F208978A, player, vehicle)
end

--- NativeDB Added Parameter 3: BOOL p2
function Global.SetPlayerMeleeWeaponDamageModifier(player, modifier)
	return _in(0x4A3DC7ECCC321032, player, modifier)
end

--- modifier's min value is 0.1
function Global.SetPlayerMeleeWeaponDefenseModifier(player, modifier)
	return _in(0xAE540335B4ABC4E2, player, modifier)
end

--- Set the model for a specific Player. Note that this will destroy the current Ped for the Player and create a new one, any reference to the old ped will be invalid after calling this.
-- As per usual, make sure to request the model first and wait until it has loaded.
-- @param player The player to set the model for
-- @param model The model to use
function Global.SetPlayerModel(player, model)
	return _in(0x00A1CADD00108836, player, _ch(model))
end

--- SET_PLAYER_NOISE_MULTIPLIER
function Global.SetPlayerNoiseMultiplier(player, multiplier)
	return _in(0xDB89EF50FF25FCE9, player, multiplier)
end

--- example:
-- PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);
function Global.SetPlayerParachuteModelOverride(player, model)
	return _in(0x977DB4641F6FC3DB, player, _ch(model))
end

--- SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE
function Global.SetPlayerParachutePackModelOverride(player, model)
	return _in(0xDC80A4C2F18A2B64, player, _ch(model))
end

--- tints 0- 13
-- 0 - unkown
-- 1 - unkown
-- 2 - unkown
-- 3 - unkown
-- 4 - unkown
function Global.SetPlayerParachutePackTintIndex(player, tintIndex)
	return _in(0x93B0FB27C9A04060, player, tintIndex)
end

--- SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR
function Global.SetPlayerParachuteSmokeTrailColor(player, r, g, b)
	return _in(0x8217FD371A4625CF, player, r, g, b)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.SetPlayerParachuteTintIndex(player, tintIndex)
	return _in(0xA3D0E54541D9A5E5, player, tintIndex)
end

--- p1 was always 5.
-- p4 was always false.
function Global.SetPlayerParachuteVariationOverride(player, p1, p2, p3, p4)
	return _in(0xD9284A8C0D48352C, player, p1, p2, p3, p4)
end

--- NativeDB Introduced: v2372
function Global.SetPlayerReserveParachuteModelOverride(player, model)
	return _in(0x0764486AEDE748DB, player, _ch(model))
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.SetPlayerReserveParachuteTintIndex(player, index)
	return _in(0xAF04C87F5DC1DF38, player, index)
end

--- example:
-- flags: 0-6
-- PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);
-- wouldnt the flag be the seatIndex?
function Global.SetPlayerResetFlagPreferRearSeats(player, flags)
	return _in(0x11D5F725F0E780E0, player, flags)
end

--- SET_PLAYER_*
function Global.SetPlayerRockstarEditorDisabled(toggle)
	return _in(0x9D8D44ADBBA61EF2, toggle)
end
Global.N_0x9d8d44adbba61ef2 = Global.SetPlayerRockstarEditorDisabled

--- SET_PLAYER_SHORT_SWITCH_STYLE
-- @param style Always 0
function Global.SetPlayerShortSwitchStyle(style)
	return _in(0x5F2013F8BC24EE69, style)
end
Global.N_0x5f2013f8bc24ee69 = Global.SetPlayerShortSwitchStyle

--- SET_PLAYER_SIMULATE_AIMING
function Global.SetPlayerSimulateAiming(player, toggle)
	return _in(0xC54C95DA968EC5B5, player, toggle)
end

--- Values around 1.0f to 2.0f used in game scripts.
function Global.SetPlayerSneakingNoiseMultiplier(player, multiplier)
	return _in(0xB2C1A29588A9F47C, player, multiplier)
end

--- SET_PLAYER_SPRINT
function Global.SetPlayerSprint(player, toggle)
	return _in(0xA01B8075D8B92DF4, player, toggle)
end

--- SET_PLAYER_STAMINA
-- @param playerId The player index
-- @param stamina The value you want to set
-- @return Did you manage to set the value.
function Global.SetPlayerStamina(playerId, stamina)
	return _in(0xa9ec16c7, playerId, stamina, _r)
end

--- SET_PLAYER_STEALTH_PERCEPTION_MODIFIER
function Global.SetPlayerStealthPerceptionModifier(player, value)
	return _in(0x4E9021C1FCDD507A, player, value)
end

--- All names can be found in playerswitchestablishingshots.meta
function Global.SetPlayerSwitchEstablishingShot(name)
	return _in(0x0FDE9DBFC0A6BC65, _ts(name))
end
Global.N_0x0fde9dbfc0a6bc65 = Global.SetPlayerSwitchEstablishingShot

--- SET_PLAYER_SWITCH_OUTRO
function Global.SetPlayerSwitchOutro(cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder)
	return _in(0xC208B673CE446B61, cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder)
end
Global.N_0xc208b673ce446b61 = Global.SetPlayerSwitchOutro

--- the status of default voip system. It affects on `NETWORK_IS_PLAYER_TALKING` and `mp_facial` animation.
-- This function doesn't need to be called every frame, it works like a switcher.
-- @param player The target player.
-- @param state Overriding state.
function Global.SetPlayerTalkingOverride(player, state)
	return _in(0xfc02caf6, player, state)
end

--- SET_PLAYER_TARGET_LEVEL
function Global.SetPlayerTargetLevel(targetLevel)
	return _in(0x5702B917B99DB1CD, targetLevel)
end
Global.N_0x5702b917b99db1cd = Global.SetPlayerTargetLevel

--- Sets your targeting mode.
-- 0 = Assisted Aim - Full
-- 1 = Assisted Aim - Partial
-- 2 = Free Aim - Assisted
-- 3 = Free Aim
function Global.SetPlayerTargetingMode(targetMode)
	return _in(0xB1906895227793F3, targetMode)
end

--- SET_PLAYER_TCMODIFIER_TRANSITION
function Global.SetPlayerTcmodifierTransition(value)
	return _in(0xBDEB86F4D5809204, value)
end
Global.N_0xbdeb86f4d5809204 = Global.SetPlayerTcmodifierTransition

--- Set the player's current team.
-- @param player The player index.
function Global.SetPlayerTeam(player, team)
	return _in(0x0299FA38396A4940, player, team)
end

--- Seems to lock the underwater timer of the specified player. Set `percentage` to `50.0` will reduce the value of [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731) to 5.0.
-- If you want to increase the underwater time for ped, use [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) instead.
-- Using this native after [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) **WILL NOT** get what you want. For example, if you set the max time underwater to `100.0` seconds using [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) and then call this native and set the `percentage` to 50.0, you will not get `50.0`, instead `2.0`.
-- @param player Player id.
-- @param percentage Maximum is `100.0`. Any value above `100.0` and less than `0.0` will have no effect on [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731).
function Global.SetPlayerUnderwaterTimeRemaining(player, percentage)
	return _in(0xA0D3E4F7AAFB7E78, player, percentage, _ri)
end
Global.N_0xa0d3e4f7aafb7e78 = Global.SetPlayerUnderwaterTimeRemaining

--- Enable player vehicle specific alarm disarm/arm sound triggering
function Global.SetPlayerVehicleAlarmAudioActive(vehicle, active)
	return _in(0x6FDDAD856E36988A, vehicle, active)
end
Global.N_0x6fddad856e36988a = Global.SetPlayerVehicleAlarmAudioActive

--- modifier's min value is 0.1
function Global.SetPlayerVehicleDamageModifier(player, modifier)
	return _in(0xA50E117CDDF82F0C, player, modifier)
end

--- modifier's min value is 0.1
function Global.SetPlayerVehicleDefenseModifier(player, modifier)
	return _in(0x4C60E6EFDAFF2462, player, modifier)
end

--- SET_PLAYER_VISIBLE_LOCALLY
function Global.SetPlayerVisibleLocally(player, toggle)
	return _in(0xFAA10F1FAFB11AF2, player, toggle)
end

--- # Predominant call signatures
-- PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
-- # Parameter value ranges
-- P0: PLAYER::PLAYER_ID()
-- P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)
-- P2: Not set by any call
function Global.SetPlayerWantedCentrePosition(player, p2, p3)
	return _in(0x520E541A97A13354, player, _v, p2, p3)
end

--- SET_PLAYER_WANTED_LEVEL
-- @param player the target player
-- @param wantedLevel the wanted level 1-5
-- @param delayedResponse false = 0-10sec police spawn response time, true = 10-20sec police spawn response time
function Global.SetPlayerWantedLevel(player, wantedLevel, delayedResponse)
	return _in(0x39FF19C64EF7DA5B, player, wantedLevel, delayedResponse)
end

--- SET_PLAYER_WANTED_LEVEL_NO_DROP
-- @param player the target player
-- @param wantedLevel the wanted level 1-5
-- @param delayedResponse false = 0-10sec police spawn response time, true = 10-20sec police spawn response time
function Global.SetPlayerWantedLevelNoDrop(player, wantedLevel, delayedResponse)
	return _in(0x340E61DE7F471565, player, wantedLevel, delayedResponse)
end

--- Forces any pending wanted level to be applied to the specified player immediately.
-- Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
-- Second parameter is unknown (always false).
function Global.SetPlayerWantedLevelNow(player, p1)
	return _in(0xE0A7D1E497FFCD6F, player, p1)
end

--- The native ensures the 'modifier' parameter is 0.1 or greater.
function Global.SetPlayerWeaponDamageModifier(player, modifier)
	return _in(0xCE07B9F7817AADA3, player, modifier)
end

--- SET_PLAYER_WEAPON_DEFENSE_MODIFIER
function Global.SetPlayerWeaponDefenseModifier(player, modifier)
	return _in(0x2D83BC011CA14A3C, player, modifier)
end

--- _SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2
function Global.SetPlayerWeaponDefenseModifier_2(player, modifier)
	return _in(0xBCFDE9EDE4CF27DC, player, modifier)
end
Global.N_0xbcfde9ede4cf27dc = Global.SetPlayerWeaponDefenseModifier_2

--- SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED
function Global.SetPlayerpadShakesWhenControllerDisabled(toggle)
	return _in(0x798FDEB5B1575088, toggle)
end

--- SET_PLAYERS_LAST_VEHICLE
function Global.SetPlayersLastVehicle(vehicle)
	return _in(0xBCDF8BAF56C87B6A, vehicle)
end

--- Sets flag on vehicle that changes behaviour in relation to when player gets wanted level
function Global.SetPoliceFocusWillTrackVehicle(vehicle, p1)
	return _in(0x4E74E62E0A97E901, vehicle, p1)
end
Global.N_0x4e74e62e0a97e901 = Global.SetPoliceFocusWillTrackVehicle

--- The player will be ignored by the police if toggle is set to true
function Global.SetPoliceIgnorePlayer(player, toggle)
	return _in(0x32C62AA929C2DA6A, player, toggle)
end

--- If toggle is set to false:
-- The police won't be shown on the (mini)map
-- If toggle is set to true:
-- The police will be shown on the (mini)map
function Global.SetPoliceRadarBlips(toggle)
	return _in(0x43286D561B72B8BF, toggle)
end

--- Min and max are usually 100.0 and 200.0
function Global.SetPopControlSphereThisFrame(x, y, z, min, max)
	return _in(0xD8C3BE3EE94CAF2D, x, y, z, min, max)
end
Global.N_0xd8c3be3ee94caf2d = Global.SetPopControlSphereThisFrame

--- SET_PORTAL_SETTINGS_OVERRIDE
function Global.SetPortalSettingsOverride(oldPortalSettingsName, newPortalSettingsName)
	return _in(0x044DBAD7A7FA2BE5, _ts(oldPortalSettingsName), _ts(newPortalSettingsName))
end
Global.N_0x044dbad7a7fa2be5 = Global.SetPortalSettingsOverride

--- SET_POSITION_FOR_NULL_CONV_PED
function Global.SetPositionForNullConvPed(speakerConversationIndex, x, y, z)
	return _in(0x33E3C6C6F2F0B506, speakerConversationIndex, x, y, z)
end
Global.N_0x33e3c6c6f2f0b506 = Global.SetPositionForNullConvPed

--- SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED
-- @param enabled enables/disables a positioned emitter for the player vehicle radio
function Global.SetPositionedPlayerVehicleRadioEmitterEnabled(enabled)
	return _in(0xDA07819E452FFE8F, enabled)
end
Global.N_0xda07819e452ffe8f = Global.SetPositionedPlayerVehicleRadioEmitterEnabled

--- SET_PROFILE_SETTING_PROLOGUE_COMPLETE
function Global.SetProfileSettingPrologueComplete()
	return _in(0xB475F27C6A994D65)
end
Global.N_0xb475f27c6a994d65 = Global.SetProfileSettingPrologueComplete

--- SET_RACE_TRACK_RENDER
function Global.SetRaceTrackRender(toggle)
	return _in(0x1EAC5F91BCBC5073, toggle)
end
Global.N_0x1eac5f91bcbc5073 = Global.SetRaceTrackRender

--- SET_RADAR_AS_EXTERIOR_THIS_FRAME
function Global.SetRadarAsExteriorThisFrame()
	return _in(0xE81B7D2A3DAB2D81)
end

--- List of interior hashes: pastebin.com/1FUyXNqY
-- Not for every interior zoom > 0 available.
function Global.SetRadarAsInteriorThisFrame(interior, x, y, heading, zoom)
	return _in(0x59E727A1C9D3E31A, _ch(interior), x, y, heading, zoom)
end

--- zoomLevel ranges from 0 to 200
function Global.SetRadarZoom(zoomLevel)
	return _in(0x096EF57A0C999BBA, zoomLevel)
end

--- SET_RADAR_ZOOM_PRECISE
function Global.SetRadarZoomPrecise(zoom)
	return _in(0xBD12C5EEE184C337, zoom)
end
Global.RespondingAsTemp = Global.SetRadarZoomPrecise

--- SET_RADAR_ZOOM_TO_BLIP
function Global.SetRadarZoomToBlip(blip, zoom)
	return _in(0xF98E4B3E56AFC7B1, blip, zoom)
end
Global.N_0xf98e4b3e56afc7b1 = Global.SetRadarZoomToBlip

--- SET_RADAR_ZOOM_TO_DISTANCE
function Global.SetRadarZoomToDistance(zoom)
	return _in(0xCB7CC0D58405AD41, zoom)
end
Global.SetRadarZoomLevelThisFrame = Global.SetRadarZoomToDistance

--- SET_RADIO_AUTO_UNFREEZE
-- @param toggle if true the radio will automatically unfreeze as soon as the player gets in a vehicle
function Global.SetRadioAutoUnfreeze(toggle)
	return _in(0xC1AA9F53CE982990, toggle)
end

--- SET_RADIO_FRONTEND_FADE_TIME
function Global.SetRadioFrontendFadeTime(fadeTime)
	return _in(0x2C96CDB04FCA358E, fadeTime)
end
Global.N_0x2c96cdb04fca358e = Global.SetRadioFrontendFadeTime

--- Doesn't have an effect in Story Mode.
-- ```
-- NativeDB Introduced: v2372
-- ```
function Global.SetRadioStationIsVisible(radioStation, toggle)
	return _in(0x4CAFEBFA21EC188D, _ts(radioStation), toggle)
end

--- 6 calls in the b617d scripts, removed identical lines:
-- AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
-- AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
-- AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
function Global.SetRadioStationMusicOnly(radioStation, toggle)
	return _in(0x774BD811F656A122, _ts(radioStation), toggle)
end
Global.N_0x774bd811f656a122 = Global.SetRadioStationMusicOnly

--- Sets radio station by index.
function Global.SetRadioToStationIndex(radioStation)
	return _in(0xA619B168B8A8570F, radioStation)
end

--- Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
function Global.SetRadioToStationName(stationName)
	return _in(0xC69EDA28699D5107, _ts(stationName))
end

--- Only found this one in the decompiled scripts:
-- AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");
function Global.SetRadioTrack(radioStation, radioTrack)
	return _in(0xB39786F201FEE30B, _ts(radioStation), _ts(radioTrack))
end

--- NativeDB Introduced: v1493
function Global.SetRadioTrackMix(radioStationName, mixName, p2)
	return _in(0x2CB0075110BE1E56, _ts(radioStationName), _ts(mixName), p2)
end

--- Enabling this on a radius blip will make it outline only.\
-- Please note that this only works on a **radius** blip (i.e. one generated using [`ADD_BLIP_FOR_RADIUS`](#\_0x46818D79B1F7499A)), not a normal blip.
-- **Example result:**\
-- ![example-image](https://i.imgur.com/hS6ki7p.png)
-- @param blip The blip handle
-- @param toggle Whether to turn off or on the effect
function Global.SetRadiusBlipEdge(blip, toggle)
	return _in(0x25615540D894B814, blip, toggle)
end
Global.N_0x25615540d894b814 = Global.SetRadiusBlipEdge

--- Works for both player and peds, but some flags don't seem to work for the player (1, for example)
-- 1 - Blocks ragdolling when shot.
-- 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
-- 4 - Blocks ragdolling when set on fire.
-- -----------------------------------------------------------------------
-- There seem to be 26 flags
function Global.SetRagdollBlockingFlags(ped, flags)
	return _in(0x26695EC767728D84, ped, flags)
end
Global.N_0x26695ec767728d84 = Global.SetRagdollBlockingFlags
Global.SetPedRagdollBlockingFlags = Global.SetRagdollBlockingFlags

--- Controls rain, rain sounds and the creation of puddles.
-- With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
-- With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
-- To use the rain level of the current weather, call this native with `-1f` as `level`.
-- @param level Strength of rain effects
function Global.SetRainLevel(level)
	return _in(0x643E26EA6E024D92, level)
end
Global.SetRainFxIntensity = Global.SetRainLevel

--- SET_RANDOM_BOATS
function Global.SetRandomBoats(toggle)
	return _in(0x84436EC293B1415F, toggle)
end

--- NativeDB Introduced: v2372
function Global.SetRandomBoatsInMp(toggle)
	return _in(0xDA5E12F728DB30CA, toggle)
end

--- If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
-- Does nothing if the mission flag is set.
function Global.SetRandomEventFlag(toggle)
	return _in(0x971927086CFD2158, toggle)
end

--- SET_RANDOM_SEED
function Global.SetRandomSeed(seed)
	return _in(0x444D98F98C11F3EC, seed)
end

--- Enables spawning random trains on the preset tracks.
-- Requires [`SWITCH_TRAIN_TRACK`](#\_0xFD813BB7DB977F20) and [`SET_TRAIN_TRACK_SPAWN_FREQUENCY`](#\_0x21973BBF8D17EDFA) to be set.
-- @param toggle Whether to enable random trains.
function Global.SetRandomTrains(toggle)
	return _in(0x80D9F74197EA47D9, toggle)
end

--- SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
function Global.SetRandomVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0xB3B3359379FE77D3, multiplier)
end

--- SET_RANDOM_WEATHER_TYPE
function Global.SetRandomWeatherType()
	return _in(0x8B05F884CF7E8020)
end

--- Lowers the vehicle's stance. Only works for vehicles that support this feature.
-- ```
-- NativeDB Introduced: v2372
-- ```
function Global.SetReduceDriftVehicleSuspension(vehicle, enable)
	return _in(0x3A375167F5782A65, vehicle, enable)
end

--- SET_REDUCE_PED_MODEL_BUDGET
function Global.SetReducePedModelBudget(toggle)
	return _in(0x77B5F9A36BF96710, toggle)
end

--- SET_REDUCE_VEHICLE_MODEL_BUDGET
function Global.SetReduceVehicleModelBudget(toggle)
	return _in(0x80C527893080CCF3, toggle)
end

--- Sets the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- Example:
-- PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
-- PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
function Global.SetRelationshipBetweenGroups(relationship, group1, group2)
	return _in(0xBF25EB89375A37AD, relationship, _ch(group1), _ch(group2))
end

--- _SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL
function Global.SetRelationshipGroupDontAffectWantedLevel(group, p1)
	return _in(0x5615E0C5EB2BC6E2, _ch(group), p1)
end
Global.N_0x5615e0c5eb2bc6e2 = Global.SetRelationshipGroupDontAffectWantedLevel

--- Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
function Global.SetRelationshipToPlayer(player, p1)
	return _in(0xA7C511FA1C5BDA38, player, p1)
end
Global.N_0xa7c511fa1c5bda38 = Global.SetRelationshipToPlayer

--- SET_RENDER_HD_ONLY
function Global.SetRenderHdOnly(toggle)
	return _in(0x40AEFD1A244741F2, toggle)
end
Global.N_0x40aefd1a244741f2 = Global.SetRenderHdOnly

--- makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
function Global.SetRenderTrainAsDerailed(train, toggle)
	return _in(0x317B11A312DF5534, train, toggle)
end

--- A setter for [GET_RESOURCE_KVP_STRING](#\_0x5240DA5A).
-- @param key The key to set
-- @param value The value to write
function Global.SetResourceKvp(key, value)
	return _in(0x21c7a35b, _ts(key), _ts(value))
end

--- A setter for [GET_RESOURCE_KVP_FLOAT](#\_0x35BDCEEA).
-- @param key The key to set
-- @param value The value to write
function Global.SetResourceKvpFloat(key, value)
	return _in(0x9add2938, _ts(key), value)
end

--- A setter for [GET_RESOURCE_KVP_INT](#\_0x557B586A).
-- @param key The key to set
-- @param value The value to write
function Global.SetResourceKvpInt(key, value)
	return _in(0x6a2b1e8, _ts(key), value)
end

--- _SET_RESTART_CUSTOM_POSITION
function Global.SetRestartCustomPosition(x, y, z, heading)
	return _in(0x706B5EDCAA7FA663, x, y, z, heading)
end
Global.N_0x706b5edcaa7fa663 = Global.SetRestartCustomPosition
Global.SetCustomRespawnPosition = Global.SetRestartCustomPosition

--- Sets the player's rich presence detail state for social platform providers to a specified string.
-- @param presenceState The rich presence string to set.
function Global.SetRichPresence(presenceState)
	return _in(0x7bdcbd45, _ts(presenceState))
end

--- Activates riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
-- @param toggle Turn on or off riot mode. Set to `true` to enable riot mode.
function Global.SetRiotModeEnabled(toggle)
	return _in(0x2587A48BC88DFADF, toggle)
end
Global.N_0x2587a48bc88dfadf = Global.SetRiotModeEnabled

--- missing a last parameter int p6
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
function Global.SetRoadsBackToOriginal(p0, p1, p2, p3, p4, p5)
	return _in(0x1EE7063B80FFC77C, p0, p1, p2, p3, p4, p5)
end

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- ```
-- NativeDB Added Parameter 8: Any p7
-- bool p7 - always 1
-- ```
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.SetRoadsBackToOriginalInAngledArea(x1, y1, z1, x2, y2, z2, width)
	return _in(0x0027501B9F3B407E, x1, y1, z1, x2, y2, z2, width)
end

--- unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function Global.SetRoadsInAngledArea(x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3)
	return _in(0x1A5AA1208AF5DB59, x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3)
end

--- When this is set to false, all nodes in the area get disabled.
-- `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
-- If it's true,
-- `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
function Global.SetRoadsInArea(x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2)
	return _in(0xBF1A602B5BA52FEE, x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2)
end

--- Set's the ropes length change rate, which is the speed that rope should wind if started.
-- @param rope The rope to set the length change rate for.
-- @param lengthChangeRate The rope's new length change rate.
function Global.SetRopeLengthChangeRate(rope, lengthChangeRate)
	return _in(0x69b680a7, rope, lengthChangeRate)
end

--- Toggles whether the usage of [ADD_ROPE](#\_0xE832D760399EB220) should create an underlying CNetworkRopeWorldStateData. By default this is set to false.
-- @param shouldCreate Whether to create an underlying network world state
function Global.SetRopesCreateNetworkWorldState(shouldCreate)
	return _in(0xe62fc73, shouldCreate)
end

--- Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
-- Just call it one time, it is not required to be called once every tick.
-- Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
-- It is not possible to "decrease" speed. Anything below 1 will be ignored.
function Global.SetRunSprintMultiplierForPlayer(player, multiplier)
	return _in(0x6DB47AA77FD94E09, player, multiplier)
end

--- SET_RUNTIME_TEXTURE_ARGB_DATA
function Global.SetRuntimeTextureArgbData(tex, buffer, length)
	return _in(0x3963d527, tex, _ts(buffer), length, _r)
end

--- Replaces the pixel data in a runtime texture with the image data from a file in the current resource, or a data URL.
-- If the bitmap is a different size compared to the existing texture, it will be resampled.
-- This command may end up executed asynchronously, and only update the texture data at a later time.
-- @param tex A runtime texture handle.
-- @param fileName The file name of an image to load, or a base64 "data:" URL. This should preferably be a PNG, and has to be specified as a `file` in the resource manifest.
-- @return TRUE for success, FALSE for failure.
function Global.SetRuntimeTextureImage(tex, fileName)
	return _in(0x28fc4ecb, tex, _ts(fileName), _r)
end

--- Sets a pixel in the specified runtime texture. This will have to be committed using `COMMIT_RUNTIME_TEXTURE` to have any effect.
-- @param tex A handle to the runtime texture.
-- @param x The X position of the pixel to change.
-- @param y The Y position of the pixel to change.
-- @param r The new R value (0-255).
-- @param g The new G value (0-255).
-- @param b The new B value (0-255).
-- @param a The new A value (0-255).
function Global.SetRuntimeTexturePixel(tex, x, y, r, g, b, a)
	return _in(0xab65acee, tex, x, y, r, g, b, a)
end

--- SET_SAVE_HOUSE
function Global.SetSaveHouse(p0, p1, p2)
	return _in(0x4F548CABEAE553BC, p0, p1, p2)
end

--- ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
function Global.SetSaveMenuActive(ignoreVehicle)
	return _in(0xC9BF75D28165FF77, ignoreVehicle)
end

--- Sets profile setting 501
function Global.SetSaveMigrationTransactionId(transactionId)
	return _in(0xF6792800AC95350D, transactionId)
end
Global.N_0xf6792800ac95350d = Global.SetSaveMigrationTransactionId

--- This native is used in some casino scripts to fit the scaleform in the rendertarget.
function Global.SetScaleformFitRendertarget(scaleformHandle, toggle)
	return _in(0xE6A9F00D4240B519, scaleformHandle, toggle)
end
Global.N_0xe6a9f00d4240b519 = Global.SetScaleformFitRendertarget

--- SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED
function Global.SetScaleformMovieAsNoLongerNeeded(scaleformHandle)
	return _in(0x1D132D614DD86811, _ii(scaleformHandle) --[[ may be optional ]])
end

--- SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME
function Global.SetScaleformMovieToUseSystemTime(scaleform, toggle)
	return _in(0x6D8EB211944DCE08, scaleform, toggle)
end

--- Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU
function Global.SetScenarioGroupEnabled(scenarioGroup, p1)
	return _in(0x02C8E5B49848664E, _ts(scenarioGroup), p1)
end

--- Set the number of scenario peds on the entire map
-- @param interiorMult Multiplier for ped scenarios inside interiors.
-- @param exteriorMult Multiplier for ped scenarios outside interiors.
function Global.SetScenarioPedDensityMultiplierThisFrame(interiorMult, exteriorMult)
	return _in(0x7A556143A1C03898, interiorMult, exteriorMult)
end

--- SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA
function Global.SetScenarioPedsSpawnInSphereArea(x, y, z, range, p4)
	return _in(0x28157D43CF600981, x, y, z, range, p4)
end

--- Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
function Global.SetScenarioPedsToBeReturnedByNextCommand(value)
	return _in(0x14F19A8782C8071E, value)
end

--- seems to enable/disable specific scenario-types from happening in the game world.
-- Here are some scenario types from the scripts:
-- "WORLD_MOUNTAIN_LION_REST"
-- "WORLD_MOUNTAIN_LION_WANDER"
-- "DRIVE"
-- "WORLD_VEHICLE_POLICE_BIKE"
-- "WORLD_VEHICLE_POLICE_CAR"
-- "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
-- "WORLD_VEHICLE_DRIVE_SOLO"
-- "WORLD_VEHICLE_BIKER"
-- "WORLD_VEHICLE_DRIVE_PASSENGERS"
-- "WORLD_VEHICLE_SALTON_DIRT_BIKE"
-- "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
-- "PROP_HUMAN_SEAT_CHAIR"
-- "WORLD_VEHICLE_ATTRACTOR"
-- "WORLD_HUMAN_LEANING"
-- "WORLD_HUMAN_HANG_OUT_STREET"
-- "WORLD_HUMAN_DRINKING"
-- "WORLD_HUMAN_SMOKING"
-- "WORLD_HUMAN_GUARD_STAND"
-- "WORLD_HUMAN_CLIPBOARD"
-- "WORLD_HUMAN_HIKER"
-- "WORLD_VEHICLE_EMPTY"
-- "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
-- "WORLD_HUMAN_PAPARAZZI"
-- "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
-- "WORLD_VEHICLE_PARK_PARALLEL"
-- "WORLD_VEHICLE_CONSTRUCTION_SOLO"
-- "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
-- "WORLD_VEHICLE_TRUCK_LOGS"
-- scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
function Global.SetScenarioTypeEnabled(scenarioType, toggle)
	return _in(0xEB47EC4E34FB7EE1, _ts(scenarioType), toggle)
end

--- SET_SCRIPT_AS_NO_LONGER_NEEDED
function Global.SetScriptAsNoLongerNeeded(scriptName)
	return _in(0xC90D2DCACD56184C, _ts(scriptName))
end

--- This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
-- independent of the player's safe zone configuration.
-- These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
-- for default alignment.
-- Valid values for `horizontalAlign`, from original documentation:
-- *   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
-- the right side of the screen.
-- *   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
-- centered.
-- *   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
-- from the right side of the screen, both move with the right side of the screen.
-- Valid values for `verticalAlign`, from original documentation:
-- *   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
-- rather centered.
-- *   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
-- different from 66.
-- *   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
-- Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
-- canonical value for this is 'I' (73).
-- For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
-- axis.
-- To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
-- @param horizontalAlign The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
-- @param verticalAlign The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
function Global.SetScriptGfxAlign(horizontalAlign, verticalAlign)
	return _in(0xB8A850F20A067EB6, horizontalAlign, verticalAlign)
end
Global.SetScreenDrawPosition = Global.SetScriptGfxAlign
Global.ScreenDrawPositionBegin = Global.SetScriptGfxAlign

--- Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
-- expects the width/height to be configured using this native in order to get a proper starting position for the draw
-- command.
-- @param x The X offset for the item to be drawn.
-- @param y The Y offset for the item to be drawn.
-- @param w The width of the item to be drawn.
-- @param h The height of the item to be drawn.
function Global.SetScriptGfxAlignParams(x, y, w, h)
	return _in(0xF5A2C681787E579D, x, y, w, h)
end
Global.N_0xf5a2c681787e579d = Global.SetScriptGfxAlignParams
Global.ScreenDrawPositionRatio = Global.SetScriptGfxAlignParams

--- Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
-- @param flag A boolean value.
function Global.SetScriptGfxDrawBehindPausemenu(flag)
	return _in(0xC6372ECD45D73BCD, flag)
end
Global.N_0xc6372ecd45d73bcd = Global.SetScriptGfxDrawBehindPausemenu

--- Sets the draw order for script draw commands.
-- Examples from decompiled scripts:
-- GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
-- GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
-- GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
-- GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
-- @param order The intended draw order/layer.
function Global.SetScriptGfxDrawOrder(order)
	return _in(0x61BB1D9B3A95D802, order)
end
Global.N_0x61bb1d9b3a95d802 = Global.SetScriptGfxDrawOrder
Global.Set_2dLayer = Global.SetScriptGfxDrawOrder
Global.SetUiLayer = Global.SetScriptGfxDrawOrder

--- SET_SCRIPT_UPDATE_DOOR_AUDIO
function Global.SetScriptUpdateDoorAudio(doorHash, toggle)
	return _in(0x06C0023BED16DD6B, _ch(doorHash), toggle)
end
Global.N_0x06c0023bed16dd6b = Global.SetScriptUpdateDoorAudio

--- Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
function Global.SetScriptVariableHudColour(r, g, b, a)
	return _in(0xD68A5FF8A3A89874, r, g, b, a)
end
Global.N_0xd68a5ff8a3a89874 = Global.SetScriptVariableHudColour

--- Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
function Global.SetScriptVariable_2HudColour(r, g, b, a)
	return _in(0x16A304E6CB2BFAB9, r, g, b, a)
end
Global.N_0x16a304e6cb2bfab9 = Global.SetScriptVariable_2HudColour

--- Only called once in the decompiled scripts. Presumably activates the specified generator.
function Global.SetScriptVehicleGenerator(vehicleGenerator, enabled)
	return _in(0xD9D620E0AC6DC4B0, vehicleGenerator, enabled)
end

--- SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED
function Global.SetScriptWithNameHashAsNoLongerNeeded(scriptHash)
	return _in(0xC5BC038960E9DB27, _ch(scriptHash))
end
Global.SetStreamedScriptAsNoLongerNeeded = Global.SetScriptWithNameHashAsNoLongerNeeded

--- SET_SCRIPTED_ANIM_SEAT_OFFSET
function Global.SetScriptedAnimSeatOffset(ped, p1)
	return _in(0x5917BBA32D06C230, ped, p1)
end

--- SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME
function Global.SetScriptedConversionCoordThisFrame(x, y, z)
	return _in(0x5086C7843552CF85, x, y, z)
end

--- Toggles Heatvision on/off.
function Global.SetSeethrough(toggle)
	return _in(0x7E08924259E08CE0, toggle)
end

--- SET_SEQUENCE_TO_REPEAT
function Global.SetSequenceToRepeat(taskSequenceId, repeat_)
	return _in(0x58C70CF3A41E4AE7, taskSequenceId, repeat_)
end

--- NativeDB Introduced: v2372
function Global.SetSirenKeepOn(vehicle, toggle)
	return _in(0xF584CF8529B51434, vehicle, toggle)
end
Global.N_0xf584cf8529b51434 = Global.SetSirenKeepOn

--- SET_SIREN_WITH_NO_DRIVER
function Global.SetSirenWithNoDriver(vehicle, toggle)
	return _in(0x1FEF0683B96EBCF2, vehicle, toggle)
end

--- SET_SNAKEOIL_FOR_ENTRY
function Global.SetSnakeoilForEntry(name, path, data)
	return _in(0xa7dd3209, _ts(name), _ts(path), _ts(data))
end

--- NativeDB Introduced: v1868
function Global.SetSnowLevel(level)
	return _in(0x7F06937B0CDCBC1A, level)
end

--- HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
-- HUD::SET_SOCIAL_CLUB_TOUR("Missions");
-- HUD::SET_SOCIAL_CLUB_TOUR("General");
-- HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
function Global.SetSocialClubTour(name)
	return _in(0x9E778248D6685FE0, _ts(name))
end
Global.N_0x9e778248d6685fe0 = Global.SetSocialClubTour

--- NativeDB Added Parameter 3: Any p2
function Global.SetSpecialAbility(player, p1)
	return _in(0xB214D570EAD7F81A, player, p1)
end
Global.N_0xb214d570ead7f81a = Global.SetSpecialAbility

--- SET_SPECIAL_ABILITY_MULTIPLIER
function Global.SetSpecialAbilityMultiplier(multiplier)
	return _in(0xA49C426ED0CA4AB7, multiplier)
end

--- Allows locking the hover/non-hover mode of a vehicle, such as the flying mode of the `Deluxo`. In the decompiled scripts, this native is used on `oppressor2` but couldn't get it to work on it.
-- @param vehicle The vehicle to which the locking state will be applied.
-- @param toggle Boolean parameter where setting `false` locks the current state of the vehicle, preventing transitions such as the `Deluxo` or Oppressor switching between their flying and driving modes. Setting it to `true` allows changing the vehicle state as usual.
function Global.SetSpecialFlightModeAllowed(vehicle, toggle)
	return _in(0xF1211889DF15A763, vehicle, toggle)
end
Global.N_0xf1211889df15a763 = Global.SetSpecialFlightModeAllowed
Global.SetVehicleHoverTransformEnabled = Global.SetSpecialFlightModeAllowed

--- Used alongside [`SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO`](#\_0x438B3D7CA026FE91), this function initiates hover transformation for vehicles with a hover mode, like the `Deluxo`, based on a specified ratio (0.0 to 1.0). Incorrect values can glitch the vehicle. Without pairing, vehicles revert to car mode. Ineffective on the `oppressor2`
-- @param vehicle The vehicle to which the ratio will be applied.
-- @param ratio A value between 0.0 and 1.0 indicating the target state for the vehicle's hover mode transition. In decompiled scripts, a common usage is 0.75 - GetFrameTime(). Exceeding the maximum can cause the `Deluxo's` wheels to glitch, delaying their return to the initial position.
function Global.SetSpecialFlightModeRatio(vehicle, ratio)
	return _in(0xD138FA15C9776837, vehicle, ratio)
end
Global.SetVehicleHoverTransformRatio = Global.SetSpecialFlightModeRatio

--- According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
-- Does nothing when used on `oppressor2`.
-- For the deluxo:
-- *   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
-- *   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
-- If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
-- This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
-- Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
-- @param vehicle The vehicle (a deluxo or oppressor2).
-- @param state The transform state (value between 0.0 and 1.0).
function Global.SetSpecialFlightModeTargetRatio(vehicle, state)
	return _in(0x438B3D7CA026FE91, vehicle, state)
end
Global.N_0x438b3d7ca026fe91 = Global.SetSpecialFlightModeTargetRatio
Global.SetVehicleTransformState = Global.SetSpecialFlightModeTargetRatio
Global.SetVehicleHoverTransformPercentage = Global.SetSpecialFlightModeTargetRatio

--- SET_SRL_TIME
function Global.SetSrlTime(p0)
	return _in(0xA74A541C6884E7B8, p0)
end

--- Internal function for setting a state bag value.
function Global.SetStateBagValue(bagName, keyName, valueData, valueLength, replicated)
	return _in(0x8d50e33a, _ts(bagName), _ts(keyName), _ts(valueData), valueLength, replicated)
end

--- Hardcoded to not work in multiplayer.
-- Used to lock/unlock doors to interior areas of the game.
-- (Possible) Door Types:
-- pastebin.com/9S2m3qA4
-- Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
-- Locked means that the heading is locked.
-- p6 is always 0.
-- 225 door types, model names and coords found in stripclub.c4:
-- pastebin.com/gywnbzsH
-- get door info: pastebin.com/i14rbekD
function Global.SetStateOfClosestDoorOfType(type, x, y, z, locked, heading, p6)
	return _in(0xF82D8F1926A02C3D, _ch(type), x, y, z, locked, heading, p6)
end

--- Defines the state of a destructible object.
-- Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
-- State 2 == object just spawned
-- State 4 == Beginning of the animation
-- State 6 == Start animation
-- State 9 == End of the animation
function Global.SetStateOfRayfireMapObject(object, state)
	return _in(0x5C29F698D404C5E1, object, state)
end
Global.N_0x5c29f698d404c5e1 = Global.SetStateOfRayfireMapObject
Global.SetDesObjectState = Global.SetStateOfRayfireMapObject

--- Example:
-- AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);
-- This turns off surrounding sounds not connected directly to peds.
function Global.SetStaticEmitterEnabled(emitterName, toggle)
	return _in(0x399D2D3B33F1B8EB, _ts(emitterName), toggle)
end

--- Access to the store for shark cards etc...
function Global.SetStoreEnabled(toggle)
	return _in(0x9641A9FF718E9C5E, toggle)
end

--- SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED
function Global.SetStreamedTextureDictAsNoLongerNeeded(textureDict)
	return _in(0xBE2CACCF5A8AA805, _ts(textureDict))
end

--- SET_STREAMING
function Global.SetStreaming(toggle)
	return _in(0x6E0C692677008888, toggle)
end

--- SET_STUNT_JUMPS_CAN_TRIGGER
function Global.SetStuntJumpsCanTrigger(toggle)
	return _in(0xD79185689F8FD5DF, toggle)
end
Global.N_0xd79185689f8fd5df = Global.SetStuntJumpsCanTrigger

--- SET_SUBMARINE_CRUSH_DEPTHS
function Global.SetSubmarineCrushDepths(vehicle, toggle, depth1, depth2, depth3)
	return _in(0xC59872A5134879C7, vehicle, toggle, depth1, depth2, depth3)
end
Global.JitterVehicle = Global.SetSubmarineCrushDepths

--- Allows the player to perform super jumps. This function must be called every frame for it to work.
-- It basically OR's a flag for a single frame, allowing the ped to perform a super jump only when the flag is set.
-- @param player The player we are setting this for.
function Global.SetSuperJumpThisFrame(player)
	return _in(0x57FFF03E423A4C0B, player)
end

--- Swim speed multiplier.
-- Multiplier goes up to 1.49
-- Just call it one time, it is not required to be called once every tick. - Note copied from below native.
-- Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
function Global.SetSwimMultiplierForPlayer(player, multiplier)
	return _in(0xA91C6F0FF7D16A13, player, multiplier)
end

--- SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME
function Global.SetSynchronizedSceneHoldLastFrame(sceneID, toggle)
	return _in(0x394B9CD12435C981, sceneID, toggle)
end
Global.N_0x394b9cd12435c981 = Global.SetSynchronizedSceneHoldLastFrame
Global.SetSynchronizedSceneOcclusionPortal = Global.SetSynchronizedSceneHoldLastFrame

--- SET_SYNCHRONIZED_SCENE_LOOPED
function Global.SetSynchronizedSceneLooped(sceneID, toggle)
	return _in(0xD9A897A4C6C2974F, sceneID, toggle)
end

--- SET_SYNCHRONIZED_SCENE_ORIGIN
function Global.SetSynchronizedSceneOrigin(sceneID, x, y, z, roll, pitch, yaw, p7)
	return _in(0x6ACF6B7225801CD7, sceneID, x, y, z, roll, pitch, yaw, p7)
end

--- SET_SYNCHRONIZED_SCENE_PHASE
function Global.SetSynchronizedScenePhase(sceneID, phase)
	return _in(0x734292F4F0ABF6D0, sceneID, phase)
end

--- SET_SYNCHRONIZED_SCENE_RATE
function Global.SetSynchronizedSceneRate(sceneID, rate)
	return _in(0xB6C49F8A5E295A5D, sceneID, rate)
end

--- Override the camera work of the third-person camera to table game for current frame only.
-- |                  HashKey                    |       Hash        |    Game         |
-- | :---------------------------------: | :-----------:| :-------------:  |
-- | `CASINO_LUCKY_WHEEL_CAMERA` |   `5891389`   |  Lucky Wheel    |
-- | `CASINO_SLOT_MACHINE_CAMERA` |  `518572876`  |     Slots       |
-- | `CASINO_ROULETTE_CAMERA` |   `71681063`  |    Roulette     |
-- | `CASINO_BLACKJACK_CAMERA` | `-2124244681` |    Blackjack    |
-- | `CASINO_POKER_CAMERA` | `-1938411241` |   Three Cards   |
-- | `CASINO_INSIDE_TRACK_CAMERA` | `1929822423` |   Inside Track    |
-- | `ARCADE_LOVE_PROFESSOR_P1_CAMERA` | `545868034` |   LoveProfessorP1   |
-- | `ARCADE_LOVE_PROFESSOR_P2_CAMERA` | `935304251` |   LoveProfessorP2   |
-- @param hash Hash for table game
-- @return Returns a boolean value indicating if the camera settings were successfully overriden for this current frame.
function Global.SetTableGamesCameraThisUpdate(hash)
	return _in(0x79C0E43EB9B944E2, _ch(hash), _r)
end
Global.N_0x79c0e43eb9b944e2 = Global.SetTableGamesCameraThisUpdate

--- SET_TASK_MOVE_NETWORK_SIGNAL_BOOL
-- @param ped The ped that's performing the task.
-- @param signalName The property name.
-- @param value The property value to set.
function Global.SetTaskMoveNetworkSignalBool(ped, signalName, value)
	return _in(0xB0A6CFD2C69C1088, ped, _ts(signalName), value)
end
Global.N_0xb0a6cfd2c69c1088 = Global.SetTaskMoveNetworkSignalBool
Global.SetTaskPropertyBool = Global.SetTaskMoveNetworkSignalBool

--- p0 - PLAYER::PLAYER_PED_ID();
-- p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
-- p2 - From what i can see it goes up to 1f (maybe).
-- -LcGamingHD
-- Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
-- @param ped The ped on which the task is playing.
-- @param signalName The property name.
-- @param value The property value to set.
function Global.SetTaskMoveNetworkSignalFloat(ped, signalName, value)
	return _in(0xD5BB4025AE449A4E, ped, _ts(signalName), value)
end
Global.N_0xd5bb4025ae449a4e = Global.SetTaskMoveNetworkSignalFloat
Global.SetTaskPropertyFloat = Global.SetTaskMoveNetworkSignalFloat

--- NativeDB Introduced: v1493
function Global.SetTaskMoveNetworkSignalFloat_2(ped, signalName, value)
	return _in(0x373EF409B82697A3, ped, _ts(signalName), value)
end

--- * Flag 1: Aggressive ramming of suspect
-- * Flag 2: Ram attempts
-- * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
-- * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
-- * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
function Global.SetTaskVehicleChaseBehaviorFlag(ped, flag, set)
	return _in(0xCC665AAC360D31E7, ped, flag, set)
end

--- SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE
function Global.SetTaskVehicleChaseIdealPursuitDistance(ped, distance)
	return _in(0x639B642FACBE4EDD, ped, distance)
end

--- SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN
function Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain(plane, height)
	return _in(0xB893215D8D4C015B, plane, height)
end
Global.N_0xb893215d8d4c015b = Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain
Global.SetPlaneMinHeightAboveGround = Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain
Global.SetPlaneMinHeightAboveTerrain = Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain

--- This is not tested - it's just an assumption.
-- Doesn't seem to work.  I'll try with an int instead. --JT
-- Read the scripts, im dumpass.
-- Doesn't work at all, wether with an bool neither an int
-- if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {
-- VEHICLE::SET_TAXI_LIGHTS(l_115, 1);
-- }
function Global.SetTaxiLights(vehicle, state)
	return _in(0x598803E85E8448D9, vehicle, state)
end

--- SET_TEAM_PICKUP_OBJECT
function Global.SetTeamPickupObject(object, p1, p2)
	return _in(0x53E0DF1A2A3CF0CA, object, p1, p2)
end

--- SET_TEXT_CENTRE
function Global.SetTextCentre(align)
	return _in(0xC02F4DBFB51D988B, align)
end

--- SET_TEXT_CHAT_ENABLED
function Global.SetTextChatEnabled(enabled)
	return _in(0x97b2f9f8, enabled, _r)
end

--- colors you input not same as you think?
-- A: for some reason its R B G A
function Global.SetTextColour(red, green, blue, alpha)
	return _in(0xBE6B23FFA53FB442, red, green, blue, alpha)
end

--- SET_TEXT_DROP_SHADOW
function Global.SetTextDropShadow()
	return _in(0x1CA3E9EAC9D93E5E)
end

--- distance - shadow distance in pixels, both horizontal and vertical
-- r, g, b, a - color
-- @param distance Shadow distance in pixels, both horizontal and vertical.
-- @param r Red color.
-- @param g Green color.
-- @param b Blue color.
-- @param a Alpha.
function Global.SetTextDropshadow(distance, r, g, b, a)
	return _in(0x465C84BC39F1C351, distance, r, g, b, a)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetTextEdge(p0, r, g, b, a)
	return _in(0x441603240D202FA6, p0, r, g, b, a)
end

--- fonts that mess up your text where made for number values/misc stuff
function Global.SetTextFont(fontType)
	return _in(0x66E0276CC5F6B9DA, fontType)
end

--- Types -
-- 0: Center-Justify
-- 1: Left-Justify
-- 2: Right-Justify
-- Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
function Global.SetTextJustification(justifyType)
	return _in(0x4E096588B13FFECA, justifyType)
end
Global.N_0x4e096588b13ffeca = Global.SetTextJustification

--- SET_TEXT_LEADING
function Global.SetTextLeading(p0)
	return _in(0xA50ABC31E3CDFAFF, p0)
end

--- SET_TEXT_OUTLINE
function Global.SetTextOutline()
	return _in(0x2513DFB0FB8400FE)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetTextProportional(p0)
	return _in(0x038C1F517D7FDCF8, p0)
end

--- SET_TEXT_RENDER_ID
function Global.SetTextRenderId(renderId)
	return _in(0x5F15302936E07111, renderId)
end

--- SET_TEXT_RIGHT_JUSTIFY
function Global.SetTextRightJustify(toggle)
	return _in(0x6B3C4650BC8BEE47, toggle)
end

--- Size range : 0F to 1.0F
-- p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
function Global.SetTextScale(scale, size)
	return _in(0x07C837F9A01C34C9, scale, size)
end

--- It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
-- start - left boundry on screen position (0.0 - 1.0)
-- end - right boundry on screen position (0.0 - 1.0)
function Global.SetTextWrap(start, end_)
	return _in(0x63145D9C883A1A70, start, end_)
end

--- _SET_TEXTURE_VARIATION_OF_CLOSEST_OBJECT_OF_TYPE
function Global.SetTextureVariationOfClosestObjectOfType(x, y, z, radius, modelHash, textureVariation)
	return _in(0xF12E33034D887F66, x, y, z, radius, _ch(modelHash), textureVariation, _r)
end
Global.N_0xf12e33034d887f66 = Global.SetTextureVariationOfClosestObjectOfType

--- SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE
function Global.SetThirdPersonAimCamNearClipThisUpdate(distance)
	return _in(0x42156508606DE65E, distance)
end
Global.N_0x42156508606de65e = Global.SetThirdPersonAimCamNearClipThisUpdate
Global.SetThirdPersonAimCamNearClip = Global.SetThirdPersonAimCamNearClipThisUpdate

--- SET_THIS_SCRIPT_CAN_BE_PAUSED
function Global.SetThisScriptCanBePaused(toggle)
	return _in(0xAA391C728106F7AF, toggle)
end

--- Normally, blips can only be removed by the script or resource that created them. However, this native function allows a script to bypass this logic and remove blips from any script.
-- @param toggle Bool indicating if the script that called this native can remove blips created by other scripts.
function Global.SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle)
	return _in(0xB98236CAAECEF897, toggle)
end

--- 0 = high
-- 1 = normal
-- 2 = low
function Global.SetThreadPriority(priority)
	return _in(0x42B65DEEF2EDF2A1, priority)
end
Global.N_0x42b65deef2edf2a1 = Global.SetThreadPriority

--- Maximum value is 1.
-- At a value of 0 the game will still run at a minimum time scale.
-- Slow Motion 1: 0.6
-- Slow Motion 2: 0.4
-- Slow Motion 3: 0.2
function Global.SetTimeScale(timeScale)
	return _in(0x1D408577D440E81E, timeScale)
end

--- Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
-- Parameters:
-- modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
function Global.SetTimecycleModifier(modifierName)
	return _in(0x2C933ABF17A1DF41, _ts(modifierName))
end

--- SET_TIMECYCLE_MODIFIER_STRENGTH
function Global.SetTimecycleModifierStrength(strength)
	return _in(0x82E7FFCD5B2326B3, strength)
end

--- SET_TIMECYCLE_MODIFIER_VAR
-- @param modifierName The name of timecycle modifier.
-- @param varName The name of timecycle variable.
-- @param value1 The first value of variable.
-- @param value2 The second value of variable.
function Global.SetTimecycleModifierVar(modifierName, varName, value1, value2)
	return _in(0x6e0a422b, _ts(modifierName), _ts(varName), value1, value2)
end

--- SET_TRACKED_POINT_INFO
function Global.SetTrackedPointInfo(point, x, y, z, radius)
	return _in(0x164ECBB3CF750CB0, point, x, y, z, radius)
end

--- SET_TRAILER_INVERSE_MASS_SCALE
function Global.SetTrailerInverseMassScale(vehicle, p1)
	return _in(0x2A8F319B392E7B3F, vehicle, p1)
end
Global.N_0x2a8f319b392e7b3f = Global.SetTrailerInverseMassScale

--- Inverse of 0x95CF53B3D687F9FA
-- ```
-- ```
-- NativeDB Added Parameter 1: Vehicle vehicle
function Global.SetTrailerLegsLowered()
	return _in(0x878C75C09FBDB942)
end
Global.N_0x878c75c09fbdb942 = Global.SetTrailerLegsLowered

--- in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
function Global.SetTrailerLegsRaised(vehicle)
	return _in(0x95CF53B3D687F9FA, vehicle)
end
Global.N_0x95cf53b3d687f9fa = Global.SetTrailerLegsRaised

--- Used to control train speed, can be used to start and stop its movement as well.
function Global.SetTrainCruiseSpeed(train, speed)
	return _in(0x16469284DB8C62B5, train, speed)
end

--- Sets the ratio that a door is open for on a train.
-- @param train The train to set the door ratio for.
-- @param doorIndex Zero-based door index.
-- @param ratio A value between 0.0 (fully closed) and 1.0 (fully open).
function Global.SetTrainDoorOpenRatio(train, doorIndex, ratio)
	return _in(0x2468dbe8, train, doorIndex, ratio)
end

--- SET_TRAIN_SPEED
function Global.SetTrainSpeed(train, speed)
	return _in(0xAA0BC91BE0B796E3, train, speed)
end

--- Only called once inside main_persitant with the parameters, 0
function Global.SetTrainTrackSpawnFrequency(trackIndex, frequency)
	return _in(0x21973BBF8D17EDFA, trackIndex, frequency)
end
Global.N_0x21973bbf8d17edfa = Global.SetTrainTrackSpawnFrequency

--- Enables or disables whether train doors should be forced open whilst a player is inside the train. This is enabled by default in multiplayer.
-- @param forceOpen Should force open.
function Global.SetTrainsForceDoorsOpen(forceOpen)
	return _in(0xd4d1ba63, forceOpen)
end

--- This native doesn't work like [`SetWeatherTypeTransition`](#\_0x578C752848ECFA0C).
-- @param modifierName The name of a timecycle
-- @param transition The speed to transition to `modifierName`. Appears to be half-seconds (?)
function Global.SetTransitionTimecycleModifier(modifierName, transition)
	return _in(0x3BCF567485E1971C, _ts(modifierName), transition)
end

--- Probably changes tvs from being a 3d audio to being "global" audio
function Global.SetTvAudioFrontend(toggle)
	return _in(0x113D2C5DC57E1774, toggle)
end

--- SET_TV_CHANNEL
function Global.SetTvChannel(channel)
	return _in(0xBAABBB23EB6E484E, channel)
end

--- Loads specified video sequence into the TV Channel
-- TV_Channel ranges from 0-2
-- VideoSequence can be any of the following:
-- "PL_STD_CNT" CNT Standard Channel
-- "PL_STD_WZL" Weazel Standard Channel
-- "PL_LO_CNT"
-- "PL_LO_WZL"
-- "PL_SP_WORKOUT"
-- "PL_SP_INV" - Jay Norris Assassination Mission Fail
-- "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
-- "PL_LO_RS" - Righteous Slaughter Ad
-- "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
-- "PL_SP_PLSH1\_INTRO"
-- "PL_LES1\_FAME_OR_SHAME"
-- "PL_STD_WZL_FOS_EP2"
-- "PL_MP_WEAZEL" - Weazel Logo on loop
-- "PL_MP_CCTV" - Generic CCTV loop
-- Restart:
-- 0=video sequence continues as normal
-- 1=sequence restarts from beginning every time that channel is selected
-- The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
-- https://pastebin.com/zUzGB6h7
function Global.SetTvChannelPlaylist(tvChannel, playlistName, restart)
	return _in(0xF7B38B8305F1FE8B, tvChannel, _ts(playlistName), restart)
end
Global.N_0xf7b38b8305f1fe8b = Global.SetTvChannelPlaylist
Global.LoadTvChannelSequence = Global.SetTvChannelPlaylist

--- SET_TV_CHANNEL_PLAYLIST_AT_HOUR
function Global.SetTvChannelPlaylistAtHour(tvChannel, playlistName, hour)
	return _in(0x2201C576FACAEBE8, tvChannel, _ts(playlistName), hour)
end
Global.N_0x2201c576facaebe8 = Global.SetTvChannelPlaylistAtHour

--- SET_TV_VOLUME
function Global.SetTvVolume(volume)
	return _in(0x2982BF73F66E9DDC, volume)
end

--- NativeDB Introduced: v1868
function Global.SetTyreHealth(vehicle, wheelIndex, health)
	return _in(0x74C68EF97645E79D, vehicle, wheelIndex, health)
end

--- Controls how fast the tires wear out.
-- Default values from Rockstar's Open Wheel Race JSON's:
-- "owrtss" (Soft): 2.2
-- "owrtsm" (Medium): 1.7
-- "owrtsh" (Hard): 1.2
-- Usable wheels:
-- 0: wheel_lf
-- 1: wheel_rf
-- 2: wheel_lm1
-- 3: wheel_rm1
-- 4: wheel_lr
-- 5: wheel_rr
-- ```
-- ```
-- NativeDB Introduced: v2060
function Global.SetTyreSoftnessMultiplier(vehicle, wheelIndex, multiplier)
	return _in(0x392183BB9EA57697, vehicle, wheelIndex, multiplier)
end
Global.N_0x392183bb9ea57697 = Global.SetTyreSoftnessMultiplier

--- Controls how much traction the wheel loses.
-- Default values from Rockstar's Open Wheel Race JSON's:
-- "owrtds" (Soft): 0.05
-- "owrtdm" (Medium): 0.45
-- "owrtdh" (Hard): 0.8
-- Usable wheels:
-- 0: wheel_lf
-- 1: wheel_rf
-- 2: wheel_lm1
-- 3: wheel_rm1
-- 4: wheel_lr
-- 5: wheel_rr
-- ```
-- ```
-- NativeDB Introduced: v2060
function Global.SetTyreTractionLossMultiplier(vehicle, wheelIndex, multiplier)
	return _in(0xC970D0E0FC31D768, vehicle, wheelIndex, multiplier)
end
Global.N_0xc970d0e0fc31d768 = Global.SetTyreTractionLossMultiplier

--- NativeDB Introduced: v1868
function Global.SetTyreWearMultiplier(vehicle, wheelIndex, multiplier)
	return _in(0x01894E2EDE923CA2, vehicle, wheelIndex, multiplier)
end

--- NativeDB Introduced: v1365
function Global.SetUnkBoolN_0x102ForSubmarineVehicleTask(vehicle, value)
	return _in(0x41B9FB92EDED32A6, vehicle, value)
end

--- NativeDB Introduced: v1365
function Global.SetUnkFloatN_0x104ForSubmarineVehicleTask(vehicle, value)
	return _in(0x498218259FB7C72D, vehicle, value)
end

--- NativeDB Introduced: v1365
function Global.SetUnkGlobalBoolRelatedToDamage(value)
	return _in(0xABDABF4E1EDECBFA, value)
end

--- Needs to be called every tick to make the active camera use a high depth of field.\
-- The DoF can be customized using [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.
-- ### Usage Example
-- A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
function Global.SetUseHiDof()
	return _in(0xA13B0222F3D94A94)
end

--- Only used in R* Script fm_mission_controller_2020
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.SetUseHiDofInCutscene()
	return _in(0x731A880555DA3647)
end

--- Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
function Global.SetUseHigherVehicleJumpForce(vehicle, toggle)
	return _in(0xF06A16CA55D138D8, vehicle, toggle)
end
Global.N_0xf06a16ca55d138d8 = Global.SetUseHigherVehicleJumpForce

--- Switches the display of the in-game minimap to the Cayo Perico map. This native needs to be called every frame to maintain the toggled state effectively.
-- ```
-- NativeDB Introduced: v2189
-- ```
-- @param toggle A boolean value where `true` switches the minimap to the Cayo Perico map, and `false` reverts it to the standard map.
-- @return This native does not return any value.
function Global.SetUseIslandMap(toggle)
	return _in(0x5E1460624D194A38, toggle)
end
Global.SetToggleMinimapHeistIsland = Global.SetUseIslandMap

--- Sets a global mode which makes the pause menu map show 'Destination' instead of 'Waypoint' in the key legend on the
-- bottom of the screen.
-- <!--
-- Name guess:
-- - alphabetical function order, below [SET_USER_RADIO_CONTROL_ENABLED, SET_USE_HI_DOF], above SET_VARIABLE_ON_SOUND.
-- -->
-- @param toggle `true` to show 'Destination', `false` to show 'Waypoint' (the default)
function Global.SetUseWaypointAsDestination(toggle)
	return _in(0x6CDD58146A436083, toggle)
end
Global.N_0x6cdd58146a436083 = Global.SetUseWaypointAsDestination

--- SET_USER_RADIO_CONTROL_ENABLED
function Global.SetUserRadioControlEnabled(toggle)
	return _in(0x19F21E63AE6EAE4E, toggle)
end

--- SET_VARIABLE_ON_*
function Global.SetVariableOnCutsceneAudio(variableName, value)
	return _in(0xBCC29F935ED07688, _ts(variableName), value)
end
Global.GetPlayerHeadsetSoundAlternate = Global.SetVariableOnCutsceneAudio

--- SET_VARIABLE_ON_SOUND
function Global.SetVariableOnSound(soundId, variableName, value)
	return _in(0xAD6B3148A78AE9B6, soundId, _ts(variableName), value)
end

--- From the scripts, p0:
-- "ArmWrestlingIntensity",
-- "INOUT",
-- "Monkey_Stream",
-- "ZoomLevel"
function Global.SetVariableOnStream(p0, p1)
	return _in(0x2F9D3834AEB9EF79, _ts(p0), p1)
end

--- AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
-- AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
function Global.SetVariableOnUnderWaterStream(variableName, value)
	return _in(0x733ADF241531E5C2, _ts(variableName), value)
end
Global.N_0x733adf241531e5c2 = Global.SetVariableOnUnderWaterStream

--- NativeDB Introduced: v2372
function Global.SetVehHasRadioOverride(vehicle)
	return _in(0x3E45765F3FBB582F, vehicle)
end
Global.N_0x3e45765f3fbb582f = Global.SetVehHasRadioOverride

--- Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
function Global.SetVehRadioStation(vehicle, radioStation)
	return _in(0x1B9C0099CB942AC6, vehicle, _ts(radioStation))
end

--- This native is used to simulate a high-speed impact for a vehicle when it collides with a breakable object (frag). It's particularly useful in scripted sequences where a vehicle is required to break through a barrier but might not actually be moving at a sufficient speed to do so realistically. Note that this setting is temporary and will reset after one frame, so it needs to be called every frame for a lasting effect.
-- @param vehicle The vehicle to be affected by this setting.
-- @param actHighSpeed A boolean flag. Set to `true` to make the vehicle act as if it's at high speed for the current frame
function Global.SetVehicleActAsIfHighSpeedForFragSmashing(vehicle, actHighSpeed)
	return _in(0x1F9FB66F3A3842D2, vehicle, actHighSpeed)
end
Global.N_0x1f9fb66f3a3842d2 = Global.SetVehicleActAsIfHighSpeedForFragSmashing

--- SET_VEHICLE_ACTIVE_DURING_PLAYBACK
function Global.SetVehicleActiveDuringPlayback(vehicle, toggle)
	return _in(0xDFFCEF48E511DB48, vehicle, toggle)
end
Global.N_0xdffcef48e511db48 = Global.SetVehicleActiveDuringPlayback

--- SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION
function Global.SetVehicleActiveForPedNavigation(vehicle, toggle)
	return _in(0x21115BCD6E44656A, vehicle, toggle)
end
Global.N_0x21115bcd6e44656a = Global.SetVehicleActiveForPedNavigation
Global.SetVehicleCloseDoorDeferedAction = Global.SetVehicleActiveForPedNavigation

--- SET_VEHICLE_ALARM
function Global.SetVehicleAlarm(vehicle, state)
	return _in(0xCDE5E70C1DDB954C, vehicle, state)
end

--- SET_VEHICLE_ALARM_TIME_LEFT
function Global.SetVehicleAlarmTimeLeft(vehicle, time)
	return _in(0xc108ee6f, vehicle, time)
end

--- Makes the vehicle accept no passengers.
function Global.SetVehicleAllowNoPassengersLockon(veh, toggle)
	return _in(0x5D14D4154BFE7B2C, veh, toggle)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function Global.SetVehicleAsNoLongerNeeded(vehicle)
	return _in(0x629BFA74418D6239, _ii(vehicle) --[[ may be optional ]])
end

--- Vehicle will make a 'rattling' noise when decelerating
-- @param vehicle Vehicle to modify
-- @param intensity A value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating
function Global.SetVehicleAudioBodyDamageFactor(vehicle, intensity)
	return _in(0x01BB4D577D38BD9E, vehicle, intensity)
end
Global.N_0x01bb4d577d38bd9e = Global.SetVehicleAudioBodyDamageFactor

--- SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR
function Global.SetVehicleAudioEngineDamageFactor(vehicle, damageFactor)
	return _in(0x59E7B488451F4D3A, vehicle, damageFactor)
end
Global.N_0x59e7b488451f4d3a = Global.SetVehicleAudioEngineDamageFactor

--- Disables the vehicle from being repaired when a vehicle extra is enabled.
-- @param vehicle The vehicle to set disable auto vehicle repair.
-- @param value Setting the value to  true prevents the vehicle from being repaired when a extra is enabled. Setting the value to false allows the vehicle from being repaired when a extra is enabled.
function Global.SetVehicleAutoRepairDisabled(vehicle, value)
	return _in(0x5f3a3574, vehicle, value)
end

--- SET_VEHICLE_AUTOMATICALLY_ATTACHES
function Global.SetVehicleAutomaticallyAttaches(vehicle, p1, p2)
	return _in(0x8BA6F76BC53A1493, vehicle, p1, p2, _ri)
end

--- p2 often set to 1000.0 in the decompiled scripts.
function Global.SetVehicleBodyHealth(vehicle, value)
	return _in(0xB77D05AC8C78AADB, vehicle, value)
end

--- Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
-- In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
-- Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
-- @param aircraft The vehicle to set the bombCount on.
-- @param bombCount The amount of bombs to set for this vehicle.
function Global.SetVehicleBombCount(aircraft, bombCount)
	return _in(0xF4B2ED59DEB5D774, aircraft, bombCount)
end
Global.N_0xf4b2ed59deb5d774 = Global.SetVehicleBombCount
Global.SetVehicleBombs = Global.SetVehicleBombCount
Global.SetAircraftBombCount = Global.SetVehicleBombCount

--- SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
-- SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
-- Will give a boost-soundeffect.
function Global.SetVehicleBoostActive(vehicle, toggle)
	return _in(0x4A04DE7CAB2739A1, vehicle, toggle)
end

--- SET_VEHICLE_BRAKE
function Global.SetVehicleBrake(vehicle, toggle)
	return _in(0xE4E2FD323574965C, vehicle, toggle)
end
Global.N_0xe4e2fd323574965c = Global.SetVehicleBrake

--- SET_VEHICLE_BRAKE_LIGHTS
function Global.SetVehicleBrakeLights(vehicle, toggle)
	return _in(0x92B35082E0B42F66, vehicle, toggle)
end

--- Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
function Global.SetVehicleBulldozerArmPosition(vehicle, position, p2)
	return _in(0xF8EBCCC96ADB9FB7, vehicle, position, p2)
end
Global.N_0xf8ebccc96adb9fb7 = Global.SetVehicleBulldozerArmPosition

--- On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
function Global.SetVehicleBurnout(vehicle, toggle)
	return _in(0xFB8794444A7D60FB, vehicle, toggle)
end

--- SET_VEHICLE_AL*
function Global.SetVehicleCanBeLockedOn(vehicle, canBeLockedOn, unk)
	return _in(0x1DDA078D12879EEE, vehicle, canBeLockedOn, unk)
end
Global.N_0x1dda078d12879eee = Global.SetVehicleCanBeLockedOn

--- This has not yet been tested - it's just an assumption of what the types could be.
function Global.SetVehicleCanBeTargetted(vehicle, state)
	return _in(0x3750146A28097A82, vehicle, state)
end

--- SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS
function Global.SetVehicleCanBeUsedByFleeingPeds(vehicle, toggle)
	return _in(0x300504B23BD3B711, vehicle, toggle)
end
Global.N_0x300504b23bd3b711 = Global.SetVehicleCanBeUsedByFleeingPeds

--- SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED
function Global.SetVehicleCanBeVisiblyDamaged(vehicle, state)
	return _in(0x4C7028F78FFD3681, vehicle, state)
end

--- SET_VEHICLE_CAN_BREAK
function Global.SetVehicleCanBreak(vehicle, toggle)
	return _in(0x59BF8C3D52C92F66, vehicle, toggle)
end

--- SET_VEHICLE_CAN_DEFORM_WHEELS
function Global.SetVehicleCanDeformWheels(vehicle, toggle)
	return _in(0x0CDDA42F9E360CA6, vehicle, toggle)
end
Global.N_0x0cdda42f9e360ca6 = Global.SetVehicleCanDeformWheels

--- _SET_VEHICLE_CAN_ENGINE_OPERATE_ON_FIRE
function Global.SetVehicleCanEngineOperateOnFire(vehicle, toggle)
	return _in(0x206BC5DC9D1AC70A, vehicle, toggle)
end
Global.N_0x206bc5dc9d1ac70a = Global.SetVehicleCanEngineOperateOnFire

--- SET_VEHICLE_CAN_LEAK_OIL
function Global.SetVehicleCanLeakOil(vehicle, toggle)
	return _in(0x51BB2D88D31A914B, vehicle, toggle)
end
Global.N_0x51bb2d88d31a914b = Global.SetVehicleCanLeakOil

--- SET_VEHICLE_CAN_LEAK_PETROL
function Global.SetVehicleCanLeakPetrol(vehicle, toggle)
	return _in(0x192547247864DFDD, vehicle, toggle)
end
Global.N_0x192547247864dfdd = Global.SetVehicleCanLeakPetrol

--- SET_VEHICLE_CAN_SAVE_IN_GARAGE
function Global.SetVehicleCanSaveInGarage(vehicle, toggle)
	return _in(0x428BACCDF5E26EAD, vehicle, toggle)
end
Global.N_0x428baccdf5e26ead = Global.SetVehicleCanSaveInGarage

--- Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
-- from Decrypted Scripts I found
-- VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);
function Global.SetVehicleCeilingHeight(vehicle, height)
	return _in(0xA46413066687A328, vehicle, height)
end
Global.GetVehicleDeformationGetTree = Global.SetVehicleCeilingHeight

--- <1.0 - Decreased torque
-- =1.0 - Default torque
-- >1.0 - Increased torque
-- Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
-- value - is between 0.2 and 1.8 in the decompiled scripts.
-- This needs to be called every frame to take effect.
function Global.SetVehicleCheatPowerIncrease(vehicle, value)
	return _in(0xB59E4BD37AE292DB, vehicle, value)
end
Global.SetVehicleEngineTorqueMultiplier = Global.SetVehicleCheatPowerIncrease

--- SET_VEHICLE_CLUTCH
function Global.SetVehicleClutch(vehicle, clutch)
	return _in(0x2f70aced, vehicle, clutch)
end

--- Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
-- Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
-- @param vehicle The vehicle to modify.
-- @param colorCombination One of the default color values of the vehicle.
function Global.SetVehicleColourCombination(vehicle, colorCombination)
	return _in(0x33E8CD3322E2FE31, vehicle, colorCombination)
end

--- colorPrimary & colorSecondary are the paint indexes for the vehicle.
-- For a list of valid paint indexes, view: pastebin.com/pwHci0xK
function Global.SetVehicleColours(vehicle, colorPrimary, colorSecondary)
	return _in(0x4F1D4BE3A7F24601, vehicle, colorPrimary, colorSecondary)
end

--- Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
-- Doesn't work for planes/helis.
function Global.SetVehicleControlsInverted(vehicle, state)
	return _in(0x5B91B229243351A8, vehicle, state)
end
Global.N_0x5b91b229243351a8 = Global.SetVehicleControlsInverted

--- Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
-- Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
-- @param aircraft The vehicle to set the amount of countermeasures on.
-- @param count The amount of countermeasures to set on this vehicle.
function Global.SetVehicleCountermeasureCount(aircraft, count)
	return _in(0x9BDA23BF666F0855, aircraft, count)
end
Global.N_0x9bda23bf666f0855 = Global.SetVehicleCountermeasureCount
Global.SetAircraftCountermeasureCount = Global.SetVehicleCountermeasureCount

--- SET_VEHICLE_CURRENT_RPM
function Global.SetVehicleCurrentRpm(vehicle, rpm)
	return _in(0x2a01a8fc, vehicle, rpm)
end

--- p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
function Global.SetVehicleCustomPrimaryColour(vehicle, r, g, b)
	return _in(0x7141766F91D15BEA, vehicle, r, g, b)
end

--- p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
function Global.SetVehicleCustomSecondaryColour(vehicle, r, g, b)
	return _in(0x36CED73BFED89754, vehicle, r, g, b)
end

--- Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
-- Radius of effect damage applied in a sphere at impact location
-- When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
-- @param radius the size of the damage sphere to apply
-- @param focusOnModel when set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
function Global.SetVehicleDamage(vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel)
	return _in(0xA1DD317EA8FD4F29, vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel)
end

--- SET_VEHICLE_D*
function Global.SetVehicleDamageModifier(vehicle, p1)
	return _in(0x4E20D2A627011E8E, vehicle, p1, _ri)
end
Global.N_0x4e20d2a627011e8e = Global.SetVehicleDamageModifier

--- _SET_VEHICLE_DASHBOARD_COLOR
function Global.SetVehicleDashboardColor(vehicle, color)
	return _in(0x6089CDF6A57F326C, vehicle, color)
end
Global.SetVehicleDashboardColour = Global.SetVehicleDashboardColor

--- This fixes the deformation of a vehicle but the vehicle health doesn't improve
function Global.SetVehicleDeformationFixed(vehicle)
	return _in(0x953DA1E1B12C0491, vehicle)
end

--- **Usage:**
-- *   Use this native inside a looped function.
-- *   Values:
-- *   `0.0` = no vehicles on streets
-- *   `1.0` = normal vehicles on streets
-- `1.0` Seems to be the maximum.
function Global.SetVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0x245A6883D966D537, multiplier)
end

--- Sets the dirt level of the passed vehicle.
-- @param vehicle The vehicle to set.
-- @param dirtLevel A number between 0.0 and 15.0 representing the vehicles dirt level.
function Global.SetVehicleDirtLevel(vehicle, dirtLevel)
	return _in(0x79D3B596FE44EE8B, vehicle, dirtLevel)
end

--- SET_VEHICLE_DISABLE_TOWING
function Global.SetVehicleDisableTowing(vehicle, toggle)
	return _in(0x2B6747FAA9DB9D6B, vehicle, toggle)
end
Global.N_0x2b6747faa9db9d6b = Global.SetVehicleDisableTowing

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.SetVehicleDoorBroken(vehicle, doorIndex, deleteDoor)
	return _in(0xD4D4F6A4AB575A33, vehicle, doorIndex, deleteDoor)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.SetVehicleDoorCanBreak(vehicle, doorIndex, isBreakable)
	return _in(0x2FA133A4A9D37ED8, vehicle, doorIndex, isBreakable)
end
Global.SetVehicleDoorBreakable = Global.SetVehicleDoorCanBreak

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param speed 5 is fast, 1 is slow 3 is medium
function Global.SetVehicleDoorControl(vehicle, doorIndex, speed, angle)
	return _in(0xF2BFA0430F0A0FCB, vehicle, doorIndex, speed, angle)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function Global.SetVehicleDoorLatched(vehicle, doorIndex, forceClose, lock, p4)
	return _in(0xA5A9653A8D2CAF48, vehicle, doorIndex, forceClose, lock, p4)
end

--- Sets the specified door index open on the passed vehicle. See [`IS_VEHICLE_DOOR_FULLY_OPEN`](#\_0x3E933CFF7B111C22).
-- @param vehicle Vehicle.
-- @param doorIndex Index of the door you want to open (0-7)
-- @param loose Whether the door is "loose" (if true the doors have no "spring" and can be closed easily.)
-- @param openInstantly Whether the doors open instantly (if true this native seems to ignore loose)
function Global.SetVehicleDoorOpen(vehicle, doorIndex, loose, openInstantly)
	return _in(0x7C65DAC73C35C862, vehicle, doorIndex, loose, openInstantly)
end

--- Sets the specified door index shut on the passed vehicle.
-- ```cpp
-- enum eDoorId
-- {
-- VEH_EXT_DOOR_DSIDE_F = 0,
-- VEH_EXT_DOOR_DSIDE_R = 1,
-- VEH_EXT_DOOR_PSIDE_F = 2,
-- VEH_EXT_DOOR_PSIDE_R = 3,
-- VEH_EXT_BONNET = 4,
-- VEH_EXT_BOOT = 5,
-- // 0x872E72B8 = 0xFFFFFFFF,
-- }
-- ```
-- @param vehicle Vehicle.
-- @param doorIndex Index of the door you want to close.
-- @param closeInstantly Whether the doors close instantly.
function Global.SetVehicleDoorShut(vehicle, doorIndex, closeInstantly)
	return _in(0x93D9BD300D7789E5, vehicle, doorIndex, closeInstantly)
end

--- Locks the doors of a specified vehicle to a defined lock state, affecting how players and NPCs can interact with the vehicle.
-- ```
-- NativeDB Introduced: v323
-- ```
-- ```cpp
-- enum eVehicleLockState {
-- VEHICLELOCK_NONE = 0, // No specific lock state, vehicle behaves according to the game's default settings.
-- VEHICLELOCK_UNLOCKED = 1, // Vehicle is fully unlocked, allowing free entry by players and NPCs.
-- VEHICLELOCK_LOCKED = 2, // Vehicle is locked, preventing entry by players and NPCs.
-- VEHICLELOCK_LOCKOUT_PLAYER_ONLY = 3, // Vehicle locks out only players, allowing NPCs to enter.
-- VEHICLELOCK_LOCKED_PLAYER_INSIDE = 4, // Vehicle is locked once a player enters, preventing others from entering.
-- VEHICLELOCK_LOCKED_INITIALLY = 5, // Vehicle starts in a locked state, but may be unlocked through game events.
-- VEHICLELOCK_FORCE_SHUT_DOORS = 6, // Forces the vehicle's doors to shut and lock.
-- VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7, // Vehicle is locked but can still be damaged.
-- VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED = 8, // Vehicle is locked, but its trunk/boot remains unlocked.
-- VEHICLELOCK_LOCKED_NO_PASSENGERS = 9, // Vehicle is locked and does not allow passengers, except for the driver.
-- VEHICLELOCK_CANNOT_ENTER = 10 // Vehicle is completely locked, preventing entry entirely, even if previously inside.
-- };
-- ```
-- @param vehicle The vehicle whose doors are to be locked.
-- @param doorLockStatus The lock state to apply to the vehicle's doors, see `eVehicleLockState`.
function Global.SetVehicleDoorsLocked(vehicle, doorLockStatus)
	return _in(0xB664292EAECF7FA6, vehicle, doorLockStatus)
end

--- SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS
function Global.SetVehicleDoorsLockedForAllPlayers(vehicle, toggle)
	return _in(0xA2F80B8D040727CC, vehicle, toggle)
end

--- SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS
function Global.SetVehicleDoorsLockedForNonScriptPlayers(vehicle, toggle)
	return _in(0x9737A37136F07E75, vehicle, toggle)
end
Global.N_0x9737a37136f07e75 = Global.SetVehicleDoorsLockedForNonScriptPlayers

--- SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
function Global.SetVehicleDoorsLockedForPlayer(vehicle, player, toggle)
	return _in(0x517AAF684BB50CD1, vehicle, player, toggle)
end

--- SET_VEHICLE_DOORS_LOCKED_FOR_TEAM
function Global.SetVehicleDoorsLockedForTeam(vehicle, team, toggle)
	return _in(0xB81F6D4A8F5EEBA8, vehicle, team, toggle)
end

--- NativeDB Introduced: v1365
function Global.SetVehicleDoorsLockedForUnk(vehicle, toggle)
	return _in(0x203B527D1B77904C, vehicle, toggle)
end

--- Closes all doors of a vehicle:
function Global.SetVehicleDoorsShut(vehicle, closeInstantly)
	return _in(0x781B3D62BB013EF5, vehicle, closeInstantly)
end

--- Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
-- youtu.be/3arlUxzHl5Y
-- i.imgur.com/WrNpYFs.jpg
function Global.SetVehicleDropsMoneyWhenBlownUp(vehicle, toggle)
	return _in(0x068F64F2470F9656, vehicle, toggle)
end
Global.N_0x068f64f2470f9656 = Global.SetVehicleDropsMoneyWhenBlownUp
Global.SetVehicleCreatesMoneyPickupsWhenExploded = Global.SetVehicleDropsMoneyWhenBlownUp

--- SET_VEHICLE_ENGINE_CAN_DEGRADE
function Global.SetVehicleEngineCanDegrade(vehicle, toggle)
	return _in(0x983765856F2564F9, vehicle, toggle)
end

--- 1000 is max health
-- Begins leaking gas at around 650 health
-- -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
-- -------------------------
-- Minimum: -4000
-- Maximum: 1000
-- -4000: Engine is destroyed
-- 0 and below: Engine catches fire and health rapidly declines
-- 300: Engine is smoking and losing functionality
-- 1000: Engine is perfect
function Global.SetVehicleEngineHealth(vehicle, health)
	return _in(0x45F6D8EEF34ABEF1, vehicle, health)
end

--- Starts or stops the engine on the specified vehicle.
-- From what I've tested when I do this to a helicopter the propellers turn off after the engine has started.
-- @param vehicle The vehicle to start or stop the engine on.
-- @param value true to turn the vehicle on; false to turn it off.
-- @param instantly if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
-- @param disableAutoStart If true, the system will prevent the engine from starting when the player got into it.
function Global.SetVehicleEngineOn(vehicle, value, instantly, disableAutoStart)
	return _in(0x2497C4717C8B881E, vehicle, value, instantly, disableAutoStart)
end

--- SET_VEHICLE_ENGINE_TEMPERATURE
function Global.SetVehicleEngineTemperature(vehicle, temperature)
	return _in(0x6c93c4a9, vehicle, temperature)
end

--- Examples with a besra:
-- *   [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
-- *   [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
-- *   [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)
-- The parameter fade is a value from 0-1, where 0 is fresh paint.
-- @param vehicle Target vehicle
-- @param fade The paint fade effect strength
function Global.SetVehicleEnveffScale(vehicle, fade)
	return _in(0x3AFDC536C3D01674, vehicle, fade)
end
Global.SetVehiclePaintFade = Global.SetVehicleEnveffScale

--- Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.
-- Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).
-- See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#\_0xB5C51B5502E85E83).
-- ```
-- NativeDB Removed Parameter 2: int index
-- ```
function Global.SetVehicleExclusiveDriver(vehicle, toggle)
	return _in(0x41062318F23ED854, vehicle, toggle)
end
Global.N_0x41062318f23ed854 = Global.SetVehicleExclusiveDriver

--- The **actual** [`SET_VEHICLE_EXCLUSIVE_DRIVER`](#\_0x41062318F23ED854) native.
function Global.SetVehicleExclusiveDriver_2(vehicle, ped, index)
	return _in(0xB5C51B5502E85E83, vehicle, ped, index)
end
Global.N_0xb5c51b5502e85e83 = Global.SetVehicleExclusiveDriver_2

--- Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
function Global.SetVehicleExplodesOnHighExplosionDamage(vehicle, toggle)
	return _in(0x71B0892EC081D60A, vehicle, toggle)
end

--- Max value is 32767
function Global.SetVehicleExtendedRemovalRange(vehicle, range)
	return _in(0x79DF7E806202CE01, vehicle, range)
end
Global.N_0x79df7e806202ce01 = Global.SetVehicleExtendedRemovalRange

--- Note: only some vehicle have extras
-- extra ids are from 1 - 9 depending on the vehicle
-- -------------------------------------------------
-- ^ not sure if outdated or simply wrong. Max extra ID for b944 is 14
-- -------------------------------------------------
-- p2 is not a on/off toggle. mostly 0 means on and 1 means off.
-- not sure if it really should be a BOOL.
-- -------------------------------------------------
-- Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]
function Global.SetVehicleExtra(vehicle, extraId, disable)
	return _in(0x7EE3A3C5E4A40CC9, vehicle, extraId, disable)
end

--- They use the same color indexs as SET_VEHICLE_COLOURS.
function Global.SetVehicleExtraColours(vehicle, pearlescentColor, wheelColor)
	return _in(0x2036F561ADD12E33, vehicle, pearlescentColor, wheelColor)
end

--- Fix a given vehicle.
-- If the vehicle's engine's broken then you cannot fix it with this native.
-- @param vehicle The vehicle that will be fixed
function Global.SetVehicleFixed(vehicle)
	return _in(0x115722B1B9C14C1C, vehicle)
end

--- SET_VEHICLE_FLIGHT_NOZZLE_POSITION
function Global.SetVehicleFlightNozzlePosition(vehicle, angleRatio)
	return _in(0x30D779DE7C4F6DD3, vehicle, angleRatio)
end
Global.N_0x30d779de7c4f6dd3 = Global.SetVehicleFlightNozzlePosition
Global.SetDesiredVerticalFlightPhase = Global.SetVehicleFlightNozzlePosition
Global.SetPlaneVtolDesiredDirection = Global.SetVehicleFlightNozzlePosition

--- SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE
function Global.SetVehicleFlightNozzlePositionImmediate(vehicle, angle)
	return _in(0x9AA47FFF660CB932, vehicle, angle)
end
Global.N_0x9aa47fff660cb932 = Global.SetVehicleFlightNozzlePositionImmediate
Global.SetVerticalFlightPhase = Global.SetVehicleFlightNozzlePositionImmediate
Global.SetPlaneVtolDirection = Global.SetVehicleFlightNozzlePositionImmediate

--- SET_VEHICLE_FORCE_AFTERBURNER
function Global.SetVehicleForceAfterburner(vehicle, toggle)
	return _in(0xB055A34527CB8FD7, vehicle, toggle)
end
Global.N_0xb055a34527cb8fd7 = Global.SetVehicleForceAfterburner

--- SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
-- Speed is in meters per second
-- You can convert meters/s to mph here:
-- http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
function Global.SetVehicleForwardSpeed(vehicle, speed)
	return _in(0xAB54A438726D25D5, vehicle, speed)
end

--- Seems to be related to the metal parts, not tyres (like i was expecting lol)
-- Must be called every tick.
function Global.SetVehicleFrictionOverride(vehicle, friction)
	return _in(0x1837AF7C627009BA, vehicle, friction)
end

--- SET_VEHICLE_FUEL_LEVEL
function Global.SetVehicleFuelLevel(vehicle, level)
	return _in(0xba970511, vehicle, level)
end

--- It switch to highbeam when p1 is set to true.
function Global.SetVehicleFullbeam(vehicle, toggle)
	return _in(0x8B7FD87F0DDB421E, vehicle, toggle)
end

--- Sets the vehicles gear ratio on choosen gear, reverse gear needs to be a negative float and forward moving gear needs to be a positive float. Refer to the examples if confused.
-- @param vehicle The vehicle handle.
-- @param gear The vehicles gear you want to change.
-- @param ratio The gear ratio you want to use.
function Global.SetVehicleGearRatio(vehicle, gear, ratio)
	return _in(0x496ef2f2, vehicle, gear, ratio)
end

--- Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
function Global.SetVehicleGeneratesEngineShockingEvents(vehicle, toggle)
	return _in(0x279D50DE5652D935, vehicle, toggle)
end
Global.N_0x279d50de5652d935 = Global.SetVehicleGeneratesEngineShockingEvents

--- Specifies an area of interest where cargens will focus on spawning vehicles
-- You can clear the area of interest with [`CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#\_0x0A436B8643716D14)
-- @param x The X coordinate of the central point of the area of interest.
-- @param y The Y coordinate of the central point of the area of interest.
-- @param z The Z coordinate of the central point of the area of interest.
-- @param radius The radius around the central point, defining the size of the area of interest
function Global.SetVehicleGeneratorAreaOfInterest(x, y, z, radius)
	return _in(0x9A75585FB2E54FAD, x, y, z, radius)
end
Global.N_0x9a75585fb2e54fad = Global.SetVehicleGeneratorAreaOfInterest

--- SET_VEHICLE_GRAVITY
function Global.SetVehicleGravity(vehicle, toggle)
	return _in(0x89F149B6131E57DA, vehicle, toggle)
end

--- SET_VEHICLE_GRAVITY_AMOUNT
function Global.SetVehicleGravityAmount(vehicle, gravity)
	return _in(0x1a963e58, vehicle, gravity)
end

--- SET_VEHICLE_HANDBRAKE
function Global.SetVehicleHandbrake(vehicle, toggle)
	return _in(0x684785568EF26A22, vehicle, toggle)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FIELD`, this might require some experimentation.
-- Example: `SetVehicleHandlingField(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The value to set.
function Global.SetVehicleHandlingField(vehicle, class_, fieldName, value)
	return _in(0x2ba40795, vehicle, _ts(class_), _ts(fieldName), value)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FLOAT`, this might require some experimentation.
-- Example: `SetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The floating-point value to set.
function Global.SetVehicleHandlingFloat(vehicle, class_, fieldName, value)
	return _in(0x488c86d2, vehicle, _ts(class_), _ts(fieldName), value)
end

--- _SET_VEHICLE_HANDLING_HASH_FOR_AI
function Global.SetVehicleHandlingHashForAi(vehicle, hash)
	return _in(0x10655FAB9915623D, vehicle, _ch(hash))
end
Global.N_0x10655fab9915623d = Global.SetVehicleHandlingHashForAi

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_INT`, this might require some experimentation.
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The integer value to set.
function Global.SetVehicleHandlingInt(vehicle, class_, fieldName, value)
	return _in(0xc37f4cf9, vehicle, _ts(class_), _ts(fieldName), value)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_VECTOR`, this might require some experimentation.
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The Vector3 value to set.
function Global.SetVehicleHandlingVector(vehicle, class_, fieldName, value)
	return _in(0x12497890, vehicle, _ts(class_), _ts(fieldName), value)
end

--- SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG
function Global.SetVehicleHasBeenDrivenFlag(vehicle, toggle)
	return _in(0x02398B627547189C, vehicle, toggle)
end
Global.N_0x02398b627547189c = Global.SetVehicleHasBeenDrivenFlag

--- SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER
function Global.SetVehicleHasBeenOwnedByPlayer(vehicle, owned)
	return _in(0x2B5F9D2AF1F1722D, vehicle, owned)
end

--- SET_VEHICLE_HAS_MUTED_SIRENS
function Global.SetVehicleHasMutedSirens(vehicle, toggle)
	return _in(0xD8050E0EB60CF274, vehicle, toggle)
end
Global.DisableVehicleImpactExplosionActivation = Global.SetVehicleHasMutedSirens
Global.SetDisableVehicleSirenSound = Global.SetVehicleHasMutedSirens

--- if true, axles won't bend.
function Global.SetVehicleHasStrongAxles(vehicle, toggle)
	return _in(0x92F0CF722BC4202F, vehicle, toggle)
end

--- SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS
function Global.SetVehicleHasUnbreakableLights(vehicle, p1)
	return _in(0x1AA8A837D2169D94, vehicle, p1)
end
Global.N_0x1aa8a837d2169d94 = Global.SetVehicleHasUnbreakableLights
Global.SetVehicleLightsCanBeVisiblyDamaged = Global.SetVehicleHasUnbreakableLights

--- SET_VEHICLE_HIGH_GEAR
function Global.SetVehicleHighGear(vehicle, gear)
	return _in(0x20b1b3e6, vehicle, gear)
end

--- NativeDB Introduced: v1365
function Global.SetVehicleHornVariation(vehicle, value)
	return _in(0x0350E7E17BA767D0, vehicle, value)
end
Global.N_0x0350e7e17ba767d0 = Global.SetVehicleHornVariation
Global.N_0xcda42c4bb9bde779 = Global.SetVehicleHornVariation

--- SET_VEHICLE_INACTIVE_DURING_PLAYBACK
function Global.SetVehicleInactiveDuringPlayback(vehicle, toggle)
	return _in(0x06582AFF74894C75, vehicle, toggle)
end
Global.N_0x06582aff74894c75 = Global.SetVehicleInactiveDuringPlayback

--- Sets the turn signal enabled for a vehicle.
-- Set turnSignal to 1 for left light, 0 for right light.
function Global.SetVehicleIndicatorLights(vehicle, turnSignal, toggle)
	return _in(0xB5D45264751B7DF0, vehicle, turnSignal, toggle)
end

--- SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
-- @param doorIndex See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param doorLockStatus See eCarLock declared in [`SET_VEHICLE_DOORS_LOCKED`](#\_0xB664292EAECF7FA6)
function Global.SetVehicleIndividualDoorsLocked(vehicle, doorIndex, doorLockStatus)
	return _in(0xBE70724027F85BCD, vehicle, doorIndex, doorLockStatus)
end
Global.SetPedTargettableVehicleDestroy = Global.SetVehicleIndividualDoorsLocked
Global.SetVehicleDoorDestroyType = Global.SetVehicleIndividualDoorsLocked

--- This native sets whether a specific vehicle influences the player's wanted level when it is involved in an incident that typically triggers a wanted response, such as being marked as a "victim" vehicle.
-- This is particularly useful when utilizing the wanted system from GTA, and you want to prevent a vehicle from affecting the wanted level when it is stolen. In the decompiled scripts this native is only used to disable the influence of the vehicle on the wanted level.
-- @param vehicle The specific vehicle to be set for influencing the wanted level.
-- @param influenceWantedLevel A boolean value. Set to `true` to make the vehicle influence the wanted level; `false` to prevent it from doing so.
function Global.SetVehicleInfluencesWantedLevel(vehicle, influenceWantedLevel)
	return _in(0x0AD9E8F87FF7C16F, vehicle, influenceWantedLevel)
end
Global.N_0x0ad9e8f87ff7c16f = Global.SetVehicleInfluencesWantedLevel

--- _SET_VEHICLE_INTERIOR_COLOR
function Global.SetVehicleInteriorColor(vehicle, color)
	return _in(0xF40DD601A65F7F19, vehicle, color)
end
Global.SetVehicleInteriorColour = Global.SetVehicleInteriorColor

--- SET_VEHICLE_INTERIORLIGHT
function Global.SetVehicleInteriorlight(vehicle, toggle)
	return _in(0xBC2042F090AF6AD3, vehicle, toggle)
end

--- Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
function Global.SetVehicleIsConsideredByPlayer(vehicle, toggle)
	return _in(0x31B927BBC44156CD, vehicle, toggle)
end

--- p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
function Global.SetVehicleIsRacing(vehicle, toggle)
	return _in(0x07116E24E9D1929D, vehicle, toggle)
end
Global.SteerUnlockBias = Global.SetVehicleIsRacing

--- SET_VEHICLE_IS_STOLEN
function Global.SetVehicleIsStolen(vehicle, isStolen)
	return _in(0x67B2C79AA7FF5738, vehicle, isStolen)
end

--- Sets the wanted state of this vehicle.
function Global.SetVehicleIsWanted(vehicle, state)
	return _in(0xF7EC25A3EBEEC726, vehicle, state)
end

--- Calling this native will keep a vehicle's engine running after exiting.
-- @param vehicle The vehicle handle.
-- @param toggle `true` to keep the engine on, otherwise `false`.
function Global.SetVehicleKeepEngineOnWhenAbandoned(vehicle, toggle)
	return _in(0xB8FBC8B1330CA9B4, vehicle, toggle)
end
Global.N_0xb8fbc8b1330ca9b4 = Global.SetVehicleKeepEngineOnWhenAbandoned
Global.SetVehicleJetEngineOn = Global.SetVehicleKeepEngineOnWhenAbandoned

--- SET_VEHICLE_KERS_ALLOWED
function Global.SetVehicleKersAllowed(vehicle, toggle)
	return _in(0x99C82F8A139F3E4E, vehicle, toggle)
end
Global.N_0x99c82f8a139f3e4e = Global.SetVehicleKersAllowed
Global.SetVehicleHudSpecialAbilityBarActive = Global.SetVehicleKersAllowed

--- multiplier = brightness of head lights.
-- this value isn't capped afaik.
-- multiplier = 0.0 no lights
-- multiplier = 1.0 default game value
function Global.SetVehicleLightMultiplier(vehicle, multiplier)
	return _in(0xB385454F8791F57C, vehicle, multiplier)
end

--- set's if the vehicle has lights or not.
-- not an on off toggle.
-- p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
-- p1 = 1 ;vehicle doesn't have lights, always off
-- p1 = 2 ;vehicle has always on lights
-- p1 = 3 ;or even larger like 4,5,... normal lights like =1
-- note1: when using =2 on day it's lowbeam,highbeam
-- but at night it's lowbeam,lowbeam,highbeam
-- note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
function Global.SetVehicleLights(vehicle, state)
	return _in(0x34E710FF01247C5A, vehicle, state)
end

--- p1 can be either 0, 1 or 2.
-- Determines how vehicle lights behave when toggled.
-- 0 = Default (Lights can be toggled between off, normal and high beams)
-- 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
-- 2 = Always On (Lights can be toggled between normal and high beams)
function Global.SetVehicleLightsMode(vehicle, p1)
	return _in(0x1FD09E7390A74D54, vehicle, p1)
end
Global.N_0x1fd09e7390a74d54 = Global.SetVehicleLightsMode

--- SET_VEHICLE_LIVERY
function Global.SetVehicleLivery(vehicle, livery)
	return _in(0x60BF608F1B8CD1B6, vehicle, livery)
end

--- SET_VEHICLE_LOD_MULTIPLIER
function Global.SetVehicleLodMultiplier(vehicle, multiplier)
	return _in(0x93AE6A61BE015BF1, vehicle, multiplier)
end

--- To reset the max speed, set the `speed` value to `0.0` or lower.
-- @param vehicle The vehicle handle.
-- @param speed The speed limit in meters per second.
function Global.SetVehicleMaxSpeed(vehicle, speed)
	return _in(0xBAA045B4E42F3C06, vehicle, speed)
end
Global.N_0xbaa045b4e42f3c06 = Global.SetVehicleMaxSpeed

--- cpp
-- // eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).
-- enum eVehicleModType
-- {
-- VMT_SPOILER = 0,
-- VMT_BUMPER_F = 1,
-- VMT_BUMPER_R = 2,
-- VMT_SKIRT = 3,
-- VMT_EXHAUST = 4,
-- VMT_CHASSIS = 5,
-- VMT_GRILL = 6,
-- VMT_BONNET = 7,
-- VMT_WING_L = 8,
-- VMT_WING_R = 9,
-- VMT_ROOF = 10,
-- VMT_ENGINE = 11,
-- VMT_BRAKES = 12,
-- VMT_GEARBOX = 13,
-- VMT_HORN = 14,
-- VMT_SUSPENSION = 15,
-- VMT_ARMOUR = 16,
-- VMT_NITROUS = 17,
-- VMT_TURBO = 18,
-- VMT_SUBWOOFER = 19,
-- VMT_TYRE_SMOKE = 20,
-- VMT_HYDRAULICS = 21,
-- VMT_XENON_LIGHTS = 22,
-- VMT_WHEELS = 23,
-- VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
-- VMT_PLTHOLDER = 25,
-- VMT_PLTVANITY = 26,
-- VMT_INTERIOR1 = 27,
-- VMT_INTERIOR2 = 28,
-- VMT_INTERIOR3 = 29,
-- VMT_INTERIOR4 = 30,
-- VMT_INTERIOR5 = 31,
-- VMT_SEATS = 32,
-- VMT_STEERING = 33,
-- VMT_KNOB = 34,
-- VMT_PLAQUE = 35,
-- VMT_ICE = 36,
-- VMT_TRUNK = 37,
-- VMT_HYDRO = 38,
-- VMT_ENGINEBAY1 = 39,
-- VMT_ENGINEBAY2 = 40,
-- VMT_ENGINEBAY3 = 41,
-- VMT_CHASSIS2 = 42,
-- VMT_CHASSIS3 = 43,
-- VMT_CHASSIS4 = 44,
-- VMT_CHASSIS5 = 45,
-- VMT_DOOR_L = 46,
-- VMT_DOOR_R = 47,
-- VMT_LIVERY_MOD = 48,
-- VMT_LIGHTBAR = 49,
-- };
function Global.SetVehicleMod(vehicle, modType, modIndex, customTires)
	return _in(0x6AF0636DDEDCB6DD, vehicle, modType, modIndex, customTires)
end

--- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
-- color: number of the color.
-- p3 seems to always be 0.
function Global.SetVehicleModColor_1(vehicle, paintType, color, pearlescentColor)
	return _in(0x43FEB945EE7F85B8, vehicle, paintType, color, pearlescentColor)
end

--- Changes the secondary paint type and color
-- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
-- color: number of the color
function Global.SetVehicleModColor_2(vehicle, paintType, color)
	return _in(0x816562BADFDEC83E, vehicle, paintType, color)
end

--- Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
function Global.SetVehicleModKit(vehicle, modKit)
	return _in(0x1F2AA07F00B3217A, vehicle, modKit)
end

--- seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:
-- VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);
function Global.SetVehicleModelIsSuppressed(model, suppressed)
	return _in(0x0FC2D89AC25A5814, _ch(model), suppressed)
end

--- This method is utilized solely for debugging purposes and is functional only in debug builds of the game. Please note that its functionality may not be available in the retail version.
-- @param vehicle The vehicle id.
-- @param name Debug name.
function Global.SetVehicleNameDebug(vehicle, name)
	return _in(0xBFDF984E2C22B94F, vehicle, _ts(name))
end

--- SET_VEHICLE_NEEDS_TO_BE_HOTWIRED
function Global.SetVehicleNeedsToBeHotwired(vehicle, toggle)
	return _in(0xFBA550EA44404EE6, vehicle, toggle)
end

--- Sets the neon lights of the specified vehicle on/off.
-- Indices:
-- 0 = Left
-- 1 = Right
-- 2 = Front
-- 3 = Back
function Global.SetVehicleNeonLightEnabled(vehicle, index, toggle)
	return _in(0x2AA720E4287BF269, vehicle, index, toggle)
end

--- NativeDB Introduced: v1493
function Global.SetVehicleNeonLightsColor_2(vehicle, color)
	return _in(0xB93B2867F7B479D1, vehicle, color)
end

--- Sets the color of the neon lights on the specified vehicle.
-- RGB values and colour names taken from the decompiled scripts:
-- | Colour         |  R  |  G  |  B  |
-- |---------------|:---:|:---:|:---:|
-- | White         | 222 | 222 | 255 |
-- | Blue          | 2   | 21  | 255 |
-- | Electric Blue | 3   | 83  | 255 |
-- | Mint Green    | 0   | 255 | 140 |
-- | Lime Green    | 94  | 255 | 1   |
-- | Yellow        | 255 | 255 | 0   |
-- | Golden Shower | 255 | 150 | 0   |
-- | Orange        | 255 | 62  | 0   |
-- | Red           | 255 | 1   | 1   |
-- | Pony Pink     | 255 | 50  | 100 |
-- | Hot Pink      | 255 | 5   | 190 |
-- | Purple        | 35  | 1   | 255 |
-- | Blacklight    | 15  | 3   | 255 |
function Global.SetVehicleNeonLightsColour(vehicle, r, g, b)
	return _in(0x8E0A582209A62695, vehicle, r, g, b)
end

--- NativeDB Introduced: v1604
-- NativeDB Added Parameter 2 (2060): float level
-- NativeDB Added Parameter 3 (2060): float power
-- NativeDB Added Parameter 4 (2060): float rechargeTime
-- NativeDB Added Parameter 5 (2060): BOOL disableSound
function Global.SetVehicleNitroEnabled(vehicle, toggle)
	return _in(0xC8E9B6B71B8E660D, vehicle, toggle)
end

--- Sets the maximum distance in which [\_SET_VEHICLE_NITRO_ENABLED](#\_0xC8E9B6B71B8E660D) PTFX are rendered. Distance is measured from the camera position.
-- @param range The visible distance. Default is 50.0f.
function Global.SetVehicleNitroPtfxRange(range)
	return _in(0xa40cb822, range)
end

--- SET_VEHICLE_NUMBER_PLATE_TEXT
-- @param vehicle The vehicle to set the plate for
-- @param plateText The text to set the plate to, 8 chars maximum
function Global.SetVehicleNumberPlateText(vehicle, plateText)
	return _in(0x95A88F0B409CDA47, vehicle, _ts(plateText))
end

--- Plates:
-- Blue/White - 0
-- Yellow/black - 1
-- Yellow/Blue - 2
-- Blue/White2 - 3
-- Blue/White3 - 4
-- Yankton - 5
function Global.SetVehicleNumberPlateTextIndex(vehicle, plateIndex)
	return _in(0x9088EB5A43FFB0A1, vehicle, plateIndex)
end

--- SET_VEHICLE_OIL_LEVEL
function Global.SetVehicleOilLevel(vehicle, level)
	return _in(0x90d1cad1, vehicle, level)
end

--- Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
-- ```
-- ```
-- NativeDB Added Parameter 2: float p1
function Global.SetVehicleOnGroundProperly(vehicle)
	return _in(0x49733E92263139D1, vehicle, _r)
end

--- Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
function Global.SetVehicleOutOfControl(vehicle, killDriver, explodeOnImpact)
	return _in(0xF19D095E42D430CC, vehicle, killDriver, explodeOnImpact)
end

--- _SET_VEHICLE_PARACHUTE_ACTIVE
function Global.SetVehicleParachuteActive(vehicle, active)
	return _in(0x0BFFB028B3DD0A97, vehicle, active)
end

--- parachuteModel = 230075693
function Global.SetVehicleParachuteModel(vehicle, modelHash)
	return _in(0x4D610C6B56031351, vehicle, _ch(modelHash))
end
Global.VehicleSetCustomParachuteModel = Global.SetVehicleParachuteModel

--- colorIndex = 0 - 7
function Global.SetVehicleParachuteTextureVariation(vehicle, textureVariation)
	return _in(0xA74AD2439468C883, vehicle, textureVariation)
end
Global.VehicleSetCustomParachuteTexture = Global.SetVehicleParachuteTextureVariation
Global.SetVehicleParachuteTextureVariatiion = Global.SetVehicleParachuteTextureVariation

--- 1000 is max health
-- Begins leaking gas at around 650 health
function Global.SetVehiclePetrolTankHealth(vehicle, health)
	return _in(0x70DB57649FA8D0D8, vehicle, health)
end

--- Set the vehicle's pitch bias. Only works on planes.
-- @param vehicle Target vehicle.
-- @param value Pitch bias value.
function Global.SetVehiclePitchBias(vehicle, value)
	return _in(0x2a6cc9f2, vehicle, value)
end

--- SET_VEHICLE_POPULATION_BUDGET
function Global.SetVehiclePopulationBudget(p0)
	return _in(0xCB9E1EB3BE2AF4E9, p0)
end

--- SET_VEHICLE_PROVIDES_COVER
function Global.SetVehicleProvidesCover(vehicle, toggle)
	return _in(0x5AFEEDD9BB2899D7, vehicle, toggle)
end

--- can't seem to enable radio on cop cars etc
function Global.SetVehicleRadioEnabled(vehicle, toggle)
	return _in(0x3B988190C0AA6C0B, vehicle, toggle)
end

--- SET_VEHICLE_RADIO_LOUD
function Global.SetVehicleRadioLoud(vehicle, loud)
	return _in(0xBB6F1CAEC68B0BCE, vehicle, loud)
end

--- _SET_VEHICLE_RAMP_LAUNCH_MODIFIER
function Global.SetVehicleRampLaunchModifier(vehicle, p1)
	return _in(0xEFC13B1CE30D755D, vehicle, p1)
end
Global.N_0xefc13b1ce30d755d = Global.SetVehicleRampLaunchModifier

--- _SET_VEHICLE_RAMP_SIDEWAYS_LAUNCH_MOTION
function Global.SetVehicleRampSidewaysLaunchMotion(vehicle, toggle)
	return _in(0x1BBAC99C0BC53656, vehicle, toggle)
end
Global.N_0x1bbac99c0bc53656 = Global.SetVehicleRampSidewaysLaunchMotion

--- _SET_VEHICLE_RAMP_UPWARDS_LAUNCH_MOTION
function Global.SetVehicleRampUpwardsLaunchMotion(vehicle, toggle)
	return _in(0x756AE6E962168A04, vehicle, toggle)
end
Global.N_0x756ae6e962168a04 = Global.SetVehicleRampUpwardsLaunchMotion

--- _SET_VEHICLE_RECEIVES_RAMP_DAMAGE
function Global.SetVehicleReceivesRampDamage(vehicle, toggle)
	return _in(0x28D034A93FE31BF5, vehicle, toggle)
end
Global.SetRampVehicleReceivesRampDamage = Global.SetVehicleReceivesRampDamage

--- Reduces grip significantly so it's hard to go anywhere.
function Global.SetVehicleReduceGrip(vehicle, toggle)
	return _in(0x222FF6A823D122E2, vehicle, toggle)
end

--- Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#\_0x222FF6A823D122E2).
-- ```
-- NativeDB Introduced: v1604
-- ```
function Global.SetVehicleReduceTraction(vehicle, val)
	return _in(0x6DEE944E1EE90CFB, vehicle, val)
end
Global.N_0x6dee944e1ee90cfb = Global.SetVehicleReduceTraction

--- _SET_VEHICLE_ROCKET_BOOST_ACTIVE
function Global.SetVehicleRocketBoostActive(vehicle, active)
	return _in(0x81E1552E35DC3839, vehicle, active)
end

--- _SET_VEHICLE_ROCKET_BOOST_PERCENTAGE
function Global.SetVehicleRocketBoostPercentage(vehicle, percentage)
	return _in(0xFEB2DDED3509562E, vehicle, percentage)
end

--- _SET_VEHICLE_ROCKET_BOOST_REFILL_TIME
function Global.SetVehicleRocketBoostRefillTime(vehicle, time)
	return _in(0xE00F2AB100B76E89, vehicle, time)
end

--- Set the vehicle's roll bias. Only works on planes.
-- @param vehicle Target vehicle.
-- @param value Roll bias value.
function Global.SetVehicleRollBias(vehicle, value)
	return _in(0x264b45de, vehicle, value)
end

--- Used to set the tornado custom (convertible) rooftop livery.
-- Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
-- Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
-- @param vehicle The vehicle handle.
-- @param livery Livery index.
function Global.SetVehicleRoofLivery(vehicle, livery)
	return _in(0xA6D3A8750DC73270, vehicle, livery)
end
Global.N_0xa6d3a8750dc73270 = Global.SetVehicleRoofLivery

--- SET_VEHICLE_RUDDER_BROKEN
function Global.SetVehicleRudderBroken(vehicle, toggle)
	return _in(0x09606148B6C71DEF, vehicle, toggle)
end

--- Only works during nighttime.
function Global.SetVehicleSearchlight(heli, toggle, canBeUsedByAI)
	return _in(0x14E85C5EE7A4D542, heli, toggle, canBeUsedByAI)
end

--- Adds some kind of shadow to the vehicle.
-- -1 disables the effect.
-- DISABLE_*
function Global.SetVehicleShadowEffect(vehicle, p1, p2)
	return _in(0xF0E4BA16D1DB546C, vehicle, p1, p2)
end
Global.N_0xf0e4ba16d1db546c = Global.SetVehicleShadowEffect

--- Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
-- WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);
function Global.SetVehicleShootAtTarget(driver, entity, xTarget, yTarget, zTarget)
	return _in(0x74CD9A9327A282EA, driver, entity, xTarget, yTarget, zTarget)
end

--- If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
function Global.SetVehicleSilent(vehicle, toggle)
	return _in(0x9D44FCCE98450843, vehicle, toggle)
end
Global.N_0x9d44fcce98450843 = Global.SetVehicleSilent

--- Activate siren on vehicle (Only works if the vehicle has a siren).
function Global.SetVehicleSiren(vehicle, toggle)
	return _in(0xF4924635A19EB37D, vehicle, toggle)
end

--- Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
-- ============================================
-- May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
-- Btw, func_1333 ends up calling this func which uses this native,
-- void func_1338(int iParam0)//Position
-- {
-- ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);
-- ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);
-- ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
-- VEHICLE::_0xDF594D8D(iParam0, true);
-- }
function Global.SetVehicleSt(vehicle, toggle)
	return _in(0x1CF38D529D7441D9, vehicle, toggle)
end
Global.N_0x1cf38d529d7441d9 = Global.SetVehicleSt

--- Overrides the vehicle's startup engine rev sound.
-- You can reset this with [RESET_VEHICLE_STARTUP_REV_SOUND](#\_0xD2DCCD8E16E20997)
function Global.SetVehicleStartupRevSound(vehicle, soundName, setName)
	return _in(0xF1F8157B8C3F171C, vehicle, _ts(soundName), _ts(setName))
end
Global.N_0xf1f8157b8c3f171c = Global.SetVehicleStartupRevSound

--- Locks the vehicle's steering to the desired angle, explained below.
-- Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
-- Steer bias:
-- -1.0 = full right
-- 0.0 = centered steering
-- 1.0 = full left
function Global.SetVehicleSteerBias(vehicle, value)
	return _in(0x42A8EC77D5150CBE, vehicle, value)
end

--- SET_VEHICLE_STEERING_ANGLE
function Global.SetVehicleSteeringAngle(vehicle, angle)
	return _in(0xffccc2ea, vehicle, angle)
end

--- SET_VEHICLE_STEERING_BIAS_SCALAR
function Global.SetVehicleSteeringBiasScalar(vehicle, scalar)
	return _in(0x9007A2F21DC108D4, vehicle, scalar)
end
Global.N_0x9007a2f21dc108d4 = Global.SetVehicleSteeringBiasScalar

--- SET_VEHICLE_STEERING_SCALE
function Global.SetVehicleSteeringScale(vehicle, scale)
	return _in(0xeb46596f, vehicle, scale)
end

--- If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
function Global.SetVehicleStrong(vehicle, toggle)
	return _in(0x3E8C8727991A8A0B, vehicle, toggle)
end

--- Sets the height of the vehicle's suspension.
-- This changes the same value set by Suspension in the mod shop.
-- Negatives values raise the car. Positive values lower the car.
-- This is change is visual only. The collision of the vehicle will not move.
function Global.SetVehicleSuspensionHeight(vehicle, newHeight)
	return _in(0xb3439a01, vehicle, newHeight)
end

--- SET_VEHICLE_TANK_TURRET_POSITION
function Global.SetVehicleTankTurretPosition(vehicle, position, p2)
	return _in(0x56B94C6D7127DFBA, vehicle, position, p2)
end
Global.N_0x56b94c6d7127dfba = Global.SetVehicleTankTurretPosition

--- SET_VEHICLE_TIMED_EXPLOSION
function Global.SetVehicleTimedExplosion(vehicle, ped, toggle)
	return _in(0x2E0A74E1002380B1, vehicle, ped, toggle)
end

--- Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
function Global.SetVehicleTowTruckArmPosition(vehicle, position)
	return _in(0xFE54B92A344583CA, vehicle, position)
end
Global.SetTowTruckCraneRaised = Global.SetVehicleTowTruckArmPosition
Global.SetTowTruckCraneHeight = Global.SetVehicleTowTruckArmPosition

--- SET_VEHICLE_TURBO_PRESSURE
function Global.SetVehicleTurboPressure(vehicle, pressure)
	return _in(0x6485615e, vehicle, pressure)
end

--- SET_VEHICLE_TURRET_SPEED_THIS_FRAME
function Global.SetVehicleTurretSpeedThisFrame(vehicle, speed)
	return _in(0x1093408B4B9D1146, vehicle, speed)
end
Global.N_0x1093408b4b9d1146 = Global.SetVehicleTurretSpeedThisFrame

--- Toggles specific flag on turret
-- ```
-- ```
-- NativeDB Introduced: v1290
function Global.SetVehicleTurretUnk(vehicle, index, toggle)
	return _in(0xC60060EB0D8AC7B1, vehicle, index, toggle)
end
Global.N_0xc60060eb0d8ac7b1 = Global.SetVehicleTurretUnk

--- "To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)
-- to burst all tyres type it 8 times where p1 = 0 to 7.
-- p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function Global.SetVehicleTyreBurst(vehicle, index, onRim, p3)
	return _in(0xEC6A202EE4960385, vehicle, index, onRim, p3)
end

--- tyreIndex = 0 to 4 on normal vehicles
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function Global.SetVehicleTyreFixed(vehicle, tyreIndex)
	return _in(0x6E13FC662B882D1D, vehicle, tyreIndex)
end

--- Sets the tire smoke's color of this vehicle.
-- vehicle: The vehicle that is the target of this method.
-- r: The red level in the RGB color code.
-- g: The green level in the RGB color code.
-- b: The blue level in the RGB color code.
-- Note:
-- setting r,g,b to 0 will give the car independance day tyre smoke
function Global.SetVehicleTyreSmokeColor(vehicle, r, g, b)
	return _in(0xB5BA80F839791C0F, vehicle, r, g, b)
end

--- Allows you to toggle bulletproof tires.
function Global.SetVehicleTyresCanBurst(vehicle, toggle)
	return _in(0xEB9DC3C7D8596C46, vehicle, toggle)
end

--- SET_VEHICLE_UNDRIVEABLE
function Global.SetVehicleUndriveable(vehicle, toggle)
	return _in(0x8ABA6AF54B942B95, vehicle, toggle)
end

--- _SET_VEHICLE_UNK_DAMAGE_MULTIPLIER
function Global.SetVehicleUnkDamageMultiplier(vehicle, multiplier)
	return _in(0x45A561A9421AB6AD, vehicle, multiplier)
end
Global.N_0x45a561a9421ab6ad = Global.SetVehicleUnkDamageMultiplier

--- SET_VEHICLE_USE_ALTERNATE_HANDLING
function Global.SetVehicleUseAlternateHandling(vehicle, toggle)
	return _in(0x1D97D1E3A70A649F, vehicle, toggle)
end
Global.N_0x1d97d1e3a70a649f = Global.SetVehicleUseAlternateHandling

--- SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION
function Global.SetVehicleUseCutsceneWheelCompression(p0, p1, p2, p3)
	return _in(0xE023E8AC4EF7C117, p0, p1, p2, p3, _ri)
end
Global.SetAllVehiclesSpawn = Global.SetVehicleUseCutsceneWheelCompression
Global.N_0xe023e8ac4ef7c117 = Global.SetVehicleUseCutsceneWheelCompression

--- SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS
function Global.SetVehicleUsePlayerLightSettings(vehicle, toggle)
	return _in(0xC45C27EF50F36ADC, vehicle, toggle)
end
Global.N_0xc45c27ef50f36adc = Global.SetVehicleUsePlayerLightSettings
Global.SetVehicleUsePlayerLightSettings = Global.SetVehicleUsePlayerLightSettings

--- vehicle must be a plane
function Global.SetVehicleUsesLargeRearRamp(vehicle, toggle)
	return _in(0xCAC66558B944DA67, vehicle, toggle)
end
Global.N_0xcac66558b944da67 = Global.SetVehicleUsesLargeRearRamp

--- _SET_VEHICLE_WEAPON_CAPACITY
function Global.SetVehicleWeaponCapacity(vehicle, weaponIndex, capacity)
	return _in(0x44CD1F493DB2A0A6, vehicle, weaponIndex, capacity)
end
Global.N_0x44cd1f493db2a0a6 = Global.SetVehicleWeaponCapacity

--- _SET_VEHICLE_WEAPONS_DISABLED
function Global.SetVehicleWeaponsDisabled(vehicle, weaponSlot)
	return _in(0x86B4B6212CB8B627, vehicle, weaponSlot)
end
Global.N_0x86b4b6212cb8b627 = Global.SetVehicleWeaponsDisabled

--- Sets brake pressure of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- Normal values around 1.0f
function Global.SetVehicleWheelBrakePressure(vehicle, wheelIndex, pressure)
	return _in(0xe80f4e31, vehicle, wheelIndex, pressure)
end

--- Sets the flags of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @param flags bit flags
function Global.SetVehicleWheelFlags(vehicle, wheelIndex, flags)
	return _in(0xd2b9e90d, vehicle, wheelIndex, flags)
end

--- SET_VEHICLE_WHEEL_HEALTH
function Global.SetVehicleWheelHealth(vehicle, wheelIndex, health)
	return _in(0xb22ecefd, vehicle, wheelIndex, health)
end

--- Sets whether the wheel is powered.
-- On all wheel drive cars this works to change which wheels receive power, but if a car's fDriveBiasFront doesn't send power to that wheel, it won't get power anyway. This can be fixed by changing the fDriveBiasFront with SET_VEHICLE_HANDLING_FLOAT.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- This is a shortcut to a flag in SET_VEHICLE_WHEEL_FLAGS.
function Global.SetVehicleWheelIsPowered(vehicle, wheelIndex, powered)
	return _in(0xbd5291a0, vehicle, wheelIndex, powered)
end

--- Sets power being sent to a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function Global.SetVehicleWheelPower(vehicle, wheelIndex, power)
	return _in(0xc6146043, vehicle, wheelIndex, power)
end

--- Not sure what this changes, probably determines physical rim size in case the tire is blown.
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Size of rim collider.
function Global.SetVehicleWheelRimColliderSize(vehicle, wheelIndex, value)
	return _in(0xf380e184, vehicle, wheelIndex, value)
end

--- Sets the rotation speed of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function Global.SetVehicleWheelRotationSpeed(vehicle, wheelIndex, speed)
	return _in(0x35ed100d, vehicle, wheelIndex, speed)
end

--- Sets vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels.
-- Returns whether change was successful (can be false if trying to set size for non-default wheels).
-- @param vehicle The vehicle to set data for.
-- @param size Size of the wheels (usually between 0.5 and 1.5 is reasonable).
-- @return Bool - whether change was successful or not
function Global.SetVehicleWheelSize(vehicle, size)
	return _in(0x53ab5c35, vehicle, size, _r)
end

--- Use along with SetVehicleWheelSize to resize the wheels (this native sets the collider size affecting physics while SetVehicleWheelSize will change visual size).
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Radius of tire collider.
function Global.SetVehicleWheelTireColliderSize(vehicle, wheelIndex, value)
	return _in(0xb962d05c, vehicle, wheelIndex, value)
end

--- Use along with SetVehicleWheelWidth to resize the wheels (this native sets the collider width affecting physics while SetVehicleWheelWidth will change visual width).
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Width of tire collider.
function Global.SetVehicleWheelTireColliderWidth(vehicle, wheelIndex, value)
	return _in(0x47bd0270, vehicle, wheelIndex, value)
end

--- Sets the traction vector length of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function Global.SetVehicleWheelTractionVectorLength(vehicle, wheelIndex, length)
	return _in(0x85c85a3a, vehicle, wheelIndex, length)
end

--- Refer to [GET_VEHICLE_WHEEL_TYPE](#\_0xB3ED1BFB4BE636DC) for wheel types.
function Global.SetVehicleWheelType(vehicle, wheelType)
	return _in(0x487EB21CC7295BA1, vehicle, wheelType)
end

--- Sets vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels.
-- Returns whether change was successful (can be false if trying to set width for non-default wheels).
-- @param vehicle The vehicle to set data for.
-- @param width Width of the wheels (usually between 0.1 and 1.5 is reasonable).
-- @return Bool - whether change was successful or not
function Global.SetVehicleWheelWidth(vehicle, width)
	return _in(0x64c3f1c0, vehicle, width, _r)
end

--- Adjusts the offset of the specified wheel relative to the wheel's axle center.
-- Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise.
-- This function can be especially useful to set the track width of a vehicle, for example:
-- ```
-- function SetVehicleFrontTrackWidth(vehicle, width)
-- SetVehicleWheelXOffset(vehicle, 0, -width/2)
-- SetVehicleWheelXOffset(vehicle, 1, width/2)
-- end
-- ```
function Global.SetVehicleWheelXOffset(vehicle, wheelIndex, offset)
	return _in(0xbd6357d, vehicle, wheelIndex, offset)
end

--- SET_VEHICLE_WHEEL_Y_ROTATION
function Global.SetVehicleWheelYRotation(vehicle, wheelIndex, value)
	return _in(0xc6c2171f, vehicle, wheelIndex, value)
end
Global.SetVehicleWheelXrot = Global.SetVehicleWheelYRotation

--- Example script: https://pastebin.com/J6XGbkCW
-- List of known states:
-- ```
-- 1: Not wheeling.
-- 65: Vehicle is ready to do wheelie (burnouting).
-- 129: Vehicle is doing wheelie.
-- ```
-- @param vehicle Vehicle
-- @param state Wheelie state
function Global.SetVehicleWheelieState(vehicle, state)
	return _in(0xeab8db65, vehicle, state)
end

--- SET_VEHICLE_WHEELS_CAN_BREAK
function Global.SetVehicleWheelsCanBreak(vehicle, enabled)
	return _in(0x29B18B4FD460CA8F, vehicle, enabled)
end

--- SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP
function Global.SetVehicleWheelsCanBreakOffWhenBlowUp(vehicle, toggle)
	return _in(0xA37B9A517B133349, vehicle, toggle)
end
Global.SetVehicleMaxStrTrap = Global.SetVehicleWheelsCanBreakOffWhenBlowUp

--- Related to monster trucks in native scripts.
-- ```
-- ```
-- NativeDB Introduced: v1604
function Global.SetVehicleWheelsDealDamage(vehicle, toggle)
	return _in(0x2970EAA18FD5E42F, vehicle, toggle)
end
Global.N_0x2970eaa18fd5e42f = Global.SetVehicleWheelsDealDamage

--- enum WindowTints
-- {
-- WINDOWTINT_NONE,
-- WINDOWTINT_PURE_BLACK,
-- WINDOWTINT_DARKSMOKE,
-- WINDOWTINT_LIGHTSMOKE,
-- WINDOWTINT_STOCK,
-- WINDOWTINT_LIMO,
-- WINDOWTINT_GREEN
-- };
function Global.SetVehicleWindowTint(vehicle, tint)
	return _in(0x57C51E6BAD752696, vehicle, tint)
end

--- Paint index goes from 0 to 12.
-- You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
-- @param vehicle The vehicle handle.
-- @param color The paint index.
function Global.SetVehicleXenonLightsColor(vehicle, color)
	return _in(0xE41033B25D003A07, vehicle, color)
end
Global.N_0xe41033b25d003a07 = Global.SetVehicleXenonLightsColor
Global.SetVehicleHeadlightsColour = Global.SetVehicleXenonLightsColor
Global.SetVehicleXenonLightsColour = Global.SetVehicleXenonLightsColor

--- Sets custom vehicle xenon lights color, allowing to use RGB palette. The game will ignore lights color set by [\_SET_VEHICLE_XENON_LIGHTS_COLOR](#\_0xE41033B25D003A07) when custom color is active. This native is not synced between players. Requires xenon lights mod to be set on vehicle.
-- @param vehicle The vehicle handle.
-- @param red Red color (0-255).
-- @param green Green color (0-255).
-- @param blue Blue color (0-255).
function Global.SetVehicleXenonLightsCustomColor(vehicle, red, green, blue)
	return _in(0x1683e7f0, vehicle, red, green, blue)
end

--- Overrides a floating point value from `visualsettings.dat` temporarily.
-- @param name The name of the value to set, such as `pedLight.color.red`.
-- @param value The value to write.
function Global.SetVisualSettingFloat(name, value)
	return _in(0xd1d31681, _ts(name), value)
end

--- Max value is 1.0
function Global.SetWantedLevelDifficulty(player, difficulty)
	return _in(0x9B0BB33B04405E7A, player, difficulty)
end

--- NativeDB Introduced: v2060
function Global.SetWantedLevelHiddenEvasionTime(player, wantedLevel, lossTime)
	return _in(0x49B856B1360C47C7, player, wantedLevel, lossTime)
end
Global.N_0x49b856b1360c47c7 = Global.SetWantedLevelHiddenEvasionTime

--- SET_WANTED_LEVEL_MULTIPLIER
function Global.SetWantedLevelMultiplier(multiplier)
	return _in(0x020E5F00CDA207BA, multiplier)
end

--- **instructionalKey enum list**:
-- ```
-- enum INSTRUCTIONAL_BUTTON_TYPES
-- {
-- NONE = 0,
-- SELECT = 1,
-- OK = 2,
-- YES = 4,
-- BACK = 8,
-- BACK_SELECT = 9,
-- BACK_OK = 10,
-- BACK_YES = 12,
-- CANCEL = 16,
-- CANCEL_SELECT = 17,
-- CANCEL_OK = 18,
-- CANCEL_YES = 20,
-- NO = 32,
-- NO_SELECT = 33,
-- NO_OK = 34,
-- YES_NO = 36,
-- RETRY = 64,
-- RETRY_SELECT = 65,
-- RETRY_OK = 66,
-- RETRY_YES = 68,
-- RETRY_BACK = 72,
-- RETRY_BACK_SELECT = 73,
-- RETRY_BACK_OK = 74,
-- RETRY_BACK_YES = 76,
-- RETRY_CANCEL = 80,
-- RETRY_CANCEL_SELECT = 81,
-- RETRY_CANCEL_OK = 82,
-- RETRY_CANCEL_YES = 84,
-- SKIP = 256,
-- SKIP_SELECT = 257,
-- SKIP_OK = 258,
-- SKIP_YES = 260,
-- SKIP_BACK = 264,
-- SKIP_BACK_SELECT = 265,
-- SKIP_BACK_OK = 266,
-- SKIP_BACK_YES = 268,
-- SKIP_CANCEL = 272,
-- SKIP_CANCEL_SELECT = 273,
-- SKIP_CANCEL_OK = 274,
-- SKIP_CANCEL_YES = 276,
-- CONTINUE = 16384,
-- BACK_CONTINUE = 16392,
-- CANCEL_CONTINUE = 16400,
-- LOADING_SPINNER = 134217728,
-- SELECT_LOADING_SPINNER = 134217729,
-- OK_LOADING_SPINNER = 134217730,
-- YES_LOADING_SPINNER = 134217732,
-- BACK_LOADING_SPINNER = 134217736,
-- BACK_SELECT_LOADING_SPINNER = 134217737,
-- BACK_OK_LOADING_SPINNER = 134217738,
-- BACK_YES_LOADING_SPINNER = 134217740,
-- CANCEL_LOADING_SPINNER = 134217744,
-- CANCEL_SELECT_LOADING_SPINNER = 134217745,
-- CANCEL_OK_LOADING_SPINNER = 134217746,
-- CANCEL_YES_LOADING_SPINNER = 134217748
-- }
-- ```
-- Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.
-- **Result of the example code:**
-- <https://i.imgur.com/imwoimm.png>
-- @param entryLine1 The text label to display as the first line of the warning message.
-- @param instructionalKey This is an enum, check the description for a list.
-- @param entryLine2 The text label to display as the second line of the warning message.
-- @param p3 Purpose unknown.
-- @param p4 Purpose unknown.
-- @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param p6 Purpose unknown.
-- @param showBg Purpose unknown.
-- @param errorCode When not 0, adds a field displaying the value as 'error code' to the warning message.
function Global.SetWarningMessage(entryLine1, instructionalKey, entryLine2, p3, p4, background, p6, showBg, errorCode)
	return _in(0x7B1776B3B53F8D74, _ts(entryLine1), instructionalKey, _ts(entryLine2), p3, p4, _ts(background), _ts(p6), showBg, errorCode)
end

--- Param names copied from the corresponding scaleform function "SET_LIST_ROW"
function Global.SetWarningMessageListRow(index, name, cash, rp, lvl, colour)
	return _in(0x0C5A80A9E096D529, index, _ts(name), cash, rp, lvl, colour, _r)
end
Global.N_0x0c5a80a9e096d529 = Global.SetWarningMessageListRow

--- instructionalKey enum list:
-- ```
-- Buttons = {
-- Empty = 0,
-- Select = 1, -- (RETURN)
-- Ok = 2, -- (RETURN)
-- Yes = 4, -- (RETURN)
-- Back = 8, -- (ESC)
-- Cancel = 16, -- (ESC)
-- No = 32, -- (ESC)
-- RetrySpace = 64, -- (SPACE)
-- Restart = 128, -- (SPACE)
-- Skip = 256, -- (SPACE)
-- Quit = 512, -- (ESC)
-- Adjust = 1024, -- (ARROWS)
-- SpaceKey = 2048, -- (SPACE)
-- Share = 4096, -- (SPACE)
-- SignIn = 8192, -- (SPACE)
-- Continue = 16384, -- (RETURN)
-- AdjustLeftRight = 32768, -- (SCROLL L/R)
-- AdjustUpDown = 65536, -- (SCROLL U/D)
-- Overwrite = 131072, -- (SPACE)
-- SocialClubSignup = 262144, -- (RETURN)
-- Confirm = 524288, -- (RETURN)
-- Queue = 1048576, -- (RETURN)
-- RetryReturn = 2097152, -- (RETURN)
-- BackEsc = 4194304, -- (ESC)
-- SocialClub = 8388608, -- (RETURN)
-- Spectate = 16777216, -- (SPACE)
-- OkEsc = 33554432, -- (ESC)
-- CancelTransfer = 67108864, -- (ESC)
-- LoadingSpinner = 134217728,
-- NoReturnToGTA = 268435456, -- (ESC)
-- CancelEsc = 536870912, -- (ESC)
-- }
-- Alt = {
-- Empty = 0,
-- No = 1, -- (SPACE)
-- Host = 2, -- (ESC)
-- SearchForJob = 4, -- (RETURN)
-- ReturnKey = 8, -- (TURN)
-- Freemode = 16, -- (ESC)
-- }
-- ```
-- **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
-- @param labelTitle Label of the alert's title.
-- @param labelMsg Label of the alert's message.
-- @param p2 This is an enum, check the description for a list.
-- @param p3 This is an enum, check the description for a list.
-- @param labelMsg2 Label of another message line
-- @param p5 usually 0
-- @param p6 usually -1
-- @param p7 usually 0
-- @param p8 unknown label
-- @param p9 unknown label
-- @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param errorCode Error code, shown at the bottom left if set to value other than 0.
function Global.SetWarningMessageWithAlert(labelTitle, labelMsg, p2, p3, labelMsg2, p5, p6, p7, p8, p9, background, errorCode)
	return _in(0x15803FEC3B9A872B, _ts(labelTitle), _ts(labelMsg), p2, p3, _ts(labelMsg2), p5, p6, p7, _ts(p8), _ts(p9), background, errorCode)
end
Global.N_0x15803fec3b9a872b = Global.SetWarningMessageWithAlert
Global.DrawFrontendAlert = Global.SetWarningMessageWithAlert

--- You can only use text entries. No custom text.
-- C# Example :
-- Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);
-- you can recreate this easily with scaleforms
-- ---------------
-- Fixed native name, from before nativedb restoration.
-- ```
-- ```
-- NativeDB Added Parameter 10: Any p9
function Global.SetWarningMessageWithHeader(titleMsg, entryLine1, flags, promptMsg, p4, p5, background, showBg)
	return _in(0xDC38CC1E35B6A5D7, _ts(titleMsg), _ts(entryLine1), flags, _ts(promptMsg), p4, p5, background, _i, showBg)
end
Global.SetWarningMessage_2 = Global.SetWarningMessageWithHeader

--- You can only use text entries. No custom text.
-- ```
-- ```
-- NativeDB Added Parameter 11: Any p10
function Global.SetWarningMessageWithHeaderAndSubstringFlags(entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, p6, p9)
	return _in(0x701919482C74B5AB, _ts(entryHeader), _ts(entryLine1), instructionalKey, _ts(entryLine2), p4, p5, p6, _i, _i, p9)
end
Global.SetWarningMessage_3 = Global.SetWarningMessageWithHeaderAndSubstringFlags

--- NativeDB Introduced: v1493
function Global.SetWarningMessageWithHeaderUnk(entryHeader, entryLine1, flags, entryLine2, p4, p5, showBg, p9, p10)
	return _in(0x38B55259C2E078ED, _ts(entryHeader), _ts(entryLine1), flags, _ts(entryLine2), p4, p5, _i, _i, showBg, p9, p10)
end

--- Sets world clip boundaries for water quads file (water.xml, water_heistisland.xml)
-- Used internally by LOAD_GLOBAL_WATER_FILE
function Global.SetWaterAreaClipRect(minX, minY, maxX, maxY)
	return _in(0x9fcd2ee6, minX, minY, maxX, maxY)
end

--- SET_WATER_QUAD_ALPHA
-- @param waterQuad The water quad index
-- @param a0 The a0 level
-- @param a1 The a1 level
-- @param a2 The a2 level
-- @param a3 The a3 level
-- @return Returns true on success.
function Global.SetWaterQuadAlpha(waterQuad, a0, a1, a2, a3)
	return _in(0xf49797eb, waterQuad, a0, a1, a2, a3, _r)
end

--- This native allows you to update the bounds of a specified water quad index.
-- @param waterQuad The water quad index
-- @param minX The minX coordinate
-- @param minY The minY coordinate
-- @param maxX The maxX coordinate
-- @param maxY The maxY coordinate
-- @return Returns true on success.
function Global.SetWaterQuadBounds(waterQuad, minX, minY, maxX, maxY)
	return _in(0x80ad144c, waterQuad, minX, minY, maxX, maxY, _r)
end

--- SET_WATER_QUAD_HAS_LIMITED_DEPTH
-- @param waterQuad The water quad index
-- @param hasLimitedDepth Unknown effect
-- @return Returns true on success.
function Global.SetWaterQuadHasLimitedDepth(waterQuad, hasLimitedDepth)
	return _in(0xd1fdcfc1, waterQuad, hasLimitedDepth, _r)
end

--- SET_WATER_QUAD_IS_INVISIBLE
-- @param waterQuad The water quad index
-- @param isInvisible Unknown effect
-- @return Returns true on success.
function Global.SetWaterQuadIsInvisible(waterQuad, isInvisible)
	return _in(0xa387d917, waterQuad, isInvisible, _r)
end

--- SET_WATER_QUAD_LEVEL
-- @param waterQuad The water quad index
-- @param level The water level inside the water quad
-- @return Returns true on success.
function Global.SetWaterQuadLevel(waterQuad, level)
	return _in(0x6292f7a8, waterQuad, level, _r)
end

--- SET_WATER_QUAD_NO_STENCIL
-- @param waterQuad The water quad index
-- @param noStencil Unknown effect
-- @return Returns true on success.
function Global.SetWaterQuadNoStencil(waterQuad, noStencil)
	return _in(0xc3ff42ff, waterQuad, noStencil, _r)
end

--- This native allows you to update the water quad type.
-- Valid type definitions:
-- *   **0** Square
-- *   **1** Right triangle where the 90 degree angle is at maxX, minY
-- *   **2** Right triangle where the 90 degree angle is at minX, minY
-- *   **3** Right triangle where the 90 degree angle is at minX, maxY
-- *   **4** Right triangle where the 90 degree angle is at maxY, maxY
-- @param waterQuad The water quad index
-- @param type The water quad type
-- @return Returns true on success.
function Global.SetWaterQuadType(waterQuad, type)
	return _in(0x50131eb2, waterQuad, type, _r)
end

--- SET_WAVE_QUAD_AMPLITUDE
-- @param waveQuad The wave quad index
-- @param amplitude The amplitude value
-- @return Returns true on success.
function Global.SetWaveQuadAmplitude(waveQuad, amplitude)
	return _in(0xe4174b7b, waveQuad, amplitude, _r)
end

--- This native allows you to update the bounds of a specified water quad index.
-- @param waveQuad The wave quad index
-- @param minX The minX coordinate
-- @param minY The minY coordinate
-- @param maxX The maxX coordinate
-- @param maxY The maxY coordinate
-- @return Returns true on success.
function Global.SetWaveQuadBounds(waveQuad, minX, minY, maxX, maxY)
	return _in(0x1fcc1faf, waveQuad, minX, minY, maxX, maxY, _r)
end

--- directionX/Y should be constrained between -1.0 and 1.0
-- A positive value will create the wave starting at min and rolling towards max
-- A negative value will create the wave starting at max and rolling towards min
-- Applying both values allows you to make diagonal waves
-- @param waveQuad The wave quad index
-- @param directionX The minX coordinate
-- @param directionY The minY coordinate
-- @return Returns true on success.
function Global.SetWaveQuadDirection(waveQuad, directionX, directionY)
	return _in(0xfc9341a3, waveQuad, directionX, directionY, _r)
end

--- This native removes the current waypoint from the map.
-- Example:
-- C#:
-- Function.Call(Hash.SET_WAYPOINT_OFF);
-- C++:
-- HUD::SET_WAYPOINT_OFF();
function Global.SetWaypointOff()
	return _in(0xA7E4E2D361C2627F)
end

--- Changes the selected ped aiming animation style.
-- Note : You must use GET_HASH_KEY!
-- Strings to use with GET_HASH_KEY :
-- "Ballistic",
-- "Default",
-- "Fat",
-- "Female",
-- "FirstPerson",
-- "FirstPersonAiming",
-- "FirstPersonFranklin",
-- "FirstPersonFranklinAiming",
-- "FirstPersonFranklinRNG",
-- "FirstPersonFranklinScope",
-- "FirstPersonMPFemale",
-- "FirstPersonMichael",
-- "FirstPersonMichaelAiming",
-- "FirstPersonMichaelRNG",
-- "FirstPersonMichaelScope",
-- "FirstPersonRNG",
-- "FirstPersonScope",
-- "FirstPersonTrevor",
-- "FirstPersonTrevorAiming",
-- "FirstPersonTrevorRNG",
-- "FirstPersonTrevorScope",
-- "Franklin",
-- "Gang",
-- "Gang1H",
-- "GangFemale",
-- "Hillbilly",
-- "MP_F_Freemode",
-- "Michael",
-- "SuperFat",
-- "Trevor"
function Global.SetWeaponAnimationOverride(ped, animStyle)
	return _in(0x1055AC3A667F09D9, ped, _ch(animStyle))
end

--- Changes the weapon damage output by the given multiplier value.
-- Does NOT need to be called every frame.
-- @param weaponHash Hash of the weapon
-- @param damageMultiplier Damage Multiplier
function Global.SetWeaponDamageModifier(weaponHash, damageMultiplier)
	return _in(0x4757F00BC6323CFE, _ch(weaponHash), damageMultiplier)
end
Global.N_0x4757f00bc6323cfe = Global.SetWeaponDamageModifier
Global.SetWeaponDamageModifierThisFrame = Global.SetWeaponDamageModifier

--- NativeDB Introduced: v2372
function Global.SetWeaponExplosionRadiusMultiplier(weaponHash, multiplier)
	return _in(0x4AE5AC8B852D642C, _ch(weaponHash), multiplier)
end

--- _SET_WEAPON_OBJECT_LIVERY_COLOR
function Global.SetWeaponObjectLiveryColor(weaponObject, camoComponentHash, colorIndex)
	return _in(0x5DA825A85D0EA6E6, weaponObject, _ch(camoComponentHash), colorIndex)
end
Global.N_0x5da825a85d0ea6e6 = Global.SetWeaponObjectLiveryColor

--- SET_WEAPON_OBJECT_TINT_INDEX
function Global.SetWeaponObjectTintIndex(weapon, tintIndex)
	return _in(0xF827589017D4E4A9, weapon, tintIndex)
end

--- A setter for the recoil shake amplitude of a weapon.
-- @param weaponHash Weapon name hash.
-- @param amplitude Recoil shake amplitude
function Global.SetWeaponRecoilShakeAmplitude(weaponHash, amplitude)
	return _in(0x9864312f, _ch(weaponHash), amplitude)
end

--- Disables weapons aim blocking due to environment for local player.
-- For non-player peds [SET_PED_ENABLE_WEAPON_BLOCKING](#\_0x97A790315D3831FD) can be used.
-- @param state On/Off
function Global.SetWeaponsNoAimBlocking(state)
	return _in(0xdfd8f6de, state)
end

--- Disables the game's built-in auto-reloading.
-- @param state On/Off
function Global.SetWeaponsNoAutoreload(state)
	return _in(0x311150e5, state)
end

--- Disables autoswapping to another weapon when the current weapon runs out of ammo.
-- @param state On/Off
function Global.SetWeaponsNoAutoswap(state)
	return _in(0x2a7b50e, state)
end

--- Sets whether or not the weather should be owned by the network subsystem.
-- To be able to use [\_SET_WEATHER_TYPE_TRANSITION](#\_0x578C752848ECFA0C), this has to be set to false.
-- @param network true to let the network control weather, false to not use network weather behavior.
function Global.SetWeatherOwnedByNetwork(network)
	return _in(0x2703d582, network)
end

--- Immediately changes the game's weather to the specified type, which will then persist for one cycle before the game resumes its natural weather progression.
-- **Note:** This native is not supported in networked sessions. Please refer to [`SET_OVERRIDE_WEATHER`](#\_0xA43D5C6FE51ADBEF) or [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) if you want to override weather in networked sessions.
-- ```
-- NativeDB Introduced: v323
-- ```
-- **Weather Types:**
-- *   CLEAR
-- *   EXTRASUNNY
-- *   CLOUDS
-- *   OVERCAST
-- *   RAIN
-- *   CLEARING
-- *   THUNDER
-- *   SMOG
-- *   FOGGY
-- *   XMAS
-- *   SNOW
-- *   SNOWLIGHT
-- *   BLIZZARD
-- *   HALLOWEEN
-- *   NEUTRAL
-- @param weatherType The weather type to set. This should be one of the predefined weather type strings.
function Global.SetWeatherTypeNow(weatherType)
	return _in(0x29B487C359E19889, _ts(weatherType))
end

--- Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
function Global.SetWeatherTypeNowPersist(weatherType)
	return _in(0xED712CA327900C8A, _ts(weatherType))
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType The weather type to override to.
-- @param time A float on how long to take to transition (in seconds).
function Global.SetWeatherTypeOvertimePersist(weatherType, time)
	return _in(0xFB5045B7C42B75BF, _ts(weatherType), time)
end
Global.SetWeatherTypeOverTime = Global.SetWeatherTypeOvertimePersist

--- Sets the current weather type to persist indefinitely until changed.
-- **Note:** This native is not supported in networked sessions. Please refer to [`SET_OVERRIDE_WEATHER`](#\_0xA43D5C6FE51ADBEF) or [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) if you want to override weather in networked sessions.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param weatherType The weather type to be set as persistent. Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for a list of weather type strings.
function Global.SetWeatherTypePersist(weatherType)
	return _in(0x704983DF373B198F, _ts(weatherType))
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- ```
-- Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
-- execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
-- ```
function Global.SetWeatherTypeTransition(weatherType1, weatherType2, percentWeather2)
	return _in(0x578C752848ECFA0C, _ch(weatherType1), _ch(weatherType2), percentWeather2)
end

--- SET_WIDESCREEN_BORDERS
function Global.SetWidescreenBorders(p0, p1)
	return _in(0xDCD4EA924F42D01A, p0, p1)
end

--- SET_WIDESCREEN_FORMAT
function Global.SetWidescreenFormat(p0)
	return _in(0xC3B07BA00A83B0F1, p0)
end

--- Sets the the raw wind speed value.
function Global.SetWind(speed)
	return _in(0xAC3A74E8384A9919, speed)
end

--- Sets the wind direction.
-- @param direction the [wind direction](https://en.wikipedia.org/wiki/Wind_direction) in radians
function Global.SetWindDirection(direction)
	return _in(0xEB0F4468467B4528, direction)
end

--- Using this native will clamp the wind speed value to a range of 0.0- 12.0. Using SET_WIND sets the same value but without the restriction.
function Global.SetWindSpeed(speed)
	return _in(0xEE09ECEDBABE47FC, speed)
end

--- SET_ZONE_ENABLED
function Global.SetZoneEnabled(zoneId, toggle)
	return _in(0xBA5ECEEA120E5611, zoneId, toggle)
end

--- Sets the value for the timer A in milliseconds
-- @param value In milliseconds.
function Global.Settimera(value)
	return _in(0xC1B1E9A034A63A62, value)
end

--- Sets the value for the timer B in milliseconds
-- @param value In milliseconds.
function Global.Settimerb(value)
	return _in(0x5AE11BC36633DE4E, value)
end

--- SETUP_SHOP_PED_APPAREL_QUERY
function Global.SetupShopPedApparelQuery(p0, p1, p2, p3)
	return _in(0x50F457823CE6EB5F, p0, p1, p2, p3, _ri)
end
Global.N_0x50f457823ce6eb5f = Global.SetupShopPedApparelQuery

--- character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
-- componentId is between 0 and 11 and corresponds to the usual component slots.
-- p1 could be the outfit number; unsure.
-- p2 is usually -1; unknown function.
-- p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
-- p4 is usually -1; unknown function.
-- componentId is -1 when p3 is true in decompiled scripts.
function Global.SetupShopPedApparelQueryTu(character, p1, p2, p3, p4, componentId)
	return _in(0x9BDF59818B1E38C1, character, p1, p2, p3, p4, componentId, _ri)
end
Global.GetNumPropsFromOutfit = Global.SetupShopPedApparelQueryTu

--- characters
-- 0: Michael
-- 1: Franklin
-- 2: Trevor
-- 3: MPMale
-- 4: MPFemale
function Global.SetupShopPedOutfitQuery(character, p1)
	return _in(0xF3FBE2D50A6A8C28, character, p1, _ri)
end
Global.N_0xf3fbe2d50a6a8c28 = Global.SetupShopPedOutfitQuery

--- Possible shake types (updated b617d):
-- DEATH_FAIL_IN_EFFECT_SHAKE
-- DRUNK_SHAKE
-- FAMILY5_DRUG_TRIP_SHAKE
-- HAND_SHAKE
-- JOLT_SHAKE
-- LARGE_EXPLOSION_SHAKE
-- MEDIUM_EXPLOSION_SHAKE
-- SMALL_EXPLOSION_SHAKE
-- ROAD_VIBRATION_SHAKE
-- SKY_DIVING_SHAKE
-- VIBRATE_SHAKE
function Global.ShakeCam(cam, type, amplitude)
	return _in(0x6A25241C340D3822, cam, _ts(type), amplitude)
end

--- p0 argument found in the b617d scripts: "DRUNK_SHAKE"
function Global.ShakeCinematicCam(p0, p1)
	return _in(0xDCE214D9ED58F3CF, _ts(p0), p1)
end

--- Possible shake types (updated b617d):
-- DEATH_FAIL_IN_EFFECT_SHAKE
-- DRUNK_SHAKE
-- FAMILY5_DRUG_TRIP_SHAKE
-- HAND_SHAKE
-- JOLT_SHAKE
-- LARGE_EXPLOSION_SHAKE
-- MEDIUM_EXPLOSION_SHAKE
-- SMALL_EXPLOSION_SHAKE
-- ROAD_VIBRATION_SHAKE
-- SKY_DIVING_SHAKE
-- VIBRATE_SHAKE
function Global.ShakeGameplayCam(shakeName, intensity)
	return _in(0xFD55E49555E017CF, _ts(shakeName), intensity)
end

--- CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);
function Global.ShakeScriptGlobal(p0, p1)
	return _in(0xF4C8CF9E353AFECA, _ts(p0), p1)
end
Global.N_0xf4c8cf9e353afeca = Global.ShakeScriptGlobal

--- Left bit shifts a value.
-- It is advised you use the `<<` operator instead of this native. It does the same and is faster.
function Global.ShiftLeft(value, bitShift)
	return _in(0xEDD95A39E5544DE8, value, bitShift, _ri)
end

--- Right bit shifts a value.
-- It is advised you use the `>>` operator instead of this native. It does the same and is faster.
function Global.ShiftRight(value, bitShift)
	return _in(0x97EF1E5BCE9DC075, value, bitShift, _ri)
end

--- Shoots a bullet from the first vector to the second vector. The weapon used as weaponHash should already be loaded via REQUEST_WEAPON_ASSET, otherwise the bullet may fail to materialise.
-- @param x1 The X coordinate to start the shot at.
-- @param y1 The Y coordinate to start the shot at.
-- @param z1 The Z coordinate to start the shot at.
-- @param x2 The X coordinate the shot should end up at.
-- @param y2 The Y coordinate the shot should end up at.
-- @param z2 The Z coordinate the shot should end up at.
-- @param damage The amount of damage the bullet carries.
-- @param pureAccuracy Whether the bullet should have pinpoint accuracy.
-- @param weaponHash Hash of the weapon the bullet is used as ammunition for.
-- @param ownerPed Owner of the bullet, e.g. if the bullet kills someone the kill feed shows 'X was shot by ownerPed.'
-- @param isAudible Whether the bullet should be audible. Optional, defaults to true
-- @param isInvisible Whether the bullet should be invisible. Optional, defaults to false
-- @param speed Speed the bullet should fly at. Optional
function Global.ShootSingleBulletBetweenCoords(x1, y1, z1, x2, y2, z2, damage, pureAccuracy, weaponHash, ownerPed, isAudible, isInvisible, speed)
	return _in(0x867654CBC7606F2C, x1, y1, z1, x2, y2, z2, damage, pureAccuracy, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed)
end

--- entity - entity to ignore
-- ```
-- ```
-- NativeDB Added Parameter 15: Any p14
function Global.ShootSingleBulletBetweenCoordsIgnoreEntity(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity)
	return _in(0xE3A7742E0B7A2F8B, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed, entity)
end
Global.N_0xe3a7742e0b7a2f8b = Global.ShootSingleBulletBetweenCoordsIgnoreEntity
Global.ShootSingleBulletBetweenCoordsPresetParams = Global.ShootSingleBulletBetweenCoordsIgnoreEntity

--- NativeDB Added Parameter 19: Any p18
-- NativeDB Added Parameter 20: Any p19
-- NativeDB Added Parameter 21: Any p20
function Global.ShootSingleBulletBetweenCoordsIgnoreEntityNew(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)
	return _in(0xBFE5756E7407064A, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)
end
Global.N_0xbfe5756e7407064a = Global.ShootSingleBulletBetweenCoordsIgnoreEntityNew
Global.ShootSingleBulletBetweenCoordsWithExtraParams = Global.ShootSingleBulletBetweenCoordsIgnoreEntityNew

--- Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
-- @return Returns true if the game is using the metric measurement system, false if imperial is used.
function Global.ShouldUseMetricMeasurements()
	return _in(0xD3D15555431AB793, _r)
end
Global.N_0xd3d15555431ab793 = Global.ShouldUseMetricMeasurements
Global.IsGameUsingMetricMeasurementSystem = Global.ShouldUseMetricMeasurements

--- Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).
-- To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).
-- Example code result:
-- ![](https://i.imgur.com/iZ9tNWl.png)
-- @param blip The blip to toggle the half blue circle around the blip on.
-- @param toggle Enables or disables the half blue circle around the blip (on the left side).
function Global.ShowCrewIndicatorOnBlip(blip, toggle)
	return _in(0xDCFB5D4DB8BF367E, blip, toggle)
end
Global.N_0xdcfb5d4db8bf367e = Global.ShowCrewIndicatorOnBlip
Global.SetBlipCrew = Global.ShowCrewIndicatorOnBlip

--- Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
-- To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
-- @param blip The blip to toggle the half circle on.
-- @param toggle Enables or disables the half circle around the blip (on the right side of the blip).
function Global.ShowFriendIndicatorOnBlip(blip, toggle)
	return _in(0x23C3EB807312F01A, blip, toggle)
end
Global.N_0x23c3eb807312f01a = Global.ShowFriendIndicatorOnBlip
Global.SetBlipFriend = Global.ShowFriendIndicatorOnBlip

--- Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
-- _SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
-- ```
-- ```
-- NativeDB Introduced: v2699
function Global.ShowHasCompletedIndicatorOnBlip(blip, toggle)
	return _in(0xCAC2031EBF79B1A8, blip, toggle)
end

--- Adds the GTA: Online player heading indicator to a blip.
function Global.ShowHeadingIndicatorOnBlip(blip, toggle)
	return _in(0x5FBCA48327B914DF, blip, toggle)
end
Global.N_0x5fbca48327b914df = Global.ShowHeadingIndicatorOnBlip

--- SHOW_HEIGHT_ON_BLIP
function Global.ShowHeightOnBlip(blip, toggle)
	return _in(0x75A16C3DA34F1245, blip, toggle)
end
Global.N_0x75a16c3da34f1245 = Global.ShowHeightOnBlip

--- This function shows various HUD (Heads-up Display) components.
-- Listed below are the integers and the corresponding HUD component.
-- *   1 : WANTED_STARS
-- *   2 : WEAPON_ICON
-- *   3 : CASH
-- *   4 : MP_CASH
-- *   5 : MP_MESSAGE
-- *   6 : VEHICLE_NAME
-- *   7 : AREA_NAME
-- *   8 : VEHICLE_CLASS
-- *   9 : STREET_NAME
-- *   10 : HELP_TEXT
-- *   11 : FLOATING_HELP_TEXT\_1
-- *   12 : FLOATING_HELP_TEXT\_2
-- *   13 : CASH_CHANGE
-- *   14 : RETICLE
-- *   15 : SUBTITLE_TEXT
-- *   16 : RADIO_STATIONS
-- *   17 : SAVING_GAME
-- *   18 : GAME_STREAM
-- *   19 : WEAPON_WHEEL
-- *   20 : WEAPON_WHEEL_STATS
-- *   21 : HUD_COMPONENTS
-- *   22 : HUD_WEAPONS
-- These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#\_0x6806C51AD12B83B8) native, but instead hides the HUD component.
function Global.ShowHudComponentThisFrame(id)
	return _in(0x0B4DF1FA60C0E664, id)
end

--- SHOW_NUMBER_ON_BLIP
function Global.ShowNumberOnBlip(blip, number)
	return _in(0xA3C0B359DCB848B6, blip, number)
end

--- Toggles a cyan outline around the blip.
-- Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
-- @param blip The blip to toggle the outline on.
-- @param toggle Enables or disables the outline.
function Global.ShowOutlineIndicatorOnBlip(blip, toggle)
	return _in(0xB81656BC81FE24D1, blip, toggle)
end
Global.N_0xb81656bc81fe24d1 = Global.ShowOutlineIndicatorOnBlip
Global.SetBlipFriendly = Global.ShowOutlineIndicatorOnBlip

--- SHOW_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function Global.ShowScriptedHudComponentThisFrame(id)
	return _in(0x4F38DCA127DAAEA2, id)
end

--- _SHOW_SIGNIN_UI
function Global.ShowSigninUi()
	return _in(0x60E892BA4F5BDCA4)
end
Global.N_0x60e892ba4f5bdca4 = Global.ShowSigninUi

--- SHOW_START_MISSION_INSTRUCTIONAL_BUTTON
function Global.ShowStartMissionInstructionalButton(p0)
	return _in(0xF1A6C18B35BCADE6, p0)
end
Global.N_0xf1a6c18b35bcade6 = Global.ShowStartMissionInstructionalButton

--- Adds a green checkmark on top of a blip.
function Global.ShowTickOnBlip(blip, toggle)
	return _in(0x74513EA3E505181E, blip, toggle)
end
Global.N_0x74513ea3e505181e = Global.ShowTickOnBlip
Global.SetBlipChecked = Global.ShowTickOnBlip

--- Starts a new singleplayer game (at the prologue).
function Global.ShutdownAndLaunchSinglePlayerGame()
	return _in(0x593850C16A36B692)
end

--- Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
-- If you're already in SP then it'll re-load singleplayer.
-- You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
-- Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
-- @return always seems to be 1
function Global.ShutdownAndLoadMostRecentSave()
	return _in(0x9ECA15ADFE141431, _r)
end
Global.N_0x9eca15adfe141431 = Global.ShutdownAndLoadMostRecentSave

--- SHUTDOWN_CREATOR_BUDGET
function Global.ShutdownCreatorBudget()
	return _in(0xCCE26000E9A6FAD7)
end
Global.N_0xcce26000e9a6fad7 = Global.ShutdownCreatorBudget

--- SHUTDOWN_LOADING_SCREEN
function Global.ShutdownLoadingScreen()
	return _in(0x078EBE9809CCD637)
end

--- Shuts down the `loadingScreen` NUI frame, similarly to `SHUTDOWN_LOADING_SCREEN`.
function Global.ShutdownLoadingScreenNui()
	return _in(0xb9234afb)
end

--- This is to make the player walk without accepting input.
-- Call this native every frame so you can control the direction of your ped.
-- @param player The player to target (always your local player id).
-- @param amount For game pads, using anything less than 1.0 will make it partially press analog controls (like sticks/triggers).
-- @param gaitType Value in increments of 100's. 2000, 500, 300, 200, etc. Set to -1 if you want your ped to walk forever.
-- @param rotationSpeed Determines the counterclockwise rotation angle when walking.
-- @param p4 Always true
-- @param p5 Always false
function Global.SimulatePlayerInputGait(player, amount, gaitType, rotationSpeed, p4, p5)
	return _in(0x477D5D63E63ECA5D, player, amount, gaitType, rotationSpeed, p4, p5)
end

--- Returns the sine of the given number.
-- @param value The number of degrees (in degrees, not radians)
-- @return The sine of the given number
function Global.Sin(value)
	return _in(0x0BADBFA3B172435F, value, _rf)
end

--- SKIP_RADIO_FORWARD
function Global.SkipRadioForward()
	return _in(0x6DDBBDD98E2E9C25)
end

--- SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
function Global.SkipTimeInPlaybackRecordedVehicle(vehicle, time)
	return _in(0x9438F7AD68771A20, vehicle, time)
end

--- SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE
function Global.SkipToEndAndStopPlaybackRecordedVehicle(vehicle)
	return _in(0xAB8E2EDA0C0A5883, vehicle)
end

--- SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE
function Global.SkipToNextScriptedConversationLine()
	return _in(0x9663FE6B7A61EB00)
end

--- This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
-- @param t acceleration differenzial (am_rollercoaster.c func\_134)
-- @param x rotation parameter (maybe X axys)
-- @param y rotation parameter (maybe X axys)
-- @param z rotation parameter (maybe X axys)
-- @param w rotation parameter (maybe X axys)
-- @param x1 rotation parameter (maybe Y axys)
-- @param y1 rotation parameter (maybe Y axys)
-- @param z1 rotation parameter (maybe Y axys)
-- @param w1 rotation parameter (maybe Y axys)
-- @param outX output value calculated (X)
-- @param outY output value calculated (Y)
-- @param outZ output value calculated (Z)
-- @param outW output value calculated (W)
function Global.SlerpNearQuaternion(t, x, y, z, w, x1, y1, z1, w1)
	return _in(0xF2F6A2FA49278625, t, x, y, z, w, x1, y1, z1, w1, _f, _f, _f, _f)
end
Global.N_0xf2f6a2fa49278625 = Global.SlerpNearQuaternion

--- Returns true if the object has finished moving.
-- If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
-- See also: https://gtagmodding.com/opcode-database/opcode/034E/
-- Has to be looped until it returns true.
function Global.SlideObject(object, toX, toY, toZ, speedX, speedY, speedZ, collision)
	return _in(0x2FDFF4107B8C1147, object, toX, toY, toZ, speedX, speedY, speedZ, collision, _r)
end

--- Smashes a vehicles window. See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- @param vehicle The vehicle id.
-- @param windowIndex Windows to smash index.
function Global.SmashVehicleWindow(vehicle, windowIndex)
	return _in(0x9E5B5E4D2CCD2259, vehicle, windowIndex)
end

--- SET_*
function Global.SoundVehicleHornThisFrame(vehicle)
	return _in(0x9C11908013EA4715, vehicle)
end
Global.N_0x9c11908013ea4715 = Global.SoundVehicleHornThisFrame

--- SPAWNPOINTS_CANCEL_SEARCH
function Global.SpawnpointsCancelSearch()
	return _in(0xFEE4A5459472A9F8)
end
Global.N_0xfee4a5459472a9f8 = Global.SpawnpointsCancelSearch

--- SPAWNPOINTS_GET_NUM_SEARCH_RESULTS
function Global.SpawnpointsGetNumSearchResults()
	return _in(0xA635C11B8C44AFC2, _ri)
end
Global.N_0xa635c11b8c44afc2 = Global.SpawnpointsGetNumSearchResults

--- SPAWNPOINTS_GET_SEARCH_RESULT
function Global.SpawnpointsGetSearchResult(randomInt)
	return _in(0x280C7E3AC7F56E90, randomInt, _f, _f, _f)
end
Global.N_0x280c7e3ac7f56e90 = Global.SpawnpointsGetSearchResult

--- SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS
function Global.SpawnpointsGetSearchResultFlags(p0, p1)
	return _in(0xB782F8238512BAD5, p0, _ii(p1) --[[ may be optional ]])
end
Global.N_0xb782f8238512bad5 = Global.SpawnpointsGetSearchResultFlags

--- SPAWNPOINTS_IS_SEARCH_ACTIVE
function Global.SpawnpointsIsSearchActive()
	return _in(0x3C67506996001F5E, _r)
end
Global.N_0x3c67506996001f5e = Global.SpawnpointsIsSearchActive

--- SPAWNPOINTS_IS_SEARCH_COMPLETE
function Global.SpawnpointsIsSearchComplete()
	return _in(0xA586FBEB32A53DBB, _r)
end
Global.N_0xa586fbeb32a53dbb = Global.SpawnpointsIsSearchComplete

--- SPAWNPOINTS_IS_SEARCH_FAILED
function Global.SpawnpointsIsSearchFailed()
	return _in(0xF445DE8DA80A1792, _r)
end
Global.N_0xf445de8da80a1792 = Global.SpawnpointsIsSearchFailed

--- SPAWNPOINTS_START_SEARCH
function Global.SpawnpointsStartSearch(p0, p1, p2, p3, p4, interiorFlags, scale, duration)
	return _in(0x2DF9038C90AD5264, p0, p1, p2, p3, p4, interiorFlags, scale, duration)
end
Global.N_0x2df9038c90ad5264 = Global.SpawnpointsStartSearch

--- SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA
function Global.SpawnpointsStartSearchInAngledArea(x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)
	return _in(0xB2AFF10216DEFA2F, x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)
end
Global.N_0xb2aff10216defa2f = Global.SpawnpointsStartSearchInAngledArea

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityActivate(player)
	return _in(0x821FDC827D6F4090, player)
end
Global.N_0x821fdc827d6f4090 = Global.SpecialAbilityActivate

--- p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SpecialAbilityChargeAbsolute(player, p1, p2)
	return _in(0xB7B0870EB531D08D, player, p1, p2)
end

--- p1 appears to always be 1 (only comes up twice)
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.SpecialAbilityChargeContinuous(player, p2)
	return _in(0xED481732DFF7E997, player, p2)
end

--- 2 matches. p1 was always true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SpecialAbilityChargeLarge(player, p1, p2)
	return _in(0xF733F45FA4497D93, player, p1, p2)
end

--- Only 1 match. Both p1 & p2 were true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SpecialAbilityChargeMedium(player, p1, p2)
	return _in(0xF113E3AA9BC54613, player, p1, p2)
end

--- normalizedValue is from 0.0 - 1.0
-- p2 is always 1
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SpecialAbilityChargeNormalized(player, normalizedValue, p2)
	return _in(0xA0696A65F009EE18, player, normalizedValue, p2)
end
Global.ResetSpecialAbilityControlsCinematic = Global.SpecialAbilityChargeNormalized

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityChargeOnMissionFailed(player)
	return _in(0xC9A763D8FE87436A, player)
end
Global.N_0xc9a763d8fe87436a = Global.SpecialAbilityChargeOnMissionFailed

--- Every occurrence of p1 & p2 were both true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SpecialAbilityChargeSmall(player, p1, p2)
	return _in(0x2E7B9B683481687D, player, p1, p2)
end

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityDeactivate(player)
	return _in(0xD6A953C6D1492057, player)
end

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityDeactivateFast(player)
	return _in(0x9CB5CE07A3968D5A, player)
end

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityDeplete(p0)
	return _in(0x17F7471EACA78290, p0)
end
Global.N_0x17f7471eaca78290 = Global.SpecialAbilityDeplete

--- p1 was always true.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.SpecialAbilityDepleteMeter(player, p1)
	return _in(0x1D506DBBBC51E64B, player, p1)
end

--- Also known as _RECHARGE_SPECIAL_ABILITY
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.SpecialAbilityFillMeter(player, p1)
	return _in(0x3DACA8DDC6FD4980, player, p1)
end

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityLock(playerModel)
	return _in(0x6A09D0D590A47D13, _ch(playerModel))
end

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityReset(player)
	return _in(0x375F0E738F861A94, player)
end

--- NativeDB Added Parameter 2: Any p1
function Global.SpecialAbilityUnlock(playerModel)
	return _in(0xF145F3BE2EFA9A3B, _ch(playerModel))
end

--- SQRT
function Global.Sqrt(value)
	return _in(0x71D93B57D07F9804, value, _rf)
end

--- STABILISE_ENTITY_ATTACHED_TO_HELI
function Global.StabiliseEntityAttachedToHeli(vehicle, entity, p2)
	return _in(0x374706271354CB18, vehicle, entity, p2)
end
Global.N_0x374706271354cb18 = Global.StabiliseEntityAttachedToHeli

--- You should call [PREPARE_ALARM](#\_0x9D74AE343DB65533) and wait for its value to be true before using this
function Global.StartAlarm(alarmName, skipStartup)
	return _in(0x0355EF116C4C97B2, _ts(alarmName), skipStartup)
end

--- Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
-- List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC
function Global.StartAudioScene(scene)
	return _in(0x013A80FC08F6E4F2, _ts(scene), _r)
end

--- Begins with START_*. Next character in the name is either D or E.
function Global.StartBenchmarkRecording()
	return _in(0x92790862E36C2ADA)
end
Global.N_0x92790862e36c2ada = Global.StartBenchmarkRecording

--- flags: Usually 0.
function Global.StartCutscene(flags)
	return _in(0x186D5CB5E7B0FF7B, flags)
end

--- Similar to [`SET_CUTSCENE_ORIGIN`](#\_0xB812B3FD1C01CF27) but without heading and doesn't need [`START_CUTSCENE`](#\_0x186D5CB5E7B0FF7B)
-- @param flags Usually 0
function Global.StartCutsceneAtCoords(x, y, z, flags)
	return _in(0x1C9ADDA3244A1FBF, x, y, z, flags)
end

--- START_ENTITY_FIRE
function Global.StartEntityFire(entity)
	return _in(0xF6A9D9708F6F23DF, entity, _ri)
end

--- Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
-- Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags See [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E).
-- @param entity An entity to ignore, or 0.
-- @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
-- @return A shape test handle.
function Global.StartExpensiveSynchronousShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, entity, p8)
	return _in(0x377906D8A31E5586, x1, y1, z1, x2, y2, z2, flags, entity, p8, _ri)
end
Global.CastRayPointToPoint = Global.StartExpensiveSynchronousShapeTestLosProbe
Global.StartShapeTestRay = Global.StartExpensiveSynchronousShapeTestLosProbe

--- Equivalent of [START_FIND_KVP](#\_0xDD379006), but for another resource than the current one.
-- @param resourceName The resource to try finding the key/values for
-- @param prefix A prefix match
-- @return A KVP find handle to use with [FIND_KVP](#\_0xBD7BEBC5) and close with [END_FIND_KVP](#\_0xB3210203)
function Global.StartFindExternalKvp(resourceName, prefix)
	return _in(0x8f2eecc3, _ts(resourceName), _ts(prefix), _ri)
end

--- START_FIND_KVP
-- @param prefix A prefix match
-- @return A KVP find handle to use with [FIND_KVP](#\_0xBD7BEBC5) and close with [END_FIND_KVP](#\_0xB3210203)
function Global.StartFindKvp(prefix)
	return _in(0xdd379006, _ts(prefix), _ri)
end

--- START_FIRING_AMNESTY
function Global.StartFiringAmnesty(duration)
	return _in(0xBF9BD71691857E48, duration)
end

--- Starts a new GPS custom-route, allowing you to plot lines on the map.
-- Lines are drawn directly between points.
-- The GPS custom route works like the GPS multi route, except it does not follow roads.
-- **Example result:**
-- ![](https://i.imgur.com/BDm5pzt.png)
-- @param hudColor The HUD color of the GPS path.
-- @param displayOnFoot Draws the path regardless if the player is in a vehicle or not.
-- @param followPlayer Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
function Global.StartGpsCustomRoute(hudColor, displayOnFoot, followPlayer)
	return _in(0xDB34E8D56FC13B08, hudColor, displayOnFoot, followPlayer)
end
Global.N_0xdb34e8d56fc13b08 = Global.StartGpsCustomRoute

--- Starts a new GPS multi-route, allowing you to create custom GPS paths.
-- GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
-- Once the player has passed a point, the GPS will no longer force its path through it.
-- Works independently from the player-placed waypoint and blip routes.
-- **Example result:**
-- ![](https://i.imgur.com/ZZHQatX.png)
-- @param hudColor The HUD color of the GPS path.
-- @param routeFromPlayer Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
-- @param displayOnFoot Draws the GPS path regardless if the player is in a vehicle or not.
function Global.StartGpsMultiRoute(hudColor, routeFromPlayer, displayOnFoot)
	return _in(0x3D3D15AF7BCAAF83, hudColor, routeFromPlayer, displayOnFoot)
end
Global.N_0x3d3d15af7bcaaf83 = Global.StartGpsMultiRoute

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 13: Any p12
-- NativeDB Added Parameter 14: Any p13
-- NativeDB Added Parameter 15: Any p14
-- NativeDB Added Parameter 16: Any p15
function Global.StartNetworkedParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x6F60E89A7B64EE1D, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _ri)
end
Global.N_0x6f60e89a7b64ee1d = Global.StartNetworkedParticleFxLoopedOnEntity
Global.StartParticleFxLoopedOnEntity_2 = Global.StartNetworkedParticleFxLoopedOnEntity

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 14: Any p13
-- NativeDB Added Parameter 15: Any p14
-- NativeDB Added Parameter 16: Any p15
-- NativeDB Added Parameter 17: Any p16
function Global.StartNetworkedParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xDDE23F30CC5A0F03, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _ri)
end
Global.N_0xdde23f30cc5a0f03 = Global.StartNetworkedParticleFxLoopedOnEntityBone
Global.StartParticleFxLoopedOnEntityBone_2 = Global.StartNetworkedParticleFxLoopedOnEntityBone

--- NOTE: the [USE_PARTICLE_FX_ASSET](#\_0x6C38AF3693A69A91) needs to be called before EVERY StartNetworkedParticleFxNonLoopedAtCoord(....) call!
-- List with lots of particle effects: https://vespura.com/fivem/particle-list/
-- Note: Not all particles on this list are for non looped and vice versa, neither are all of them suited/meant to have SetParticleFxNonLoopedColour(....) called on them.
-- ```
-- NativeDB Added Parameter 12: BOOL p11
-- ```
function Global.StartNetworkedParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0xF56B8137DF10135D, _ts(effectName), xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _r)
end
Global.StartParticleFxNonLoopedAtCoord_2 = Global.StartNetworkedParticleFxNonLoopedAtCoord

--- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY
function Global.StartNetworkedParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
	return _in(0xC95EB1DB6E92113D, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ, _r)
end
Global.StartParticleFxNonLoopedOnEntity_2 = Global.StartNetworkedParticleFxNonLoopedOnEntity

--- NativeDB Introduced: v2189
function Global.StartNetworkedParticleFxNonLoopedOnEntityBone(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0x02B1F2A72E0F5325, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end

--- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
function Global.StartNetworkedParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0xA41B6A43642AC2CF, _ts(effectName), ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end
Global.StartParticleFxNonLoopedOnPedBone_2 = Global.StartNetworkedParticleFxNonLoopedOnPedBone

--- Examples:
-- g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
-- l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
-- SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
-- SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
-- SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
-- SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
-- SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
-- SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
-- SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);
-- Decompiled examples of usage when starting a script:
-- SCRIPT::REQUEST_SCRIPT(a_0);
-- if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
-- SYSTEM::START_NEW_SCRIPT(a_0, v_3);
-- SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
-- return 1;
-- }
-- or:
-- v_2 = "MrsPhilips2";
-- SCRIPT::REQUEST_SCRIPT(v_2);
-- while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
-- SCRIPT::REQUEST_SCRIPT(v_2);
-- SYSTEM::WAIT(0);
-- }
-- sub_8792(36);
-- SYSTEM::START_NEW_SCRIPT(v_2, 17000);
-- SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
-- All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
function Global.StartNewScript(scriptName, stackSize)
	return _in(0xE81651AD79516E48, _ts(scriptName), stackSize, _ri)
end

--- return : script thread id, 0 if failed
-- Pass pointer to struct of args in p1, size of struct goes into p2
function Global.StartNewScriptWithArgs(scriptName, argCount, stackSize)
	return _in(0xB8BA7F44DF1575E1, _ts(scriptName), _i, argCount, stackSize, _ri)
end

--- START_NEW_SCRIPT_WITH_NAME_HASH
function Global.StartNewScriptWithNameHash(scriptHash, stackSize)
	return _in(0xEB1C67C3A5333A92, _ch(scriptHash), stackSize, _ri)
end
Global.StartNewStreamedScript = Global.StartNewScriptWithNameHash

--- START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS
function Global.StartNewScriptWithNameHashAndArgs(scriptHash, argCount, stackSize)
	return _in(0xC4BB298BD441BE78, _ch(scriptHash), _i, argCount, stackSize, _ri)
end
Global.StartNewStreamedScriptWithArgs = Global.StartNewScriptWithNameHashAndArgs

--- GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)
-- p11 seems to be always 0
function Global.StartParticleFxLoopedAtCoord(effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11)
	return _in(0xE184F4F0DC5910E7, _ts(effectName), x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11, _ri)
end

--- START_PARTICLE_FX_LOOPED_ON_ENTITY
function Global.StartParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x1AE42C1660FD6517, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _ri)
end

--- START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
function Global.StartParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xC6EB449E33977F0B, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _ri)
end

--- START_PARTICLE_FX_LOOPED_ON_PED_BONE
function Global.StartParticleFxLoopedOnPedBone(effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xF28DA9F38CD1787C, _ts(effectName), ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _ri)
end

--- GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);
-- Axis - Invert Axis Flags
-- list: pastebin.com/N9unUFWY
-- -------------------------------------------------------------------
-- C#
-- Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
-- char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
-- float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
-- float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
-- float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
-- bool xaxis, yaxis, zaxis = To bool the axis values.
-- example:
-- Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
function Global.StartParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x25129531F77B9ED3, _ts(effectName), xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _ri)
end

--- Starts a particle effect on an entity for example your player.
-- List: pastebin.com/N9unUFWY
-- Example:
-- C#:
-- Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
-- Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
-- however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
function Global.StartParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
	return _in(0x0D53A3B8DA0809D2, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ, _r)
end

--- GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);
-- Axis - Invert Axis Flags
-- list: pastebin.com/N9unUFWY
function Global.StartParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0x0E7E72961BA18619, _ts(effectName), ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end

--- START_PETROL_TRAIL_DECALS
function Global.StartPetrolTrailDecals(p0)
	return _in(0x99AC7F0D8B9C893D, p0)
end
Global.N_0x99ac7f0d8b9c893d = Global.StartPetrolTrailDecals

--- p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
-- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
function Global.StartPlaybackRecordedVehicle(vehicle, recording, script, p3)
	return _in(0x3F878F92B3A7A071, vehicle, recording, _ts(script), p3)
end

--- AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
-- 0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings.
function Global.StartPlaybackRecordedVehicleUsingAi(vehicle, recording, script, speed, drivingStyle)
	return _in(0x29DE5FA52D00428C, vehicle, recording, _ts(script), speed, drivingStyle)
end

--- flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
-- time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
function Global.StartPlaybackRecordedVehicleWithFlags(vehicle, recording, script, flags, time, drivingStyle)
	return _in(0x7D80FD645D4DA346, vehicle, recording, _ts(script), flags, time, drivingStyle)
end

--- // this enum comes directly from R* so don't edit this
-- enum ePlayerSwitchType
-- {
-- SWITCH_TYPE_AUTO,
-- SWITCH_TYPE_LONG,
-- SWITCH_TYPE_MEDIUM,
-- SWITCH_TYPE_SHORT
-- };
-- Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type. Or just auto, because it calls the same function in executable.
-- ----------------------------------------------------
-- Examples from the decompiled scripts:
-- STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);
-- STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);
-- STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);
-- STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);
-- Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.
-- Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
-- Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
function Global.StartPlayerSwitch(from, to, flags, switchType)
	return _in(0xFAA23F2CBA159D67, from, to, flags, switchType)
end

--- Teleports the player to the given coordinates.
-- If findCollisionLand is true it will try to find the Z value for you, this however has a timeout of 100 frames.
-- When trying to find the Z value the native will take longer the higher the difference from the given Z to the ground, this combined with the timeout can cause the teleport to just teleport to the given Z value, so try to estimate the z value, so don't just pass in 1000.0.
-- Also if you're in a vehicle and teleportWithVehicle is true it will not find the Z value for you.
-- @param teleportWithVehicle Teleports the player along with the vehicle they are in.
-- @param findCollisionLand Attempt to find a ground coordinate at the given XY location; overriding the Z value.
function Global.StartPlayerTeleport(player, x, y, z, heading, teleportWithVehicle, findCollisionLand, p7)
	return _in(0xAD15F075A4DA0FDE, player, x, y, z, heading, teleportWithVehicle, findCollisionLand, p7)
end

--- For use with [PRELOAD_SCRIPT_CONVERSATION](#\_0x3B3CAD6166916D87) and [GET_IS_PRELOADED_CONVERSATION_READY](#\_0xE73364DB90778FFA)
function Global.StartPreloadedConversation()
	return _in(0x23641AFE870AF385)
end

--- Starts recording a replay.\
-- If already recording a replay, does nothing.
-- @param mode 0 turns on action replay, 1 starts recording
function Global.StartRecording(mode)
	return _in(0xC3AC2FFF9612AC81, mode)
end
Global.N_0xc3ac2fff9612ac81 = Global.StartRecording

--- START_ROPE_UNWINDING_FRONT
function Global.StartRopeUnwindingFront(ropeId)
	return _in(0x538D1179EC1AA9A9, ropeId)
end

--- START_ROPE_WINDING
function Global.StartRopeWinding(ropeId)
	return _in(0x1461C72C889E343E, ropeId)
end

--- START_SAVE_ARRAY_WITH_SIZE
function Global.StartSaveArrayWithSize(size, arrayName)
	return _in(0x60FE567DF1B1AF9D, _i, size, _ts(arrayName))
end
Global.StartSaveArray = Global.StartSaveArrayWithSize

--- START_SAVE_DATA
function Global.StartSaveData(p1, p2)
	return _in(0xA9575F812C6A7997, _i, p1, p2)
end

--- START_SAVE_STRUCT_WITH_SIZE
function Global.StartSaveStructWithSize(size, structName)
	return _in(0xBF737600CDDBEADD, _i, size, _ts(structName))
end
Global.StartSaveStruct = Global.StartSaveStructWithSize

--- START_SCRIPT_CONVERSATION
-- @param addToBriefScreen Defaults to true
-- @param cloneConversation Defaults to false
-- @param interruptible Defaults to true
function Global.StartScriptConversation(displaySubtitles, addToBriefScreen, cloneConversation, interruptible)
	return _in(0x6B17C62C9635D2DC, displaySubtitles, addToBriefScreen, cloneConversation, interruptible)
end

--- Starts a fire:
-- xyz: Location of fire
-- maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
-- isGasFire: Whether or not the fire is powered by gasoline.
function Global.StartScriptFire(X, Y, Z, maxChildren, isGasFire)
	return _in(0x6B83617E04503888, X, Y, Z, maxChildren, isGasFire, _ri)
end

--- START_SCRIPT_PHONE_CONVERSATION
-- @param addToBriefScreen Defaults to true
function Global.StartScriptPhoneConversation(displaySubtitles, addToBriefScreen)
	return _in(0x252E5F915EABB675, displaySubtitles, addToBriefScreen)
end

--- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
function Global.StartShapeTestBound(entity, flags1, flags2)
	return _in(0x37181417CE7C8900, entity, flags1, flags2, _ri)
end
Global.N_0x37181417ce7c8900 = Global.StartShapeTestBound

--- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
function Global.StartShapeTestBoundingBox(entity, flags1, flags2)
	return _in(0x052837721A854EC7, entity, flags1, flags2, _ri)
end
Global.N_0x052837721a854ec7 = Global.StartShapeTestBoundingBox

--- For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#\_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E).
-- @param x Starting X coordinate.
-- @param y Starting Y coordinate.
-- @param z Starting Z coordinate.
-- @param x1 Ending X coordinate.
-- @param y1 Ending Y coordinate.
-- @param z1 Ending Z coordinate.
-- @param p9 Unknown, always 2 or 0
-- @param flags See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param p12 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
function Global.StartShapeTestBox(x, y, z, x1, y1, z1, rotX, rotY, rotZ, p9, flags, entity, p12)
	return _in(0xFE466162C4401D18, x, y, z, x1, y1, z1, rotX, rotY, rotZ, p9, flags, entity, p12, _ri)
end
Global.N_0xfe466162c4401d18 = Global.StartShapeTestBox

--- Raycast from point to point, where the ray has a radius.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity Entity to ignore, or 0.
-- @param p9 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
function Global.StartShapeTestCapsule(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
	return _in(0x28579D1B8F8AAC80, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9, _ri)
end
Global.Cast_3dRayPointToPoint = Global.StartShapeTestCapsule

--- Asynchronously starts a line-of-sight (raycast) world probe shape test.
-- ```cpp
-- enum TraceFlags
-- {
-- None = 0,
-- IntersectWorld = 1,
-- IntersectVehicles = 2,
-- IntersectPedsSimpleCollision = 4,
-- IntersectPeds = 8,
-- IntersectObjects = 16,
-- IntersectWater = 32,
-- Unknown = 128,
-- IntersectFoliage = 256,
-- IntersectEverything = 4294967295
-- }
-- ```
-- NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
-- Use the handle with [GET_SHAPE_TEST_RESULT](#\_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#\_0x65287525D951F6BE) until it returns 0 or 2.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags Flags.
-- @param entity An entity to ignore, or 0.
-- @param p8 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
-- @return A shape test handle.
function Global.StartShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, entity, p8)
	return _in(0x7EE9F5D83DD4F90E, x1, y1, z1, x2, y2, z2, flags, entity, p8, _ri)
end
Global.N_0x7ee9f5d83dd4f90e = Global.StartShapeTestLosProbe

--- Since it is only used in the PC version, likely some mouse-friendly shape test. Uses **in** vector arguments.
-- Asynchronous.
-- ```
-- it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
-- In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
-- ```
-- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
function Global.StartShapeTestSurroundingCoords(flag, entity, flag2)
	return _in(0xFF6BE494C7987F34, _v, _v, flag, entity, flag2, _ri)
end
Global.N_0xff6be494c7987f34 = Global.StartShapeTestSurroundingCoords

--- Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity An entity to ignore, or 0.
-- @param p9 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
function Global.StartShapeTestSweptSphere(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
	return _in(0xE6AC6C45FBE83004, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9, _ri)
end
Global.N_0xe6ac6c45fbe83004 = Global.StartShapeTestSweptSphere
Global.StartShapeTestCapsule_2 = Global.StartShapeTestSweptSphere

--- START_VEHICLE_ALARM
function Global.StartVehicleAlarm(vehicle)
	return _in(0xB8FF7AB45305C345, vehicle)
end

--- Sounds the horn for the specified vehicle. Note that if a player is in the vehicle, it will only sound briefly.
-- @param vehicle Vehicle id
-- @param duration The duration to sound the horn, in milliseconds.
-- @param mode The hash of "NORMAL" or "HELDDOWN". Can be 0.
function Global.StartVehicleHorn(vehicle, duration, mode, forever)
	return _in(0x9C8C6504B5B63D2C, vehicle, duration, _ch(mode), forever)
end

--- Example:
-- for (v_2 = 0; v_2 <= 4; v_2 += 1) {
-- STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
-- }
function Global.StatClearSlotForReload(statSlot)
	return _in(0xEB0A72181D4AA4AD, statSlot, _ri)
end

--- STAT_DELETE_SLOT
function Global.StatDeleteSlot(p0)
	return _in(0x49A49BED12794D70, p0, _ri)
end

--- STAT_GET_BOOL
function Global.StatGetBool(statHash, p2)
	return _in(0x11B5E6D2AE73F48E, _ch(statHash), _i --[[ actually bool ]], p2, _r)
end

--- p2 - Default value? Seems to be -1 most of the time.
function Global.StatGetBoolMasked(statName, mask, p2)
	return _in(0x10FE3F1B79F9B071, _ch(statName), mask, p2, _r)
end

--- _STAT_GET_CANCEL_SAVE_MIGRATION_STATUS
function Global.StatGetCancelSaveMigrationStatus()
	return _in(0x567384DFA67029E6, _ri)
end
Global.N_0x567384dfa67029e6 = Global.StatGetCancelSaveMigrationStatus

--- STAT_GET_DATE
function Global.StatGetDate(statHash, p2, p3)
	return _in(0x8B0FACEFC36C824B, _ch(statHash), _i, p2, p3, _r)
end

--- STAT_GET_FLOAT
function Global.StatGetFloat(statHash, p2)
	return _in(0xD7AE6C9C9C6AC54C, _ch(statHash), _f, p2, _r)
end

--- p2 appears to always be -1
function Global.StatGetInt(statHash, p2)
	return _in(0x767FBC2AC802EF3D, _ch(statHash), _i, p2, _r)
end

--- STAT_GET_LICENSE_PLATE
function Global.StatGetLicensePlate(statName)
	return _in(0x5473D4195058B2E4, _ch(statName), _s)
end

--- STAT_GET_MASKED_INT
function Global.StatGetMaskedInt(p0, p2, p3, p4)
	return _in(0x655185A06D9EEAAB, p0, _i, p2, p3, p4, _r)
end

--- STAT_GET_NUMBER_OF_DAYS
function Global.StatGetNumberOfDays(statName)
	return _in(0xE0E854F5280FB769, _ch(statName), _ri)
end
Global.N_0xe0e854f5280fb769 = Global.StatGetNumberOfDays

--- STAT_GET_NUMBER_OF_HOURS
function Global.StatGetNumberOfHours(statName)
	return _in(0xF2D4B2FE415AAFC3, _ch(statName), _ri)
end
Global.N_0xf2d4b2fe415aafc3 = Global.StatGetNumberOfHours

--- STAT_GET_NUMBER_OF_MINUTES
function Global.StatGetNumberOfMinutes(statName)
	return _in(0x7583B4BE4C5A41B5, _ch(statName), _ri)
end
Global.N_0x7583b4be4c5a41b5 = Global.StatGetNumberOfMinutes

--- STAT_GET_NUMBER_OF_SECONDS
function Global.StatGetNumberOfSeconds(statName)
	return _in(0x2CE056FF3723F00B, _ch(statName), _ri)
end
Global.N_0x2ce056ff3723f00b = Global.StatGetNumberOfSeconds

--- Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?
function Global.StatGetPackedBoolMask(p0)
	return _in(0xF4D8E7AC2A27758C, p0, _ri)
end
Global.N_0xf4d8e7ac2a27758c = Global.StatGetPackedBoolMask

--- Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
function Global.StatGetPackedIntMask(p0)
	return _in(0x94F12ABF9C79E339, p0, _ri)
end
Global.N_0x94f12abf9c79e339 = Global.StatGetPackedIntMask

--- STAT_GET_POS
function Global.StatGetPos(p0, p4)
	return _in(0x350F82CCB186AA1B, p0, _i, _i, _i, p4, _r)
end

--- _STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS
function Global.StatGetSaveMigrationConsumeContentUnlockStatus(p0)
	return _in(0xCE5AA445ABA8DEE0, _ii(p0) --[[ may be optional ]], _ri)
end
Global.N_0xce5aa445aba8dee0 = Global.StatGetSaveMigrationConsumeContentUnlockStatus

--- STAT_GET_SAVE_MIGRATION_STATUS
function Global.StatGetSaveMigrationStatus(data)
	return _in(0x886913BBEACA68C1, _ii(data) --[[ may be optional ]], _ri)
end
Global.N_0x886913bbeaca68c1 = Global.StatGetSaveMigrationStatus

--- p1 is always -1 in the script files
function Global.StatGetString(statHash, p1)
	return _in(0xE50384ACC2C3DB74, _ch(statHash), p1, _s)
end

--- Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.
function Global.StatGetUserId(p0)
	return _in(0x2365C388E393BBE2, p0, _s)
end

--- STAT_INCREMENT
function Global.StatIncrement(statName, value)
	return _in(0x9B5A68C6489E9909, _ch(statName), value)
end

--- STAT_LOAD
function Global.StatLoad(p0)
	return _in(0xA651443F437B1CE6, p0, _r)
end

--- STAT_LOAD_PENDING
function Global.StatLoadPending(p0)
	return _in(0xA1750FFAFA181661, p0, _r)
end

--- platformName must be one of the following: ps3, xbox360, ps4, xboxone
function Global.StatMigrateSave(platformName)
	return _in(0xA5C80D8E768A9E66, _ts(platformName), _r)
end
Global.N_0xa5c80d8e768a9e66 = Global.StatMigrateSave

--- NativeDB Added Parameter 4: Any p3
function Global.StatSave(p0, p1, p2)
	return _in(0xE07BCA305B82D2FD, p0, p1, p2, _r)
end

--- _STAT_SAVE_MIGRATION_CANCEL
function Global.StatSaveMigrationCancel()
	return _in(0x4FEF53183C3C6414, _r)
end
Global.N_0x4fef53183c3c6414 = Global.StatSaveMigrationCancel

--- _STAT_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK
function Global.StatSaveMigrationConsumeContentUnlock(contentId, srcPlatform, srcGamerHandle)
	return _in(0x3270F67EED31FBC1, _ch(contentId), _ts(srcPlatform), _ts(srcGamerHandle), _r)
end
Global.N_0x3270f67eed31fbc1 = Global.StatSaveMigrationConsumeContentUnlock

--- STAT_SAVE_MIGRATION_STATUS_START
function Global.StatSaveMigrationStatusStart()
	return _in(0xC70DDCE56D0D3A99, _r)
end
Global.N_0xc70ddce56d0d3a99 = Global.StatSaveMigrationStatusStart

--- STAT_SAVE_PENDING
function Global.StatSavePending()
	return _in(0x7D3A583856F2C5AC, _r)
end

--- STAT_SAVE_PENDING_OR_REQUESTED
function Global.StatSavePendingOrRequested()
	return _in(0xBBB6AD006F1BBEA3, _r)
end

--- STAT_SET_BLOCK_SAVES
function Global.StatSetBlockSaves(toggle)
	return _in(0xF434A10BA01C37D0, toggle)
end
Global.N_0xf434a10ba01c37d0 = Global.StatSetBlockSaves

--- Example:
-- STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);
function Global.StatSetBool(statName, value, save)
	return _in(0x4B33C4243DE0C432, _ch(statName), value, save, _r)
end

--- STAT_SET_BOOL_MASKED
function Global.StatSetBoolMasked(statName, value, mask, save)
	return _in(0x5BC62EC1937B9E5B, _ch(statName), value, mask, save, _r)
end

--- STAT_SET_CHEAT_IS_ACTIVE
function Global.StatSetCheatIsActive()
	return _in(0x047CBED6F6F8B63C)
end
Global.N_0x047cbed6f6f8b63c = Global.StatSetCheatIsActive

--- p1 always true.
function Global.StatSetCurrentPosixTime(statName, p1)
	return _in(0xC2F84B7F9C4D0C61, _ch(statName), p1, _r)
end

--- 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
-- The structure looks like this:
-- int year
-- int month
-- int day
-- int hour
-- int minute
-- int second
-- int millisecond
-- The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.
function Global.StatSetDate(statName, numFields, save)
	return _in(0x2C29BFB64F4FCBE4, _ch(statName), _i, numFields, save, _r)
end

--- Example:
-- STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);
function Global.StatSetFloat(statName, value, save)
	return _in(0x4851997F37FE9B3C, _ch(statName), value, save, _r)
end

--- The following values have been found in the decompiled scripts:
-- "RC_ABI1"
-- "RC_ABI2"
-- "RC_BA1"
-- "RC_BA2"
-- "RC_BA3"
-- "RC_BA3A"
-- "RC_BA3C"
-- "RC_BA4"
-- "RC_DRE1"
-- "RC_EPS1"
-- "RC_EPS2"
-- "RC_EPS3"
-- "RC_EPS4"
-- "RC_EPS5"
-- "RC_EPS6"
-- "RC_EPS7"
-- "RC_EPS8"
-- "RC_EXT1"
-- "RC_EXT2"
-- "RC_EXT3"
-- "RC_EXT4"
-- "RC_FAN1"
-- "RC_FAN2"
-- "RC_FAN3"
-- "RC_HAO1"
-- "RC_HUN1"
-- "RC_HUN2"
-- "RC_JOS1"
-- "RC_JOS2"
-- "RC_JOS3"
-- "RC_JOS4"
-- "RC_MAU1"
-- "RC_MIN1"
-- "RC_MIN2"
-- "RC_MIN3"
-- "RC_MRS1"
-- "RC_MRS2"
-- "RC_NI1"
-- "RC_NI1A"
-- "RC_NI1B"
-- "RC_NI1C"
-- "RC_NI1D"
-- "RC_NI2"
-- "RC_NI3"
-- "RC_OME1"
-- "RC_OME2"
-- "RC_PA1"
-- "RC_PA2"
-- "RC_PA3"
-- "RC_PA3A"
-- "RC_PA3B"
-- "RC_PA4"
-- "RC_RAM1"
-- "RC_RAM2"
-- "RC_RAM3"
-- "RC_RAM4"
-- "RC_RAM5"
-- "RC_SAS1"
-- "RC_TON1"
-- "RC_TON2"
-- "RC_TON3"
-- "RC_TON4"
-- "RC_TON5"
function Global.StatSetGxtLabel(statName, value, save)
	return _in(0x17695002FD8B2AE0, _ch(statName), _ts(value), save, _r)
end

--- STAT_SET_INT
function Global.StatSetInt(statName, value, save)
	return _in(0xB3271D7AB655B441, _ch(statName), value, save, _r)
end

--- STAT_SET_LICENSE_PLATE
function Global.StatSetLicensePlate(statName, str)
	return _in(0x69FF13266D7296DA, _ch(statName), _ts(str), _r)
end

--- STAT_SET_MASKED_INT
function Global.StatSetMaskedInt(statName, p1, p2, p3, save)
	return _in(0x7BBB1B54583ED410, _ch(statName), p1, p2, p3, save, _r)
end

--- STAT_SET_POS
function Global.StatSetPos(statName, x, y, z, save)
	return _in(0xDB283FDE680FE72E, _ch(statName), x, y, z, save, _r)
end

--- Does not take effect immediately, unfortunately.
-- profileSetting seems to only be 936, 937 and 938 in scripts
function Global.StatSetProfileSettingValue(profileSetting, value)
	return _in(0x68F01422BE1D838F, profileSetting, value)
end
Global.N_0x68f01422be1d838f = Global.StatSetProfileSettingValue
Global.StatSetProfileSetting = Global.StatSetProfileSettingValue

--- STAT_SET_STRING
function Global.StatSetString(statName, value, save)
	return _in(0xA87B2335D12531D7, _ch(statName), _ts(value), save, _r)
end

--- STAT_SET_USER_ID
function Global.StatSetUserId(statName, value, save)
	return _in(0x8CDDF1E452BABE11, _ch(statName), _ts(value), save, _r)
end

--- STAT_SLOT_IS_LOADED
function Global.StatSlotIsLoaded(p0)
	return _in(0x0D0A9F0E7BD91E3C, p0, _r)
end

--- STOP_ALARM
-- @param instantStop Whether to kill the alarm instantly, or to let the audio system turn it off when it becomes inaudible
function Global.StopAlarm(alarmName, instantStop)
	return _in(0xA1CADDCD98415A41, _ts(alarmName), instantStop)
end

--- STOP_ALL_ALARMS
-- @param instantStop Whether to kill the alarm instantly, or to let the audio system turn it off when it becomes inaudible
function Global.StopAllAlarms(instantStop)
	return _in(0x2F794A877ADD4C92, instantStop)
end

--- STOP_ALL_GARAGE_ACTIVITY
function Global.StopAllGarageActivity()
	return _in(0x0F87E938BDF29D66)
end

--- Looks like p1 may be a flag, still need to do some research, though.
function Global.StopAnimPlayback(ped, p1, p2)
	return _in(0xEE08C992D238C5D1, ped, p1, p2)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param animExitSpeed Greater than `0.0`, higher is faster. Setting to `0.0` or using an integer, will cause animation lockout - requiring the animation to be played again or the player be killed.
function Global.StopAnimTask(ped, animDictionary, animationName, animExitSpeed)
	return _in(0x97FF36A1D40EA00A, ped, _ts(animDictionary), _ts(animationName), animExitSpeed)
end

--- STOP_ANY_PED_MODEL_BEING_SUPPRESSED
function Global.StopAnyPedModelBeingSuppressed()
	return _in(0xB47BD05FA66B40CF)
end

--- Stops the named mixing scene (which was previously started by this script)
function Global.StopAudioScene(sceneName)
	return _in(0xDFE8422B3B94E688, _ts(sceneName))
end

--- Stops all mixed scenes which were previously started by this script
function Global.StopAudioScenes()
	return _in(0xBAC7FC81A75EC1A1)
end

--- Begins with STOP_*. Next character in the name is either D or E.
function Global.StopBenchmarkRecording()
	return _in(0xC7DB36C24634F52B)
end
Global.N_0xc7db36c24634f52b = Global.StopBenchmarkRecording

--- NativeDB Introduced: v1290
function Global.StopBinkMovie(binkMovie)
	return _in(0x63606A61DE68898A, binkMovie)
end

--- Stops CTaskBringVehicleToHalt
function Global.StopBringVehicleToHalt(vehicle)
	return _in(0x7C06330BFDDA182E, vehicle)
end
Global.N_0x7c06330bfdda182e = Global.StopBringVehicleToHalt

--- STOP_CAM_POINTING
function Global.StopCamPointing(cam)
	return _in(0xF33AB75780BA57DE, cam)
end

--- STOP_CAM_SHAKING
function Global.StopCamShaking(cam, p1)
	return _in(0xBDECF64367884AC3, cam, p1)
end

--- STOP_CINEMATIC_CAM_SHAKING
function Global.StopCinematicCamShaking(p0)
	return _in(0x2238E588E588A6D7, p0)
end

--- STOP_CINEMATIC_SHOT
function Global.StopCinematicShot(p0)
	return _in(0x7660C6E75D3A078E, _ch(p0))
end

--- Stops currently playing ambient speech.
function Global.StopCurrentPlayingAmbientSpeech(ped)
	return _in(0xB8BEC0CA6F0EDB0F, ped)
end

--- Stops currently playing speech (Pain, ambient, scripted, breathing).
function Global.StopCurrentPlayingSpeech(ped)
	return _in(0x7A73D05A607734C7, ped)
end
Global.N_0x7a73d05a607734c7 = Global.StopCurrentPlayingSpeech
Global.SetPedMute = Global.StopCurrentPlayingSpeech

--- STOP_CUTSCENE
-- @param p0 Always false
function Global.StopCutscene(p0)
	return _in(0xC7272775B4DC786E, p0)
end

--- Stops audio for the current cutscene.
function Global.StopCutsceneAudio()
	return _in(0x806058BBDC136E06)
end
Global.N_0x806058bbdc136e06 = Global.StopCutsceneAudio

--- STOP_CUTSCENE_CAM_SHAKING
function Global.StopCutsceneCamShaking()
	return _in(0xDB629FFD9285FA06)
end

--- Stop cutscene instantly, will dump registered entities right where they were when ran.
function Global.StopCutsceneImmediately()
	return _in(0xD220BDD222AC4A1E)
end

--- RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
function Global.StopEntityAnim(entity, animation, animGroup, p3)
	return _in(0x28004F88151E03E0, entity, _ts(animation), _ts(animGroup), p3, _ri)
end

--- STOP_ENTITY_FIRE
function Global.StopEntityFire(entity)
	return _in(0x7F0DD2EBBB651AFF, entity)
end

--- STOP_FIRE_IN_RANGE
function Global.StopFireInRange(x, y, z, radius)
	return _in(0x056A8A219B8E829F, x, y, z, radius)
end

--- STOP_GAMEPLAY_CAM_SHAKING
-- @param bStopImmediately Should the shake stop this frame.
function Global.StopGameplayCamShaking(bStopImmediately)
	return _in(0x0EF93E9F3D08C178, bStopImmediately)
end

--- Terminates the current gameplay hint camera, with an option for immediate cessation or a gradual fade out.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param bStopImmediately Specifies whether the gameplay hint camera should stop instantly `true` or gradually transition out `false`.
function Global.StopGameplayHint(bStopImmediately)
	return _in(0xF46C581C61718916, bStopImmediately)
end

--- STOP_PAD_SHAKE
function Global.StopPadShake(padIndex)
	return _in(0x38C16A305E8CDC8D, padIndex)
end

--- p1 is always 0 in the native scripts
function Global.StopParticleFxLooped(ptfxHandle, p1)
	return _in(0x8F75998877616996, ptfxHandle, p1)
end

--- Stops a ped's ringtone from playing
function Global.StopPedRingtone(ped)
	return _in(0x6C5AE23EFA885092, ped)
end

--- This doesn't stop a piece of dialogue that has been triggered.
-- This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.
-- Nb. This does not sync over the network, it will only affect peds locally. Use [STOP_PED_SPEAKING_SYNCED](#\_0xAB6781A5F3101470) if you need to affect peds on other machines too.
function Global.StopPedSpeaking(ped, shouldDisable)
	return _in(0x9D64D7405520E3D3, ped, shouldDisable)
end

--- This doesn't stop a piece of dialogue that has been triggered.
-- This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.
-- The ped will also be prevented from speaking on remote machines. Use [STOP_PED_SPEAKING](#\_0x9D64D7405520E3D3) if you just want to affect the local machine.
function Global.StopPedSpeakingSynced(ped, shouldDisable)
	return _in(0xAB6781A5F3101470, ped, shouldDisable)
end
Global.N_0xab6781a5f3101470 = Global.StopPedSpeakingSynced

--- STOP_PED_WEAPON_FIRING_WHEN_DROPPED
function Global.StopPedWeaponFiringWhenDropped(ped)
	return _in(0xC158D28142A34608, ped)
end

--- STOP_PLAYBACK_RECORDED_VEHICLE
function Global.StopPlaybackRecordedVehicle(vehicle)
	return _in(0x54833611C17ABDEA, vehicle)
end

--- STOP_PLAYER_SWITCH
function Global.StopPlayerSwitch()
	return _in(0x95C0A5BBDC189AA1)
end

--- Disables the player's teleportation
function Global.StopPlayerTeleport()
	return _in(0xC449EDED9D73009C)
end

--- Stops recording and discards the recorded clip.
function Global.StopRecordingAndDiscardClip()
	return _in(0x88BB3507ED41A240)
end
Global.N_0x88bb3507ed41a240 = Global.StopRecordingAndDiscardClip

--- Stops recording and saves the recorded clip.
function Global.StopRecordingAndSaveClip()
	return _in(0x071A5197D6AFC8B3)
end
Global.StopRecording = Global.StopRecordingAndSaveClip

--- Disable recording for this frame only.
function Global.StopRecordingThisFrame()
	return _in(0xEB2D525B57F42B40)
end
Global.N_0xeb2d525b57f42b40 = Global.StopRecordingThisFrame

--- Instructs the game engine to stop rendering scripted cameras and transition back to the gameplay camera, optionally applying custom blending and rendering options.
-- ```cpp
-- enum eRenderingOptionFlags {
-- RO_NO_OPTIONS = 0,
-- RO_STOP_RENDERING_OPTION_WHEN_PLAYER_EXITS_INTO_COVER = 1
-- };
-- ```
-- ```cpp
-- enum eCamSplineSmoothingFlags {
-- CAM_SPLINE_NO_SMOOTH                = 0,    // No smoothing just moves at a constant rate
-- CAM_SPLINE_SLOW_IN_SMOOTH           = 1,    // Decelerates when approaching a node
-- CAM_SPLINE_SLOW_OUT_SMOOTH          = 2,    // Accelerates slowly when leaving a node
-- CAM_SPLINE_SLOW_IN_OUT_SMOOTH       = 3,    // Decelerates when approaching a node and accelerates slowly when leaving a node
-- CAM_SPLINE_VERY_SLOW_IN             = 4,
-- CAM_SPLINE_VERY_SLOW_OUT            = 5,
-- CAM_SPLINE_VERY_SLOW_IN_SLOW_OUT    = 6,
-- CAM_SPLINE_SLOW_IN_VERY_SLOW_OUT    = 7,
-- CAM_SPLINE_VERY_SLOW_IN_VERY_SLOW_OUT = 8,
-- CAM_SPLINE_EASE_IN                  = 9,
-- CAM_SPLINE_EASE_OUT                 = 10,
-- CAM_SPLINE_QUADRATIC_EASE_IN        = 11,
-- CAM_SPLINE_QUADRATIC_EASE_OUT       = 12,
-- CAM_SPLINE_QUADRATIC_EASE_IN_OUT    = 13,
-- CAM_SPLINE_CUBIC_EASE_IN            = 14,
-- CAM_SPLINE_CUBIC_EASE_OUT           = 15,
-- CAM_SPLINE_CUBIC_EASE_IN_OUT        = 16,
-- CAM_SPLINE_QUARTIC_EASE_IN          = 17,
-- CAM_SPLINE_QUARTIC_EASE_OUT         = 18,
-- CAM_SPLINE_QUARTIC_EASE_IN_OUT      = 19,
-- CAM_SPLINE_QUINTIC_EASE_IN          = 20,
-- CAM_SPLINE_QUINTIC_EASE_OUT         = 21,
-- CAM_SPLINE_QUINTIC_EASE_IN_OUT      = 22,
-- CAM_SPLINE_CIRCULAR_EASE_IN         = 23,
-- CAM_SPLINE_CIRCULAR_EASE_OUT        = 24,
-- CAM_SPLINE_CIRCULAR_EASE_IN_OUT     = 25
-- };
-- ```
-- ```
-- NativeDB Added Parameter 4: int renderingOptions : An integer bitmask of eRenderingOptionFlags to apply specific rendering behaviors during the transition. RO_NO_OPTIONS signifies no special options are applied.
-- ```
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param bShouldApplyAcrossAllThreads If `true`, ensures that the rendering stop request is enforced regardless of other script threads that might still expect rendering to be active. Use with caution to avoid conflicts.
-- @param distanceToBlend Specifies the distance over which the camera should blend from the scripted camera back to the gameplay camera. A value of `0.0` uses the game's default blending distance.
-- @param blendType An integer representing `eCamSplineSmoothingFlags` to determine the smoothness of the camera transition. Common values include `CAM_SPLINE_SLOW_IN_OUT_SMOOTH` among others, defining the easing of the blend.
function Global.StopRenderingScriptCamsUsingCatchUp(bShouldApplyAcrossAllThreads, distanceToBlend, blendType)
	return _in(0xC819F3CBB62BF692, bShouldApplyAcrossAllThreads, distanceToBlend, blendType)
end
Global.N_0xc819f3cbb62bf692 = Global.StopRenderingScriptCamsUsingCatchUp
Global.RenderFirstPersonCam = Global.StopRenderingScriptCamsUsingCatchUp

--- STOP_ROPE_UNWINDING_FRONT
function Global.StopRopeUnwindingFront(ropeId)
	return _in(0xFFF3A50779EFBBB3, ropeId)
end

--- STOP_ROPE_WINDING
function Global.StopRopeWinding(ropeId)
	return _in(0xCB2D4AB84A19AA7C, ropeId)
end

--- STOP_SAVE_ARRAY
function Global.StopSaveArray()
	return _in(0x04456F95153C6BE4)
end

--- STOP_SAVE_DATA
function Global.StopSaveData()
	return _in(0x74E20C9145FB66FD)
end

--- STOP_SAVE_STRUCT
function Global.StopSaveStruct()
	return _in(0xEB1774DF12BB9F12)
end

--- Stops the currently active global camera shake that was initiated by a script. You can check if a global camera shake is active using [IS_SCRIPT_GLOBAL_SHAKING](#\_0xC912AF078AF19212).
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param bStopImmediately A boolean indicating whether the camera shake should stop instantly (TRUE) or gradually fade out (FALSE).
function Global.StopScriptGlobalShaking(bStopImmediately)
	return _in(0x1C9D7949FA533490, bStopImmediately)
end
Global.N_0x1c9d7949fa533490 = Global.StopScriptGlobalShaking

--- STOP_SCRIPTED_CONVERSATION
function Global.StopScriptedConversation(finishCurrentLine)
	return _in(0xD79DEEFB53455EBA, finishCurrentLine, _ri)
end

--- Stops all smoke grenade sounds
function Global.StopSmokeGrenadeExplosionSounds()
	return _in(0xE4E6DD5566D28C82)
end
Global.N_0xe4e6dd5566d28c82 = Global.StopSmokeGrenadeExplosionSounds

--- Stops the sound from currently playing, there isn't a way to resume a sound
-- after stopping it.
-- @param soundId The sound id to stop
function Global.StopSound(soundId)
	return _in(0xA3B0C41BA5CC0BB5, soundId)
end

--- STOP_STREAM
function Global.StopStream()
	return _in(0xA4718A1419D18151)
end

--- STOP_SYNCHRONIZED_AUDIO_EVENT
function Global.StopSynchronizedAudioEvent(p0)
	return _in(0x92D6A88E64A94430, p0, _r)
end

--- p1 sync task id?
function Global.StopSynchronizedEntityAnim(entity, p1, p2)
	return _in(0x43D3807C077261E3, entity, p1, p2, _r)
end

--- STOP_SYNCHRONIZED_MAP_ENTITY_ANIM
function Global.StopSynchronizedMapEntityAnim(p0, p1, p2, p3, p4, p5)
	return _in(0x11E79CAB7183B6F5, p0, p1, p2, p3, p4, p5, _r)
end

--- Always returns zero.
function Global.StreamvolCreateFrustum(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x1F3F018BC3AFA77C, p0, p1, p2, p3, p4, p5, p6, p7, p8, _ri)
end
Global.N_0x1f3f018bc3afa77c = Global.StreamvolCreateFrustum

--- Always returns zero.
function Global.StreamvolCreateLine(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x0AD9710CEE2F590F, p0, p1, p2, p3, p4, p5, p6, _ri)
end
Global.N_0x0ad9710cee2f590f = Global.StreamvolCreateLine

--- Always returns zero.
function Global.StreamvolCreateSphere(x, y, z, rad, p4, p5)
	return _in(0x219C7B8D53E429FD, x, y, z, rad, p4, p5, _ri)
end
Global.N_0x219c7b8d53e429fd = Global.StreamvolCreateSphere
Global.FormatFocusHeading = Global.StreamvolCreateSphere

--- STREAMVOL_DELETE
function Global.StreamvolDelete(unused)
	return _in(0x1EE7D8DF4425F053, unused)
end
Global.N_0x1ee7d8df4425f053 = Global.StreamvolDelete

--- STREAMVOL_HAS_LOADED
function Global.StreamvolHasLoaded(unused)
	return _in(0x7D41E9D2D17C5B2D, unused, _r)
end
Global.N_0x7d41e9d2d17c5b2d = Global.StreamvolHasLoaded

--- STREAMVOL_IS_VALID
function Global.StreamvolIsValid(unused)
	return _in(0x07C313F94746702C, unused, _r)
end
Global.N_0x07c313f94746702c = Global.StreamvolIsValid

--- Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
-- If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
function Global.StringToInt(string, outInteger)
	return _in(0x5A5F40FE637EB584, _ts(string), _ii(outInteger) --[[ may be optional ]], _r)
end

--- SUPPRESS_AGITATION_EVENTS_NEXT_FRAME
function Global.SuppressAgitationEventsNextFrame()
	return _in(0x5F3B7749C112D552)
end

--- Suppresses a crime for a given player for this frame only.
-- **Note:** This native needs to be executed inside a thread if a crime is meant to be suppressed for a given amount of time.
-- @param player The player we are suppressing the crime for.
-- @param crimeType The crime to suppress, see [`REPORT_CRIME`](#\_0xE9B09589827545E7) for available types.
function Global.SuppressCrimeThisFrame(player, crimeType)
	return _in(0x9A987297ED8BD838, player, crimeType)
end
Global.N_0x9a987297ed8bd838 = Global.SuppressCrimeThisFrame
Global.SwitchCrimeType = Global.SuppressCrimeThisFrame

--- SUPPRESS_FRONTEND_RENDERING_THIS_FRAME
function Global.SuppressFrontendRenderingThisFrame()
	return _in(0xBA751764F0821256)
end
Global.N_0xba751764f0821256 = Global.SuppressFrontendRenderingThisFrame

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function Global.SuppressShockingEventTypeNextFrame(eventType)
	return _in(0x3FD2EC8BF1F1CF30, eventType)
end

--- SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME
function Global.SuppressShockingEventsNextFrame()
	return _in(0x2F9A292AD0A3BD89)
end

--- Suppresses or enables a specific type of random event for the current frame.
-- ```cpp
-- enum eEventType {
-- RC_PED_STEAL_VEHICLE = 0,
-- RC_PED_JAY_WALK_LIGHT = 1,
-- RC_COP_PURSUE = 2,
-- RC_COP_PURSUE_VEHICLE_FLEE_SPAWNED = 3,
-- RC_COP_VEHICLE_DRIVING_FAST = 4,
-- RC_COP_VEHICLE_DRIVING_SLOW = 5,
-- RC_DRIVER_RECKLESS = 6,
-- RC_DRIVER_PRO = 7,
-- RC_PED_PURSUE_WHEN_HIT_BY_CAR = 8
-- }
-- ```
-- @param eventType The type of the event to be suppressed or enabled. Use the `eEventType` enum for specific event types.
-- @param enable Set to `false` to suppress the event for this frame; set to `true` to enable it.
function Global.SupressRandomEventThisFrame(eventType, enable)
	return _in(0x1EAE0A6E978894A2, eventType, enable)
end
Global.N_0x1eae0a6e978894a2 = Global.SupressRandomEventThisFrame

--- Used in carsteal3 script with p0 = "Carsteal4_spycar".
-- S*
function Global.SwitchToInputMappingScheme(name)
	return _in(0x3D42B92563939375, _ts(name), _r)
end
Global.N_0x3d42b92563939375 = Global.SwitchToInputMappingScheme

--- Same as 0x3D42B92563939375
-- S*
function Global.SwitchToInputMappingScheme_2(name)
	return _in(0x4683149ED1DDE7A1, _ts(name), _r)
end
Global.N_0x4683149ed1dde7a1 = Global.SwitchToInputMappingScheme_2

--- You can check if the player is in a Switch state with [`IS_PLAYER_SWITCH_IN_PROGRESS`](#\_0xD9D2CFFF49FAB35F).
-- ***Note:** Doesn't act normally when used on Mount Chiliad.*
-- @param ped The Ped (player character) for which the switch is initiated.
-- @param flags Flags control various functionalities: 0 for normal behavior, 1 for no transition, and 255 for Switch IN.
-- @param switchType Specifies the type of switch (0 - 3): 0 for 1 step towards ped, 1 for 3 steps out from ped, 2 for 1 step out from ped, and 3 for 1 step towards ped.
function Global.SwitchToMultiFirstpart(ped, flags, switchType)
	return _in(0xAAB3200ED59016BC, ped, flags, switchType)
end
Global.N_0xaab3200ed59016bc = Global.SwitchToMultiFirstpart
Global.SwitchOutPlayer = Global.SwitchToMultiFirstpart

--- After using [`SWITCH_TO_MULTI_FIRSTPART`](#\_0xAAB3200ED59016BC) , use this native to smoothly return the camera to the player's character.
function Global.SwitchToMultiSecondpart(ped)
	return _in(0xD8295AF639FD9CB8, ped)
end
Global.N_0xd8295af639fd9cb8 = Global.SwitchToMultiSecondpart
Global.SwitchInPlayer = Global.SwitchToMultiSecondpart

--- Toggles whether ambient trains can spawn on the specified track or not.
-- | trackId | File | Description |
-- | --- | --- | --- |
-- | 0 | `trains1.dat` | Main track around SA |
-- | 1 | `trains2.dat` | Davis Quartz Quarry branch |
-- | 2 | `trains3.dat` | Second track alongside live track along Roy Lewenstein Blv. |
-- | 3 | `trains4.dat` | Metro track circuit |
-- | 4 | `trains5.dat` | Branch in Mirror Park Railyard |
-- | 5 | `trains6.dat` | Branch in Mirror Park Railyard |
-- | 6 | `trains7.dat` | LS branch to Mirror Park Railyard |
-- | 7 | `trains8.dat` | Overground part of metro track along Forum Dr. |
-- | 8 | `trains9.dat` | Branch to Mirror Park Railyard |
-- | 9 | `trains10.dat` | Yankton train |
-- | 10 | `trains11.dat` | Part of metro track near mission row |
-- | 11 | `trains12.dat` | Yankton prologue mission train |
-- Tracks IDs `0` and `3` are the main tracks you find trains on during normal gameplay, all the others are used during missions and are not complete tracks.
-- @param trackId The internal id of the train track to switch
-- @param state Whether ambient trains can spawn or not
-- @return None. The original return type is `void`, but ABI compatibility makes this impossible.
function Global.SwitchTrainTrack(trackId, state)
	return _in(0xFD813BB7DB977F20, trackId, state)
end

--- Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
-- To enable the keys again, use [`0x14621BB1DF14E2B2`](#\_0x14621BB1DF14E2B2).
function Global.TakeControlOfFrontend()
	return _in(0xEC9264727EEC0F28)
end
Global.N_0xec9264727eec0f28 = Global.TakeControlOfFrontend

--- TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE
-- @param scene Scene ID returned by [`CREATE_SYNCHRONIZED_SCENE`](#\_0x8C18E0F9080ADD73)
function Global.TakeOwnershipOfSynchronizedScene(scene)
	return _in(0xCD9CC7E200A52A6F, scene)
end
Global.N_0xcd9cc7e200a52a6f = Global.TakeOwnershipOfSynchronizedScene
Global.DisposeSynchronizedScene = Global.TakeOwnershipOfSynchronizedScene

--- TAN
function Global.Tan(p0)
	return _in(0x632106CC96E82E91, p0, _rf)
end

--- Makes the specified ped achieve the specified heading.
-- pedHandle: The handle of the ped to assign the task to.
-- heading: The desired heading.
-- timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
function Global.TaskAchieveHeading(ped, heading, timeout)
	return _in(0x93B93A37987F1F3D, ped, heading, timeout)
end

--- _TASK_AGITATED_ACTION
function Global.TaskAgitatedAction(ped, ped2)
	return _in(0x19D1B791CB3670FE, ped, ped2)
end
Global.N_0x19d1b791cb3670fe = Global.TaskAgitatedAction

--- TASK_AIM_GUN_AT_COORD
function Global.TaskAimGunAtCoord(ped, x, y, z, time, p5, p6)
	return _in(0x6671F3EEC681BDA1, ped, x, y, z, time, p5, p6)
end

--- duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
function Global.TaskAimGunAtEntity(ped, entity, duration, p3)
	return _in(0x9B53BB6E8943AF53, ped, entity, duration, p3)
end

--- TASK_AIM_GUN_SCRIPTED
function Global.TaskAimGunScripted(ped, scriptTask, p2, p3)
	return _in(0x7A192BE16D373D00, ped, _ch(scriptTask), p2, p3)
end

--- TASK_AIM_GUN_SCRIPTED_WITH_TARGET
function Global.TaskAimGunScriptedWithTarget(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x8605AF0DE8B3A5AC, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- Example from "me_amanda1.ysc.c4":
-- TASK::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());
-- Example from "armenian1.ysc.c4":
-- if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {
-- TASK::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());
-- }
-- I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
-- Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
function Global.TaskArrestPed(ped, target)
	return _in(0xF3B9A78A178572B1, ped, target)
end

--- You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.
-- Working example
-- float vehicleMaxSpeed = VEHICLE::_GET_VEHICLE_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));
-- TASK::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);
-- PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);
-- P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
function Global.TaskBoatMission(pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11)
	return _in(0x15C86013127CE63F, pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11)
end

--- p2 tend to be 16, 17 or 1
-- p3 to p7 tend to be 0.0
function Global.TaskChatToPed(ped, target, p2, p3, p4, p5, p6, p7)
	return _in(0x8C338E0263E4FD19, ped, target, p2, p3, p4, p5, p6, p7)
end

--- TASK_CLEAR_DEFENSIVE_AREA
function Global.TaskClearDefensiveArea(p0)
	return _in(0x95A6C46A31D1917D, p0)
end

--- Not clear what it actually does, but here's how script uses it -
-- if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)
-- {
-- if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
-- {
-- TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
-- }
-- ...
-- }
-- Another one where it doesn't "look" at current player -
-- TASK::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
-- PED::_2208438012482A1A(l_3ED, 0, 0);
-- TASK::TASK_CLEAR_LOOK_AT(l_3ED);
function Global.TaskClearLookAt(ped)
	return _in(0x0F804F1DB19B9689, ped)
end

--- Climbs or vaults the nearest thing.
function Global.TaskClimb(ped, unused)
	return _in(0x89D9FCC2435112F1, ped, unused)
end

--- TASK_CLIMB_LADDER
function Global.TaskClimbLadder(ped, p1)
	return _in(0xB6C987F9285A3814, ped, p1)
end

--- Despite its name, it only attacks ONE hated target. The one closest hated target.
-- p2 seems to be always 0
function Global.TaskCombatHatedTargetsAroundPed(ped, radius, p2)
	return _in(0x7BF835BB9E2698C8, ped, radius, p2)
end

--- TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED
function Global.TaskCombatHatedTargetsAroundPedTimed(p0, p1, p2, p3)
	return _in(0x2BBA30B854534A0C, p0, p1, p2, p3)
end

--- Despite its name, it only attacks ONE hated target. The one closest to the specified position.
function Global.TaskCombatHatedTargetsInArea(ped, x, y, z, radius, p5)
	return _in(0x4CF5F55DAC3280A0, ped, x, y, z, radius, p5)
end

--- Makes the specified ped attack the target ped.
-- p2 should be 0
-- p3 should be 16
function Global.TaskCombatPed(ped, targetPed, p2, p3)
	return _in(0xF166E48407BAC484, ped, targetPed, p2, p3)
end

--- TASK_COMBAT_PED_TIMED
function Global.TaskCombatPedTimed(p0, ped, p2, p3)
	return _in(0x944F30DCB7096BDE, p0, ped, p2, p3)
end

--- The ped will act like NPC's involved in a gunfight. The ped will squat down with their heads held in place and look around.
-- @param ped Ped id.
-- @param duration Duration of the animation in ms. Set to -1 if you do not want a duration.
function Global.TaskCower(ped, duration)
	return _in(0x3EB1FE9E8E908E15, ped, duration)
end

--- Example:
-- TASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
-- Needs working example. Doesn't seem to do anything.
-- I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
-- I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
-- I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
function Global.TaskDriveBy(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern)
	return _in(0x2F8AF0E82773A171, driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, _ch(firingPattern))
end

--- speed 1.0 = walk, 2.0 = run
-- p5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle
-- p6 is always 0
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.TaskEnterVehicle(ped, vehicle, timeout, seatIndex, speed, flag, p6)
	return _in(0xC20E50AA46D09CA8, ped, vehicle, timeout, seatIndex, speed, flag, p6)
end

--- TASK_EVERYONE_LEAVE_VEHICLE
function Global.TaskEveryoneLeaveVehicle(vehicle)
	return _in(0x7F93691AB4B92272, vehicle)
end

--- TASK_EXIT_COVER
function Global.TaskExitCover(p0, p1, p2, p3, p4)
	return _in(0x79B258E397854D29, p0, p1, p2, p3, p4)
end

--- Adds a new point to the current point route; a maximum of 8 points can be added.
-- Call [TASK_FLUSH_ROUTE](#\_0x841142A1376E9006) before the first call to this. Call [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E) to make the Ped go the route.
function Global.TaskExtendRoute(x, y, z)
	return _in(0x1E7889778264843A, x, y, z)
end

--- Clears the current point route. Call this before [TASK_EXTEND_ROUTE](#\_0x1E7889778264843A) and [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E).
function Global.TaskFlushRoute()
	return _in(0x841142A1376E9006)
end

--- Sometimes a path may not be able to be found. This could happen because there simply isn't any way to get there, or maybe a bunch of dynamic objects have blocked the way,
-- or maybe the destination is too far away. In this case the ped will simply stand still.
-- To identify when this has happened, you can use GET_NAVMESH_ROUTE_RESULT. This will help you find situations where peds cannot get to their target.
-- ```cpp
-- enum eNavScriptFlags {
-- ENAV_DEFAULT = 0, // Default flag
-- ENAV_NO_STOPPING = 1, // Will ensure the ped continues to move whilst waiting for the path to be found, and will not slow down at the end of their route.
-- ENAV_ADV_SLIDE_TO_COORD_AND_ACHIEVE_HEADING_AT_END = 2, // Performs a slide-to-coord at the end of the task. This requires that the accompanying NAVDATA structure has the 'SlideToCoordHeading' member set correctly.
-- ENAV_GO_FAR_AS_POSSIBLE_IF_TARGET_NAVMESH_NOT_LOADED = 4, // If the navmesh is not loaded in under the target position, then this will cause the ped to get as close as is possible on whatever navmesh is loaded. The navmesh must still be loaded at the path start.
-- ENAV_ALLOW_SWIMMING_UNDERWATER = 8, // Will allow navigation underwater - by default this is not allowed.
-- ENAV_KEEP_TO_PAVEMENTS = 16, // Will only allow navigation on pavements. If the path starts or ends off the pavement, the command will fail. Likewise if no pavement-only route can be found even although the start and end are on pavement.
-- ENAV_NEVER_ENTER_WATER = 32, // Prevents the path from entering water at all.
-- ENAV_DONT_AVOID_OBJECTS = 64, // Disables object-avoidance for this path. The ped may still make minor steering adjustments to avoid objects, but will not pathfind around them.
-- ENAV_ADVANCED_USE_MAX_SLOPE_NAVIGABLE = 128, // Specifies that the navmesh route will only be able to traverse up slopes which are under the angle specified, in the MaxSlopeNavigable member of the accompanying NAVDATA structure.
-- ENAV_STOP_EXACTLY = 512, // Unused.
-- ENAV_ACCURATE_WALKRUN_START = 1024, // The entity will look ahead in its path for a longer distance to make the walk/run start go more in the right direction.
-- ENAV_DONT_AVOID_PEDS = 2048, // Disables ped-avoidance for this path while we move.
-- ENAV_DONT_ADJUST_TARGET_POSITION = 4096, // If target pos is inside the boundingbox of an object it will otherwise be pushed out.
-- ENAV_SUPPRESS_EXACT_STOP = 8192, // Turns off the default behaviour, which is to stop exactly at the target position. Occasionally this can cause footsliding/skating problems.
-- ENAV_ADVANCED_USE_CLAMP_MAX_SEARCH_DISTANCE = 16384, // Prevents the path-search from finding paths outside of this search distance. This can be used to prevent peds from finding long undesired routes.
-- ENAV_PULL_FROM_EDGE_EXTRA = 32768 // Pulls out the paths from edges at corners for a longer distance, to prevent peds walking into stuff.
-- };
-- ```
-- @param ped Ped Index.
-- @param x X Position Coordinate.
-- @param y Y Position Coordinate.
-- @param z Z Position Coordinate
-- @param moveBlendRatio Ratio for ped movement (0 to 3.0 in the following order: still, walk, run and sprint)
-- @param time INT value in milliseconds.
-- @param radius distance from the final coordinates that the pedestrian should be to consider itself at the target.
-- @param flags Navigation Flags for the ped (see `eNavScriptFlags`).
-- @param finalHeading Peds heading when finished.
function Global.TaskFollowNavMeshToCoord(ped, x, y, z, moveBlendRatio, time, radius, flags, finalHeading)
	return _in(0x15D3A79D4E44B913, ped, x, y, z, moveBlendRatio, time, radius, flags, finalHeading)
end

--- TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED
function Global.TaskFollowNavMeshToCoordAdvanced(ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)
	return _in(0x17F58B88D085DBAC, ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)
end

--- MulleKD19: Makes the ped go on the created point route.
-- ped: The ped to give the task to.
-- speed: The speed to move at in m/s.
-- int: Unknown. Can be 0, 1, 2 or 3.
-- Example:
-- TASK_FLUSH_ROUTE();
-- TASK_EXTEND_ROUTE(0f, 0f, 70f);
-- TASK_EXTEND_ROUTE(10f, 0f, 70f);
-- TASK_EXTEND_ROUTE(10f, 10f, 70f);
-- TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
-- @param ped The ped to give the task to.
-- @param speed The speed to move at in m/s.
-- @param unknown Unknown. Can be 0, 1, 2 or 3.
function Global.TaskFollowPointRoute(ped, speed, unknown)
	return _in(0x595583281858626E, ped, speed, unknown)
end

--- p6 always -1
-- p7 always 10.0
-- p8 always 1
function Global.TaskFollowToOffsetOfEntity(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
	return _in(0x304AE42E357B8C7E, ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
end

--- TASK_FOLLOW_WAYPOINT_RECORDING
function Global.TaskFollowWaypointRecording(p0, p1, p2, p3, p4)
	return _in(0x0759591819534F7B, p0, p1, p2, p3, p4)
end

--- See [`FORCE_PED_MOTION_STATE`](#\_0xF28965D04F570DCA)
function Global.TaskForceMotionState(ped, state, p2)
	return _in(0x4F056E1AFFEF17AB, ped, _ch(state), p2)
end

--- TASK_GET_OFF_BOAT
function Global.TaskGetOffBoat(ped, boat)
	return _in(0x9C00E77AF14B2DFF, ped, boat)
end
Global.TaskGetOffBoat = Global.TaskGetOffBoat

--- TASK_GO_STRAIGHT_TO_COORD
-- @param ped The ped handle.
-- @param x The x coordinate.
-- @param y The y coordinate.
-- @param z The z coordinate.
-- @param speed The ped movement speed.
-- @param timeout \-1 , other values appear to break the ped movement.
-- @param targetHeading The heading you want the ped to be on x,y,z coord.
-- @param distanceToSlide The distance from x,y,z where the ped will start sliding.
function Global.TaskGoStraightToCoord(ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
	return _in(0xD76B57B44F1E6F8B, ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
end

--- TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY
function Global.TaskGoStraightToCoordRelativeToEntity(entity1, entity2, p2, p3, p4, p5, p6)
	return _in(0x61E360B7E040D12E, entity1, entity2, p2, p3, p4, p5, p6)
end

--- The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
-- If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
-- If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
-- The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
-- I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
-- I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
-- Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
-- The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
-- Example:
-- enum AimFlag
-- {
-- AimAtFocusLocation,
-- AimAtGoToLocation
-- };
-- Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
-- Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
-- Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
-- // 1st example
-- TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);
-- // 2nd example
-- TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);
-- 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
-- 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
function Global.TaskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern)
	return _in(0xA55547801EB331FC, pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, _ch(firingPattern))
end

--- Tells a ped to go to a coord by any means.
-- ```cpp
-- enum eDrivingMode {
-- DF_StopForCars = 1,
-- DF_StopForPeds = 2,
-- DF_SwerveAroundAllCars = 4,
-- DF_SteerAroundStationaryCars	= 8,
-- DF_SteerAroundPeds = 16,
-- DF_SteerAroundObjects = 32,
-- DF_DontSteerAroundPlayerPed = 64,
-- DF_StopAtLights = 128,
-- DF_GoOffRoadWhenAvoiding = 256,
-- DF_DriveIntoOncomingTraffic = 512,
-- DF_DriveInReverse = 1024,
-- // If pathfinding fails, cruise randomly instead of going on a straight line
-- DF_UseWanderFallbackInsteadOfStraightLine = 2048,
-- DF_AvoidRestrictedAreas = 4096,
-- // These only work on MISSION_CRUISE
-- DF_PreventBackgroundPathfinding = 8192,
-- DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
-- DF_UseShortCutLinks =  262144,
-- DF_ChangeLanesAroundObstructions = 524288,
-- DF_UseSwitchedOffNodes =  2097152,	// cruise tasks ignore this anyway--only used for goto's
-- DF_PreferNavmeshRoute =  4194304,	// if you're going to be primarily driving off road
-- // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly
-- DF_PlaneTaxiMode =  8388608,
-- DF_ForceStraightLine = 16777216,
-- DF_UseStringPullingAtJunctions = 33554432,
-- DF_AvoidHighways = 536870912,
-- DF_ForceJoinInRoadDirection = 1073741824,
-- // Standard driving mode. stops for cars, peds, and lights, goes around stationary obstructions
-- DRIVINGMODE_STOPFORCARS = 786603, // DF_StopForCars|DF_StopForPeds|DF_SteerAroundObjects|DF_SteerAroundStationaryCars|DF_StopAtLights|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,		// Obey lights too
-- // Like the above, but doesn't steer around anything in its way - will only wait instead.
-- DRIVINGMODE_STOPFORCARS_STRICT = 262275, // DF_StopForCars|DF_StopForPeds|DF_StopAtLights|DF_UseShortCutLinks, // Doesn't deviate an inch.
-- // Default "alerted" driving mode. drives around everything, doesn't obey lights
-- DRIVINGMODE_AVOIDCARS = 786469, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars,
-- // Very erratic driving. difference between this and AvoidCars is that it doesn't use the brakes at ALL to help with steering
-- DRIVINGMODE_AVOIDCARS_RECKLESS = 786468, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,
-- // Smashes through everything
-- DRIVINGMODE_PLOUGHTHROUGH = 262144, // DF_UseShortCutLinks
-- // Drives normally except for the fact that it ignores lights
-- DRIVINGMODE_STOPFORCARS_IGNORELIGHTS = 786475, // DF_StopForCars|DF_SteerAroundStationaryCars|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions
-- // Try to swerve around everything, but stop for lights if necessary
-- DRIVINGMODE_AVOIDCARS_OBEYLIGHTS = 786597, // DF_SwerveAroundAllCars|DF_StopAtLights|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
-- // Swerve around cars, be careful around peds, and stop for lights
-- DRIVINGMODE_AVOIDCARS_STOPFORPEDS_OBEYLIGHTS = 786599 // DF_SwerveAroundAllCars|DF_StopAtLights|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
-- };
-- ```
-- @param ped The `Ped` Handle.
-- @param x The goto target coordinate.
-- @param y The goto target coordinate.
-- @param z The goto target coordinate.
-- @param fMoveBlendRatio 0.0 = still, 1.0 = walk, 2.0 = run, 3.0 = sprint.
-- @param vehicle If defined, the pedestrian will only move if said vehicle exists. If you don't want any sort of association, just set it to `0`.
-- @param bUseLongRangeVehiclePathing Setting to `true` tells the vehicle to use longrange vehicle pathing.
-- @param drivingFlags See `eDrivingMode` enum.
-- @param fMaxRangeToShootTargets Determines the maximum distance at which the `Ped` will engage in combat with threatening targets.
function Global.TaskGoToCoordAnyMeans(ped, x, y, z, fMoveBlendRatio, vehicle, bUseLongRangeVehiclePathing, drivingFlags, fMaxRangeToShootTargets)
	return _in(0x5BC448CB78FA3E88, ped, x, y, z, fMoveBlendRatio, vehicle, bUseLongRangeVehiclePathing, drivingFlags, fMaxRangeToShootTargets)
end

--- NativeDB Added Parameter 13: Any p12
function Global.TaskGoToCoordAnyMeansExtraParams(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)
	return _in(0x1DD45F9ECFDB1BC9, ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)
end

--- NativeDB Added Parameter 14: Any p13
function Global.TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)
	return _in(0xB8ECD61F531A7B02, ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)
end

--- Will make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates.
-- @param ped Ped to task
-- @param x Destination X position
-- @param y Destination Y position
-- @param z Destination Z position
-- @param aimAtX Aim at target x position
-- @param aimAtY Aim at target Y position
-- @param aimAtZ Aim at target Z position
-- @param moveSpeed mostly 2f, but also 1/1.2f, etc.
-- @param shoot If true ped will shoot; false - will not
-- @param p9 Usually 2.0f
-- @param p10 Usually 0.5f
-- @param p11 If true ped will stay still; false - will not
-- @param flags 0 / 512 / 513, etc
-- @param firingPattern ${firing_pattern_full_auto}, 0xC6EE6B4C
function Global.TaskGoToCoordWhileAimingAtCoord(ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, shoot, p9, p10, p11, flags, p13, firingPattern)
	return _in(0x11315AB3385B8AC0, ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, shoot, p9, p10, p11, flags, p13, _ch(firingPattern))
end

--- TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY
function Global.TaskGoToCoordWhileAimingAtEntity(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xB2A16444EAD9AE47, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
-- Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
-- Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
-- Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
function Global.TaskGoToEntity(entity, target, duration, distance, speed, p5, p6)
	return _in(0x6A071245EB0D1882, entity, target, duration, distance, speed, p5, p6)
end

--- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD
function Global.TaskGoToEntityWhileAimingAtCoord(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x04701832B739DCE5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end

--- shootatEntity:
-- If true, peds will shoot at Entity till it is dead.
-- If false, peds will just walk till they reach the entity and will cease shooting.
function Global.TaskGoToEntityWhileAimingAtEntity(ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, firingPattern)
	return _in(0x97465886D35210E9, ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, _ch(firingPattern))
end

--- eg
-- TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
-- ped = Ped you want to perform this task.
-- target = the Entity they should aim at.
-- distanceToStopAt = distance from the target, where the ped should stop to aim.
-- StartAimingDist = distance where the ped should start to aim.
function Global.TaskGotoEntityAiming(ped, target, distanceToStopAt, StartAimingDist)
	return _in(0xA9DA48FAB8A76C12, ped, target, distanceToStopAt, StartAimingDist)
end

--- TASK_GOTO_ENTITY_OFFSET
function Global.TaskGotoEntityOffset(ped, p1, p2, x, y, z, duration)
	return _in(0xE39B4FF4FDEBDE27, ped, p1, p2, x, y, z, duration)
end

--- TASK_GOTO_ENTITY_OFFSET_XY
function Global.TaskGotoEntityOffsetXy(ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)
	return _in(0x338E7EF52B6095A9, ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)
end

--- TASK_GUARD_ASSIGNED_DEFENSIVE_AREA
function Global.TaskGuardAssignedDefensiveArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xD2A207EEBDF9889B, p0, p1, p2, p3, p4, p5, p6)
end

--- From re_prisonvanbreak:
-- TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
function Global.TaskGuardCurrentPosition(p0, p1, p2, p3)
	return _in(0x4A58A47A72E3FCB4, p0, p1, p2, p3)
end

--- p0 - Guessing PedID
-- p1, p2, p3 - XYZ?
-- p4 - ???
-- p5 - Maybe the size of sphere from XYZ?
-- p6 - ???
-- p7, p8, p9 - XYZ again?
-- p10 - Maybe the size of sphere from second XYZ?
function Global.TaskGuardSphereDefensiveArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0xC946FE14BE0EB5E2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- In the scripts, p3 was always -1.
-- p3 seems to be duration or timeout of turn animation.
-- Also facingPed can be 0 or -1 so ped will just raise hands up.
function Global.TaskHandsUp(ped, duration, facingPed, p3, p4)
	return _in(0xF2EAB31979A7F910, ped, duration, facingPed, p3, p4)
end

--- Ped pilot should be in a heli.
-- EntityToFollow can be a vehicle or Ped.
-- x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
-- NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
function Global.TaskHeliChase(pilot, entityToFollow, x, y, z)
	return _in(0xAC83B1DB38D0ADA0, pilot, entityToFollow, x, y, z)
end

--- NativeDB Introduced: v1290
function Global.TaskHeliEscortHeli(pilot, heli1, heli2, p3, p4, p5)
	return _in(0xB385523325077210, pilot, heli1, heli2, p3, p4, p5)
end

--- Needs more research.
-- Default value of p13 is -1.0 or 0xBF800000.
-- Default value of p14 is 0.
-- Modified examples from "fm_mission_controller.ysc", line ~203551:
-- TASK::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 10, 10, 5.0, 0);
-- TASK::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 0, ?, 5.0, 4096);
-- int mode seams to set mission type 4 = coords target, 23 = ped target.
-- int 14 set to 32 = ped will land at destination.
-- My findings:
-- mode 4 or 7 forces heli to snap to the heading set
-- 8 makes the heli flee from the ped.
-- 9 circles around ped with angle set
-- 10, 11 normal + imitate ped heading
-- 20 makes the heli land when he's near the ped. It won't resume chasing.
-- 21 emulates an helicopter crash
-- 23 makes the heli circle erratically around ped
-- I change p2 to 'vehicleToFollow' as it seems to work like the task natives to set targets. In the heli_taxi script where as the merryweather heli takes you to your waypoint it has no need to follow a vehicle or a ped, so of course both have 0 set.
function Global.TaskHeliMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, landingRadius, targetHeading, unk1, unk2, unk3, landingFlags)
	return _in(0xDAD029E187A2BEB4, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, landingRadius, targetHeading, unk1, unk2, unk3, landingFlags)
end

--- Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
-- v350: Ped ped, bool unused
-- v678: Ped ped, bool unused, bool flag1, bool flag2
-- flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
function Global.TaskJump(ped, unused)
	return _in(0x0AE4086104E067B1, ped, unused)
end

--- Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#\_0xD3DBCE61A490BE02)
function Global.TaskLeaveAnyVehicle(ped, p1, flags)
	return _in(0x504D54DF3F6F2247, ped, p1, flags)
end

--- Flags from decompiled scripts:
-- 0 = normal exit and closes door.
-- 1 = normal exit and closes door.
-- 16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)
-- 64 = normal exit and closes door, maybe a bit slower animation than 0.
-- 256 = normal exit but does not close the door.
-- 4160 = ped is throwing himself out, even when the vehicle is still.
-- 262144 = ped moves to passenger seat first, then exits normally
-- Others to be tried out: 320, 512, 131072.
function Global.TaskLeaveVehicle(ped, vehicle, flags)
	return _in(0xD3DBCE61A490BE02, ped, vehicle, flags)
end

--- TASK_LOOK_AT_COORD
function Global.TaskLookAtCoord(entity, x, y, z, duration, p5, p6)
	return _in(0x6FA46612594F7973, entity, x, y, z, duration, p5, p6)
end

--- param3: duration in ms, use -1 to look forever
-- param4: using 2048 is fine
-- param5: using 3 is fine
function Global.TaskLookAtEntity(ped, lookAt, duration, unknown1, unknown2)
	return _in(0x69F4BE8C8CC4796C, ped, lookAt, duration, unknown1, unknown2)
end

--- Example:
-- TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
function Global.TaskMoveNetworkAdvancedByName(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, animDict, flags)
	return _in(0xD5B35BEA41919ACB, ped, _ts(p1), p2, p3, p4, p5, p6, p7, p8, p9, p10, _ts(animDict), flags)
end
Global.N_0xd5b35bea41919acb = Global.TaskMoveNetworkAdvancedByName
Global.TaskMoveNetworkAdvanced = Global.TaskMoveNetworkAdvancedByName

--- Example:
-- TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
function Global.TaskMoveNetworkByName(ped, task, multiplier, p3, animDict, flags)
	return _in(0x2D537BA194896636, ped, _ts(task), multiplier, p3, _ts(animDict), flags)
end
Global.N_0x2d537ba194896636 = Global.TaskMoveNetworkByName
Global.TaskMoveNetwork = Global.TaskMoveNetworkByName

--- Used only once in the scripts (am_mp_nightclub)
-- ```
-- ```
-- Used only once in the scripts (am_mp_nightclub)
-- NativeDB Introduced: v1493
function Global.TaskMoveNetworkByNameWithInitParams(ped, p1, p3, p4, animDict, flags)
	return _in(0x3D45B0B355C5E0C9, ped, _ts(p1), _i, p3, p4, _ts(animDict), flags)
end
Global.TaskMoveNetworkScripted = Global.TaskMoveNetworkByNameWithInitParams

--- The given ped will try to open the nearest door to 'seat'.
-- Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
-- @param ped The ped to do the task
-- @param vehicle The vehicle whose doors the ped shoud open
-- @param timeOut Sets a timeout to the task; doesn't work for 0
-- @param seat The seat index - the ped will attempt to open doors to get to the specified seat
function Global.TaskOpenVehicleDoor(ped, vehicle, timeOut, seat, speed)
	return _in(0x965791A9A488A062, ped, vehicle, timeOut, seat, speed)
end

--- This function has a third parameter as well (bool).
-- Second parameter is unused.
-- seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL p2
function Global.TaskParachute(ped, p1)
	return _in(0xD2F1C53C97EE81AB, ped, p1)
end

--- makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED
function Global.TaskParachuteToTarget(ped, x, y, z)
	return _in(0xB33E291AFA6BD03A, ped, x, y, z)
end

--- After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
-- "miss_Tower_01" (this went from 01 - 10)
-- "miss_Ass0" (0, 4, 6, 3)
-- "MISS_PATROL_8"
-- I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
-- As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
-- From the scripts
-- TASK::OPEN_PATROL_ROUTE("miss_Ass0");
-- TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- TASK::ADD_PATROL_ROUTE_LINK(0, 1);
-- TASK::ADD_PATROL_ROUTE_LINK(1, 2);
-- TASK::ADD_PATROL_ROUTE_LINK(2, 0);
-- TASK::CLOSE_PATROL_ROUTE();
-- TASK::CREATE_PATROL_ROUTE();
function Global.TaskPatrol(ped, p1, p2, p3, p4)
	return _in(0xBDA5DF49D080FE4E, ped, _ts(p1), p2, p3, p4)
end

--- This tasks the ped to do nothing for the specified amount of miliseconds.
-- This is useful if you want to add a delay between tasks when using a sequence task.
-- @param ped The ped to pause. Set to this 0 when using task sequences.
-- @param ms The amount of miliseconds to wait.
function Global.TaskPause(ped, ms)
	return _in(0xE73A266DB0CA9042, ped, ms)
end

--- TASK_PED_SLIDE_TO_COORD
function Global.TaskPedSlideToCoord(ped, x, y, z, heading, duration)
	return _in(0xD04FE6765D990A06, ped, x, y, z, heading, duration)
end

--- TASK_PED_SLIDE_TO_COORD_HDG_RATE
function Global.TaskPedSlideToCoordHdgRate(ped, x, y, z, heading, p5, p6)
	return _in(0x5A4A6A6D3DC64F52, ped, x, y, z, heading, p5, p6)
end

--- TASK_PERFORM_SEQUENCE
function Global.TaskPerformSequence(ped, taskSequenceId)
	return _in(0x5ABA3986D90D8A3B, ped, taskSequenceId)
end

--- TASK_PERFORM_SEQUENCE_FROM_PROGRESS
function Global.TaskPerformSequenceFromProgress(p0, p1, p2, p3)
	return _in(0x89221B16730234F0, p0, p1, p2, p3)
end

--- _TASK_PERFORM_SEQUENCE_LOCALLY
function Global.TaskPerformSequenceLocally(ped, taskSequenceId)
	return _in(0x8C33220C8D78CA0D, ped, taskSequenceId)
end
Global.N_0x8c33220c8d78ca0d = Global.TaskPerformSequenceLocally

--- TASK_PLANE_CHASE
function Global.TaskPlaneChase(pilot, entityToFollow, x, y, z)
	return _in(0x2D2386F273FF7A25, pilot, entityToFollow, x, y, z)
end

--- NativeDB Introduced: v1290
function Global.TaskPlaneGotoPreciseVtol(ped, vehicle, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xF7F9DCCA89E7505B, ped, vehicle, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- TASK_PLANE_LAND
function Global.TaskPlaneLand(pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
	return _in(0xBF19721FA34D32C0, pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
end

--- EDITED (7/13/2017)
-- NOTE: If you want air combat, AI::TASK_COMBAT_PED (while your pilot is in an aircraft) also does the same thing as this native.
-- DESCRIPTION:
-- Ever wish your buddy could shoot down one of your enemies for you? Ever wanted an auto-pilot? Well look no further! This is the native for you! (Ped intelligence may vary)
-- USAGE:
-- -- REQUIRED --
-- • pilot = The ped flying the aircraft.
-- • aircraft = The aircraft the pilot is flying
-- -- OPTIONAL -- [atleast 1 must be assigned]
-- • targetVehicle = The vehicle the pilot will target.
-- • targetPed = The ped the pilot will target.
-- • destinationX, destinationY, destinationZ = The location the pilot will target.
-- -- LOGIC --
-- • missionFlag = The type of mission. pastebin.com/R8x73dbv
-- • angularDrag = The higher the value, the slower the plane will rotate. Value ranges from 0 - Infinity.
-- • unk = Set to 0, and you'll be fine.
-- • targetHeading = The target angle (from world space north) that the pilot will try to acheive before executing an attack/landing.
-- • maxZ = Maximum Z coordinate height for flying.
-- • minZ = Minimum Z coordinate height for flying.
-- Z: 2,700 is the default max height a pilot will be able to fly. Anything greater and he will fly downward until reaching 2,700 again.
-- Mission Types (incase you don't like links..):
-- 0 = None
-- 1 = Unk
-- 2 = CTaskVehicleRam
-- 3 = CTaskVehicleBlock
-- 4 = CTaskVehicleGoToPlane
-- 5 = CTaskVehicleStop
-- 6 = CTaskVehicleAttack
-- 7 = CTaskVehicleFollow
-- 8 = CTaskVehicleFleeAirborne
-- 9 = CTaskVehicleCircle
-- 10 = CTaskVehicleEscort
-- 15 = CTaskVehicleFollowRecording
-- 16 = CTaskVehiclePoliceBehaviour
-- 17 = CTaskVehicleCrash
-- Example C#:
-- Function.Call(Hash.TASK_PLANE_MISSION, pilot, vehicle, 0, Game.Player.Character, 0, 0, 0, 6, 0f, 0f, 0f, 2500.0f, -1500f);
-- Example C++
-- AI::TASK_PLANE_MISSION(pilot, vehicle, 0, PLAYER::GET_PLAYER_PED(PLAYER::GET_PLAYER_INDEX()), 0, 0, 0, 6, 0.0, 0.0, 0.0, 2500.0, -1500.0);
-- [DEPRECATED] EXAMPLE USAGE:
-- pastebin.com/gx7Finsk
-- ```
-- ```
-- NativeDB Added Parameter 14: Any p13
function Global.TaskPlaneMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)
	return _in(0x23703CD154E83B88, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)
end

--- The given ped will try to drive the plane to the given coordinates and will then drive around the given coords (the plane will form 8s on the ground)
-- @param pilot The ped driving the plane.
-- @param aircraft The plane used.
-- @param xPos The X coordinate.
-- @param yPos The Y coordinate.
-- @param zPos The Z coordinate.
-- @param fCruiseSpeed The speed of the plane (in m/s).
-- @param fTargetReachedDist Distance (in meters) at which the plane thinks it has arrived to the given coordinates.
function Global.TaskPlaneTaxi(pilot, aircraft, xPos, yPos, zPos, fCruiseSpeed, fTargetReachedDist)
	return _in(0x92C360B5F15D2302, pilot, aircraft, xPos, yPos, zPos, fCruiseSpeed, fTargetReachedDist)
end
Global.N_0x92c360b5f15d2302 = Global.TaskPlaneTaxi
Global.TaskPlaneTaxi = Global.TaskPlaneTaxi

--- TASK_PLANT_BOMB
function Global.TaskPlantBomb(ped, x, y, z, heading)
	return _in(0x965FEC691D55E9BF, ped, x, y, z, heading)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
-- ```
-- float blendInSpeed > normal speed is 8.0f
-- ----------------------
-- float blendOutSpeed > normal speed is 8.0f
-- ----------------------
-- int duration: time in millisecond
-- ----------------------
-- -1 _ _ _ _ _ _ _> Default (see flag)
-- 0 _ _ _ _ _ _ _ > Not play at all
-- Small value _ _ > Slow down animation speed
-- Other _ _ _ _ _ > freeze player control until specific time (ms) has
-- _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
-- _ _ _ _ _ _ _ _ _ controllable.)
-- int flag:
-- ----------------------
-- enum eAnimationFlags
-- {
-- ANIM_FLAG_NORMAL = 0,
-- ANIM_FLAG_REPEAT = 1,
-- ANIM_FLAG_STOP_LAST_FRAME = 2,
-- ANIM_FLAG_UPPERBODY = 16,
-- ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
-- ANIM_FLAG_CANCELABLE = 120,
-- };
-- Odd number : loop infinitely
-- Even number : Freeze at last frame
-- Multiple of 4: Freeze at last frame but controllable
-- 01 to 15 > Full body
-- 10 to 31 > Upper body
-- 32 to 47 > Full body > Controllable
-- 48 to 63 > Upper body > Controllable
-- ...
-- 001 to 255 > Normal
-- 256 to 511 > Garbled
-- ...
-- playbackRate:
-- values are between 0.0 and 1.0
-- lockX:
-- 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
-- > 1 for mini@sprunk
-- lockY:
-- 0 in most cases
-- 1 for missfam5_yoga, missfra1mcs_2_crew_react
-- lockZ:
-- 0 for single player
-- Can be 1 but only for MP
-- ```
function Global.TaskPlayAnim(ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
	return _in(0xEA47FE3719165B94, ped, _ts(animDictionary), _ts(animationName), blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
end

--- It's similar to the one above, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped The target ped
-- @param animDict Name of the animation dictionary
-- @param animName Name of the animation
-- @param posX Initial X position of the task
-- @param posY Initial Y position of the task
-- @param posZ Initial Z position of the task
-- @param rotX Initial X rotation of the task, doesn't seem to have any effect
-- @param rotY Initial Y rotation of the task, doesn't seem to have any effect
-- @param rotZ Initial Z rotation of the task
-- @param animEnterSpeed Adjust character speed to fully enter animation
-- @param animExitSpeed Adjust character speed to fully exit animation (useless `ClearPedTasksImmediately()` is called)
-- @param duration Time in milliseconds
-- @param animTime Value between 0.0 and 1.0, lets you start an animation from the given point
function Global.TaskPlayAnimAdvanced(ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, p14, p15)
	return _in(0x83CDB10EA29B370B, ped, _ts(animDict), _ts(animName), posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, p14, p15)
end

--- Example from the scripts:
-- TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
-- =========================================================
-- ^^ No offense, but Idk how that would really help anyone.
-- As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
-- Known boneMaskTypes'
-- "BONEMASK_HEADONLY"
-- "BONEMASK_HEAD_NECK_AND_ARMS"
-- "BONEMASK_HEAD_NECK_AND_L_ARM"
-- "BONEMASK_HEAD_NECK_AND_R_ARM"
-- p4 known args - 0.0f, 0.5f, 0.25f
-- p5 known args - 0.0f, 0.25f
-- p6 known args - 1 if a global if check is passed.
-- p7 known args - 1 if a global if check is passed.
-- The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
-- =========================================================
function Global.TaskPlayPhoneGestureAnimation(ped, animDict, animation, boneMaskType, p4, p5, p6, p7)
	return _in(0x8FBB6758B3B3E9EC, ped, _ts(animDict), _ts(animation), _ts(boneMaskType), p4, p5, p6, p7)
end

--- TASK_PUT_PED_DIRECTLY_INTO_COVER
function Global.TaskPutPedDirectlyIntoCover(ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)
	return _in(0x4172393E6BE1FECE, ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)
end

--- from armenian3.c4
-- TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
function Global.TaskPutPedDirectlyIntoMelee(ped, meleeTarget, p2, p3, p4, p5)
	return _in(0x1C6CD14A876FFE39, ped, meleeTarget, p2, p3, p4, p5)
end

--- Attaches a ped to a rope and allows player control to rappel down a wall.
-- Disables all collisions while on the rope.
-- NativeDB Introduced: v1868
-- @param ped Ped to perform the task
-- @param x1 X coord to start the task
-- @param y1 Y coord to start the task
-- @param z1 Z coord to start the task
-- @param x2 Second X coord, uses the same position as above in the scripts
-- @param y2 Second Y coord
-- @param z2 Second Z coord
-- @param minZ Minimum Z that the player can descend to
-- @param ropeId Rope to attach this task to, must be created with [ADD_ROPE](#\_0xE832D760399EB220)
-- @param clipset Clipset to use for the task
-- @param p10 Usually 1 in the scripts
function Global.TaskRappelDownWall(ped, x1, y1, z1, x2, y2, z2, minZ, ropeId, clipset, p10)
	return _in(0xEAF66ACDDC794793, ped, x1, y1, z1, x2, y2, z2, minZ, ropeId, _ts(clipset), p10)
end
Global.N_0xeaf66acddc794793 = Global.TaskRappelDownWall

--- Only appears twice in the scripts.
-- TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
-- TASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
function Global.TaskRappelFromHeli(ped, unused)
	return _in(0x09693B0312F91649, ped, unused)
end

--- TASK_REACT_AND_FLEE_PED
function Global.TaskReactAndFleePed(ped, fleeTarget)
	return _in(0x72C896464915D1B1, ped, fleeTarget)
end

--- The 2nd param (unused) is not implemented.
-- -----------------------------------------------------------------------
-- The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
-- if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {
-- TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
-- }
function Global.TaskReloadWeapon(ped, unused)
	return _in(0x62D2916F56B9CD2D, ped, unused)
end

--- From fm_mission_controller.c:
-- reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
-- vVar28 = {0.094f, 0.02f, -0.005f};
-- vVar29 = {-92.24f, 63.64f, 150.24f};
-- func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
-- set_entity_lod_dist(net_to_ent(uVar30), 500);
-- attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
-- Var31.imm_4 = 1065353216;
-- Var31.imm_5 = 1065353216;
-- Var31.imm_9 = 1065353216;
-- Var31.imm_10 = 1065353216;
-- Var31.imm_14 = 1065353216;
-- Var31.imm_15 = 1065353216;
-- Var31.imm_17 = 1040187392;
-- Var31.imm_18 = 1040187392;
-- Var31.imm_19 = -1;
-- Var32.imm_4 = 1065353216;
-- Var32.imm_5 = 1065353216;
-- Var32.imm_9 = 1065353216;
-- Var32.imm_10 = 1065353216;
-- Var32.imm_14 = 1065353216;
-- Var32.imm_15 = 1065353216;
-- Var32.imm_17 = 1040187392;
-- Var32.imm_18 = 1040187392;
-- Var32.imm_19 = -1;
-- Var31 = 1;
-- Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
-- Var31.imm_2 = "idle";
-- Var31.imm_20 = 1048633;
-- Var31.imm_4 = 0.5f;
-- Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
-- task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
-- set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
-- remove_anim_dict("anim@heists@biolab@");
function Global.TaskScriptedAnimation(ped, p4, p5)
	return _in(0x126EF75F1E17ABE5, ped, _i, _i, _i, p4, p5)
end

--- TASK_SEEK_COVER_FROM_PED
function Global.TaskSeekCoverFromPed(ped, target, duration, p3)
	return _in(0x84D32B3BEC531324, ped, target, duration, p3)
end

--- TASK_SEEK_COVER_FROM_POS
function Global.TaskSeekCoverFromPos(ped, x, y, z, duration, p5)
	return _in(0x75AC2B60386D89F2, ped, x, y, z, duration, p5)
end

--- from michael2:
-- TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
-- appears to be shorter variation
-- from michael3:
-- TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
function Global.TaskSeekCoverToCoords(ped, x1, y1, z1, x2, y2, z2, p7, p8)
	return _in(0x39246A6958EF072C, ped, x1, y1, z1, x2, y2, z2, p7, p8)
end

--- TASK_SEEK_COVER_TO_COVER_POINT
function Global.TaskSeekCoverToCoverPoint(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xD43D95C7A869447F, p0, p1, p2, p3, p4, p5, p6)
end

--- I cant believe I have to define this, this is one of the best natives.
-- It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
-- Since it is a task, every time the native is called the ped will stop for a moment.
function Global.TaskSetBlockingOfNonTemporaryEvents(ped, toggle)
	return _in(0x90D2156198831D69, ped, toggle)
end

--- p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
function Global.TaskSetDecisionMaker(ped, p1)
	return _in(0xEB8517DDA73720DA, ped, _ch(p1))
end

--- TASK_SET_SPHERE_DEFENSIVE_AREA
function Global.TaskSetSphereDefensiveArea(p0, p1, p2, p3, p4)
	return _in(0x933C06518B52A9A4, p0, p1, p2, p3, p4)
end

--- TASK_SHOCKING_EVENT_REACT
function Global.TaskShockingEventReact(ped, eventHandle)
	return _in(0x452419CBD838065B, ped, eventHandle)
end

--- Firing Pattern Hash Information: https://pastebin.com/Px036isB
function Global.TaskShootAtCoord(ped, x, y, z, duration, firingPattern)
	return _in(0x46A6CC01E0826106, ped, x, y, z, duration, _ch(firingPattern))
end

--- //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
-- Entity aimedentity;
-- Player player = PLAYER::PLAYER_ID();
-- PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);
-- //bg is an array of peds
-- TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
-- in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
-- Firing Pattern Hash Information: https://pastebin.com/Px036isB
function Global.TaskShootAtEntity(entity, target, duration, firingPattern)
	return _in(0x08DA95E8298AE772, entity, target, duration, _ch(firingPattern))
end

--- Makes the specified ped shuffle to the next vehicle seat.
-- The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.TaskShuffleToNextVehicleSeat(ped, vehicle)
	return _in(0x7AA80209BDA643EB, ped, vehicle)
end

--- NativeDB Added Parameter 2: BOOL p1
function Global.TaskSkyDive(ped)
	return _in(0x601736CFE536B0A0, ped)
end

--- Makes the specified ped flee the specified distance from the specified position.
function Global.TaskSmartFleeCoord(ped, x, y, z, distance, time, p6, p7)
	return _in(0x94587F17E9C365D5, ped, x, y, z, distance, time, p6, p7)
end

--- Makes a ped run away from another ped (fleeTarget).
-- distance = ped will flee this distance.
-- fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
function Global.TaskSmartFleePed(ped, fleeTarget, distance, fleeTime, p4, p5)
	return _in(0x22B0D0E37CCB840D, ped, fleeTarget, distance, fleeTime, p4, p5)
end

--- scenarioName example: "WORLD_HUMAN_GUARD_STAND"
function Global.TaskStandGuard(ped, x, y, z, heading, scenarioName)
	return _in(0xAE032F8BBA959E90, ped, x, y, z, heading, _ts(scenarioName))
end

--- Makes the specified ped stand still for (time) milliseconds.
function Global.TaskStandStill(ped, time)
	return _in(0x919BE13EED931959, ped, time)
end

--- Also a few more listed at TASK::TASK_START_SCENARIO_IN_PLACE just above.
-- ---------------
-- The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario.
-- The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
-- I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.
-- I have no idea what the last 3 parameters are, but I'll try to find out.
-- -going on the last 3 parameters, they appear to always be "0, 0, 1"
-- p6 -1 also used in scrips
-- p7 used for sitting scenarios
-- p8 teleports ped to position
function Global.TaskStartScenarioAtPosition(ped, scenarioName, x, y, z, heading, duration, sittingScenario, teleport)
	return _in(0xFA4EFC79F69D4F07, ped, _ts(scenarioName), x, y, z, heading, duration, sittingScenario, teleport)
end

--- Plays a scenario on a Ped at their current location.
-- unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
-- playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.
-- List of scenarioNames: pastebin.com/6mrYTdQv
-- Also these:
-- WORLD_FISH_FLEE
-- DRIVE
-- WORLD_HUMAN_HIKER
-- WORLD_VEHICLE_ATTRACTOR
-- WORLD_VEHICLE_BICYCLE_MOUNTAIN
-- WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
-- WORLD_VEHICLE_BIKER
-- WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
-- WORLD_VEHICLE_CONSTRUCTION_SOLO
-- WORLD_VEHICLE_DRIVE_PASSENGERS
-- WORLD_VEHICLE_DRIVE_SOLO
-- WORLD_VEHICLE_EMPTY
-- WORLD_VEHICLE_PARK_PARALLEL
-- WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
-- WORLD_VEHICLE_POLICE_BIKE
-- WORLD_VEHICLE_POLICE_CAR
-- WORLD_VEHICLE_POLICE_NEXT_TO_CAR
-- WORLD_VEHICLE_SALTON_DIRT_BIKE
-- WORLD_VEHICLE_TRUCK_LOGS
function Global.TaskStartScenarioInPlace(ped, scenarioName, unkDelay, playEnterAnim)
	return _in(0x142A02425FF02BD9, ped, _ts(scenarioName), unkDelay, playEnterAnim)
end

--- Makes the ped run to take cover
function Global.TaskStayInCover(ped)
	return _in(0xE5DA8615A6180789, ped)
end

--- Stealth kill action name hashes:
-- stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta
-- ...
-- {
-- "ACT_stealth_kill_a",
-- "ACT_stealth_kill_weapon",
-- "ACT_stealth_kill_b",
-- "ACT_stealth_kill_c",
-- "ACT_stealth_kill_d",
-- "ACT_stealth_kill_a_gardener"
-- }
-- Only known script using this native: fbi4_prep2
-- EXAMPLE:
-- ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);
-- Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target
function Global.TaskStealthKill(killer, target, actionType, p3, p4)
	return _in(0xAA5DC05579D60BD9, killer, target, _ch(actionType), p3, p4)
end

--- NativeDB Added Parameter 2: Any p1
function Global.TaskStopPhoneGestureAnimation(ped)
	return _in(0x3FA00D4F4641BFAE, ped)
end
Global.TaskStopPhoneGestureAnimation = Global.TaskStopPhoneGestureAnimation

--- Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
-- p0 is always 0, p5 is always 1
-- p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
-- Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
-- ```
-- NativeDB Introduced: v2189
-- ```
function Global.TaskSubmarineGotoAndStop(p0, submarine, x, y, z, p5)
	return _in(0xC22B40579A498CA4, p0, submarine, x, y, z, p5)
end

--- TASK_SWAP_WEAPON
function Global.TaskSwapWeapon(ped, p1)
	return _in(0xA21C51255B205245, ped, p1)
end

--- This function is called on peds in vehicles.
-- anim: animation name
-- p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
-- p5: no idea what it does but is usually -1
function Global.TaskSweepAimEntity(ped, anim, p2, p3, p4, p5, vehicle, p7, p8)
	return _in(0x2047C02158D6405A, ped, _ts(anim), _ts(p2), _ts(p3), _ts(p4), p5, vehicle, p7, p8)
end

--- TASK_SWEEP_AIM_POSITION
function Global.TaskSweepAimPosition(p0, p5, p6, p7, p8, p9, p10)
	return _in(0x7AFE8FDC10BC07D2, p0, _i, _i, _i, _i, p5, p6, p7, p8, p9, p10)
end

--- TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);
function Global.TaskSynchronizedScene(ped, scene, animDictionary, animationName, speed, speedMultiplier, duration, flag, playbackRate, p9)
	return _in(0xEEA929141F699854, ped, scene, _ts(animDictionary), _ts(animationName), speed, speedMultiplier, duration, flag, playbackRate, p9)
end

--- In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
-- The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
-- ---
-- It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
-- It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
-- ----------------------------------------------------
-- The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
-- ```
-- ```
-- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.TaskThrowProjectile(ped, x, y, z)
	return _in(0x7285951DBF6B5A51, ped, x, y, z)
end

--- used in sequence task
-- both parameters seems to be always 0
function Global.TaskToggleDuck(p0, p1)
	return _in(0xAC96609B9995EDF8, p0, p1)
end

--- duration in milliseconds
function Global.TaskTurnPedToFaceCoord(ped, x, y, z, duration)
	return _in(0x1DDA930A0AC38571, ped, x, y, z, duration)
end

--- duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
function Global.TaskTurnPedToFaceEntity(ped, entity, duration)
	return _in(0x5AD23D40115353AC, ped, entity, duration)
end

--- Actually has 3 params, not 2.
-- p0: Ped
-- p1: int (or bool?)
-- p2: int
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.TaskUseMobilePhone(ped, p1)
	return _in(0xBD2A8EC3AF4DE7DB, ped, p1)
end

--- TASK_USE_MOBILE_PHONE_TIMED
function Global.TaskUseMobilePhoneTimed(ped, duration)
	return _in(0x5EE02954A14C69DB, ped, duration)
end

--- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD
function Global.TaskUseNearestScenarioChainToCoord(p0, p1, p2, p3, p4, p5)
	return _in(0x9FDA1B3D7E7028B3, p0, p1, p2, p3, p4, p5)
end

--- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP
function Global.TaskUseNearestScenarioChainToCoordWarp(p0, p1, p2, p3, p4, p5)
	return _in(0x97A28E63F0BA5631, p0, p1, p2, p3, p4, p5)
end

--- Updated variables
-- An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
function Global.TaskUseNearestScenarioToCoord(ped, x, y, z, distance, duration)
	return _in(0x277F471BA9DB000B, ped, x, y, z, distance, duration)
end

--- TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP
function Global.TaskUseNearestScenarioToCoordWarp(ped, x, y, z, radius, p5)
	return _in(0x58E2E0F23F6B76C3, ped, x, y, z, radius, p5)
end

--- TASK_VEHICLE_AIM_AT_COORD
function Global.TaskVehicleAimAtCoord(ped, x, y, z)
	return _in(0x447C1E9EF844BC0F, ped, x, y, z)
end

--- TASK_VEHICLE_AIM_AT_PED
function Global.TaskVehicleAimAtPed(ped, target)
	return _in(0xE41885592B08B097, ped, target)
end

--- chases targetEnt fast and aggressively
-- --
-- Makes ped (needs to be in vehicle) chase targetEnt.
function Global.TaskVehicleChase(driver, targetEnt)
	return _in(0x3C08A8E30363B353, driver, targetEnt)
end

--- info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
-- ---------------------------------------------------------------
-- Passing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.
-- P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.
-- Here the e.g. code I used
-- Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);
function Global.TaskVehicleDriveToCoord(ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, p10)
	return _in(0xE2A2AA2F659D77A7, ped, vehicle, x, y, z, speed, p6, _ch(vehicleModel), drivingMode, stopRange, p10)
end

--- You can let your character drive to the destination at the speed and driving style you set. You can use map marks to set the destination.
-- @param ped Ped id for the task.
-- @param vehicle Vehicle entity id for the task.
-- @param x Destination X coordinate.
-- @param y Destination Y coordinate.
-- @param z Destination Z coordinate.
-- @param speed Speed of driving.
-- @param driveMode More info can be found [here](https://vespura.com/fivem/drivingstyle/)
-- @param stopRange Stops in the specific range near the destination. 20.0 works fine.
function Global.TaskVehicleDriveToCoordLongrange(ped, vehicle, x, y, z, speed, driveMode, stopRange)
	return _in(0x158BB33F920D360C, ped, vehicle, x, y, z, speed, driveMode, stopRange)
end

--- Drive randomly with no destination set.
-- @param ped Ped id for the task.
-- @param vehicle Vehicle entity id for the task.
-- @param speed Speed of driving.
-- @param drivingStyle More info can be found [here](https://vespura.com/fivem/drivingstyle/)
function Global.TaskVehicleDriveWander(ped, vehicle, speed, drivingStyle)
	return _in(0x480142959D337D00, ped, vehicle, speed, drivingStyle)
end

--- Makes a ped follow the targetVehicle with <minDistance> in between.
-- note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
-- Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
-- -1 = behind
-- 0 = ahead
-- 1 = left
-- 2 = right
-- 3 = back left
-- 4 = back right
-- if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
-- Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
function Global.TaskVehicleEscort(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)
	return _in(0x0FA6E4B75F302400, ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)
end

--- Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
-- drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
function Global.TaskVehicleFollow(driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
	return _in(0xFC545A9F0626E3B6, driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
end
Global.TaskVehicleFollow = Global.TaskVehicleFollow

--- task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
-- p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
-- p3 = 786468
-- p4 = 0
-- p5 = 16
-- p6 = -1 (angle?)
-- p7/8/9 = usually v3.zero
-- p10 = bool (repeat?)
-- p11 = 1073741824
-- -khorio
function Global.TaskVehicleFollowWaypointRecording(ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x3123FAA6DB1CF7ED, ped, vehicle, _ts(WPRecording), p3, p4, p5, p6, p7, p8, p9)
end

--- Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
-- WARNING:
-- A behaviorFlag value of 0 will result in a clunky, stupid driver!
-- Recommended settings:
-- speed = 30.0f,
-- behaviorFlag = 156,
-- stoppingRange = 5.0f;
-- If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
-- If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
-- EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
function Global.TaskVehicleGotoNavmesh(ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
	return _in(0x195AEEB13CEFE2EE, ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
end

--- pilot, vehicle and altitude are rather self-explanatory.
-- p4: is unused variable in the function.
-- entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
-- 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
-- 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
-- NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
-- NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
function Global.TaskVehicleHeliProtect(pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)
	return _in(0x1E09C32048FEFD1C, pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)
end

--- missionType: https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
function Global.TaskVehicleMission(driver, vehicle, vehicleTarget, missionType, p4, p5, p6, p7, DriveAgainstTraffic)
	return _in(0x659427E0EF36BCDE, driver, vehicle, vehicleTarget, missionType, p4, p5, p6, p7, DriveAgainstTraffic)
end

--- See [`TASK_VEHICLE_MISSION`](#\_0x659427E0EF36BCDE).
function Global.TaskVehicleMissionCoorsTarget(ped, vehicle, x, y, z, p5, p6, p7, p8, p9, DriveAgainstTraffic)
	return _in(0xF0AF20AA7731F8C3, ped, vehicle, x, y, z, p5, p6, p7, p8, p9, DriveAgainstTraffic)
end

--- See [`TASK_VEHICLE_MISSION`](#\_0x659427E0EF36BCDE).
function Global.TaskVehicleMissionPedTarget(ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, p7, DriveAgainstTraffic)
	return _in(0x9454528DF15D657A, ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, p7, DriveAgainstTraffic)
end

--- Modes:
-- 0 - ignore heading
-- 1 - park forward
-- 2 - park backwards
-- Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
-- Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
function Global.TaskVehiclePark(ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
	return _in(0x0F3E34E968EA374E, ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
end

--- Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
-- Here's how its used -
-- TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");
-- TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");
-- FYI : Speedo is the name of van in which chop was put in the mission.
function Global.TaskVehiclePlayAnim(vehicle, animationSet, animationName)
	return _in(0x69F5C3BD0F3EBD89, vehicle, _ts(animationSet), _ts(animationName))
end

--- TASK_VEHICLE_SHOOT_AT_COORD
function Global.TaskVehicleShootAtCoord(ped, x, y, z, p4)
	return _in(0x5190796ED39C9B6D, ped, x, y, z, p4)
end

--- TASK_VEHICLE_SHOOT_AT_PED
function Global.TaskVehicleShootAtPed(ped, target, p2)
	return _in(0x10AB107B887214D8, ped, target, p2)
end

--- '1 - brake
-- '3 - brake + reverse
-- '4 - turn left 90 + braking
-- '5 - turn right 90 + braking
-- '6 - brake strong (handbrake?) until time ends
-- '7 - turn left + accelerate
-- '7 - turn right + accelerate
-- '9 - weak acceleration
-- '10 - turn left + restore wheel pos to center in the end
-- '11 - turn right + restore wheel pos to center in the end
-- '13 - turn left + go reverse
-- '14 - turn left + go reverse
-- '16 - crash the game after like 2 seconds :)
-- '17 - keep actual state, game crashed after few tries
-- '18 - game crash
-- '19 - strong brake + turn left/right
-- '20 - weak brake + turn left then turn right
-- '21 - weak brake + turn right then turn left
-- '22 - brake + reverse
-- '23 - accelerate fast
-- '24 - brake
-- '25 - brake turning left then when almost stopping it turns left more
-- '26 - brake turning right then when almost stopping it turns right more
-- '27 - brake until car stop or until time ends
-- '28 - brake + strong reverse acceleration
-- '30 - performs a burnout (brake until stop + brake and accelerate)
-- '31 - accelerate + handbrake
-- '32 - accelerate very strong
-- Seems to be this:
-- Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
function Global.TaskVehicleTempAction(driver, vehicle, action, time)
	return _in(0xC429DCEEB339E129, driver, vehicle, action, time)
end

--- Makes a ped wander/patrol around the specified area.
-- The ped will continue to wander after getting distracted, but only if this additional task is temporary, ie. killing a target, after killing the target it will continue to wander around.
-- Use `GetIsTaskActive(ped, 222)` to check if the ped is still wandering the area.
-- @param ped The ped which will wander the area.
-- @param x The X coordinate.
-- @param y The Y coordinate
-- @param z The Z coordinate
-- @param radius The radius of the area to wander around in
-- @param minimalLength The minimal length it will wander before waiting timeBetweenWalks seconds before continuing
-- @param timeBetweenWalks The length of time the ped will stand still/rest between walks
function Global.TaskWanderInArea(ped, x, y, z, radius, minimalLength, timeBetweenWalks)
	return _in(0xE054346CA3A0F315, ped, x, y, z, radius, minimalLength, timeBetweenWalks)
end

--- NativeDB Introduced: v1868
function Global.TaskWanderSpecific(p0, p1, p2, p3)
	return _in(0x6919A2F136426098, p0, p1, p2, p3)
end

--- Makes ped walk around the area.
-- set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
function Global.TaskWanderStandard(ped, p1, p2)
	return _in(0xBB9CE077274F6A1B, ped, p1, p2)
end

--- TASK_WARP_PED_INTO_VEHICLE
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function Global.TaskWarpPedIntoVehicle(ped, vehicle, seatIndex)
	return _in(0x9A7D091411C5F684, ped, vehicle, seatIndex)
end

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.TaskWrithe(ped, target, time, p3)
	return _in(0xCDDC2B77CE54AC6E, ped, target, time, p3)
end

--- For a full list, see [here](https://gist.github.com/4mmonium/f76f3ecef649ed275b260b433ea84494).
function Global.TerminateAllScriptsWithThisName(scriptName)
	return _in(0x9DC711BC69C548DF, _ts(scriptName))
end

--- TERMINATE_THIS_THREAD
function Global.TerminateThisThread()
	return _in(0x1090044AD1DA76FA)
end

--- TERMINATE_THREAD
function Global.TerminateThread(threadId)
	return _in(0xC8B189ED9138BCD4, threadId)
end

--- This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
-- This requires these two natives to be called as well to configure the grid: [`TERRAINGRID_SET_PARAMS`](#\_0x1C4FC5752BCD8E48) and [`TERRAINGRID_SET_COLOURS`](#\_0x5CE62918F8D703C7).
-- @param toggle Enables or disables the golf putting grid display.
function Global.TerraingridActivate(toggle)
	return _in(0xA356990E161C9E65, toggle)
end
Global.N_0xa356990e161c9e65 = Global.TerraingridActivate

--- This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#\_0xA356990E161C9E65) and [`TERRAINGRID_SET_PARAMS`](#\_0x1C4FC5752BCD8E48).
-- This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
-- All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
-- Old description:
-- Only called in golf and golf_mp\
-- parameters used are\
-- GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
-- @param lowR red value for the lower level
-- @param lowG green value for the lower level
-- @param lowB blue value for the lower level
-- @param lowAlpha alpha value for the lower level
-- @param R red value for the normal level
-- @param G green value for the normal level
-- @param B blue value for the normal level
-- @param Alpha alpha value for the normal level
-- @param highR red value for the upper level
-- @param highG green value for the upper level
-- @param highB blue value for the upper level
-- @param highAlpha alpha value for the upper level
function Global.TerraingridSetColours(lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)
	return _in(0x5CE62918F8D703C7, lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)
end
Global.N_0x5ce62918f8d703c7 = Global.TerraingridSetColours

--- This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#\_0xA356990E161C9E65) and [`TERRAINGRID_SET_COLOURS`](#\_0x5CE62918F8D703C7).
-- This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
-- All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
-- @param x Grid center x coord.
-- @param y Grid center y coord.
-- @param z Grid center z coord.
-- @param p3 Not sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.
-- @param rotation Grid rotation (keep between 0.0 and 1.0).
-- @param p5 Offset top/bottom (? not sure about this one, seems weird).
-- @param width Grid width (usually 15.0).
-- @param height Grid height (usually 15.0).
-- @param p8 Not sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.
-- @param scale Zoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).
-- @param glowIntensity glow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).
-- @param normalHeight The z coord for 'normal' height (white grid lines level).
-- @param heightDiff This is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).
function Global.TerraingridSetParams(x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)
	return _in(0x1C4FC5752BCD8E48, x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)
end
Global.N_0x1c4fc5752bcd8e48 = Global.TerraingridSetParams

--- Flags are identical to START_SHAPE_TEST\*, however, 128 is automatically set.
-- @param flag See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
function Global.TestProbeAgainstAllWater(x1, y1, z1, x2, y2, z2, flag, result)
	return _in(0x8974647ED222EA5F, x1, y1, z1, x2, y2, z2, flag, _v, _r)
end

--- TEST_PROBE_AGAINST_WATER
function Global.TestProbeAgainstWater(x1, y1, z1, x2, y2, z2, result)
	return _in(0xFFA5D878809819DB, x1, y1, z1, x2, y2, z2, _v, _r)
end

--- TEST_VERTICAL_PROBE_AGAINST_ALL_WATER
-- @param flag See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
function Global.TestVerticalProbeAgainstAllWater(x, y, z, flag, height)
	return _in(0x2B3451FA1E3142E2, x, y, z, flag, _fi(height) --[[ may be optional ]], _r)
end

--- TEXTURE_DOWNLOAD_GET_NAME
function Global.TextureDownloadGetName(p0)
	return _in(0x3448505B6E35262D, p0, _s)
end

--- TEXTURE_DOWNLOAD_HAS_FAILED
function Global.TextureDownloadHasFailed(p0)
	return _in(0x5776ED562C134687, p0, _r)
end
Global.N_0x5776ed562c134687 = Global.TextureDownloadHasFailed

--- TEXTURE_DOWNLOAD_RELEASE
function Global.TextureDownloadRelease(p0)
	return _in(0x487EB90B98E9FB19, p0)
end

--- TEXTURE_DOWNLOAD_REQUEST
function Global.TextureDownloadRequest(FilePath, Name, p3)
	return _in(0x16160DA74A8E74A2, _i, _ts(FilePath), _ts(Name), p3, _ri)
end

--- THEFEED_CLEAR_FROZEN_POST
function Global.ThefeedClearFrozenPost()
	return _in(0x80FE4F3AB4E1B62A)
end
Global.N_0x80fe4f3ab4e1b62a = Global.ThefeedClearFrozenPost
Global.ThefeedFlushPersistent = Global.ThefeedClearFrozenPost

--- Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
function Global.ThefeedCommentTeleportPoolOff()
	return _in(0xADED7F5748ACAFE6)
end
Global.N_0xaded7f5748acafe6 = Global.ThefeedCommentTeleportPoolOff
Global.ThefeedShowGtaoTooltips = Global.ThefeedCommentTeleportPoolOff

--- Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
function Global.ThefeedCommentTeleportPoolOn()
	return _in(0x56C8B608CFD49854)
end
Global.N_0x56c8b608cfd49854 = Global.ThefeedCommentTeleportPoolOn

--- Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
function Global.ThefeedDisableLoadingScreenTips()
	return _in(0x32888337579A5970)
end
Global.N_0x32888337579a5970 = Global.ThefeedDisableLoadingScreenTips
Global.ThefeedDisable = Global.ThefeedDisableLoadingScreenTips

--- Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
function Global.ThefeedDisplayLoadingScreenTips()
	return _in(0x15CFA549788D35EF)
end
Global.N_0x15cfa549788d35ef = Global.ThefeedDisplayLoadingScreenTips
Global.ThefeedEnable = Global.ThefeedDisplayLoadingScreenTips

--- THEFEED_FLUSH_QUEUE
function Global.ThefeedFlushQueue()
	return _in(0xA8FDB297A8D25FBA)
end
Global.N_0xa8fdb297a8d25fba = Global.ThefeedFlushQueue

--- Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
function Global.ThefeedForceRenderOff()
	return _in(0x583049884A2EEE3C)
end
Global.N_0x583049884a2eee3c = Global.ThefeedForceRenderOff
Global.ThefeedHideGtaoTooltips = Global.ThefeedForceRenderOff

--- THEFEED_FORCE_RENDER_ON
function Global.ThefeedForceRenderOn()
	return _in(0xA13C11E1B5C06BFC)
end
Global.N_0xa13c11e1b5c06bfc = Global.ThefeedForceRenderOn

--- Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
function Global.ThefeedFreezeNextPost()
	return _in(0xFDEC055AB549E328)
end
Global.N_0xfdec055ab549e328 = Global.ThefeedFreezeNextPost
Global.ThefeedSetNextPostPersistent = Global.ThefeedFreezeNextPost

--- Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
function Global.ThefeedGetFirstVisibleDeleteRemaining()
	return _in(0x82352748437638CA, _ri)
end
Global.N_0x82352748437638ca = Global.ThefeedGetFirstVisibleDeleteRemaining
Global.GetCurrentNotification = Global.ThefeedGetFirstVisibleDeleteRemaining
Global.ThefeedGetCurrentNotification = Global.ThefeedGetFirstVisibleDeleteRemaining

--- Once called each frame hides all above radar notifications.
function Global.ThefeedHideThisFrame()
	return _in(0x25F87B30C382FCA7)
end
Global.N_0x25f87b30c382fca7 = Global.ThefeedHideThisFrame
Global.HideHudNotificationsThisFrame = Global.ThefeedHideThisFrame

--- THEFEED_IS_PAUSED
function Global.ThefeedIsPaused()
	return _in(0xA9CBFD40B3FA3010, _r)
end
Global.N_0xa9cbfd40b3fa3010 = Global.ThefeedIsPaused

--- THEFEED_ONLY_SHOW_TOOLTIPS
function Global.ThefeedOnlyShowTooltips(toggle)
	return _in(0x6F1554B0CC2089FA, toggle)
end
Global.N_0x6f1554b0cc2089fa = Global.ThefeedOnlyShowTooltips

--- THEFEED_PAUSE
function Global.ThefeedPause()
	return _in(0xFDB423997FA30340)
end
Global.N_0xfdb423997fa30340 = Global.ThefeedPause

--- Removes a notification instantly instead of waiting for it to disappear
function Global.ThefeedRemoveItem(notificationId)
	return _in(0xBE4390CB40B3E627, notificationId)
end
Global.RemoveNotification = Global.ThefeedRemoveItem

--- THEFEED_RESET_ALL_PARAMETERS
function Global.ThefeedResetAllParameters()
	return _in(0xFDD85225B2DEA55E)
end
Global.N_0xfdd85225b2dea55e = Global.ThefeedResetAllParameters
Global.ThefeedClearAnimpostfx = Global.ThefeedResetAllParameters

--- THEFEED_RESUME
function Global.ThefeedResume()
	return _in(0xE1CD1E48E025E661)
end
Global.N_0xe1cd1e48e025e661 = Global.ThefeedResume

--- _THEFEED_SET_ANIMPOSTFX_COLOR
function Global.ThefeedSetAnimpostfxColor(red, green, blue, alpha)
	return _in(0x17430B918701C342, red, green, blue, alpha)
end
Global.N_0x17430b918701c342 = Global.ThefeedSetAnimpostfxColor
Global.SetNotificationFlashColor = Global.ThefeedSetAnimpostfxColor

--- Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
function Global.ThefeedSetAnimpostfxCount(count)
	return _in(0x17AD8C9706BDD88A, count)
end
Global.N_0x17ad8c9706bdd88a = Global.ThefeedSetAnimpostfxCount

--- Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
function Global.ThefeedSetAnimpostfxSound(toggle)
	return _in(0x4A0C7C9BB10ABB36, toggle)
end
Global.N_0x4a0c7c9bb10abb36 = Global.ThefeedSetAnimpostfxSound

--- If true, remove all feed components instantly. Otherwise tween/animate close each component
function Global.ThefeedSetFlushAnimpostfx(toggle)
	return _in(0xBAE4F9B97CD43B30, toggle)
end
Global.N_0xbae4f9b97cd43b30 = Global.ThefeedSetFlushAnimpostfx

--- From the decompiled scripts:
-- HUD::_92F0DA1E27DB96DC(6);
-- HUD::_92F0DA1E27DB96DC(184);
-- HUD::_92F0DA1E27DB96DC(190);
-- sets background color for the next notification
-- 6 = red
-- 184 = green
-- 190 = yellow
-- Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
function Global.ThefeedSetNextPostBackgroundColor(hudColorIndex)
	return _in(0x92F0DA1E27DB96DC, hudColorIndex)
end
Global.N_0x92f0da1e27db96dc = Global.ThefeedSetNextPostBackgroundColor
Global.SetNotificationBackgroundColor = Global.ThefeedSetNextPostBackgroundColor
Global.ThefeedNextPostBackgroundColor = Global.ThefeedSetNextPostBackgroundColor

--- THEFEED_SET_SCRIPTED_MENU_HEIGHT
function Global.ThefeedSetScriptedMenuHeight(pos)
	return _in(0x55598D21339CB998, pos)
end
Global.N_0x55598d21339cb998 = Global.ThefeedSetScriptedMenuHeight
Global.ClearNotificationsPos = Global.ThefeedSetScriptedMenuHeight

--- THEFEED_SPS_EXTEND_WIDESCREEN_OFF
function Global.ThefeedSpsExtendWidescreenOff()
	return _in(0xB695E2CD0A2DA9EE)
end
Global.N_0xb695e2cd0a2da9ee = Global.ThefeedSpsExtendWidescreenOff
Global.ThefeedDisableBaselineOffset = Global.ThefeedSpsExtendWidescreenOff

--- THEFEED_SPS_EXTEND_WIDESCREEN_ON
function Global.ThefeedSpsExtendWidescreenOn()
	return _in(0xD4438C0564490E63)
end
Global.N_0xd4438c0564490e63 = Global.ThefeedSpsExtendWidescreenOn
Global.ThefeedEnableBaselineOffset = Global.ThefeedSpsExtendWidescreenOn

--- Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
-- NativeDB Introduced: v323
function Global.ThefeedUpdateItemTexture(txdString1, txnString1, txdString2, txnString2)
	return _in(0x317EBA71D7543F52, _ts(txdString1), _ts(txnString1), _ts(txdString2), _ts(txnString2))
end
Global.N_0x317eba71d7543f52 = Global.ThefeedUpdateItemTexture
Global.ThefeedAddTxdRef = Global.ThefeedUpdateItemTexture

--- Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
function Global.Timera()
	return _in(0x83666F9FB8FEBD4B, _ri)
end

--- TIMERB
function Global.Timerb()
	return _in(0xC9D9444186B5A374, _ri)
end

--- Gets the current frame time.
function Global.Timestep()
	return _in(0x0000000050597EE2, _rf)
end

--- TITLE_TEXTURE_DOWNLOAD_REQUEST
function Global.TitleTextureDownloadRequest(FilePath, Name, p2)
	return _in(0x0B203B4AFDE53A4F, _ts(FilePath), _ts(Name), p2, _ri)
end
Global.N_0x0b203b4afde53a4f = Global.TitleTextureDownloadRequest

--- TO_FLOAT
function Global.ToFloat(value)
	return _in(0xBBDA792448DB5A89, value, _rf)
end

--- Switches the rendering display to exclude everything except PostFX, resulting in a frozen screen before the UI pass.
-- @param toggle Setting it to `false` will exclude render updates as mentioned in the description, until it's set back to `true`.
function Global.TogglePausedRenderphases(toggle)
	return _in(0xDFC252D8A3E15AB7, toggle)
end
Global.EnableGameplayCam = Global.TogglePausedRenderphases
Global.SetFrozenRenderingDisabled = Global.TogglePausedRenderphases

--- Enable/disable optional stunt camera.
-- ```
-- NativeDB Introduced: v757
-- ```
-- @param toggle Set to `true` to enable the optional stunt jump camera angles, or `false` to disable them and use the default camera view.
function Global.ToggleShowOptionalStuntJumpCamera(toggle)
	return _in(0xFB80AB299D2EE1BD, toggle)
end
Global.N_0xfb80ab299d2ee1bd = Global.ToggleShowOptionalStuntJumpCamera

--- TOGGLE_STEALTH_RADAR
function Global.ToggleStealthRadar(toggle)
	return _in(0x6AFDFB93754950C7, toggle)
end

--- Disabling/enabling a player from getting pickups. From the scripts:
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
-- SET_PLAYER_*
function Global.ToggleUsePickupsForPlayer(player, pickupHash, toggle)
	return _in(0x616093EC6B139DD9, player, _ch(pickupHash), toggle)
end
Global.N_0x616093ec6b139dd9 = Global.ToggleUsePickupsForPlayer

--- TOGGLE_VEHICLE_MOD
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function Global.ToggleVehicleMod(vehicle, modType, toggle)
	return _in(0x2A1F4F37F95BAD08, vehicle, modType, toggle)
end

--- TRACK_OBJECT_VISIBILITY
function Global.TrackObjectVisibility(object)
	return _in(0xB252BC036B525623, object)
end

--- in script hook .net
-- Vehicle v = ...;
-- Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
function Global.TrackVehicleVisibility(vehicle)
	return _in(0x64473AEFDCF47DCA, vehicle)
end

--- Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle A vehicle handle.
-- @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
function Global.TransformToCar(vehicle, instantly)
	return _in(0x2A69FFD1B42BFF9E, vehicle, instantly)
end
Global.N_0x2a69ffd1b42bff9e = Global.TransformToCar
Global.TransformStormbergToRoadVehicle = Global.TransformToCar
Global.TransformSubmarineToVehicle = Global.TransformToCar

--- Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle A vehicle handle.
-- @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
function Global.TransformToSubmarine(vehicle, instantly)
	return _in(0xBE4C854FFDB6EEBE, vehicle, instantly)
end
Global.N_0xbe4c854ffdb6eebe = Global.TransformToSubmarine
Global.TransformStormbergToWaterVehicle = Global.TransformToSubmarine
Global.TransformVehicleToSubmarine = Global.TransformToSubmarine

--- The backing function for TriggerEvent.
function Global.TriggerEventInternal(eventName, eventPayload, payloadLength)
	return _in(0x91310870, _ts(eventName), _ts(eventPayload), payloadLength)
end

--- The backing function for TriggerLatentServerEvent.
function Global.TriggerLatentServerEventInternal(eventName, eventPayload, payloadLength, bps)
	return _in(0x128737ea, _ts(eventName), _ts(eventPayload), payloadLength, bps)
end

--- List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W
-- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function Global.TriggerMusicEvent(eventName)
	return _in(0x706D57B0F50DA710, _ts(eventName), _r)
end

--- TRIGGER_SCREENBLUR_FADE_IN
-- @param transitionTime Time in milliseconds to transition into a fully blurred screen
function Global.TriggerScreenblurFadeIn(transitionTime)
	return _in(0xA328A24AAA6B7FDC, transitionTime, _r)
end
Global.TransitionToBlurred = Global.TriggerScreenblurFadeIn

--- TRIGGER_SCREENBLUR_FADE_OUT
function Global.TriggerScreenblurFadeOut(transitionTime)
	return _in(0xEFACC8AEF94430D5, transitionTime, _r)
end
Global.TransitionFromBlurred = Global.TriggerScreenblurFadeOut

--- p1 = 6
function Global.TriggerScriptCrcCheckOnPlayer(player, p1, scriptHash)
	return _in(0x46FB3ED415C7641C, player, p1, _ch(scriptHash), _r)
end
Global.N_0x46fb3ed415c7641c = Global.TriggerScriptCrcCheckOnPlayer
Global.NetworkIsPlayerInScript = Global.TriggerScriptCrcCheckOnPlayer

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
-- Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
-- playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
function Global.TriggerScriptEvent(eventGroup, eventDataSize, playerBits)
	return _in(0x5AE99C571D5BBE5D, eventGroup, _i, eventDataSize, playerBits)
end

--- See TRIGGER_SCRIPT_EVENT
function Global.TriggerScriptEvent_2(eventGroup, eventDataSize, playerBits)
	return _in(0xA40CC53DF8E50837, eventGroup, _i, eventDataSize, playerBits)
end
Global.N_0xa40cc53df8e50837 = Global.TriggerScriptEvent_2

--- The backing function for TriggerServerEvent.
function Global.TriggerServerEventInternal(eventName, eventPayload, payloadLength)
	return _in(0x7fdd1128, _ts(eventName), _ts(eventPayload), payloadLength)
end

--- ... When not in a vehicle
-- ```
-- NativeDB Introduced: v1290
-- ```
function Global.TriggerSiren(vehicle)
	return _in(0x66C3FB05206041BA, vehicle)
end
Global.N_0x66c3fb05206041ba = Global.TriggerSiren

--- TRIGGER_SONAR_BLIP
function Global.TriggerSonarBlip(posX, posY, posZ, radius, p4)
	return _in(0x72DD432F3CDFC0EE, posX, posY, posZ, radius, p4)
end
Global.N_0x72dd432f3cdfc0ee = Global.TriggerSonarBlip

--- UGC_CANCEL_QUERY
function Global.UgcCancelQuery()
	return _in(0xE9B99B6853181409)
end
Global.N_0xe9b99b6853181409 = Global.UgcCancelQuery

--- UGC_CLEAR_CREATE_RESULT
function Global.UgcClearCreateResult()
	return _in(0x17440AA15D1D3739)
end
Global.N_0x17440aa15d1d3739 = Global.UgcClearCreateResult

--- UGC_CLEAR_MODIFY_RESULT
function Global.UgcClearModifyResult()
	return _in(0xA1E5E0204A6FCC70)
end
Global.N_0xa1e5e0204a6fcc70 = Global.UgcClearModifyResult

--- UGC_CLEAR_OFFLINE_QUERY
function Global.UgcClearOfflineQuery()
	return _in(0x61A885D3F7CFEE9A)
end
Global.N_0x61a885d3f7cfee9a = Global.UgcClearOfflineQuery

--- UGC_CLEAR_QUERY_RESULTS
function Global.UgcClearQueryResults()
	return _in(0xBA96394A0EECFA65)
end
Global.N_0xba96394a0eecfa65 = Global.UgcClearQueryResults

--- UGC_COPY_CONTENT
function Global.UgcCopyContent()
	return _in(0x152D90E4C1B4738A, _i, _i, _r)
end
Global.N_0x152d90e4c1b4738a = Global.UgcCopyContent

--- NativeDB Added Parameter 8: Any p7
function Global.UgcCreateContent(data, dataCount, contentName, description, tagsCsv, contentTypeName, publish)
	return _in(0xC84527E235FCA219, _ts(data), dataCount, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), publish, _r)
end
Global.N_0xc84527e235fca219 = Global.UgcCreateContent

--- NativeDB Added Parameter 6: Any p5
function Global.UgcCreateMission(contentName, description, tagsCsv, contentTypeName, publish)
	return _in(0xA5EFC3E847D60507, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), publish, _r)
end
Global.N_0xa5efc3e847d60507 = Global.UgcCreateMission

--- UGC_DID_GET_SUCCEED
function Global.UgcDidGetSucceed()
	return _in(0x941E5306BCD7C2C7, _ri)
end
Global.N_0x941e5306bcd7c2c7 = Global.UgcDidGetSucceed

--- UGC_GET_BOOKMARKED_CONTENT
function Global.UgcGetBookmarkedContent(p0, p1)
	return _in(0xD5A4B59980401588, p0, p1, _i, _i, _r)
end
Global.N_0xd5a4b59980401588 = Global.UgcGetBookmarkedContent

--- UGC_GET_CACHED_DESCRIPTION
function Global.UgcGetCachedDescription(p0, p1)
	return _in(0x40F7E66472DF3E5C, p0, p1, _s)
end
Global.N_0x40f7e66472df3e5c = Global.UgcGetCachedDescription

--- UGC_GET_CONTENT_CATEGORY
function Global.UgcGetContentCategory(p0)
	return _in(0xA7BAB11E7C9C6C5A, p0, _ri)
end
Global.N_0xa7bab11e7c9c6c5a = Global.UgcGetContentCategory
Global.GetContentCategory = Global.UgcGetContentCategory

--- UGC_GET_CONTENT_DESCRIPTION_HASH
function Global.UgcGetContentDescriptionHash(p0)
	return _in(0x7CF0448787B23758, p0, _ri)
end
Global.N_0x7cf0448787b23758 = Global.UgcGetContentDescriptionHash
Global.GetContentDescriptionHash = Global.UgcGetContentDescriptionHash

--- UGC_GET_CONTENT_FILE_VERSION
function Global.UgcGetContentFileVersion(p0, p1)
	return _in(0x37025B27D9B658B1, p0, p1, _ri)
end
Global.N_0x37025b27d9b658b1 = Global.UgcGetContentFileVersion
Global.GetContentFileVersion = Global.UgcGetContentFileVersion

--- UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED
function Global.UgcGetContentHasPlayerBookmarked(p0)
	return _in(0x993CBE59D350D225, p0, _r)
end
Global.N_0x993cbe59d350d225 = Global.UgcGetContentHasPlayerBookmarked

--- UGC_GET_CONTENT_HAS_PLAYER_RECORD
function Global.UgcGetContentHasPlayerRecord(p0)
	return _in(0x70EA8DA57840F9BE, p0, _r)
end
Global.N_0x70ea8da57840f9be = Global.UgcGetContentHasPlayerRecord

--- UGC_GET_CONTENT_HASH
function Global.UgcGetContentHash()
	return _in(0x3A17A27D75C74887, _ri)
end
Global.N_0x3a17a27d75c74887 = Global.UgcGetContentHash

--- Return the mission id of a job.
function Global.UgcGetContentId(p0)
	return _in(0x55AA95F481D694D2, p0, _s)
end
Global.N_0x55aa95f481d694d2 = Global.UgcGetContentId
Global.GetContentId = Global.UgcGetContentId

--- UGC_GET_CONTENT_IS_PUBLISHED
function Global.UgcGetContentIsPublished(p0)
	return _in(0x3054F114121C21EA, p0, _r)
end
Global.N_0x3054f114121c21ea = Global.UgcGetContentIsPublished

--- UGC_GET_CONTENT_IS_VERIFIED
function Global.UgcGetContentIsVerified(p0)
	return _in(0xA9240A96C74CCA13, p0, _r)
end
Global.N_0xa9240a96c74cca13 = Global.UgcGetContentIsVerified

--- UGC_GET_CONTENT_LANGUAGE
function Global.UgcGetContentLanguage(p0)
	return _in(0x32DD916F3F7C9672, p0, _ri)
end
Global.N_0x32dd916f3f7c9672 = Global.UgcGetContentLanguage

--- UGC_GET_CONTENT_NAME
function Global.UgcGetContentName(p0)
	return _in(0xBF09786A7FCAB582, p0, _s)
end
Global.N_0xbf09786a7fcab582 = Global.UgcGetContentName

--- UGC_GET_CONTENT_NUM
function Global.UgcGetContentNum()
	return _in(0xE0A6138401BCB837, _ri)
end
Global.N_0xe0a6138401bcb837 = Global.UgcGetContentNum

--- UGC_GET_CONTENT_PATH
function Global.UgcGetContentPath(p0, p1)
	return _in(0xBAF6BABF9E7CCC13, p0, p1, _s)
end
Global.N_0xbaf6babf9e7ccc13 = Global.UgcGetContentPath
Global.UgcGetCloudPath = Global.UgcGetContentPath

--- UGC_GET_CONTENT_RATING
function Global.UgcGetContentRating(p0, p1)
	return _in(0x1ACCFBA3D8DAB2EE, p0, p1, _ri)
end
Global.N_0x1accfba3d8dab2ee = Global.UgcGetContentRating

--- UGC_GET_CONTENT_RATING_COUNT
function Global.UgcGetContentRatingCount(p0, p1)
	return _in(0x759299C5BB31D2A9, p0, p1, _ri)
end
Global.N_0x759299c5bb31d2a9 = Global.UgcGetContentRatingCount

--- UGC_GET_CONTENT_RATING_NEGATIVE_COUNT
function Global.UgcGetContentRatingNegativeCount(p0, p1)
	return _in(0x4E548C0D7AE39FF9, p0, p1, _ri)
end
Global.N_0x4e548c0d7ae39ff9 = Global.UgcGetContentRatingNegativeCount

--- UGC_GET_CONTENT_RATING_POSITIVE_COUNT
function Global.UgcGetContentRatingPositiveCount(p0, p1)
	return _in(0x87E5C46C187FE0AE, p0, p1, _ri)
end
Global.N_0x87e5c46c187fe0ae = Global.UgcGetContentRatingPositiveCount

--- UGC_GET_CONTENT_TOTAL
function Global.UgcGetContentTotal()
	return _in(0x769951E2455E2EB5, _ri)
end
Global.N_0x769951e2455e2eb5 = Global.UgcGetContentTotal

--- UGC_GET_CONTENT_UPDATED_DATE
function Global.UgcGetContentUpdatedDate(p0, p1)
	return _in(0xCFD115B373C0DF63, p0, _ii(p1) --[[ may be optional ]])
end
Global.N_0xcfd115b373c0df63 = Global.UgcGetContentUpdatedDate

--- UGC_GET_CONTENT_USER_ID
function Global.UgcGetContentUserId(p0)
	return _in(0xCD67AD041A394C9C, p0, _s)
end
Global.N_0xcd67ad041a394c9c = Global.UgcGetContentUserId
Global.GetContentUserId = Global.UgcGetContentUserId
Global.GetPlayerAdvancedModifierPrivileges = Global.UgcGetContentUserId

--- UGC_GET_CONTENT_USER_NAME
function Global.UgcGetContentUserName(p0)
	return _in(0x703F12425ECA8BF5, p0, _s)
end
Global.N_0x703f12425eca8bf5 = Global.UgcGetContentUserName

--- UGC_GET_CREATE_CONTENT_ID
function Global.UgcGetCreateContentId()
	return _in(0xC55A0B40FFB1ED23, _s)
end
Global.N_0xc55a0b40ffb1ed23 = Global.UgcGetCreateContentId

--- UGC_GET_CREATE_RESULT
function Global.UgcGetCreateResult()
	return _in(0xFBC5E768C7A77A6A, _ri)
end
Global.N_0xfbc5e768c7a77a6a = Global.UgcGetCreateResult

--- UGC_GET_CREATOR_NUM
function Global.UgcGetCreatorNum()
	return _in(0x597F8DBA9B206FC7, _ri)
end
Global.N_0x597f8dba9b206fc7 = Global.UgcGetCreatorNum

--- UGC_GET_CREW_CONTENT
function Global.UgcGetCrewContent(p0, p1, p2)
	return _in(0x9F6E2821885CAEE2, p0, p1, p2, _i, _i, _r)
end
Global.N_0x9f6e2821885caee2 = Global.UgcGetCrewContent

--- UGC_GET_FRIEND_CONTENT
function Global.UgcGetFriendContent(p0, p1)
	return _in(0xF9E1CCAE8BA4C281, p0, p1, _i, _i, _r)
end
Global.N_0xf9e1ccae8ba4c281 = Global.UgcGetFriendContent

--- UGC_GET_GET_BY_CATEGORY
function Global.UgcGetGetByCategory(p0, p1, p2)
	return _in(0x678BB03C1A3BD51E, p0, p1, p2, _i, _i, _r)
end
Global.N_0x678bb03c1a3bd51e = Global.UgcGetGetByCategory

--- UGC_GET_MODIFY_RESULT
function Global.UgcGetModifyResult()
	return _in(0x5A0A3D1A186A5508, _ri)
end
Global.N_0x5a0a3d1a186a5508 = Global.UgcGetModifyResult

--- UGC_GET_MY_CONTENT
function Global.UgcGetMyContent(p0, p1)
	return _in(0x3195F8DD0D531052, p0, p1, _i, _i, _r)
end
Global.N_0x3195f8dd0d531052 = Global.UgcGetMyContent

--- UGC_GET_QUERY_RESULT
function Global.UgcGetQueryResult()
	return _in(0xEDF7F927136C224B, _ri)
end
Global.N_0xedf7f927136c224b = Global.UgcGetQueryResult

--- Return the root content id of a job.
function Global.UgcGetRootContentId(p0)
	return _in(0xC0173D6BFF4E0348, p0, _s)
end
Global.N_0xc0173d6bff4e0348 = Global.UgcGetRootContentId
Global.GetRootContentId = Global.UgcGetRootContentId

--- UGC_HAS_CREATE_FINISHED
function Global.UgcHasCreateFinished()
	return _in(0x5E24341A7F92A74B, _r)
end
Global.N_0x5e24341a7f92a74b = Global.UgcHasCreateFinished

--- UGC_HAS_GET_FINISHED
function Global.UgcHasGetFinished()
	return _in(0x02ADA21EA2F6918F, _r)
end
Global.N_0x02ada21ea2f6918f = Global.UgcHasGetFinished

--- UGC_HAS_MODIFY_FINISHED
function Global.UgcHasModifyFinished()
	return _in(0x299EF3C576773506, _r)
end
Global.N_0x299ef3c576773506 = Global.UgcHasModifyFinished

--- UGC_IS_GETTING
function Global.UgcIsGetting()
	return _in(0xD53ACDBEF24A46E8, _r)
end
Global.N_0xd53acdbef24a46e8 = Global.UgcIsGetting

--- UGC_IS_LANGUAGE_SUPPORTED
function Global.UgcIsLanguageSupported(p0)
	return _in(0xF53E48461B71EECB, p0, _r)
end
Global.N_0xf53e48461b71eecb = Global.UgcIsLanguageSupported

--- UGC_POLICIES_MAKE_PRIVATE
function Global.UgcPoliciesMakePrivate(p0)
	return _in(0x5CAE833B0EE0C500, p0, _r)
end
Global.N_0x5cae833b0ee0c500 = Global.UgcPoliciesMakePrivate

--- UGC_PUBLISH
function Global.UgcPublish(contentId, baseContentId, contentTypeName)
	return _in(0x1DE0F5F50D723CAA, _ts(contentId), _ts(baseContentId), _ts(contentTypeName), _r)
end
Global.N_0x1de0f5f50d723caa = Global.UgcPublish

--- UGC_QUERY_BY_CONTENT_ID
function Global.UgcQueryByContentId(contentId, latestVersion, contentTypeName)
	return _in(0x158EC424F35EC469, _ts(contentId), latestVersion, _ts(contentTypeName), _r)
end
Global.N_0x158ec424f35ec469 = Global.UgcQueryByContentId

--- UGC_QUERY_BY_CONTENT_IDS
function Global.UgcQueryByContentIds(count, latestVersion, contentTypeName)
	return _in(0xC7397A83F7A2A462, _i, count, latestVersion, _ts(contentTypeName), _r)
end
Global.N_0xc7397a83f7a2a462 = Global.UgcQueryByContentIds

--- UGC_QUERY_MY_CONTENT
function Global.UgcQueryMyContent(p0, p1, p3, p4, p5)
	return _in(0x9BF438815F5D96EA, p0, p1, _i, p3, p4, p5, _r)
end
Global.N_0x9bf438815f5d96ea = Global.UgcQueryMyContent

--- _UGC_QUERY_RECENTLY_CREATED_CONTENT
function Global.UgcQueryRecentlyCreatedContent(offset, count, contentTypeName, p3)
	return _in(0x6D4CB481FAC835E8, offset, count, _ts(contentTypeName), p3, _r)
end
Global.N_0x6d4cb481fac835e8 = Global.UgcQueryRecentlyCreatedContent

--- UGC_REQUEST_CACHED_DESCRIPTION
function Global.UgcRequestCachedDescription(p0)
	return _in(0x5E0165278F6339EE, p0, _ri)
end
Global.N_0x5e0165278f6339ee = Global.UgcRequestCachedDescription

--- UGC_REQUEST_CONTENT_DATA_FROM_INDEX
function Global.UgcRequestContentDataFromIndex(p0, p1)
	return _in(0x171DF6A0C07FB3DC, p0, p1, _ri)
end
Global.N_0x171df6a0c07fb3dc = Global.UgcRequestContentDataFromIndex

--- UGC_REQUEST_CONTENT_DATA_FROM_PARAMS
function Global.UgcRequestContentDataFromParams(contentTypeName, contentId, p2, p3, p4)
	return _in(0x7FD2990AF016795E, _ts(contentTypeName), _ts(contentId), p2, p3, p4, _ri)
end
Global.N_0x7fd2990af016795e = Global.UgcRequestContentDataFromParams

--- UGC_SET_BOOKMARKED
function Global.UgcSetBookmarked(contentId, bookmarked, contentTypeName)
	return _in(0x274A1519DFC1094F, _ts(contentId), bookmarked, _ts(contentTypeName), _r)
end
Global.N_0x274a1519dfc1094f = Global.UgcSetBookmarked

--- UGC_SET_DELETED
function Global.UgcSetDeleted(p1)
	return _in(0xD05D1A6C74DA3498, _i, p1, _i, _r)
end
Global.N_0xd05d1a6c74da3498 = Global.UgcSetDeleted

--- NativeDB Added Parameter 4: Any p3
function Global.UgcSetPlayerData(contentId, rating, contentTypeName)
	return _in(0x692D808C34A82143, _ts(contentId), rating, _ts(contentTypeName), _r)
end
Global.N_0x692d808c34a82143 = Global.UgcSetPlayerData

--- UGC_SET_QUERY_DATA_FROM_OFFLINE
function Global.UgcSetQueryDataFromOffline(p0)
	return _in(0xF98DDE0A8ED09323, p0)
end
Global.N_0xf98dde0a8ed09323 = Global.UgcSetQueryDataFromOffline

--- UGC_TEXTURE_DOWNLOAD_REQUEST
function Global.UgcTextureDownloadRequest(p1, p2, p3, p5)
	return _in(0x308F96458B7087CC, _i, p1, p2, p3, _i, p5, _ri)
end
Global.N_0x308f96458b7087cc = Global.UgcTextureDownloadRequest

--- NativeDB Added Parameter 8: Any p7
function Global.UgcUpdateContent(contentId, dataCount, contentName, description, tagsCsv, contentTypeName)
	return _in(0x648E7A5434AF7969, _ts(contentId), _i, dataCount, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), _r)
end
Global.N_0x648e7a5434af7969 = Global.UgcUpdateContent

--- NativeDB Added Parameter 6: Any p5
function Global.UgcUpdateMission(contentId, contentName, description, tagsCsv, contentTypeName)
	return _in(0x4645DE9980999E93, _ts(contentId), _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), _r)
end
Global.N_0x4645de9980999e93 = Global.UgcUpdateMission

--- UI3DSCENE_IS_AVAILABLE
function Global.Ui3dsceneIsAvailable()
	return _in(0xD3A10FC7FD8D98CD, _r)
end
Global.N_0xd3a10fc7fd8d98cd = Global.Ui3dsceneIsAvailable

--- All presets can be found in common\data\ui\uiscenes.meta
function Global.Ui3dscenePushPreset(presetName)
	return _in(0xF1CEA8A4198D8E9A, _ts(presetName), _r)
end
Global.N_0xf1cea8a4198d8e9a = Global.Ui3dscenePushPreset

--- Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
-- U*
function Global.UiIsSingleplayerPauseMenuActive()
	return _in(0xEA2F2061875EED90, _r)
end
Global.N_0xea2f2061875eed90 = Global.UiIsSingleplayerPauseMenuActive

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function Global.UnblockDecisionMakerEvent(name, eventType)
	return _in(0xD7CD9CF34F2C99E8, _ch(name), eventType)
end

--- UNCUFF_PED
function Global.UncuffPed(ped)
	return _in(0x67406F2C8F87FC4F, ped)
end

--- UNFREEZE_RADIO_STATION
function Global.UnfreezeRadioStation(radioStation)
	return _in(0xFC00454CF60B91DD, _ts(radioStation))
end

--- Called 4 times in the b617d scripts:
-- MISC::_A74802FB8D0B7814("CONTRAILS", 0);
function Global.UnloadCloudHat(name, p1)
	return _in(0xA74802FB8D0B7814, _ts(name), p1)
end
Global.N_0xa74802fb8d0b7814 = Global.UnloadCloudHat

--- From fm_deathmatch_creator and fm_race_creator:
-- FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
-- FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
-- NativeDB Introduced: v1604
function Global.UnloadContentChangeSetGroup(hash)
	return _in(0x3C1978285B036B25, _ch(hash))
end

--- UNLOCK_MINIMAP_ANGLE
function Global.UnlockMinimapAngle()
	return _in(0x8183455E16C42E3A)
end

--- UNLOCK_MINIMAP_POSITION
function Global.UnlockMinimapPosition()
	return _in(0x3E93E06DB8EF1F30)
end

--- UNLOCK_MISSION_NEWS_STORY
function Global.UnlockMissionNewsStory(newsStory)
	return _in(0xB165AB7C248B2DC1, newsStory)
end

--- AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
function Global.UnlockRadioStationTrackList(radioStation, trackListName)
	return _in(0x031ACB6ABA18C729, _ts(radioStation), _ts(trackListName))
end
Global.N_0x031acb6aba18c729 = Global.UnlockRadioStationTrackList

--- GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);
-- GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");
function Global.UnpatchDecalDiffuseMap(decalType)
	return _in(0xB7ED70C49521A61D, decalType)
end
Global.N_0xb7ed70c49521a61d = Global.UnpatchDecalDiffuseMap
Global.UndoDecalTextureOverride = Global.UnpatchDecalDiffuseMap

--- UNPAUSE_PLAYBACK_RECORDED_VEHICLE
function Global.UnpausePlaybackRecordedVehicle(vehicle)
	return _in(0x8879EE09268305D5, vehicle)
end

--- Does something similar to INTERIOR::DISABLE_INTERIOR.
-- You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.
function Global.UnpinInterior(interior)
	return _in(0x261CCE7EED010641, interior)
end

--- UNPIN_ROPE_VERTEX
function Global.UnpinRopeVertex(ropeId, vertex)
	return _in(0x4B5AE2EEE4A8F180, ropeId, vertex)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.UnregisterPedheadshot(id)
	return _in(0x96B1361D9B24C2FF, id)
end

--- Will unregister and cleanup a registered NUI callback handler.
-- Use along side the REGISTER_RAW_NUI_CALLBACK native.
-- @param callbackType The callback type to target
function Global.UnregisterRawNuiCallback(callbackType)
	return _in(0x7fb46432, _ts(callbackType))
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- On last-gen this just runs blr and this func is called by several other functions other then the native's table.
-- ```
function Global.UnregisterScriptWithAudio()
	return _in(0xA8638BE228D4751A)
end

--- UPDATE_LIGHTS_ON_ENTITY
function Global.UpdateLightsOnEntity(entity)
	return _in(0xDEADC0DEDEADC0DE, entity)
end
Global.N_0xdeadc0dedeadc0de = Global.UpdateLightsOnEntity
Global.EntityDescriptionText = Global.UpdateLightsOnEntity

--- Transiently updates the entity with the specified mapdata index and entity index.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapdata A fwMapData index from GET_MAPDATA_FROM_HASH_KEY.
-- @param entity An entity index from GET_ENTITY_INDEX_FROM_MAPDATA.
-- @param entityDef The new entity definition in fwEntityDef format.
function Global.UpdateMapdataEntity(mapdata, entity, entityDef)
	local entityDef_bytes, entityDef_len = _obj(entityDef)
	return _in(0xfc52cb91, mapdata, entity, entityDef_bytes, entityDef_len)
end

--- UPDATE_NAVMESH_BLOCKING_OBJECT
-- @param object Navmesh Blocking Object by ID. must be returned by [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A).
-- @param posX X position coordinate.
-- @param posY Y position coordinate.
-- @param posZ Z position coordinate.
-- @param scaleX X Scale.
-- @param scaleY Y Scale.
-- @param scaleZ Z Scale.
-- @param heading Heading of the blocking object.
-- @param flags Flags for the blocking object, see [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A) for list of blocking object flags.
function Global.UpdateNavmeshBlockingObject(object, posX, posY, posZ, scaleX, scaleY, scaleZ, heading, flags)
	return _in(0x109E99373F290687, object, posX, posY, posZ, scaleX, scaleY, scaleZ, heading, flags)
end

--- Returns the current status of the onscreen keyboard, and updates the output.
-- Status Codes:
-- -1: Keyboard isn't active
-- 0: User still editing
-- 1: User has finished editing
-- 2: User has canceled editing
function Global.UpdateOnscreenKeyboard()
	return _in(0x0CF2B696BBF945AE, _ri)
end

--- See [`SET_PED_HEAD_BLEND_DATA`](#\_0x9414E18B9434C2FE)
function Global.UpdatePedHeadBlendData(ped, shapeMix, skinMix, thirdMix)
	return _in(0x723538F61C647C5A, ped, shapeMix, skinMix, thirdMix)
end

--- _UPDATE_PLAYER_TELEPORT
function Global.UpdatePlayerTeleport(player)
	return _in(0xE23D5873C2394C61, player, _r)
end
Global.N_0xe23d5873c2394c61 = Global.UpdatePlayerTeleport
Global.HasPlayerTeleportFinished = Global.UpdatePlayerTeleport

--- Updates a playing sounds absolute position.
function Global.UpdateSoundCoord(soundId, x, y, z)
	return _in(0x7EC3C679D0E7E46B, soundId, x, y, z)
end
Global.N_0x7ec3c679d0e7e46b = Global.UpdateSoundCoord

--- UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET
function Global.UpdateTaskAimGunScriptedTarget(p0, p1, p2, p3, p4, p5)
	return _in(0x9724FB59A3E72AD0, p0, p1, p2, p3, p4, p5)
end

--- UPDATE_TASK_HANDS_UP_DURATION
function Global.UpdateTaskHandsUpDuration(ped, duration)
	return _in(0xA98FCAFD7893C834, ped, duration)
end

--- UPDATE_TASK_SWEEP_AIM_ENTITY
function Global.UpdateTaskSweepAimEntity(ped, entity)
	return _in(0xE4973DBDBE6E44B3, ped, entity)
end

--- UPDATE_TASK_SWEEP_AIM_POSITION
function Global.UpdateTaskSweepAimPosition(p0, p1, p2, p3)
	return _in(0xBB106883F5201FC4, p0, p1, p2, p3)
end

--- Unlocks any available DJ radio tracks based on the tuneable status
-- ```
-- NativeDB Introduced: v1493
-- ```
function Global.UpdateUnlockableDjRadioTracks(allowTrackReprioritization)
	return _in(0x47AED84213A47510, allowTrackReprioritization)
end
Global.UpdateLsur = Global.UpdateUnlockableDjRadioTracks

--- Related to displaying cash on the HUD
-- Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts
function Global.UseFakeMpCash(p0)
	return _in(0x170F541E1CADD1DE, p0)
end
Global.N_0x170f541e1cadd1de = Global.UseFakeMpCash

--- Allows script to trigger a sweetener footstep sound
function Global.UseFootstepScriptSweeteners(ped, useSweetner, soundSetHash)
	return _in(0xBF4DC1784BE94DFA, ped, useSweetner, _ch(soundSetHash))
end
Global.N_0xbf4dc1784be94dfa = Global.UseFootstepScriptSweeteners

--- From the b678d decompiled scripts:
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
function Global.UseParticleFxAsset(name)
	return _in(0x6C38AF3693A69A91, _ts(name))
end
Global.SetPtfxAssetNextCall = Global.UseParticleFxAsset
Global.UseParticleFxAssetNextCall = Global.UseParticleFxAsset

--- USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR
function Global.UsePlayerColourInsteadOfTeamColour(toggle)
	return _in(0x77758139EC9B66C7, toggle)
end

--- USE_SIREN_AS_HORN
function Global.UseSirenAsHorn(vehicle, sirenAsHorn)
	return _in(0xFA932DE350266EF8, vehicle, sirenAsHorn)
end

--- Applies a predefined set of vehicle camera settings optimized for capturing stunts, effective for the current game update/frame.
-- ```
-- NativeDB Introduced: v791
-- ```
function Global.UseVehicleCamStuntSettingsThisUpdate()
	return _in(0x6493CF69859B116A)
end
Global.N_0x6493cf69859b116a = Global.UseVehicleCamStuntSettingsThisUpdate
Global.UseStuntCameraThisFrame = Global.UseVehicleCamStuntSettingsThisUpdate

--- USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE
-- @param name Waypoint recording name.
function Global.UseWaypointRecordingAsAssistedMovementRoute(name, p1, p2, p3)
	return _in(0x5A353B8E6B1095B5, _ts(name), p1, p2, p3)
end

--- USING_MISSION_CREATOR
function Global.UsingMissionCreator(toggle)
	return _in(0xF14878FC50BEC6EE, toggle)
end

--- Calculates the distance between two points in 3D space. For performance reasons, consider using direct mathematical calculations for distance, as they can be more efficient than calling this native function.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param x1 X coordinate of the first point.
-- @param y1 Y coordinate of the first point.
-- @param z1 Z coordinate of the first point. Represents the height or elevation at the first point.
-- @param x2 X coordinate of the second point.
-- @param y2 Y coordinate of the second point.
-- @param z2 Z coordinate of the second point. Represents the height or elevation at the second point.
-- @return Returns the distance as a float between the two points (`x1`, `y1`, `z1`) and (`x2`, `y2`, `z2`) in the game world.
function Global.Vdist(x1, y1, z1, x2, y2, z2)
	return _in(0x2A488C176D52CCA5, x1, y1, z1, x2, y2, z2, _rf)
end

--- Calculates distance between vectors but does not perform Sqrt operations. Its way faster than [`VDIST`](#\_0x2A488C176D52CCA5), but it's not faster than direct mathematical calculations.
-- ```
-- NativeDB Introduced: v323
-- ```
-- @param x1 X coordinate of the first point.
-- @param y1 Y coordinate of the first point.
-- @param z1 Z coordinate of the first point. Represents the height or elevation at the first point.
-- @param x2 X coordinate of the second point.
-- @param y2 Y coordinate of the second point.
-- @param z2 Z coordinate of the second point. Represents the height or elevation at the second point.
-- @return Returns the distance as a float between the two points (`x1`, `y1`, `z1`) and (`x2`, `y2`, `z2`) in the game world.
function Global.Vdist2(x1, y1, z1, x2, y2, z2)
	return _in(0xB7A628320EFF8E47, x1, y1, z1, x2, y2, z2, _rf)
end

--- calls from vehicle to net.
function Global.VehToNet(vehicle)
	return _in(0xB4C94523F023419C, vehicle, _ri)
end

--- VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
function Global.VehicleWaypointPlaybackOverrideSpeed(vehicle, speed)
	return _in(0x121F0593E0A431D7, vehicle, speed)
end

--- VEHICLE_WAYPOINT_PLAYBACK_PAUSE
function Global.VehicleWaypointPlaybackPause(vehicle)
	return _in(0x8A4E6AC373666BC5, vehicle)
end

--- VEHICLE_WAYPOINT_PLAYBACK_RESUME
function Global.VehicleWaypointPlaybackResume(vehicle)
	return _in(0xDC04FCAA7839D492, vehicle)
end

--- VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
function Global.VehicleWaypointPlaybackUseDefaultSpeed(vehicle)
	return _in(0x5CEB25A7D2848963, vehicle)
end

--- Calculates the magnitude of a vector.
function Global.Vmag(x, y, z)
	return _in(0x652D2EEEF1D3E62C, x, y, z, _rf)
end

--- Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
function Global.Vmag2(x, y, z)
	return _in(0xA8CEACB4F35AE058, x, y, z, _rf)
end

--- Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
function Global.Wait(ms)
	return _in(0x4EDE34FBADD967A6, ms)
end

--- WAS_CUTSCENE_SKIPPED
function Global.WasCutsceneSkipped()
	return _in(0x40C8656EDAEDD569, _r)
end

--- Returns whether or not the currently executing event was canceled.
-- @return A boolean.
function Global.WasEventCanceled()
	return _in(0x58382a19, _r)
end

--- Verifies whether ped was eliminated through stealth.
-- @param ped Ped index
function Global.WasPedKilledByStealth(ped)
	return _in(0xF9800AA1A771B000, ped, _r)
end

--- WAS_PED_KILLED_BY_TAKEDOWN
function Global.WasPedKilledByTakedown(ped)
	return _in(0x7F08E26039C7347C, ped, _r)
end

--- WAS_PED_KNOCKED_OUT
function Global.WasPedKnockedOut(ped)
	return _in(0x61767F73EACEED21, ped, _r)
end
Global.N_0x61767f73eaceed21 = Global.WasPedKnockedOut

--- Despite this function's name, it simply returns whether the specified handle is a Ped.
function Global.WasPedSkeletonUpdated(ped)
	return _in(0x11B499C1E0FF8559, ped, _r)
end

--- WASH_DECALS_FROM_VEHICLE
function Global.WashDecalsFromVehicle(vehicle, p1)
	return _in(0x5B712761429DBC14, vehicle, p1)
end

--- WASH_DECALS_IN_RANGE
function Global.WashDecalsInRange(p0, p1, p2, p3, p4)
	return _in(0x9C30613D50A6ADEF, p0, p1, p2, p3, p4)
end

--- WATER_OVERRIDE_FADE_IN
function Global.WaterOverrideFadeIn(p0)
	return _in(0xA8434F1DFF41D6E7, p0)
end
Global.N_0xa8434f1dff41d6e7 = Global.WaterOverrideFadeIn

--- WATER_OVERRIDE_FADE_OUT
function Global.WaterOverrideFadeOut(p0)
	return _in(0xC3C221ADDDE31A11, p0)
end
Global.N_0xc3c221addde31a11 = Global.WaterOverrideFadeOut

--- WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE
function Global.WaterOverrideSetOceannoiseminamplitude(minAmplitude)
	return _in(0x31727907B2C43C55, minAmplitude)
end
Global.N_0x31727907b2c43c55 = Global.WaterOverrideSetOceannoiseminamplitude

--- WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE
function Global.WaterOverrideSetOceanwaveamplitude(amplitude)
	return _in(0x405591EC8FD9096D, amplitude)
end
Global.N_0x405591ec8fd9096d = Global.WaterOverrideSetOceanwaveamplitude

--- WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE
function Global.WaterOverrideSetOceanwavemaxamplitude(maxAmplitude)
	return _in(0xB3E6360DDE733E82, maxAmplitude)
end
Global.N_0xb3e6360dde733e82 = Global.WaterOverrideSetOceanwavemaxamplitude

--- WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE
function Global.WaterOverrideSetOceanwaveminamplitude(minAmplitude)
	return _in(0xF751B16FB32ABC1D, minAmplitude)
end
Global.N_0xf751b16fb32abc1d = Global.WaterOverrideSetOceanwaveminamplitude

--- WATER_OVERRIDE_SET_RIPPLEBUMPINESS
function Global.WaterOverrideSetRipplebumpiness(bumpiness)
	return _in(0x7C9C0B1EEB1F9072, bumpiness)
end
Global.N_0x7c9c0b1eeb1f9072 = Global.WaterOverrideSetRipplebumpiness

--- WATER_OVERRIDE_SET_RIPPLEDISTURB
function Global.WaterOverrideSetRippledisturb(disturb)
	return _in(0xB9854DFDE0D833D6, disturb)
end
Global.N_0xb9854dfde0d833d6 = Global.WaterOverrideSetRippledisturb

--- WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS
function Global.WaterOverrideSetRipplemaxbumpiness(maxBumpiness)
	return _in(0x9F5E6BB6B34540DA, maxBumpiness)
end
Global.N_0x9f5e6bb6b34540da = Global.WaterOverrideSetRipplemaxbumpiness

--- WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS
function Global.WaterOverrideSetRippleminbumpiness(minBumpiness)
	return _in(0x6216B116083A7CB4, minBumpiness)
end
Global.N_0x6216b116083a7cb4 = Global.WaterOverrideSetRippleminbumpiness

--- WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE
function Global.WaterOverrideSetShorewaveamplitude(amplitude)
	return _in(0xB8F87EAD7533B176, amplitude)
end
Global.N_0xb8f87ead7533b176 = Global.WaterOverrideSetShorewaveamplitude

--- WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE
function Global.WaterOverrideSetShorewavemaxamplitude(maxAmplitude)
	return _in(0xA7A1127490312C36, maxAmplitude)
end
Global.N_0xa7a1127490312c36 = Global.WaterOverrideSetShorewavemaxamplitude

--- WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE
function Global.WaterOverrideSetShorewaveminamplitude(minAmplitude)
	return _in(0xC3EAD29AB273ECE8, minAmplitude)
end
Global.N_0xc3ead29ab273ece8 = Global.WaterOverrideSetShorewaveminamplitude

--- This seems to edit the water wave, intensity around your current location.
-- 0.0f = Normal
-- 1.0f = So Calm and Smooth, a boat will stay still.
-- 3.0f = Really Intense.
function Global.WaterOverrideSetStrength(strength)
	return _in(0xC54A08C85AE4D410, strength)
end
Global.N_0xc54a08c85ae4d410 = Global.WaterOverrideSetStrength

--- WAYPOINT_PLAYBACK_GET_IS_PAUSED
function Global.WaypointPlaybackGetIsPaused(p0)
	return _in(0x701375A7D43F01CB, p0, _r)
end

--- WAYPOINT_PLAYBACK_OVERRIDE_SPEED
function Global.WaypointPlaybackOverrideSpeed(p0, p1, p2)
	return _in(0x7D7D2B47FA788E85, p0, p1, p2)
end

--- WAYPOINT_PLAYBACK_PAUSE
function Global.WaypointPlaybackPause(p0, p1, p2)
	return _in(0x0F342546AA06FED5, p0, p1, p2)
end

--- WAYPOINT_PLAYBACK_RESUME
function Global.WaypointPlaybackResume(p0, p1, p2, p3)
	return _in(0x244F70C84C547D2D, p0, p1, p2, p3)
end

--- WAYPOINT_PLAYBACK_START_AIMING_AT_COORD
function Global.WaypointPlaybackStartAimingAtCoord(p0, p1, p2, p3, p4)
	return _in(0x8968400D900ED8B3, p0, p1, p2, p3, p4)
end

--- WAYPOINT_PLAYBACK_START_AIMING_AT_PED
function Global.WaypointPlaybackStartAimingAtPed(p0, p1, p2)
	return _in(0x20E330937C399D29, p0, p1, p2)
end

--- WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD
function Global.WaypointPlaybackStartShootingAtCoord(p0, p1, p2, p3, p4, p5)
	return _in(0x057A25CFCC9DB671, p0, p1, p2, p3, p4, p5)
end

--- WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED
function Global.WaypointPlaybackStartShootingAtPed(p0, p1, p2, p3)
	return _in(0xE70BA7B90F8390DC, p0, p1, p2, p3)
end
Global.N_0xe70ba7b90f8390dc = Global.WaypointPlaybackStartShootingAtPed

--- WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING
function Global.WaypointPlaybackStopAimingOrShooting(p0)
	return _in(0x47EFA040EBB8E2EA, p0)
end

--- WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
function Global.WaypointPlaybackUseDefaultSpeed(p0)
	return _in(0x6599D834B12D0800, p0)
end

--- For a full list of the points, see here: goo.gl/wIH0vn
function Global.WaypointRecordingGetClosestWaypoint(name, x, y, z, point)
	return _in(0xB629A298081F876F, _ts(name), x, y, z, _ii(point) --[[ may be optional ]], _r)
end

--- For a full list of the points, see here: goo.gl/wIH0vn
function Global.WaypointRecordingGetCoord(name, point, coord)
	return _in(0x2FB897405C90B361, _ts(name), point, _v, _r)
end

--- For a full list of the points, see here: goo.gl/wIH0vn
function Global.WaypointRecordingGetNumPoints(name, points)
	return _in(0x5343532C01A07234, _ts(name), _ii(points) --[[ may be optional ]], _r)
end

--- WAYPOINT_RECORDING_GET_SPEED_AT_POINT
function Global.WaypointRecordingGetSpeedAtPoint(name, point)
	return _in(0x005622AEBC33ACA9, _ts(name), point, _rf)
end

--- Does nothing and always returns 0.
function Global.WithdrawVc(amount)
	return _in(0xF70EFA14FE091429, amount, _ri)
end
Global.N_0xf70efa14fe091429 = Global.WithdrawVc

--- WOULD_ENTITY_BE_OCCLUDED
function Global.WouldEntityBeOccluded(entityModelHash, x, y, z, p4)
	return _in(0xEE5D2A122E09EC42, _ch(entityModelHash), x, y, z, p4, _r)
end

